var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutComponent.html",[0,0.404,1,1.102]],["body/components/AboutComponent.html",[0,0.763,1,2.023,2,2.087,3,0.275,4,0.227,5,1.737,6,1.737,7,1.737,8,1.737,9,0.158,10,4.284,11,1.814,12,2.28,13,1.737,14,2.105,15,2.02,16,1.626,17,6.785,18,1.626,19,6.21,20,0.487,21,0.849,22,0.016,23,0.275,24,0.136,25,4.407,26,1.194,27,2.179,28,2.179,29,1.737,30,2.495,31,1.737,32,0.972,33,1.737,34,1.468,35,1.737,36,1.408,37,1.737,38,1.408,39,1.451,40,1.737,41,1.468,42,0.968,43,2.179,44,1.408,45,1.737,46,1.468,47,1.737,48,1.408,49,1.737,50,1.408,51,1.737,52,1.408,53,1.53,54,1.297,55,1.737,56,1.468,57,1.596,58,1.468,59,1.737,60,1.408,61,1.737,62,1.408,63,1.737,64,1.468,65,2.001,66,0.672,67,2.179,68,1.468,69,1.468,70,1.408,71,1.408,72,1.596,73,1.737,74,1.737,75,0.012,76,0.012]],["title/components/AppComponent.html",[0,0.404,34,1.149]],["body/components/AppComponent.html",[0,0.746,1,1.307,2,1.991,3,0.255,4,0.21,5,1.612,6,1.612,7,1.612,8,1.612,9,0.147,11,1.684,12,1.545,13,1.612,14,2.091,15,2.014,16,1.551,18,1.551,20,0.582,21,0.788,22,0.016,23,0.255,24,0.126,26,1.108,27,2.078,28,2.078,29,1.612,30,2.428,31,1.612,32,1.026,33,1.612,34,2.051,35,1.612,36,1.307,37,1.612,38,1.307,39,1.412,40,1.612,41,1.362,42,0.898,43,2.078,44,1.307,45,1.612,46,1.362,47,1.612,48,1.307,49,1.612,50,1.307,51,1.612,52,1.307,53,1.42,54,1.204,55,1.612,56,1.362,57,1.481,58,1.362,59,1.612,60,1.307,61,1.612,62,1.307,63,1.612,64,1.362,65,1.908,66,0.623,67,2.078,68,1.362,69,1.362,70,1.307,71,1.307,72,1.481,73,1.612,74,1.612,75,0.012,76,0.012,77,3.976,78,3.889,79,6.553,80,5.922,81,0.425,82,1.158,83,2.742,84,0.978,85,3.976,86,3.756,87,0.971,88,5.922,89,1.02,90,0.652,91,0.978,92,0.938,93,2.025,94,1.362,95,4.596,96,3.889,97,4.203,98,4.203,99,3.262,100,1.76,101,4.596]],["title/modules/AppModule.html",[102,1.303,103,2.751]],["body/modules/AppModule.html",[1,2.071,3,0.249,4,0.205,9,0.143,15,1.126,20,0.783,21,0.768,22,0.016,23,0.249,24,0.123,26,1.08,34,2.303,36,2.071,50,2.071,54,1.526,60,2.071,75,0.012,76,0.012,86,3.731,99,3.18,102,1.506,103,5.726,104,1.97,105,2.069,106,2.593,107,2.989,108,3.145,109,1.794,110,3.876,111,3.876,112,3.876,113,3.876,114,3.876,115,3.731,116,4.461,117,4.461,118,4.461,119,4.461,120,2.984,121,1.97,122,2.069,123,4.48,124,2.333,125,2.333,126,5.826,127,4.521,128,3.477,129,2.942,130,4.48,131,5.039,132,3.876,133,4.48,134,2.744,135,3.477,136,5.826,137,4.48,138,3.876,139,3.876,140,3.876,141,3.18,142,3.876,143,4.48,144,2.295,145,4.48,146,3.876,147,3.876,148,3.477,149,4.521,150,2.372,151,2.942,152,3.876,153,5.039,154,2.942,155,4.521,156,2.427,157,4.48,158,3.876,159,1.879,160,2.443,161,1.572]],["title/modules/AppRoutingModule.html",[102,1.303,115,1.985]],["body/modules/AppRoutingModule.html",[0,0.778,1,1.763,3,0.274,4,0.226,9,0.157,20,0.754,21,0.846,22,0.016,23,0.274,24,0.135,32,0.773,36,1.763,39,1.007,44,1.763,50,1.763,60,1.763,62,1.763,66,1.014,75,0.012,76,0.012,83,2.86,92,1.265,96,3.242,97,3.504,98,4.399,104,2.171,109,1.978,115,3.175,124,1.978,125,2.483,138,4.271,139,4.271,140,4.271,141,3.504,142,4.271,146,4.271,147,4.271,162,3.832,163,3.832,164,6.199,165,4.809,166,3.504,167,4.938,168,2.071,169,4.938,170,6.633,171,5.362,172,4.938,173,4.938,174,4.938,175,4.399,176,4.938,177,4.938,178,6.199,179,5.362,180,6.199,181,4.809,182,4.938,183,4.938,184,3.832,185,3.504,186,3.504,187,3.797,188,4.666,189,4.811,190,4.271,191,0.885,192,3.242,193,4.271,194,1.142,195,4.938,196,4.938,197,4.938]],["title/components/AppearanceComponent.html",[0,0.404,36,1.102]],["body/components/AppearanceComponent.html",[0,0.588,1,0.976,2,1.633,3,0.19,4,0.157,5,1.204,6,1.204,7,1.204,8,1.204,9,0.109,12,1.153,13,1.204,14,2.028,15,1.946,16,1.273,18,1.273,20,0.603,21,0.588,22,0.016,23,0.19,24,0.094,26,0.827,27,1.705,28,1.705,29,1.204,30,2.153,31,1.204,32,0.961,33,1.204,34,1.017,35,1.204,36,1.745,37,1.204,38,0.976,39,1.252,40,1.204,41,1.017,42,0.671,43,1.705,44,0.976,45,1.204,46,1.017,47,1.204,48,0.976,49,1.204,50,0.976,51,1.204,52,0.976,53,1.06,54,0.899,55,1.204,56,1.017,57,1.106,58,1.017,59,1.204,60,0.976,61,1.204,62,0.976,63,1.204,64,1.017,65,1.566,66,0.466,67,1.705,68,1.017,69,1.017,70,0.976,71,0.976,72,1.106,73,1.204,74,1.204,75,0.01,76,0.01,81,0.318,82,0.95,84,0.73,85,2.968,86,3.445,87,1.178,89,1.078,90,0.762,91,1.034,92,1.518,93,2.078,94,1.819,100,1.314,121,2.137,156,1.859,161,1.204,181,3.449,191,1.011,198,2.968,199,1.326,200,3.456,201,5.643,202,4.86,203,7.714,204,2.205,205,5.643,206,5.643,207,5.643,208,5.643,209,5.368,210,0.91,211,1.103,212,4.86,213,3.759,214,6.137,215,4.86,216,4.86,217,2.834,218,2.981,219,2.981,220,3.432,221,3.772,222,1.053,223,3.432,224,3.432,225,2.741,226,4.86,227,3.432,228,2.741,229,4.86,230,3.432,231,2.741,232,4.86,233,3.432,234,2.741,235,4.86,236,3.432,237,1.667,238,1.509,239,3.432,240,2.663,241,2.968,242,3.432,243,3.432,244,3.432,245,3.432,246,3.432,247,3.432,248,3.432,249,3.432,250,3.432,251,2.968,252,2.968,253,2.968,254,2.968,255,1.842,256,3.432,257,5.309,258,3.432,259,3.432,260,3.432,261,3.432,262,3.432,263,3.432,264,3.432,265,3.432,266,3.432,267,3.432,268,3.432,269,4.86,270,2.632,271,4.86,272,4.12,273,3.772,274,4.86,275,4.204,276,4.86,277,3.449,278,4.86,279,2.968,280,2.102,281,2.253,282,2.435,283,1.859,284,1.972,285,2.253,286,2.489,287,4.86]],["title/injectables/AppearanceService.html",[86,1.985,288,1.79]],["body/injectables/AppearanceService.html",[3,0.195,4,0.161,9,0.112,20,0.561,21,0.601,22,0.016,23,0.195,24,0.096,32,1.112,75,0.01,76,0.01,78,2.302,81,0.324,82,0.964,84,0.746,86,2.527,87,1.262,89,1.577,90,0.796,91,1.512,92,1.493,100,1.342,119,3.795,158,3.033,181,2.488,191,1.367,194,1.728,210,0.924,211,1.499,217,3.417,218,3.01,219,3.01,221,3.83,222,1.146,238,1.542,272,3.022,288,2.278,289,2.148,290,3.033,291,5.709,292,1.849,293,6.196,294,6.196,295,6.196,296,5.36,297,6.196,298,4.934,299,5.36,300,4.934,301,5.36,302,4.934,303,6.196,304,4.268,305,4.934,306,4.268,307,4.268,308,3.506,309,5.709,310,6.196,311,4.934,312,4.934,313,3.506,314,3.506,315,2.774,316,3.506,317,3.506,318,3.29,319,3.506,320,4.934,321,3.506,322,3.506,323,3.508,324,4.934,325,3.506,326,3.506,327,3.508,328,4.934,329,3.506,330,3.506,331,4.268,332,3.506,333,4.934,334,3.506,335,4.268,336,3.506,337,4.268,338,3.506,339,5.709,340,1.542,341,3.033,342,2.488,343,3.506,344,3.506,345,1.47,346,3.506,347,3.506,348,3.506,349,3.506,350,6.196,351,3.506,352,6.196,353,3.506,354,3.506,355,3.506,356,5.709,357,3.506,358,3.506,359,3.506,360,3.506,361,3.506,362,3.506,363,3.506,364,3.506,365,3.506,366,3.506,367,3.506,368,3.506,369,1.899,370,1.899,371,1.899,372,3.506,373,3.506]],["title/injectables/AppearanceStorageService.html",[119,2.374,288,1.79]],["body/injectables/AppearanceStorageService.html",[3,0.191,4,0.158,9,0.11,20,0.479,21,0.591,22,0.016,23,0.191,24,0.094,32,0.962,75,0.01,76,0.01,78,2.263,81,0.319,82,0.953,84,1.203,87,1.27,89,1.364,90,0.833,91,1.308,92,1.467,93,2.005,94,1.923,119,2.985,191,1.267,194,1.422,204,2.255,210,0.912,211,1.554,217,3.266,218,3.272,219,3.272,221,5.227,222,1.107,238,1.515,251,2.98,252,2.98,253,2.98,272,4.126,288,2.25,289,2.11,292,1.819,296,5.318,299,5.318,301,5.318,304,4.216,306,4.216,307,4.216,315,3.436,318,3.436,323,3.436,327,3.436,331,4.216,335,4.216,337,4.216,341,2.98,342,2.445,345,2.578,374,6.725,375,2.98,376,5.655,377,5.655,378,5.655,379,5.655,380,5.655,381,6.148,382,4.874,383,4.874,384,3.446,385,3.446,386,3.446,387,3.446,388,3.446,389,4.874,390,3.446,391,3.446,392,3.446,393,3.446,394,3.446,395,3.446,396,3.446,397,3.446,398,3.446,399,3.446,400,3.446,401,3.446,402,3.446,403,3.446,404,3.446,405,5.655,406,3.446,407,3.446,408,3.446,409,3.446,410,3.446,411,5.655,412,3.446,413,3.446,414,3.446,415,3.446,416,5.655,417,3.446,418,3.446,419,3.446,420,3.446,421,5.655,422,3.446]],["title/classes/ChartColor.html",[24,0.106,340,1.704]],["body/classes/ChartColor.html",[3,0.196,4,0.162,9,0.112,22,0.016,23,0.415,24,0.157,32,0.897,75,0.01,76,0.01,81,0.53,82,0.969,87,1.073,89,1.271,90,0.721,91,1.219,92,1.579,93,2.154,94,1.469,191,1.027,194,1.673,204,2.012,210,0.928,211,1.327,217,2.645,218,1.714,219,1.714,225,2.408,228,2.408,231,2.408,234,2.408,237,1.714,238,1.551,270,1.911,292,1.73,315,3.513,318,2.408,323,2.408,327,2.408,340,2.179,369,2.684,370,3.365,371,1.911,423,1.714,424,1.807,425,3.017,426,3.292,427,3.292,428,4.956,429,4.956,430,4.956,431,3.571,432,3.571,433,3.571,434,3.571,435,3.528,436,3.528,437,2.848,438,3.528,439,3.18,440,2.848,441,3.528,442,2.848,443,1.44,444,3.528,445,0.802,446,3.745,447,4.43,448,2.506,449,3.365,450,1.911,451,3.545,452,1.911,453,2.028,454,2.028,455,1.911,456,1.911,457,1.807,458,3.365,459,1.911,460,1.911,461,3.103,462,2.645,463,2.934,464,3.103,465,1.911,466,2.684,467,2.684,468,2.028,469,2.028,470,2.408,471,2.684,472,2.028,473,2.028,474,2.848,475,2.028,476,2.028,477,2.028,478,2.028,479,2.028,480,2.848,481,2.028,482,2.028,483,2.028,484,2.848,485,2.028,486,2.028,487,2.028,488,2.028,489,2.028,490,2.028,491,2.028,492,2.848,493,2.028]],["title/interfaces/ChartInfo.html",[445,0.5,494,1.36]],["body/interfaces/ChartInfo.html",[3,0.273,4,0.225,9,0.157,20,0.608,22,0.016,23,0.343,32,1.111,66,0.667,75,0.012,76,0.012,81,0.455,83,1.882,87,1.255,89,1.575,90,0.782,91,1.51,92,1.641,191,1.373,210,1.157,222,1.21,445,0.798,494,2.565,495,1.882,496,3.816,497,3.276,498,3.276,499,3.276,500,3.276,501,4.387,502,4.798,503,4.798,504,4.798,505,4.916,506,4.916,507,4.916,508,4.916,509,2.854,510,4.916,511,5.347,512,4.916,513,5.347,514,4.916,515,4.916,516,5.347,517,4.916,518,4.916,519,3.489,520,4.059,521,2.663,522,2.265,523,4.253,524,2.825,525,3.489,526,4.387,527,3.489,528,3.489,529,3.489]],["title/classes/ColorThemeSettings.html",[24,0.106,237,1.883]],["body/classes/ColorThemeSettings.html",[3,0.208,4,0.172,9,0.119,22,0.016,23,0.419,24,0.162,75,0.01,76,0.01,81,0.478,87,1.045,92,1.552,93,2.067,191,1.143,194,1.696,204,1.532,210,0.967,211,1.01,217,2.731,218,1.82,219,1.82,225,2.874,228,2.874,231,2.874,234,2.874,237,2.51,238,1.647,270,2.029,292,1.748,315,3.25,318,2.51,323,2.51,327,2.51,340,1.647,369,2.799,370,3.454,371,2.029,423,1.82,424,1.919,425,3.02,426,2.153,427,2.153,431,2.97,432,2.97,433,2.97,434,2.97,437,2.153,439,2.874,440,2.153,442,2.153,443,0.942,445,0.823,446,3.773,447,4.464,448,2.561,449,3.454,450,2.029,451,3.624,452,2.029,453,2.153,454,2.153,455,2.029,456,2.029,457,1.919,458,3.454,459,2.029,460,2.029,461,3.204,462,2.731,463,3.03,464,3.204,465,2.029,466,2.799,467,2.799,468,3.665,469,2.153,470,2.51,471,2.799,472,2.153,473,3.665,474,2.97,475,2.153,476,2.153,477,2.153,478,3.665,479,2.153,480,2.97,481,2.153,482,2.153,483,3.665,484,2.97,485,2.153,486,2.153,487,2.153,488,2.153,489,2.153,490,2.153,491,2.153,492,2.97,493,2.153,530,3.747,531,3.747,532,3.747,533,3.747]],["title/classes/CurveChart.html",[24,0.106,534,2.751]],["body/classes/CurveChart.html",[0,0.497,3,0.186,4,0.153,9,0.107,14,0.876,15,0.84,16,0.876,18,0.876,20,0.702,21,0.573,22,0.016,23,0.186,24,0.131,32,1.004,38,0.951,39,1.308,42,1.304,66,0.755,71,0.951,75,0.01,76,0.01,81,0.309,82,0.933,83,2.13,84,0.711,86,2.849,87,1.125,89,1.423,90,0.756,91,1.365,92,1.457,99,2.373,100,1.28,168,1.402,187,2.048,191,0.997,194,1.287,199,1.518,204,1.649,210,0.893,211,1.396,222,0.871,255,0.951,292,1.652,340,1.47,345,2.544,423,1.624,439,1.624,443,1.612,494,2.657,519,2.373,520,3.983,521,3.285,522,2.222,524,3.197,525,3.386,526,4.981,527,3.948,528,3.386,529,4.305,534,3.948,535,4.033,536,4.981,537,2.373,538,4.871,539,4.127,540,4.127,541,4.771,542,4.771,543,3.386,544,4.771,545,3.344,546,3.344,547,4.127,548,2.553,549,3.47,550,4.317,551,3.344,552,3.344,553,3.344,554,3.344,555,2.892,556,3.344,557,2.584,558,2.595,559,2.001,560,1.713,561,1.47,562,1.544,563,1.402,564,1.47,565,1.402,566,2.048,567,2.892,568,2.595,569,2.595,570,3.715,571,2.373,572,4.127,573,2.892,574,2.595,575,2.892,576,1.811,577,3.386,578,2.892,579,2.892,580,2.892,581,2.892,582,2.892,583,2.892,584,4.127,585,4.127,586,4.127,587,5.247,588,5.247,589,4.127,590,4.127,591,1.811,592,2.892,593,4.127,594,2.892,595,2.892,596,2.892,597,2.892,598,2.892,599,2.892,600,4.212,601,2.892,602,1.402,603,2.892,604,2.892,605,2.892,606,1.402,607,3.653,608,2.892,609,3.653,610,2.892,611,2.373,612,2.373,613,2.69,614,2.892,615,2.892,616,2.892,617,2.892,618,2.892,619,2.892,620,2.892,621,2.595,622,2.892,623,1.674,624,2.892,625,2.203,626,2.595,627,2.892,628,1.544,629,4.127,630,2.892,631,5.247,632,1.544,633,4.127,634,2.892,635,1.544,636,4.127,637,2.892,638,1.544,639,4.127,640,2.892]],["title/components/CurveChartComponent.html",[0,0.404,38,1.102]],["body/components/CurveChartComponent.html",[0,0.558,1,0.889,2,1.528,3,0.174,4,0.143,5,1.097,6,1.097,7,1.097,8,1.097,9,0.1,11,1.146,12,1.051,13,1.097,14,2.005,15,1.924,16,1.191,18,1.191,20,0.691,21,0.536,22,0.016,23,0.174,24,0.125,26,0.754,27,1.595,28,1.595,29,1.097,30,2.063,31,1.097,32,0.839,33,1.097,34,0.927,35,1.097,36,0.889,37,1.097,38,1.673,39,1.518,40,1.097,41,0.927,42,1.429,43,1.595,44,0.889,45,1.097,46,0.927,47,1.097,48,0.889,49,1.097,50,0.889,51,1.097,52,0.889,53,0.966,54,0.819,55,1.097,56,0.927,57,1.008,58,0.927,59,1.097,60,0.889,61,1.097,62,0.889,63,1.097,64,0.927,65,1.465,66,0.798,67,1.595,68,0.927,69,0.927,70,0.889,71,1.523,72,1.008,73,1.097,74,1.097,75,0.009,76,0.009,81,0.289,82,0.889,83,2.051,84,0.665,86,3.446,87,1.068,89,0.694,90,0.688,91,0.665,92,1.275,99,2.219,100,1.197,168,1.312,187,2.785,191,0.56,194,1.239,199,1.462,204,0.927,210,0.851,211,1.047,222,0.839,255,0.889,292,1.239,340,1.375,345,2.466,439,1.519,443,0.786,494,2.418,519,2.219,520,3.862,521,3.644,522,1.666,524,2.613,525,2.219,526,4.174,527,3.802,528,2.219,529,2.219,534,3.802,535,3.866,536,4.775,537,2.219,538,4.775,543,2.219,547,2.705,548,1.741,549,3.035,550,2.427,557,2.902,558,2.427,559,2.466,560,1.602,561,1.375,562,1.444,563,1.312,564,1.375,565,1.312,566,1.916,567,2.705,568,3.529,569,4.158,570,4.222,571,3.227,572,5.087,573,4.634,574,3.529,575,4.634,576,2.463,577,3.227,578,2.705,579,2.705,580,2.705,581,2.705,582,2.705,583,2.705,584,3.933,585,3.933,586,3.933,587,5.087,588,5.087,589,3.933,590,3.933,591,3.185,592,2.705,593,3.933,594,2.705,595,2.705,596,2.705,597,2.705,598,2.705,599,2.705,600,4.103,601,2.705,602,1.312,603,2.705,604,2.705,605,2.705,606,1.312,607,3.518,608,2.705,609,3.518,610,2.705,611,2.219,612,2.219,613,2.62,614,2.705,615,2.705,616,2.705,617,2.705,618,2.705,619,2.705,620,2.705,621,2.427,622,2.705,623,1.595,624,2.705,625,2.099,626,2.427,627,2.705,628,1.444,629,3.933,630,2.705,631,5.087,632,1.444,633,3.933,634,2.705,635,1.444,636,3.933,637,2.705,638,1.444,639,3.933,640,2.705,641,2.054,642,4.547,643,3.127,644,3.127,645,3.127,646,3.127]],["title/components/CurveChartFormComponent.html",[0,0.404,41,1.149]],["body/components/CurveChartFormComponent.html",[0,0.65,1,1.183,2,1.865,3,0.231,4,0.191,5,1.46,6,1.46,7,1.46,8,1.46,9,0.133,12,1.399,13,1.46,14,2.071,15,1.987,16,1.453,18,1.453,20,0.655,21,0.713,22,0.016,23,0.231,24,0.114,26,1.003,27,1.946,28,1.946,29,1.46,30,2.336,31,1.46,32,0.977,33,1.46,34,1.233,35,1.46,36,1.183,37,1.46,38,1.183,39,1.557,40,1.46,41,1.974,42,1.519,43,1.946,44,1.183,45,1.46,46,1.233,47,1.46,48,1.183,49,1.46,50,1.183,51,1.46,52,1.183,53,1.286,54,1.09,55,1.46,56,1.233,57,1.341,58,1.233,59,1.46,60,1.183,61,1.46,62,1.183,63,1.46,64,1.233,65,1.788,66,0.847,67,1.946,68,1.233,69,1.233,70,1.183,71,1.183,72,1.341,73,1.46,74,1.46,75,0.011,76,0.011,81,0.385,82,1.085,83,2.124,84,0.885,87,0.909,89,0.923,90,0.611,91,0.885,100,1.593,156,2.254,209,5.653,240,3.229,254,3.599,255,1.973,283,2.254,284,3.588,285,2.732,286,2.131,292,1.444,535,3.588,559,2.793,560,2.131,576,3.005,606,2.327,613,2.327,641,2.732,647,4.845,648,3.229,649,5.4,650,4.8,651,5.549,652,4.161,653,2.953,654,4.161,655,2.131,656,4.161,657,3.599,658,4.161,659,2.131,660,4.161,661,2.131,662,4.161,663,4.161,664,6.659,665,4.161,666,4.161,667,4.161,668,4.161,669,4.161,670,4.161,671,5.549,672,4.161,673,4.161,674,4.161,675,5.76,676,2.131]],["title/classes/CurveChartInfo.html",[24,0.106,563,1.626]],["body/classes/CurveChartInfo.html",[3,0.213,4,0.114,9,0.08,20,0.46,22,0.017,23,0.367,24,0.128,32,0.939,39,1.073,42,0.489,66,0.522,75,0.008,76,0.008,81,0.356,82,0.751,83,2.014,84,0.997,87,1.208,89,1.331,90,0.744,91,1.276,92,1.6,94,1.683,168,1.965,191,1.265,194,1.749,199,1.435,204,1.777,210,0.72,211,1.471,222,1.173,255,0.711,292,1.314,345,2.704,423,1.214,425,2.014,443,1.84,445,0.733,448,1.472,494,1.644,497,2.429,498,2.429,499,2.429,500,2.429,501,2.728,502,2.984,503,2.984,504,2.984,509,1.775,522,0.916,548,2.296,549,3.212,561,1.099,562,1.154,563,1.612,564,2.06,565,1.612,602,1.612,606,2.381,613,1.612,623,1.845,625,2.429,628,1.775,632,1.154,635,1.154,638,1.154,655,2.909,657,2.162,659,3.071,661,3.071,677,1.214,678,3.075,679,3.845,680,3.075,681,2.849,682,2.849,683,3.326,684,3.845,685,2.499,686,2.499,687,2.499,688,2.499,689,2.499,690,2.082,691,2.499,692,2.499,693,3.28,694,2.499,695,2.499,696,2.499,697,2.499,698,2.499,699,2.082,700,2.499,701,2.499,702,2.499,703,2.499,704,2.499,705,2.499,706,2.499,707,2.499,708,1.775,709,1.354,710,1.28,711,2.909,712,2.909,713,2.909,714,2.909,715,1.154,716,2.206,717,1.154,718,1.214,719,1.214,720,1.214,721,1.28,722,1.154,723,2.538,724,2.082,725,2.082,726,2.082,727,1.354,728,1.354,729,1.354,730,1.354,731,1.354,732,1.354,733,1.354,734,1.354,735,2.082,736,1.354,737,2.082,738,1.354,739,2.082,740,1.354,741,1.214,742,1.354,743,2.538,744,1.354,745,1.354,746,1.354,747,1.354,748,1.354,749,1.28,750,2.082,751,1.214,752,1.099,753,1.354,754,1.868,755,2.4,756,1.354,757,1.354,758,2.909,759,1.354,760,1.354,761,3.075,762,1.354,763,1.354,764,1.354,765,1.354,766,1.354,767,1.354,768,1.354,769,1.354,770,1.354,771,1.354,772,1.214,773,2.082,774,2.082,775,1.969,776,2.082,777,1.969,778,2.769,779,1.969,780,2.913,781,2.909,782,1.154,783,2.849,784,2.849,785,1.354,786,1.354,787,1.154,788,1.354,789,1.354,790,1.354,791,1.154,792,1.354,793,1.354,794,1.354,795,2.082,796,2.538,797,2.538,798,1.354,799,2.082,800,2.082,801,2.082,802,1.28,803,1.354,804,1.354,805,1.001,806,1.354,807,1.354,808,1.28,809,1.354,810,1.354,811,1.354,812,2.082,813,1.354,814,1.28,815,2.082,816,1.354,817,1.28,818,2.082,819,1.354,820,1.048,821,1.354,822,1.048,823,1.354,824,1.214,825,1.354]],["title/interfaces/CurveChartInfoStorageObject.html",[445,0.5,693,1.883]],["body/interfaces/CurveChartInfoStorageObject.html",[3,0.236,4,0.131,9,0.091,20,0.5,22,0.017,23,0.381,24,0.139,39,1.149,42,0.559,66,0.577,75,0.009,76,0.009,81,0.394,82,0.832,83,1.946,84,0.608,90,0.62,92,1.59,94,1.785,168,2.132,194,1.778,199,1.387,204,1.871,211,1.432,222,1.164,255,0.813,292,1.393,345,2.818,425,1.629,443,1.856,445,0.777,448,1.629,494,1.493,495,1.094,497,1.32,498,1.32,499,1.32,500,1.32,509,1.32,522,1.047,548,2.417,549,3.264,561,1.257,562,1.32,563,1.199,564,2.235,565,1.785,602,1.785,606,2.525,613,1.785,623,1.976,625,2.6,628,1.965,632,1.32,635,1.32,638,1.32,655,3.234,659,3.234,661,3.234,677,1.388,678,3.419,680,2.305,681,1.548,682,1.548,690,1.548,693,3.176,699,1.548,708,1.965,709,1.548,710,1.464,711,3.084,712,3.084,713,3.084,714,3.084,715,1.32,716,2.362,717,1.32,718,1.388,719,1.388,720,1.388,721,1.464,722,1.32,723,2.753,724,2.305,725,2.305,726,2.305,727,1.548,728,1.548,729,1.548,730,1.548,731,1.548,732,1.548,733,1.548,734,1.548,735,2.305,736,1.548,737,2.305,738,1.548,739,2.305,740,1.548,741,1.388,742,1.548,743,2.753,744,1.548,745,1.548,746,1.548,747,1.548,748,1.548,749,1.464,750,2.305,751,1.388,752,1.257,753,1.548,754,2.067,755,2.604,756,1.548,757,1.548,758,3.084,759,1.548,760,1.548,761,3.261,762,1.548,763,1.548,764,1.548,765,1.548,766,1.548,767,1.548,768,1.548,769,1.548,770,1.548,771,1.548,772,1.388,773,2.305,774,2.305,775,2.18,776,2.305,777,2.18,778,2.915,779,2.18,780,3.067,781,3.084,782,1.32,783,3.05,784,3.05,785,1.548,786,1.548,787,1.32,788,1.548,789,1.548,790,1.548,791,1.32,792,1.548,793,1.548,794,1.548,795,2.305,796,2.753,797,2.753,798,1.548,799,2.305,800,2.305,801,2.305,802,1.464,803,1.548,804,1.548,805,1.145,806,1.548,807,1.548,808,1.464,809,1.548,810,1.548,811,1.548,812,2.305,813,1.548,814,1.464,815,2.305,816,1.548,817,1.464,818,2.305,819,1.548,820,1.199,821,1.548,822,1.199,823,1.548,824,1.388,825,1.548]],["title/components/CurveComponent.html",[0,0.404,44,1.102]],["body/components/CurveComponent.html",[0,0.71,1,1.124,2,1.802,3,0.219,4,0.181,5,1.386,6,1.386,7,1.386,8,1.386,9,0.126,11,1.448,12,1.328,13,1.386,14,2.06,15,1.977,16,1.404,18,1.404,20,0.67,21,0.678,22,0.016,23,0.219,24,0.108,26,0.953,27,1.88,28,1.88,29,1.386,30,2.288,31,1.386,32,1.067,33,1.386,34,1.171,35,1.386,36,1.124,37,1.386,38,1.124,39,1.512,40,1.386,41,1.171,42,1.275,43,1.88,44,1.855,45,1.386,46,1.171,47,1.386,48,1.124,49,1.386,50,1.124,51,1.386,52,1.124,53,1.221,54,1.785,55,1.386,56,1.171,57,1.273,58,1.171,59,1.386,60,1.124,61,1.386,62,1.124,63,1.386,64,1.171,65,1.727,66,0.885,67,1.88,68,1.171,69,1.171,70,1.124,71,1.124,72,1.273,73,1.386,74,1.386,75,0.011,76,0.011,81,0.366,84,0.841,87,0.878,89,1.189,90,0.59,91,1.141,92,0.806,100,1.513,108,1.92,144,2.746,161,1.88,191,0.708,210,1.003,211,1.048,222,0.619,280,2.421,281,2.595,282,3.804,284,3.08,286,2.024,559,2.735,560,2.024,576,2.903,609,2.595,623,1.386,641,2.595,676,2.024,716,2.859,722,1.825,754,3.492,755,2.746,820,1.657,822,1.657,826,3.419,827,6.082,828,5.36,829,5.36,830,6.082,831,3.994,832,6.082,833,4.628,834,3.952,835,5.36,836,5.641,837,3.952,838,3.067,839,3.952,840,5.36,841,3.067,842,3.952,843,3.952,844,6.521,845,2.421,846,3.952,847,3.067,848,3.952,849,3.952,850,3.952,851,3.952,852,3.52,853,3.952,854,4.636,855,3.419,856,5.641,857,3.419,858,3.952,859,3.952,860,3.067,861,4.636,862,2.805]],["title/classes/CurveData.html",[24,0.106,863,2.751]],["body/classes/CurveData.html",[3,0.217,4,0.117,9,0.082,20,0.468,22,0.017,23,0.37,24,0.13,32,0.948,39,1.087,42,0.501,66,0.645,75,0.008,76,0.008,81,0.493,82,0.766,83,1.821,84,1.012,87,1.133,89,1.344,90,0.694,91,1.288,92,1.541,94,1.795,168,1.995,191,1.194,194,1.754,199,1.454,204,1.795,210,0.733,211,1.446,222,1.177,255,0.729,292,1.642,345,2.85,423,1.244,425,2.04,443,1.942,445,0.741,448,1.5,494,1.374,497,1.183,498,1.183,499,1.183,500,1.183,509,1.183,522,1.435,548,2.717,549,3.235,561,1.126,562,1.183,563,1.074,564,2.092,565,1.643,602,1.643,606,2.408,613,1.643,623,1.869,625,2.46,628,1.809,632,1.183,635,1.183,638,1.183,655,2.437,659,2.437,661,2.437,677,1.244,678,2.577,680,2.122,681,1.388,682,1.388,690,1.388,693,2.941,699,1.388,708,1.809,709,1.388,710,1.312,711,2.941,712,2.941,713,2.941,714,2.941,715,1.183,716,2.235,717,1.183,718,1.244,719,1.244,720,1.244,721,1.312,722,1.183,723,2.577,724,2.122,725,2.122,726,2.122,727,1.388,728,1.388,729,1.388,730,1.388,731,1.388,732,1.388,733,1.388,734,1.388,735,2.122,736,1.388,737,2.122,738,1.388,739,2.122,740,1.388,741,2.588,742,1.388,743,2.577,744,1.388,745,1.388,746,1.388,747,1.388,748,1.388,749,2.007,750,2.122,751,1.903,752,2.525,753,1.388,754,2.588,755,2.941,756,2.122,757,1.388,758,2.941,759,1.388,760,1.388,761,3.11,762,1.388,763,1.388,764,1.388,765,1.388,766,1.388,767,1.388,768,1.388,769,1.388,770,1.388,771,1.388,772,1.244,773,2.122,774,2.122,775,2.007,776,2.122,777,2.007,778,2.796,779,2.007,780,2.941,781,2.941,782,1.183,783,2.886,784,2.886,785,1.388,786,1.388,787,1.183,788,1.388,789,1.388,790,1.388,791,1.183,792,1.388,793,1.388,794,1.388,795,2.122,796,2.577,797,2.577,798,1.388,799,2.122,800,2.122,801,2.122,802,1.312,803,1.388,804,1.388,805,2.134,806,1.388,807,1.388,808,1.312,809,1.388,810,1.388,811,1.388,812,2.122,813,1.388,814,1.312,815,2.122,816,1.388,817,1.312,818,2.122,819,1.388,820,1.074,821,1.388,822,1.074,823,1.388,824,1.244,825,1.388,845,2.4,863,1.818,864,3.918,865,4.758,866,3.041,867,3.041,868,3.918,869,3.918,870,3.918,871,2.562,872,2.562,873,2.562,874,2.562,875,2.562,876,2.562,877,1.988,878,2.562,879,2.562,880,2.562,881,2.562,882,2.562,883,1.988]],["title/interfaces/CurveDataDict.html",[445,0.5,548,1.484]],["body/interfaces/CurveDataDict.html",[3,0.231,4,0.127,9,0.089,20,0.492,22,0.017,23,0.378,24,0.137,39,1.133,42,0.544,66,0.566,75,0.008,76,0.008,81,0.386,82,0.815,83,1.915,84,0.592,90,0.656,91,1.33,92,1.544,94,1.764,168,2.097,194,1.772,199,1.365,204,1.852,211,1.424,222,1.159,255,0.791,292,1.377,345,3.143,425,1.596,443,1.938,445,0.768,448,1.596,494,1.462,495,1.065,497,1.284,498,1.284,499,1.284,500,1.284,509,1.284,522,1.019,548,2.481,549,3.237,561,1.223,562,1.284,563,1.166,564,2.199,565,1.748,602,1.748,606,2.795,613,1.748,623,1.949,625,2.565,628,1.925,632,1.284,635,1.284,638,1.284,655,2.562,659,2.562,661,2.562,677,1.351,678,2.709,680,2.258,681,1.506,682,1.506,690,1.506,693,3.035,699,1.506,708,1.925,709,1.506,710,1.424,711,3.414,712,3.414,713,3.414,714,3.414,715,1.284,716,2.33,717,1.284,718,1.351,719,1.351,720,1.351,721,1.424,722,1.284,723,2.709,724,2.258,725,2.258,726,2.258,727,1.506,728,1.506,729,1.506,730,1.506,731,1.506,732,1.506,733,1.506,734,1.506,735,2.258,736,1.506,737,2.258,738,1.506,739,2.258,740,1.506,741,1.351,742,1.506,743,2.709,744,1.506,745,1.506,746,1.506,747,1.506,748,1.506,749,1.424,750,2.258,751,1.351,752,1.223,753,1.506,754,2.025,755,2.562,756,1.506,757,1.506,758,3.049,759,1.506,760,1.506,761,3.224,762,1.506,763,1.506,764,1.506,765,1.506,766,1.506,767,1.506,768,1.506,769,1.506,770,1.506,771,1.506,772,1.351,773,2.258,774,2.258,775,2.135,776,2.258,777,2.135,778,2.885,779,2.135,780,3.035,781,3.049,782,1.284,783,3.009,784,3.009,785,1.506,786,1.506,787,1.284,788,1.506,789,1.506,790,1.506,791,1.284,792,1.506,793,1.506,794,1.506,795,2.258,796,2.709,797,2.709,798,1.506,799,2.258,800,2.258,801,2.258,802,1.424,803,1.506,804,1.506,805,1.114,806,1.506,807,1.506,808,1.424,809,1.506,810,1.506,811,1.506,812,2.258,813,1.506,814,1.424,815,2.258,816,1.506,817,1.424,818,2.258,819,1.506,820,1.166,821,1.506,822,1.166,823,1.506,824,1.351,825,1.506]],["title/components/CurveHighChartComponent.html",[0,0.404,46,1.149]],["body/components/CurveHighChartComponent.html",[0,0.551,1,0.869,2,1.503,3,0.17,4,0.14,5,1.072,6,1.072,7,1.072,8,1.072,9,0.097,12,1.027,13,1.072,14,1.999,15,1.918,16,1.171,18,1.171,20,0.572,21,0.524,22,0.016,23,0.17,24,0.084,26,1.275,27,1.569,28,1.569,29,1.072,30,2.041,31,1.072,32,0.969,33,1.072,34,0.906,35,1.072,36,0.869,37,1.072,38,0.869,39,1.468,40,1.072,41,0.906,42,1.264,43,1.569,44,0.869,45,1.072,46,1.724,47,1.072,48,0.869,49,1.072,50,0.869,51,1.072,52,0.869,53,0.944,54,0.8,55,1.072,56,0.906,57,0.985,58,0.906,59,1.072,60,0.869,61,1.072,62,0.869,63,1.072,64,0.906,65,1.441,66,0.607,67,1.569,68,0.906,69,0.906,70,0.869,71,0.869,72,0.985,73,1.072,74,1.072,75,0.009,76,0.009,81,0.283,82,0.874,84,0.65,87,1.232,89,1.173,90,0.736,91,1.125,93,1.798,94,1.724,100,1.17,191,1.273,194,1.223,199,1.22,210,0.837,211,1.492,222,1.151,280,1.872,281,2.007,286,1.566,345,1.282,443,1.462,470,3.75,494,1.569,501,4.129,520,3.472,535,4.344,537,2.169,557,2.864,559,2.44,560,1.566,561,1.344,568,3.47,569,4.104,576,2.422,591,3.151,600,4.663,602,2.44,607,2.007,621,3.47,623,1.072,641,2.007,676,2.291,772,1.485,778,2.065,787,2.065,852,2.007,884,5.866,885,3.868,886,5.287,887,5.287,888,4.498,889,5.287,890,4.472,891,4.472,892,5.287,893,5.818,894,5.287,895,5.287,896,5.818,897,5.287,898,3.057,899,4.472,900,4.805,901,3.057,902,3.868,903,3.057,904,3.057,905,3.057,906,3.057,907,3.057,908,3.057,909,3.057,910,3.057,911,3.057,912,3.057,913,3.057,914,3.057,915,4.472,916,4.472,917,3.868,918,3.868,919,4.472,920,5.818,921,3.868,922,3.47,923,4.472,924,4.472,925,3.057,926,3.057,927,3.057,928,3.057,929,4.472,930,4.472,931,4.472,932,3.057,933,3.057,934,3.057,935,3.057,936,5.287,937,3.057,938,3.057,939,3.057,940,3.057,941,3.057,942,3.057,943,3.057,944,3.057,945,3.057,946,3.057,947,3.057,948,2.169]],["title/classes/CurveImpl.html",[24,0.106,782,1.79]],["body/classes/CurveImpl.html",[3,0.224,4,0.122,9,0.085,20,0.479,22,0.017,23,0.374,24,0.133,32,0.762,39,1.108,42,0.52,66,0.547,75,0.008,76,0.008,81,0.373,82,0.788,83,1.864,84,0.566,87,1.103,89,1.081,90,0.643,91,1.036,92,1.535,93,1.246,94,1.892,168,2.042,191,1.144,194,1.763,199,1.483,204,1.821,210,0.755,211,1.455,222,1.172,255,0.757,292,1.558,345,2.757,423,1.292,425,2.08,443,1.881,445,0.754,448,1.544,494,1.415,497,1.228,498,1.228,499,1.228,500,1.228,509,1.228,522,0.975,548,2.353,549,3.388,561,1.17,562,1.228,563,1.116,564,2.141,565,2.042,602,2.042,606,2.449,613,1.691,623,1.906,625,2.509,628,2.248,632,1.228,635,1.228,638,1.228,655,2.494,659,2.494,661,2.494,677,1.292,678,2.637,680,3.162,681,2.943,682,1.441,683,3.488,690,1.441,693,2.985,699,1.441,708,1.862,709,1.441,710,1.363,711,2.991,712,2.991,713,2.991,714,2.991,715,1.228,716,2.278,717,1.228,718,1.292,719,1.292,720,1.292,721,1.363,722,1.228,723,2.637,724,2.184,725,2.184,726,2.184,727,1.441,728,1.441,729,1.441,730,1.441,731,1.441,732,1.441,733,1.441,734,1.441,735,2.184,736,1.441,737,2.184,738,1.441,739,2.184,740,1.441,741,1.292,742,1.441,743,2.637,744,1.441,745,1.441,746,1.441,747,1.441,748,1.441,749,1.363,750,2.184,751,1.292,752,1.17,753,1.441,754,1.959,755,2.494,756,1.441,757,1.441,758,2.991,759,1.441,760,1.441,761,3.162,762,1.441,763,1.441,764,1.441,765,1.441,766,1.441,767,1.441,768,1.441,769,1.441,770,1.441,771,1.441,772,1.292,773,2.184,774,2.184,775,2.991,776,2.637,777,2.991,778,3.169,779,2.494,780,3.388,781,3.368,782,1.862,783,2.943,784,2.943,785,1.441,786,1.441,787,1.228,788,2.184,789,1.441,790,1.441,791,1.228,792,1.441,793,1.441,794,1.441,795,2.184,796,2.637,797,2.637,798,1.441,799,2.184,800,2.184,801,2.184,802,1.363,803,1.441,804,1.441,805,1.065,806,1.441,807,1.441,808,1.363,809,1.441,810,1.441,811,1.441,812,2.184,813,1.441,814,1.363,815,2.184,816,1.441,817,1.363,818,2.184,819,1.441,820,1.116,821,1.441,822,1.116,823,1.441,824,1.292,825,1.441,949,3.129,950,3.129,951,2.66,952,2.66,953,2.66,954,2.66,955,2.66,956,2.66,957,2.66,958,2.66,959,2.66]],["title/interfaces/CurveInterface.html",[445,0.5,565,1.626]],["body/interfaces/CurveInterface.html",[3,0.233,4,0.129,9,0.09,20,0.495,22,0.017,23,0.379,24,0.138,32,0.658,39,1.139,42,0.549,66,0.57,75,0.008,76,0.008,81,0.389,83,1.927,84,0.598,87,0.915,89,0.933,90,0.463,91,0.894,92,1.547,94,1.772,168,2.111,191,1.001,194,1.775,199,1.374,204,1.859,210,0.787,211,1.427,222,1.175,255,0.799,292,1.383,345,2.804,425,1.609,443,1.887,445,0.772,448,1.609,494,1.474,495,1.076,497,1.298,498,1.298,499,1.298,500,1.298,509,1.298,522,1.03,548,2.402,549,3.32,561,1.236,562,1.298,563,1.179,564,2.213,565,2.111,602,1.762,606,2.507,613,1.762,623,1.959,625,2.579,628,1.94,632,1.298,635,1.298,638,1.298,655,2.578,659,2.578,661,2.578,677,1.365,678,2.726,680,2.276,681,1.522,682,1.522,690,1.522,693,3.048,699,1.522,708,1.94,709,1.522,710,1.44,711,3.063,712,3.063,713,3.063,714,3.063,715,1.298,716,2.342,717,1.298,718,1.365,719,1.365,720,1.365,721,1.44,722,1.298,723,2.726,724,2.276,725,2.276,726,2.276,727,1.522,728,1.522,729,1.522,730,1.522,731,1.522,732,1.522,733,1.522,734,1.522,735,2.276,736,1.522,737,2.276,738,1.522,739,2.276,740,1.522,741,1.365,742,1.522,743,2.726,744,1.522,745,1.522,746,1.522,747,1.522,748,1.522,749,1.44,750,2.276,751,1.365,752,1.236,753,1.522,754,2.041,755,2.578,756,1.522,757,1.522,758,3.063,759,1.522,760,1.522,761,3.238,762,1.522,763,1.522,764,1.522,765,1.522,766,1.522,767,1.522,768,1.522,769,1.522,770,1.522,771,1.522,772,1.365,773,2.276,774,2.276,775,3.063,776,2.726,777,3.063,778,3.156,779,2.578,780,3.048,781,3.214,782,1.298,783,3.025,784,3.025,785,1.522,786,1.522,787,1.298,788,1.522,789,1.522,790,1.522,791,1.298,792,1.522,793,1.522,794,1.522,795,2.276,796,2.726,797,2.726,798,1.522,799,2.276,800,2.276,801,2.276,802,1.44,803,1.522,804,1.522,805,1.126,806,1.522,807,1.522,808,1.44,809,1.522,810,1.522,811,1.522,812,2.276,813,1.522,814,1.44,815,2.276,816,1.522,817,1.44,818,2.276,819,1.522,820,1.179,821,1.522,822,1.179,823,1.522,824,1.365,825,1.522,949,3.262,950,3.262,960,2.811,961,2.811,962,2.811,963,2.811]],["title/interfaces/CurveInterfaceStorageObject.html",[445,0.5,780,1.883]],["body/interfaces/CurveInterfaceStorageObject.html",[3,0.238,4,0.132,9,0.092,20,0.503,22,0.017,23,0.382,24,0.14,39,1.156,42,0.565,66,0.582,75,0.009,76,0.009,81,0.397,82,0.839,83,1.96,84,0.615,90,0.473,92,1.552,94,1.794,168,2.147,194,1.781,199,1.397,204,1.879,211,1.435,222,1.166,255,0.823,292,1.4,345,2.827,425,1.644,443,1.859,445,0.781,448,1.644,494,1.506,495,1.107,497,1.335,498,1.335,499,1.335,500,1.335,509,1.335,522,1.06,548,2.427,549,3.454,561,1.272,562,1.335,563,1.213,564,2.661,565,1.8,602,1.8,606,2.538,613,1.8,623,1.987,625,2.616,628,1.982,632,1.335,635,1.335,638,1.335,655,2.622,659,2.622,661,2.622,677,1.405,678,2.773,680,2.325,681,1.567,682,1.567,690,1.567,693,3.08,699,1.567,708,1.982,709,1.567,710,1.482,711,3.1,712,3.1,713,3.1,714,3.1,715,1.335,716,2.376,717,1.335,718,1.405,719,1.405,720,1.405,721,1.482,722,1.335,723,2.773,724,2.325,725,2.325,726,2.325,727,1.567,728,1.567,729,1.567,730,1.567,731,1.567,732,1.567,733,1.567,734,1.567,735,2.325,736,1.567,737,2.325,738,1.567,739,2.325,740,1.567,741,1.405,742,1.567,743,2.773,744,1.567,745,1.567,746,1.567,747,1.567,748,1.567,749,1.482,750,2.325,751,1.405,752,1.272,753,1.567,754,2.085,755,2.622,756,1.567,757,1.567,758,3.1,759,1.567,760,1.567,761,3.278,762,1.567,763,1.567,764,1.567,765,1.567,766,1.567,767,1.567,768,1.567,769,1.567,770,1.567,771,1.567,772,1.405,773,2.325,774,2.325,775,2.199,776,2.325,777,2.199,778,3.113,779,2.199,780,3.189,781,3.454,782,1.335,783,3.068,784,3.068,785,1.567,786,1.567,787,1.335,788,1.567,789,1.567,790,1.567,791,1.335,792,1.567,793,1.567,794,1.567,795,2.325,796,2.773,797,2.773,798,1.567,799,2.325,800,2.325,801,2.325,802,1.482,803,1.567,804,1.567,805,1.158,806,1.567,807,1.567,808,1.482,809,1.567,810,1.567,811,1.567,812,2.325,813,1.567,814,1.482,815,2.325,816,1.567,817,1.482,818,2.325,819,1.567,820,1.213,821,1.567,822,1.213,823,1.567,824,1.405,825,1.567]],["title/modules/CurveModule.html",[102,1.303,964,2.374]],["body/modules/CurveModule.html",[3,0.239,4,0.197,9,0.137,11,1.579,20,0.785,21,0.739,22,0.016,23,0.239,24,0.118,26,1.039,38,2.049,39,1.377,41,2.136,42,1.11,44,2.22,46,2.136,48,2.049,56,2.136,57,1.388,66,0.77,69,1.683,75,0.011,76,0.011,102,2.135,104,1.895,105,1.99,106,2.544,107,1.99,108,3.086,109,2.544,120,2.909,121,1.895,122,1.99,124,2.274,125,2.274,127,3.345,131,4.913,132,3.728,148,3.345,149,4.408,150,2.571,151,2.83,152,3.728,153,4.913,154,2.83,155,4.408,156,2.334,159,1.807,160,2.382,161,1.512,284,2.477,285,2.83,470,2.093,536,3.058,559,3.022,560,2.207,647,3.345,884,3.345,888,2.83,964,4.901,965,3.728,966,3.728,967,3.728,968,3.728,969,3.728,970,4.414,971,4.414,972,4.309,973,4.913,974,4.309,975,5.679,976,3.479,977,5.679,978,3.345,979,5.679,980,5.679,981,3.058,982,4.913,983,4.913,984,4.309,985,5.679,986,3.058,987,4.309,988,5.679,989,3.058,990,5.679,991,5.679,992,3.728,993,3.345,994,3.076,995,2.334,996,4.309,997,5.679,998,3.728,999,5.679,1000,3.345,1001,2.207]],["title/injectables/CurveService.html",[288,1.79,559,1.626]],["body/injectables/CurveService.html",[3,0.131,4,0.108,9,0.075,20,0.602,21,0.405,22,0.016,23,0.131,24,0.065,32,1.041,39,0.751,42,1.196,66,0.751,75,0.007,76,0.007,81,0.419,82,0.72,83,0.905,84,0.962,87,1.285,89,1.475,90,0.785,91,1.415,92,1.524,93,2.092,94,2.007,191,1.364,194,1.632,199,0.645,210,1.097,211,1.501,222,1.188,255,2.027,288,1.7,289,1.448,292,1.868,443,1.822,445,0.714,494,2.413,497,2.357,498,2.357,499,2.357,500,2.357,501,2.613,502,2.857,503,2.857,504,2.857,509,1.7,521,1.28,522,2.027,548,2.244,555,2.044,559,1.544,561,1.039,562,1.091,563,2.654,565,1.897,566,1.448,653,1.677,741,2.48,751,1.788,752,2.783,775,2.615,777,2.615,778,2.555,779,1.886,781,1.211,782,3.176,787,1.091,791,2.923,805,2.045,820,2.141,822,2.141,824,2.48,845,2.255,863,4.882,866,2.857,867,2.857,877,2.857,885,4.787,888,2.418,900,4.75,949,2.857,950,2.857,1002,2.044,1003,4.522,1004,4.522,1005,4.522,1006,4.522,1007,4.522,1008,5.105,1009,5.105,1010,5.105,1011,5.105,1012,5.105,1013,5.105,1014,3.682,1015,3.682,1016,2.363,1017,2.363,1018,2.363,1019,2.363,1020,2.363,1021,2.363,1022,2.363,1023,2.363,1024,2.363,1025,2.363,1026,2.363,1027,2.363,1028,2.363,1029,2.363,1030,2.363,1031,2.363,1032,2.363,1033,2.363,1034,2.363,1035,2.363,1036,3.682,1037,2.363,1038,3.682,1039,2.363,1040,3.682,1041,2.363,1042,4.522,1043,3.682,1044,2.363,1045,2.363,1046,3.682,1047,2.363,1048,3.682,1049,2.363,1050,2.363,1051,5.861,1052,2.857,1053,3.682,1054,2.363,1055,3.682,1056,2.363,1057,2.363,1058,2.363,1059,3.185,1060,2.363,1061,3.682,1062,2.363,1063,3.682,1064,2.363,1065,3.682,1066,2.363,1067,3.682,1068,2.363,1069,2.363,1070,3.682,1071,3.682,1072,2.363,1073,2.363,1074,2.363,1075,2.044,1076,1.834,1077,2.363,1078,2.363,1079,2.363,1080,2.363,1081,2.363,1082,2.363,1083,2.363,1084,2.363,1085,2.363,1086,2.363,1087,2.363,1088,2.363,1089,2.363,1090,2.363,1091,2.363,1092,2.363,1093,5.105,1094,6.12,1095,2.363,1096,2.363,1097,2.363,1098,3.682,1099,2.363,1100,2.363,1101,2.363,1102,2.363,1103,5.861,1104,2.363,1105,2.363,1106,2.363,1107,2.363,1108,2.363,1109,3.682,1110,2.363,1111,3.682,1112,2.363,1113,2.363,1114,2.363,1115,2.363,1116,2.363,1117,2.363,1118,2.363,1119,3.682]],["title/classes/CurveStorage.html",[24,0.106,791,1.79]],["body/classes/CurveStorage.html",[3,0.26,4,0.114,9,0.08,20,0.46,22,0.017,23,0.367,24,0.128,32,0.823,39,1.274,42,0.751,66,0.713,75,0.008,76,0.008,81,0.356,82,0.751,83,1.793,84,0.818,87,1.191,89,1.167,90,0.744,91,1.119,92,1.542,93,1.447,94,1.91,168,1.964,191,1.185,194,1.749,199,1.435,204,2.184,210,0.719,211,1.493,222,1.178,255,0.71,292,1.313,345,2.703,423,1.213,425,1.471,443,1.811,445,0.774,448,1.471,494,1.348,497,1.153,498,1.153,499,1.153,500,1.153,509,1.153,522,0.915,548,2.669,549,3.131,561,1.098,562,1.153,563,1.047,564,2.059,565,1.611,602,1.611,606,2.38,613,1.611,623,1.844,625,2.428,628,1.774,632,1.153,635,1.153,638,1.153,655,2.399,659,2.399,661,2.399,677,1.213,678,2.536,680,2.081,681,1.353,682,1.353,690,1.353,693,3.386,699,1.353,708,2.162,709,1.353,710,1.279,711,2.908,712,2.908,713,2.908,714,2.908,715,1.153,716,2.205,717,1.153,718,1.213,719,1.213,720,1.213,721,1.279,722,1.153,723,2.536,724,2.081,725,2.081,726,2.081,727,1.353,728,1.353,729,1.353,730,1.353,731,1.353,732,1.353,733,1.353,734,1.353,735,2.081,736,1.353,737,2.081,738,1.353,739,2.081,740,1.353,741,1.213,742,1.353,743,2.536,744,1.353,745,1.353,746,1.353,747,1.353,748,1.353,749,1.279,750,2.081,751,1.213,752,1.098,753,1.353,754,1.867,755,2.399,756,1.353,757,1.353,758,2.908,759,1.353,760,1.353,761,3.074,762,1.353,763,1.353,764,1.353,765,1.353,766,1.353,767,1.353,768,1.353,769,1.353,770,1.353,771,1.353,772,1.213,773,2.081,774,2.081,775,1.968,776,2.081,777,1.968,778,2.768,779,1.968,780,3.212,781,2.908,782,1.153,783,2.848,784,2.848,785,1.353,786,1.353,787,1.153,788,1.353,789,1.353,790,1.353,791,1.774,792,2.536,793,2.536,794,2.536,795,3.074,796,3.382,797,3.382,798,2.081,799,2.081,800,2.081,801,2.081,802,2.693,803,1.353,804,1.353,805,2.106,806,1.353,807,1.353,808,2.693,809,1.353,810,1.353,811,2.081,812,2.081,813,1.353,814,1.968,815,2.081,816,1.353,817,1.968,818,2.081,819,1.353,820,2.205,821,1.353,822,2.205,823,1.353,824,2.554,825,1.353,1120,3.324,1121,3.324,1122,3.324,1123,3.842,1124,2.498,1125,2.498,1126,2.498,1127,2.498,1128,2.498,1129,2.498,1130,2.498,1131,2.498,1132,2.498,1133,2.498,1134,2.498,1135,2.498,1136,2.498,1137,2.498,1138,2.498,1139,2.16]],["title/classes/CurveTable.html",[24,0.106,1140,2.751]],["body/classes/CurveTable.html",[0,0.595,3,0.241,4,0.261,9,0.138,14,1.137,15,1.091,16,1.137,18,1.137,20,0.71,21,0.744,22,0.016,23,0.241,24,0.156,32,0.68,39,1.381,48,1.235,66,0.589,75,0.011,76,0.011,81,0.59,82,1.116,84,0.924,87,1.183,89,0.964,90,0.629,91,0.924,92,1.502,93,1.342,94,1.287,100,1.663,191,1.143,194,1.321,199,1.74,204,1.89,210,1.069,211,1.412,222,0.998,255,1.813,292,1.475,423,2.11,443,1.702,445,0.56,535,4.23,538,5.125,543,4.051,548,2.185,557,3.091,559,2.394,560,2.224,566,2.66,577,3.082,591,2.352,752,2.978,805,2.712,862,4.525,883,4.43,986,5.224,989,3.082,1140,4.525,1141,3.37,1142,4.187,1143,5.515,1144,5.256,1145,5.256,1146,5.708,1147,5.515,1148,4.343,1149,4.343,1150,4.343,1151,4.447,1152,4.343,1153,3.756,1154,3.756,1155,3.756,1156,3.756,1157,3.37,1158,3.756,1159,3.756,1160,4.937,1161,3.756,1162,4.937,1163,4.937,1164,3.756,1165,4.937,1166,3.756,1167,4.051,1168,3.756,1169,3.756,1170,3.756,1171,3.756,1172,3.756,1173,3.756,1174,3.756,1175,3.756,1176,3.756]],["title/components/CurveTableComponent.html",[0,0.404,48,1.102]],["body/components/CurveTableComponent.html",[0,0.599,1,1.01,2,1.673,3,0.197,4,0.228,5,1.245,6,1.245,7,1.245,8,1.245,9,0.113,12,1.193,13,1.245,14,2.036,15,1.954,16,1.304,18,1.304,20,0.668,21,0.609,22,0.016,23,0.197,24,0.136,26,0.856,27,1.746,28,1.746,29,1.245,30,2.186,31,1.245,32,0.9,33,1.245,34,1.052,35,1.245,36,1.01,37,1.245,38,1.01,39,1.539,40,1.245,41,1.052,42,0.694,43,1.746,44,1.01,45,1.245,46,1.052,47,1.245,48,1.772,49,1.245,50,1.01,51,1.245,52,1.01,53,1.097,54,0.93,55,1.245,56,1.052,57,1.144,58,1.052,59,1.245,60,1.01,61,1.245,62,1.01,63,1.245,64,1.052,65,1.604,66,0.675,67,1.746,68,1.052,69,1.052,70,1.01,71,1.01,72,1.144,73,1.245,74,1.245,75,0.01,76,0.01,81,0.532,82,0.973,84,0.756,87,1.187,89,0.788,90,0.723,91,0.756,92,1.338,93,2.027,94,1.944,100,1.359,191,0.636,194,1.152,199,1.569,204,1.052,210,0.932,211,0.973,222,0.9,255,1.635,280,2.175,286,1.819,292,1.676,443,1.566,445,0.458,535,4.217,538,4.656,543,2.52,548,1.906,557,3.113,559,2.613,560,1.819,566,2.175,577,2.52,591,3.374,676,2.55,752,2.74,805,1.422,852,2.331,862,4.956,883,3.863,986,5.208,989,2.52,1140,4.079,1141,2.755,1142,3.269,1143,3.071,1144,2.755,1145,2.755,1147,4.306,1151,3.775,1153,3.071,1154,4.306,1155,4.972,1156,4.972,1157,4.461,1158,4.306,1159,4.306,1160,4.306,1161,3.071,1162,4.306,1163,4.306,1164,3.071,1165,4.306,1166,3.071,1167,3.533,1168,4.972,1169,3.071,1170,4.972,1171,3.071,1172,4.972,1173,3.071,1174,3.071,1175,3.071,1176,3.071,1177,3.55,1178,4.978,1179,3.55,1180,3.55,1181,3.55,1182,3.55,1183,3.55,1184,3.55,1185,3.55,1186,3.55,1187,3.55]],["title/classes/DefaultAppearanceSettings.html",[24,0.106,238,1.704]],["body/classes/DefaultAppearanceSettings.html",[3,0.202,4,0.167,9,0.116,22,0.017,23,0.417,24,0.16,75,0.01,76,0.01,81,0.469,82,0.991,87,1.086,90,0.73,92,1.546,93,2.28,94,1.964,194,1.686,204,1.503,211,0.991,217,3.167,218,2.832,219,2.832,225,2.463,228,2.463,231,2.463,234,2.463,237,1.771,238,2.23,270,3.158,292,1.74,315,3.485,318,2.832,323,2.832,327,2.832,340,1.603,369,3.158,370,3.588,371,1.975,423,1.771,424,1.868,425,3.026,426,2.095,427,2.095,431,2.914,432,2.914,433,2.914,434,2.914,437,2.095,439,2.832,440,2.095,442,2.095,443,0.916,445,0.813,446,3.76,447,4.449,448,2.536,449,3.414,450,1.975,451,3.588,452,1.975,453,2.095,454,2.095,455,1.975,456,1.975,457,1.868,458,3.414,459,1.975,460,1.975,461,3.158,462,2.692,463,2.987,464,3.158,465,1.975,466,2.747,467,2.747,468,2.095,469,2.095,470,2.463,471,2.747,472,2.095,473,2.095,474,3.351,475,2.095,476,2.095,477,2.095,478,2.095,479,2.095,480,3.351,481,2.095,482,2.095,483,2.095,484,3.351,485,2.095,486,2.095,487,2.095,488,2.095,489,2.095,490,2.095,491,2.095,492,2.914,493,2.095,1188,3.646,1189,3.646,1190,3.646,1191,3.646,1192,3.646]],["title/components/HomeComponent.html",[0,0.404,50,1.102]],["body/components/HomeComponent.html",[0,0.704,1,1.396,2,2.076,3,0.272,4,0.225,5,1.722,6,1.722,7,1.722,8,1.722,9,0.156,11,1.798,12,2.271,13,1.722,14,2.103,15,2.018,16,1.617,18,1.617,20,0.483,21,0.842,22,0.016,23,0.272,24,0.135,25,4.383,26,1.184,27,2.167,28,2.167,29,1.722,30,2.488,31,1.722,32,0.967,33,1.722,34,1.455,35,1.722,36,1.396,37,1.722,38,1.396,39,1.447,40,1.722,41,1.455,42,0.96,43,2.167,44,1.396,45,1.722,46,1.455,47,1.722,48,1.396,49,1.722,50,2.017,51,1.722,52,1.396,53,1.517,54,1.286,55,1.722,56,1.455,57,1.582,58,1.455,59,1.722,60,1.396,61,1.722,62,1.396,63,1.722,64,1.455,65,1.99,66,0.666,67,2.167,68,1.455,69,1.455,70,1.396,71,1.396,72,1.582,73,1.722,74,1.722,75,0.012,76,0.012,98,4.383,171,6.453,1193,4.247,1194,6.758,1195,6.176]],["title/injectables/HonorCodeChartService.html",[288,1.79,833,2.751]],["body/injectables/HonorCodeChartService.html",[3,0.206,4,0.17,9,0.164,11,1.882,20,0.695,21,0.637,22,0.016,23,0.206,24,0.102,32,1.044,42,1.43,54,2.003,75,0.01,76,0.01,78,2.439,81,0.344,84,1.253,87,1.13,89,1.48,90,0.779,91,1.419,92,1.626,144,3.622,168,2.797,190,4.443,191,1.195,194,1.362,210,0.962,211,1.348,222,1.08,288,2.372,289,2.275,292,1.596,342,2.636,521,2.782,558,2.882,607,3.373,623,2.066,833,3.645,888,3.373,900,5.353,922,2.882,993,3.986,1196,4.643,1197,3.213,1198,5.136,1199,5.136,1200,5.136,1201,5.136,1202,5.136,1203,5.136,1204,5.136,1205,3.714,1206,5.136,1207,6.13,1208,3.714,1209,7.406,1210,5.136,1211,3.714,1212,5.136,1213,3.714,1214,4.443,1215,5.093,1216,6.353,1217,5.136,1218,5.888,1219,5.136,1220,5.136,1221,5.136,1222,3.714,1223,5.136,1224,3.714,1225,2.882,1226,2.882,1227,2.882,1228,3.986,1229,3.714,1230,3.714,1231,3.213,1232,3.714,1233,3.714,1234,3.714,1235,3.714,1236,3.714,1237,3.714,1238,3.714,1239,3.714,1240,3.714,1241,3.714,1242,5.136,1243,3.714,1244,5.136,1245,3.714,1246,5.136,1247,3.714,1248,3.714,1249,3.714,1250,3.714,1251,3.714,1252,3.986,1253,3.714,1254,3.714,1255,3.714,1256,3.714,1257,3.714,1258,3.213,1259,3.714,1260,5.136,1261,5.136,1262,5.136,1263,4.443,1264,5.136,1265,3.714,1266,3.714,1267,3.714,1268,3.714]],["title/components/HonorCodePopupComponent.html",[0,0.404,52,1.102]],["body/components/HonorCodePopupComponent.html",[0,0.619,1,1.074,2,1.746,3,0.21,4,0.173,5,1.325,6,1.325,7,1.325,8,1.325,9,0.12,11,1.383,12,1.269,13,1.325,14,2.05,15,1.967,16,1.361,18,1.361,20,0.584,21,0.647,22,0.016,23,0.21,24,0.103,26,0.911,27,1.823,28,1.823,29,1.325,30,2.244,31,1.325,32,1.05,33,1.325,34,1.119,35,1.325,36,1.074,37,1.325,38,1.074,39,1.305,40,1.325,41,1.119,42,0.738,43,1.823,44,1.074,45,1.325,46,1.119,47,1.325,48,1.074,49,1.325,50,1.074,51,1.325,52,1.819,53,2.296,54,2.067,55,1.325,56,1.119,57,1.217,58,1.119,59,1.325,60,1.074,61,1.325,62,1.074,63,1.325,64,1.119,65,1.674,66,0.512,67,1.823,68,1.119,69,1.988,70,1.074,71,1.074,72,1.217,73,1.325,74,1.325,75,0.01,76,0.01,81,0.349,82,1.016,84,0.804,87,1.099,89,0.838,90,0.572,91,0.804,100,1.446,116,3.182,144,3.551,150,1.383,156,2.045,191,1.064,199,1.418,200,3.638,209,4.61,210,0.973,211,0.738,213,3.919,222,1.002,241,3.266,257,3.266,283,2.045,284,3.677,285,2.48,286,1.934,292,1.604,612,2.68,623,1.325,676,1.934,1001,1.934,1196,4.553,1207,4.61,1269,3.266,1270,6.398,1271,4.494,1272,4.494,1273,5.196,1274,5.196,1275,5.196,1276,5.196,1277,5.94,1278,5.196,1279,6.398,1280,6.933,1281,3.776,1282,6.933,1283,7.103,1284,5.196,1285,3.776,1286,3.776,1287,3.776,1288,3.776,1289,2.931,1290,3.776,1291,3.776,1292,5.196,1293,3.776,1294,5.196,1295,4.032,1296,4.494,1297,4.494,1298,5.196,1299,4.494,1300,5.196,1301,5.196,1302,4.494,1303,4.494,1304,4.032,1305,4.494,1306,5.196,1307,3.776,1308,2.48]],["title/modules/HonorCodePopupModule.html",[102,1.303,116,2.374]],["body/modules/HonorCodePopupModule.html",[3,0.297,4,0.245,9,0.171,11,1.96,20,0.765,21,0.917,22,0.016,23,0.297,24,0.147,26,1.29,52,2.214,53,1.653,54,1.839,75,0.013,76,0.013,102,2.361,104,2.353,105,2.471,106,2.813,107,3.008,108,2.6,109,2.143,116,4.667,120,3.337,121,2.353,122,2.471,124,2.143,125,2.609,144,2.741,148,4.153,149,5.056,150,2.573,151,3.514,155,5.056,156,2.898,159,2.244,160,2.732,161,1.877,973,5.636,983,5.636,994,3.529,995,2.898,1001,2.741,1196,3.514,1289,4.153,1309,4.629,1310,4.629,1311,5.351,1312,4.629,1313,6.515,1314,4.153,1315,4.629,1316,5.351,1317,6.515]],["title/injectables/HonorCodePopupService.html",[288,1.79,831,2.374]],["body/injectables/HonorCodePopupService.html",[3,0.245,4,0.202,9,0.141,20,0.713,21,0.756,22,0.016,23,0.245,24,0.121,32,1.006,52,1.254,53,1.363,54,2.083,75,0.012,76,0.012,78,2.896,81,0.408,82,1.127,84,0.939,87,1.228,89,1.426,90,0.779,91,1.367,100,1.689,144,3.882,150,1.616,161,2.023,168,1.85,191,1.267,194,1.02,210,1.079,211,1.418,222,1.173,286,2.259,288,2.662,289,2.701,292,1.818,342,3.13,600,2.896,602,1.85,653,3.13,831,3.532,981,3.13,1196,4.976,1289,4.986,1312,3.815,1318,3.815,1319,4.986,1320,4.986,1321,6.813,1322,6.813,1323,6.813,1324,5.766,1325,5.766,1326,4.41,1327,6.813,1328,5.766,1329,4.41,1330,4.41,1331,4.41,1332,6.424,1333,5.766,1334,5.629,1335,4.41,1336,5.766,1337,5.629,1338,4.41,1339,4.986,1340,4.41,1341,4.41,1342,3.423,1343,4.41,1344,4.41,1345,5.766,1346,4.41,1347,4.41,1348,4.41,1349,4.41]],["title/components/LineFormComponent.html",[0,0.404,56,1.149]],["body/components/LineFormComponent.html",[0,0.592,1,0.989,2,1.649,3,0.193,4,0.159,5,1.22,6,1.22,7,1.22,8,1.22,9,0.111,11,1.274,12,1.169,13,1.22,14,2.044,15,1.949,16,1.285,18,1.285,20,0.64,21,0.596,22,0.016,23,0.193,24,0.095,26,0.839,27,1.721,28,1.721,29,1.22,30,2.166,31,1.22,32,0.966,33,1.22,34,1.031,35,1.22,36,0.989,37,1.22,38,0.989,39,1.328,40,1.22,41,1.031,42,0.68,43,1.721,44,1.616,45,1.22,46,1.031,47,1.22,48,0.989,49,1.22,50,0.989,51,1.22,52,0.989,53,1.074,54,0.911,55,1.22,56,1.93,57,2.284,58,1.031,59,1.22,60,0.989,61,1.22,62,0.989,63,1.22,64,1.031,65,1.581,66,0.771,67,1.721,68,1.031,69,1.031,70,0.989,71,0.989,72,1.12,73,1.22,74,1.22,75,0.01,76,0.01,81,0.322,82,0.959,84,0.74,87,1.181,89,1.089,90,0.744,91,1.044,93,1.908,94,1.93,100,1.331,150,1.274,156,1.883,161,1.721,191,1.019,199,1.339,210,0.918,222,0.966,240,2.699,255,1.395,272,3.005,277,3.482,283,2.657,284,4.074,285,2.283,286,1.781,443,1.636,462,1.606,557,3.079,559,2.589,560,1.781,564,2.715,566,2.13,570,2.13,576,2.657,591,3.344,613,2.057,628,2.851,632,2.851,635,2.851,638,2.851,641,2.283,648,2.699,649,4.917,650,4.244,675,4.244,676,1.781,715,2.265,778,3.006,787,2.265,948,2.468,978,5.671,982,5.34,998,4.244,1001,1.781,1308,3.732,1350,6.32,1351,3.482,1352,6.174,1353,6.943,1354,4.906,1355,5.684,1356,5.684,1357,6.174,1358,4.906,1359,4.906,1360,3.477,1361,3.477,1362,4.906,1363,3.477,1364,3.477,1365,4.906,1366,3.477,1367,4.906,1368,3.477,1369,5.684,1370,5.684,1371,2.699,1372,3.477,1373,3.477,1374,2.283,1375,3.477,1376,3.477,1377,3.477,1378,3.477,1379,3.477,1380,3.477,1381,3.008,1382,3.477,1383,3.477,1384,3.477,1385,3.477,1386,3.477,1387,3.477,1388,3.477,1389,2.699,1390,3.807,1391,4.906,1392,3.477,1393,3.008]],["title/components/MenubarComponent.html",[0,0.404,58,1.149]],["body/components/MenubarComponent.html",[0,0.718,1,1.161,2,1.841,3,0.343,4,0.187,5,1.432,6,1.432,7,1.432,8,1.432,9,0.13,11,1.495,12,1.372,13,1.432,14,2.067,15,1.998,16,1.434,18,1.434,20,0.697,21,0.7,22,0.016,23,0.304,24,0.15,26,0.984,27,1.921,28,1.921,29,1.432,30,2.318,31,1.432,32,0.857,33,1.432,34,1.21,35,1.432,36,1.161,37,1.432,38,1.161,39,1.348,40,1.432,41,1.21,42,0.798,43,1.921,44,1.161,45,1.432,46,1.21,47,1.432,48,1.161,49,1.432,50,1.161,51,1.432,52,1.161,53,1.261,54,1.069,55,1.432,56,1.21,57,1.315,58,2.148,59,1.432,60,1.161,61,1.432,62,1.161,63,1.432,64,1.21,65,1.765,66,0.554,67,1.921,68,1.21,69,1.21,70,1.879,71,1.558,72,2.129,73,1.432,74,1.432,75,0.011,76,0.011,81,0.378,87,0.898,90,0.45,95,4.251,97,3.887,106,1.634,109,1.634,115,2.805,124,1.634,125,2.193,129,2.68,134,2.5,135,3.167,150,1.495,151,3.597,154,3.597,159,1.711,160,2.297,161,1.921,175,3.887,187,3.355,188,4.339,191,0.731,192,3.597,210,1.025,222,0.639,272,3.355,273,3.167,277,2.896,283,2.21,445,0.707,462,1.884,716,2.297,856,3.53,861,3.53,994,2.966,995,2.21,1001,2.09,1394,3.167,1395,5.128,1396,4.689,1397,4.251,1398,3.887,1399,5.348,1400,4.738,1401,5.715,1402,5.477,1403,4.081,1404,4.738,1405,4.251,1406,4.081,1407,4.738,1408,3.887,1409,4.738,1410,3.53,1411,3.53,1412,3.53,1413,2.345,1414,4.081,1415,4.081,1416,4.081,1417,4.081,1418,4.081,1419,4.081,1420,4.081,1421,4.081]],["title/modules/MenubarModule.html",[102,1.303,1413,2.228]],["body/modules/MenubarModule.html",[0,0.709,3,0.276,4,0.228,9,0.159,11,1.825,14,1.305,15,1.71,16,1.305,18,1.305,20,0.736,21,0.854,22,0.016,23,0.346,24,0.171,26,1.201,58,2.355,70,1.773,71,1.417,72,1.605,75,0.013,76,0.013,102,1.674,104,2.19,105,2.3,106,2.725,107,2.3,108,2.42,109,2.725,115,3.835,120,3.193,121,2.19,122,2.3,124,2.496,125,2.496,129,3.271,134,3.051,135,3.866,150,1.825,151,4.093,154,3.271,159,2.089,160,2.614,161,1.747,188,3.271,192,3.271,445,0.643,994,3.376,995,2.698,1001,2.552,1394,3.866,1395,3.866,1396,4.424,1397,3.866,1398,3.535,1399,4.309,1400,4.309,1401,4.309,1404,4.309,1405,3.866,1407,4.309,1408,3.535,1409,5.392,1410,4.309,1411,4.309,1412,5.392,1413,4.452,1422,4.309,1423,4.309,1424,4.309,1425,4.981]],["title/interfaces/MyChart.html",[445,0.5,524,2.228]],["body/interfaces/MyChart.html",[3,0.295,4,0.243,9,0.169,20,0.637,22,0.016,23,0.36,32,1.015,66,0.72,75,0.013,76,0.013,81,0.491,87,1.147,89,1.439,90,0.714,91,1.38,92,1.586,191,1.162,210,1.214,222,1.19,445,0.837,494,2.777,495,2.033,496,4.121,497,2.452,498,2.452,499,2.452,500,2.452,509,2.452,511,4.593,513,4.593,516,4.593,519,3.768,520,4.597,521,2.876,522,2.671,523,4.593,524,3.726,525,4.601,526,5.397,527,3.768,528,4.601,529,5.174,539,5.609,540,5.609,1426,5.309,1427,5.309,1428,5.309]],["title/interfaces/MyColorTheme.html",[225,1.883,445,0.5]],["body/interfaces/MyColorTheme.html",[3,0.214,4,0.177,9,0.123,22,0.017,23,0.421,24,0.165,75,0.011,76,0.011,81,0.488,82,1.031,90,0.581,92,1.59,93,2.089,194,1.706,204,1.563,211,1.031,217,2.773,218,1.874,219,1.874,225,2.918,228,2.561,231,2.561,234,2.561,237,1.874,238,1.696,270,2.089,292,1.757,315,3.284,318,2.561,323,2.561,327,2.561,340,1.696,369,2.856,370,3.497,371,2.089,424,1.976,425,2.944,426,2.217,427,2.217,431,3.03,432,3.03,433,3.03,434,3.03,437,2.217,439,2.918,440,2.217,442,2.217,443,0.969,445,0.833,446,3.823,447,4.523,448,2.588,449,3.497,450,2.089,451,3.661,452,2.089,453,2.217,454,2.217,455,2.089,456,2.089,457,1.976,458,3.497,459,2.089,460,2.089,461,3.253,462,2.773,463,3.077,464,3.253,465,2.089,466,2.856,467,2.856,468,2.217,469,2.217,470,2.561,471,2.856,472,2.217,473,2.217,474,3.03,475,2.217,476,2.217,477,2.217,478,2.217,479,2.217,480,3.03,481,2.217,482,2.217,483,2.217,484,3.03,485,2.217,486,2.217,487,2.217,488,2.217,489,2.217,490,2.217,491,2.217,492,3.03,493,2.217,495,1.477]],["title/interfaces/MyData.html",[445,0.5,522,1.42]],["body/interfaces/MyData.html",[3,0.298,4,0.246,9,0.171,22,0.016,23,0.298,32,1.101,66,0.728,75,0.013,76,0.013,81,0.651,87,1.229,89,1.561,90,0.775,91,1.497,191,1.344,210,1.222,222,1.194,443,2,445,0.693,495,2.055,522,2.391,741,3.555,749,3.344,751,3.171,752,3.353,805,2.931,845,3.998,866,5.066,867,5.066,877,5.066,1429,4.644,1430,5.368,1431,5.368,1432,5.368,1433,5.368,1434,5.368]],["title/interfaces/MyFontFamily.html",[228,1.883,445,0.5]],["body/interfaces/MyFontFamily.html",[3,0.214,4,0.177,9,0.123,22,0.017,23,0.421,24,0.165,75,0.011,76,0.011,81,0.488,82,1.031,90,0.581,92,1.59,93,2.089,194,1.706,204,1.563,211,1.031,217,2.773,218,1.874,219,1.874,225,2.561,228,2.918,231,2.561,234,2.561,237,1.874,238,1.696,270,2.089,292,1.757,315,3.284,318,2.561,323,2.561,327,2.561,340,1.696,369,2.856,370,3.497,371,2.089,424,1.976,425,2.944,426,2.217,427,2.217,431,3.03,432,3.03,433,3.03,434,3.03,437,2.217,439,2.918,440,2.217,442,2.217,443,0.969,445,0.833,446,3.823,447,4.523,448,2.588,449,3.497,450,2.089,451,3.661,452,2.089,453,2.217,454,2.217,455,2.089,456,2.089,457,1.976,458,3.497,459,2.089,460,2.089,461,3.253,462,2.773,463,3.077,464,3.253,465,2.089,466,2.856,467,2.856,468,2.217,469,2.217,470,2.561,471,2.856,472,2.217,473,2.217,474,3.03,475,2.217,476,2.217,477,2.217,478,2.217,479,2.217,480,3.03,481,2.217,482,2.217,483,2.217,484,3.03,485,2.217,486,2.217,487,2.217,488,2.217,489,2.217,490,2.217,491,2.217,492,3.03,493,2.217,495,1.477]],["title/interfaces/MyFontSize.html",[231,1.883,445,0.5]],["body/interfaces/MyFontSize.html",[3,0.214,4,0.177,9,0.123,22,0.017,23,0.421,24,0.165,75,0.011,76,0.011,81,0.488,82,1.031,90,0.581,92,1.59,93,2.089,194,1.706,204,1.563,211,1.031,217,2.773,218,1.874,219,1.874,225,2.561,228,2.561,231,2.918,234,2.561,237,1.874,238,1.696,270,2.089,292,1.757,315,3.284,318,2.561,323,2.561,327,2.561,340,1.696,369,2.856,370,3.497,371,2.089,424,1.976,425,2.944,426,2.217,427,2.217,431,3.03,432,3.03,433,3.03,434,3.03,437,2.217,439,2.918,440,2.217,442,2.217,443,0.969,445,0.833,446,3.823,447,4.523,448,2.588,449,3.497,450,2.089,451,3.661,452,2.089,453,2.217,454,2.217,455,2.089,456,2.089,457,1.976,458,3.497,459,2.089,460,2.089,461,3.253,462,2.773,463,3.077,464,3.253,465,2.089,466,2.856,467,2.856,468,2.217,469,2.217,470,2.561,471,2.856,472,2.217,473,2.217,474,3.03,475,2.217,476,2.217,477,2.217,478,2.217,479,2.217,480,3.03,481,2.217,482,2.217,483,2.217,484,3.03,485,2.217,486,2.217,487,2.217,488,2.217,489,2.217,490,2.217,491,2.217,492,3.03,493,2.217,495,1.477]],["title/interfaces/MyFontStyle.html",[234,1.883,445,0.5]],["body/interfaces/MyFontStyle.html",[3,0.214,4,0.177,9,0.123,22,0.017,23,0.421,24,0.165,75,0.011,76,0.011,81,0.488,82,1.031,90,0.581,92,1.59,93,2.089,194,1.706,204,1.563,211,1.031,217,2.773,218,1.874,219,1.874,225,2.561,228,2.561,231,2.561,234,2.918,237,1.874,238,1.696,270,2.089,292,1.757,315,3.284,318,2.561,323,2.561,327,2.561,340,1.696,369,2.856,370,3.497,371,2.089,424,1.976,425,2.944,426,2.217,427,2.217,431,3.03,432,3.03,433,3.03,434,3.03,437,2.217,439,2.918,440,2.217,442,2.217,443,0.969,445,0.833,446,3.823,447,4.523,448,2.588,449,3.497,450,2.089,451,3.661,452,2.089,453,2.217,454,2.217,455,2.089,456,2.089,457,1.976,458,3.497,459,2.089,460,2.089,461,3.253,462,2.773,463,3.077,464,3.253,465,2.089,466,2.856,467,2.856,468,2.217,469,2.217,470,2.561,471,2.856,472,2.217,473,2.217,474,3.03,475,2.217,476,2.217,477,2.217,478,2.217,479,2.217,480,3.03,481,2.217,482,2.217,483,2.217,484,3.03,485,2.217,486,2.217,487,2.217,488,2.217,489,2.217,490,2.217,491,2.217,492,3.03,493,2.217,495,1.477]],["title/interfaces/MyStorage.html",[445,0.5,708,1.79]],["body/interfaces/MyStorage.html",[3,0.289,4,0.238,9,0.166,22,0.016,23,0.289,32,1.086,66,0.706,75,0.013,76,0.013,81,0.482,87,1.279,89,1.54,90,0.764,91,1.476,191,1.399,210,1.199,222,1.241,445,0.672,494,1.825,495,1.992,708,2.957,802,3.708,805,2.899,808,3.708,814,3.28,817,3.28,820,3.036,822,3.036,824,3.517,1120,5.54,1121,5.54,1122,5.54,1139,4.501,1435,4.501,1436,5.203,1437,5.203,1438,5.203,1439,5.203,1440,5.203,1441,5.203,1442,6.404,1443,5.203,1444,5.203,1445,5.203]],["title/interfaces/MyTable.html",[445,0.5,1142,2.545]],["body/interfaces/MyTable.html",[3,0.322,4,0.266,9,0.185,20,0.57,22,0.016,23,0.322,75,0.014,76,0.014,81,0.537,87,1.191,191,1.303,210,1.28,222,1.07,445,0.749,495,2.221,805,3.007,1142,4.49,1144,5.827,1145,5.827,1151,4.93,1446,6.495,1447,5.018,1448,5.801,1449,5.801,1450,5.801]],["title/components/PageNotFoundComponent.html",[0,0.404,60,1.102]],["body/components/PageNotFoundComponent.html",[0,0.7,1,1.378,2,2.059,3,0.269,4,0.222,5,1.7,6,1.7,7,1.7,8,1.7,9,0.154,11,1.775,12,2.64,13,1.7,14,2.101,15,2.016,16,1.604,18,1.604,20,0.476,21,0.831,22,0.016,23,0.269,24,0.133,25,4.348,26,1.169,27,2.149,28,2.149,29,1.7,30,2.476,31,1.7,32,0.959,33,1.7,34,1.436,35,1.7,36,1.378,37,1.7,38,1.378,39,1.44,40,1.7,41,1.436,42,0.947,43,2.149,44,1.378,45,1.7,46,1.436,47,1.7,48,1.378,49,1.7,50,1.378,51,1.7,52,1.378,53,1.497,54,1.269,55,1.7,56,1.436,57,1.561,58,1.436,59,1.7,60,2.007,61,1.7,62,1.378,63,1.7,64,1.436,65,1.974,66,0.657,67,2.149,68,1.436,69,1.436,70,1.378,71,1.378,72,1.561,73,1.7,74,1.7,75,0.012,76,0.012,141,3.439,184,5.771,1451,4.192,1452,4.192,1453,6.718,1454,6.126]],["title/components/SettingsComponent.html",[0,0.404,62,1.102]],["body/components/SettingsComponent.html",[0,0.671,1,1.262,2,1.946,3,0.246,4,0.203,5,1.557,6,1.557,7,1.557,8,1.557,9,0.142,12,1.492,13,1.557,14,2.084,15,2,16,1.516,18,1.516,20,0.714,21,0.761,22,0.016,23,0.321,24,0.159,26,1.07,27,2.031,28,2.031,29,1.557,30,2.396,31,1.557,32,0.906,33,1.557,34,1.316,35,1.557,36,1.262,37,1.557,38,1.262,39,1.393,40,1.557,41,1.316,42,0.868,43,2.031,44,1.262,45,1.557,46,1.316,47,1.557,48,1.262,49,1.557,50,1.262,51,1.557,52,1.262,53,1.372,54,1.163,55,1.557,56,1.316,57,1.43,58,1.316,59,1.557,60,1.262,61,1.557,62,2.015,63,1.557,64,1.316,65,1.866,66,0.602,67,2.031,68,1.316,69,1.316,70,1.262,71,1.262,72,1.43,73,1.557,74,1.557,75,0.012,76,0.012,81,0.411,84,1.371,87,0.949,106,1.778,117,2.719,124,1.778,125,2.319,150,2.121,159,1.862,160,2.428,161,1.557,166,3.151,175,4.11,181,4.11,191,0.796,199,1.58,200,3.948,210,1.084,213,4.184,222,0.906,279,3.84,280,3.547,281,2.915,282,3.151,283,2.404,676,2.274,852,2.915,994,3.136,995,2.404,1455,3.445,1456,5.575,1457,5.009,1458,4.439,1459,4.439,1460,4.11,1461,3.151,1462,3.151,1463,4.11,1464,2.915,1465,4.494,1466,4.494,1467,4.494,1468,4.439]],["title/modules/SettingsModule.html",[102,1.303,117,2.374]],["body/modules/SettingsModule.html",[0,0.663,3,0.286,4,0.236,9,0.164,14,1.35,15,1.296,16,1.35,18,1.35,20,0.742,21,0.884,22,0.016,23,0.353,24,0.174,26,1.243,62,2.147,75,0.013,76,0.013,84,1.097,102,1.733,104,2.267,105,2.381,106,2.767,107,2.381,108,2.505,109,2.065,117,4.851,120,3.262,121,2.267,122,2.381,124,2.55,125,2.55,150,2.333,159,2.162,160,2.671,161,1.809,166,3.659,175,3.659,199,1.407,200,3.9,213,3.158,222,0.807,994,3.449,995,2.793,1455,4.001,1456,4.46,1457,4.46,1460,4.519,1461,3.659,1462,3.659,1463,4.519,1464,3.386,1465,5.861,1466,5.861,1467,5.861,1469,4.46,1470,4.46,1471,4.46]],["title/components/SimpleDataButtonComponent.html",[0,0.404,64,1.149]],["body/components/SimpleDataButtonComponent.html",[0,0.646,1,1.169,2,1.85,3,0.228,4,0.188,5,1.442,6,1.442,7,1.442,8,1.442,9,0.131,12,1.382,13,1.442,14,2.069,15,1.985,16,1.441,18,1.441,20,0.61,21,0.705,22,0.016,23,0.305,24,0.151,26,0.991,27,1.931,28,1.931,29,1.442,30,2.325,31,1.442,32,0.862,33,1.442,34,1.218,35,1.442,36,1.169,37,1.442,38,1.169,39,1.352,40,1.442,41,1.218,42,0.803,43,1.931,44,1.169,45,1.442,46,1.218,47,1.442,48,1.169,49,1.442,50,1.169,51,1.442,52,1.169,53,1.27,54,1.076,55,1.442,56,1.218,57,1.324,58,1.218,59,1.442,60,1.169,61,1.442,62,1.169,63,1.442,64,2.107,65,2.408,66,1.079,67,1.931,68,1.218,69,1.218,70,1.169,71,1.169,72,1.324,73,1.442,74,1.442,75,0.011,76,0.011,81,0.38,84,1.32,87,1.132,90,0.453,106,1.646,109,1.646,121,2.42,124,1.646,125,2.204,150,1.506,159,1.724,160,2.308,161,2.325,191,1.112,199,1.502,200,3.8,210,1.03,213,4.059,222,1.037,255,1.169,754,2.674,822,1.724,845,2.518,948,2.917,970,2.518,976,4.355,1308,2.699,1472,4.669,1473,2.699,1474,4.403,1475,3.906,1476,5.732,1477,5.732,1478,4.761,1479,5.367,1480,5.504,1481,4.703,1482,3.556,1483,3.556,1484,4.111,1485,3.371,1486,3.19,1487,2.917,1488,3.556,1489,4.761,1490,4.271,1491,2.917]],["title/modules/SimpleDataButtonModule.html",[102,1.303,970,2.374]],["body/modules/SimpleDataButtonModule.html",[0,0.666,3,0.288,4,0.238,9,0.165,14,1.358,15,1.304,16,1.358,18,1.358,20,0.681,21,0.889,22,0.016,23,0.355,24,0.175,26,1.251,64,2.349,65,2.232,66,1.007,75,0.013,76,0.013,84,1.104,102,1.744,104,2.281,105,2.395,106,2.775,107,2.395,108,2.52,109,2.775,120,3.274,121,2.281,122,2.395,124,2.078,125,2.56,150,1.9,159,2.175,160,2.681,161,2.242,199,1.416,200,3.915,213,3.177,222,0.812,255,1.475,822,2.175,845,3.177,970,4.694,976,3.177,1472,3.406,1473,3.406,1474,3.681,1475,3.681,1476,4.487,1477,4.487,1479,4.487,1481,4.917,1485,3.915,1486,4.026,1487,3.681,1488,4.487,1489,5.529,1492,4.487,1493,4.487,1494,4.487]],["title/components/SimpleGraphButtonComponent.html",[0,0.404,68,1.149]],["body/components/SimpleGraphButtonComponent.html",[0,0.615,1,1.062,2,1.733,3,0.207,4,0.171,5,1.31,6,1.31,7,1.31,8,1.31,9,0.119,12,1.255,13,1.31,14,2.048,15,1.965,16,1.35,18,1.35,20,0.679,21,0.64,22,0.016,23,0.286,24,0.141,26,0.9,27,1.809,28,1.809,29,1.31,30,2.234,31,1.31,32,0.924,33,1.31,34,1.107,35,1.31,36,1.062,37,1.31,38,1.062,39,1.299,40,1.31,41,1.107,42,0.73,43,1.809,44,1.062,45,1.31,46,1.107,47,1.31,48,1.062,49,1.31,50,1.062,51,1.31,52,1.062,53,1.593,54,1.546,55,1.31,56,1.107,57,1.203,58,1.107,59,1.31,60,1.062,61,1.31,62,1.062,63,1.31,64,1.107,65,2.36,66,0.507,67,1.809,68,2.048,69,2.364,70,1.062,71,1.062,72,1.203,73,1.31,74,1.31,75,0.01,76,0.01,81,0.477,82,1.008,84,0.795,87,1.16,89,0.829,90,0.702,91,0.795,100,1.43,106,1.496,109,1.496,121,2.267,124,1.496,125,2.065,144,1.913,150,1.368,159,1.566,160,2.162,161,2.234,191,1.058,199,1.407,210,0.965,211,0.73,222,0.997,255,1.062,283,2.023,550,4.002,557,3.198,591,3.449,609,2.452,611,2.65,820,1.566,831,3.901,841,2.898,847,5.186,948,3.659,971,2.287,976,4.42,981,2.65,1214,4.46,1308,2.452,1319,4.583,1320,4.583,1334,4.583,1337,4.583,1339,4.002,1342,2.898,1371,4.002,1374,2.452,1389,2.898,1390,2.898,1472,4.739,1473,2.452,1474,4.191,1475,3.659,1478,4.46,1481,4.519,1482,3.23,1483,4.46,1485,3.158,1487,2.65,1491,2.65,1495,5.508,1496,5.108,1497,3.734,1498,4.46,1499,3.734,1500,3.734,1501,3.734,1502,3.734,1503,3.734,1504,3.734,1505,2.898,1506,4.46,1507,3.23,1508,3.23,1509,3.23,1510,3.23,1511,3.23,1512,4.46,1513,3.734,1514,2.65,1515,3.734,1516,2.898,1517,3.734]],["title/modules/SimpleGraphButtonModule.html",[102,1.303,971,2.374]],["body/modules/SimpleGraphButtonModule.html",[0,0.649,3,0.276,4,0.228,9,0.159,14,1.303,15,1.25,16,1.303,18,1.303,20,0.736,21,0.853,22,0.016,23,0.346,24,0.171,26,1.199,53,1.537,54,1.631,65,2.19,68,2.336,69,2.175,75,0.013,76,0.013,100,1.904,102,1.672,104,2.187,105,2.297,106,2.723,107,2.297,108,2.416,109,2.723,120,3.19,121,2.187,122,2.297,124,1.992,125,2.494,144,2.548,150,1.822,159,2.086,160,2.612,161,2.185,199,1.357,211,0.972,222,0.779,255,1.415,557,3.373,591,2.694,820,2.086,831,3.814,841,3.86,847,4.833,971,4.652,976,3.047,981,3.53,1319,3.86,1320,3.86,1334,4.833,1337,4.833,1339,3.86,1342,3.86,1374,3.266,1472,3.266,1473,3.266,1474,3.53,1475,3.53,1481,4.825,1485,3.814,1487,3.53,1495,4.303,1496,4.303,1498,4.303,1505,3.86,1506,5.387,1507,4.303,1508,4.303,1509,4.303,1510,4.303,1511,4.303,1512,5.387,1518,4.303,1519,4.303,1520,4.303]],["title/components/ToolsNavbarComponent.html",[0,0.404,70,1.102]],["body/components/ToolsNavbarComponent.html",[0,0.608,1,1.039,2,1.707,3,0.203,4,0.167,5,1.282,6,1.282,7,1.282,8,1.282,9,0.116,11,1.339,12,1.228,13,1.282,14,2.043,15,1.966,16,1.33,18,1.33,20,0.706,21,0.626,22,0.016,23,0.282,24,0.139,26,0.881,27,1.782,28,1.782,29,1.282,30,2.213,31,1.282,32,0.795,33,1.282,34,1.083,35,1.282,36,1.039,37,1.282,38,1.039,39,1.4,40,1.282,41,1.083,42,0.714,43,1.782,44,1.039,45,1.282,46,1.083,47,1.282,48,1.039,49,1.282,50,1.039,51,1.282,52,1.039,53,1.129,54,0.957,55,1.282,56,1.083,57,1.177,58,1.083,59,1.282,60,1.039,61,1.282,62,1.039,63,1.282,64,1.083,65,1.636,66,0.496,67,1.782,68,1.083,69,1.083,70,2.002,71,2.14,72,1.881,73,1.282,74,1.282,75,0.01,76,0.01,81,0.338,82,0.993,87,0.957,90,0.403,96,3.335,106,1.463,109,1.463,115,2.601,118,2.238,124,1.463,125,2.034,129,2.399,134,3.864,150,1.861,154,3.335,159,1.532,160,2.13,161,1.282,188,4.143,191,0.91,210,0.951,222,0.795,272,3.111,275,3.161,277,2.593,280,3.111,281,2.399,282,4.143,283,2.751,286,2.601,462,1.687,571,3.604,607,3.335,611,2.593,612,2.593,623,2.213,676,2.601,852,2.399,854,4.393,860,2.836,917,4.393,918,4.393,964,3.111,994,2.751,995,1.979,1001,2.99,1295,4.896,1304,3.942,1308,2.399,1351,3.604,1371,2.836,1374,2.399,1389,2.836,1390,3.942,1396,4.87,1398,3.604,1408,4.87,1413,2.919,1460,3.604,1461,2.593,1462,2.593,1463,3.604,1464,3.833,1491,2.593,1516,2.836,1521,4.896,1522,2.836,1523,5.049,1524,4.393,1525,4.393,1526,4.393,1527,4.393,1528,4.393,1529,5.049,1530,4.393,1531,6.089,1532,6.209,1533,3.654,1534,3.654,1535,5.049,1536,4.393,1537,3.654,1538,4.393,1539,3.161,1540,3.161,1541,3.161,1542,3.161,1543,3.161,1544,5.079,1545,3.654,1546,3.654,1547,3.161,1548,3.654,1549,3.654]],["title/modules/ToolsNavbarModule.html",[102,1.303,118,2.374]],["body/modules/ToolsNavbarModule.html",[0,0.62,3,0.257,4,0.212,9,0.148,11,1.695,14,1.212,15,1.495,16,1.212,18,1.212,20,0.744,21,0.793,22,0.016,23,0.33,24,0.163,26,1.116,70,2.24,71,2.041,72,1.491,75,0.012,76,0.012,96,3.039,102,1.555,104,2.035,105,2.137,106,2.633,107,2.137,108,2.248,109,2.633,115,3.763,118,4.804,120,3.047,121,2.035,122,2.137,124,2.382,125,2.382,129,3.039,134,2.834,150,2.179,159,1.941,160,2.495,161,1.623,571,3.284,964,4.5,994,3.222,995,2.506,1001,3.367,1295,3.591,1304,3.591,1351,3.284,1374,3.039,1396,4.666,1398,3.284,1408,4.666,1413,4.222,1460,4.222,1461,3.284,1462,3.284,1463,4.222,1464,3.039,1521,3.591,1522,3.591,1523,4.003,1524,4.003,1525,4.003,1526,4.003,1527,4.003,1528,4.003,1529,4.003,1530,4.003,1531,5.687,1532,5.687,1535,5.146,1536,4.003,1538,4.003,1539,4.003,1540,4.003,1541,4.003,1542,4.003,1543,5.146,1550,4.003,1551,4.003,1552,4.003,1553,4.627]],["title/coverage.html",[1554,4.105]],["body/coverage.html",[0,0.809,1,1.063,9,0.119,10,3.234,22,0.016,24,0.201,34,1.108,36,1.063,38,1.063,41,1.108,42,1.009,44,1.063,46,1.108,48,1.063,50,1.063,52,1.063,54,1.81,56,1.108,58,1.108,60,1.063,62,1.063,64,1.108,66,0.7,68,1.108,69,1.529,70,1.063,75,0.01,76,0.01,77,3.234,86,1.915,90,0.412,119,2.29,134,2.29,141,2.653,144,3.027,162,2.901,163,2.901,192,4.652,198,3.234,225,1.816,228,1.816,231,1.816,234,1.816,237,1.816,238,1.644,255,1.063,288,3.087,290,3.234,340,1.644,374,3.234,375,3.234,424,3.628,445,0.982,470,1.816,494,1.311,496,4.005,522,1.37,524,2.148,534,2.653,535,3.972,536,3.662,537,4.193,548,1.431,559,1.568,563,1.568,565,1.568,623,2.821,647,2.901,648,4.005,676,3.836,677,3.506,693,1.816,708,1.726,780,1.816,782,1.726,791,1.726,826,3.234,831,2.29,833,2.653,862,2.653,863,2.653,884,2.901,976,3.16,978,2.901,986,3.662,1002,3.234,1140,2.653,1141,4.005,1142,2.455,1193,3.234,1196,3.88,1197,3.234,1225,2.901,1226,2.901,1227,2.901,1228,2.901,1269,3.234,1318,3.234,1350,3.234,1394,2.901,1429,3.234,1435,3.234,1446,3.234,1447,3.234,1451,3.234,1452,3.234,1455,2.901,1472,3.388,1473,3.388,1514,2.653,1521,2.901,1522,2.901,1554,2.901,1555,3.738,1556,3.738,1557,3.738,1558,3.234,1559,7.326,1560,3.738,1561,3.738,1562,3.738,1563,6.371,1564,3.738,1565,3.738,1566,6.685,1567,5.909,1568,7.084,1569,3.738,1570,3.738,1571,3.738,1572,5.16,1573,5.16,1574,3.738,1575,3.738,1576,3.738,1577,3.234,1578,3.738,1579,3.738,1580,3.738,1581,3.738,1582,5.16,1583,5.16,1584,5.979,1585,3.234,1586,5.909,1587,3.234,1588,3.234,1589,3.738,1590,3.234,1591,3.738,1592,3.234,1593,5.16,1594,4.005,1595,3.234,1596,3.738]],["title/dependencies.html",[105,2.152,1597,2.8]],["body/dependencies.html",[9,0.166,21,0.893,22,0.016,75,0.013,76,0.013,105,2.406,107,3.206,127,4.975,128,4.975,156,2.823,166,3.698,521,2.823,576,2.823,653,3.698,888,4.756,922,4.975,989,3.698,992,4.508,993,4.045,1000,4.045,1151,3.422,1231,5.545,1314,4.045,1315,4.508,1381,4.508,1598,5.211,1599,7.896,1600,5.211,1601,5.211,1602,5.211,1603,5.211,1604,5.211,1605,5.211,1606,5.211,1607,5.211,1608,6.41,1609,5.211,1610,5.211,1611,5.211,1612,5.211,1613,6.41,1614,5.211,1615,5.211,1616,5.211,1617,5.211,1618,5.211,1619,5.211,1620,5.211,1621,6.41,1622,5.211,1623,5.211,1624,5.211,1625,5.211,1626,5.211,1627,5.211,1628,5.211,1629,5.211,1630,5.211,1631,5.211,1632,5.211,1633,5.211,1634,5.211,1635,5.211,1636,5.211]],["title/miscellaneous/enumerations.html",[1637,1.753,1638,4.032]],["body/miscellaneous/enumerations.html",[22,0.016,75,0.013,76,0.013,81,0.479,93,2.139,94,2.404,217,2.949,315,3.102,318,3.102,323,3.102,327,3.102,424,2.653,449,3.75,450,2.805,451,3.75,452,2.805,455,2.805,456,2.805,457,2.653,458,3.459,459,2.805,460,2.805,461,3.459,462,2.949,463,3.271,464,3.459,465,2.805,466,2.805,467,2.805,564,2.808,606,2.678,677,2.516,710,3.271,711,3.271,712,3.271,713,3.271,714,3.271,715,2.392,716,2.172,717,2.392,718,2.516,719,2.516,720,2.516,721,2.653,722,2.392,1637,2.805,1638,4.48,1639,7.424,1640,6.386]],["title/miscellaneous/functions.html",[1637,1.753,1641,4.032]],["body/miscellaneous/functions.html",[9,0.14,11,2.587,22,0.016,32,1.155,42,1.443,66,0.923,75,0.012,76,0.012,81,0.532,89,1.608,90,0.798,91,1.542,92,1.632,93,1.357,94,1.302,98,3.118,162,3.41,163,4.464,185,3.118,186,3.118,187,3.523,188,4.211,189,4.464,191,1.219,192,2.885,193,3.8,443,1.882,446,2.794,524,3.305,570,4.638,606,2.689,613,2.689,623,2.249,626,3.41,716,1.842,717,2.029,1052,3.41,1157,4.464,1167,3.118,1207,4.977,1215,3.8,1225,4.464,1226,4.464,1227,4.464,1228,5.28,1252,5.28,1258,3.8,1263,3.8,1490,3.41,1514,3.118,1558,4.975,1584,3.8,1585,4.975,1587,4.975,1637,2.379,1641,3.8,1642,7.245,1643,4.393,1644,4.393,1645,4.393,1646,4.393,1647,4.393,1648,3.8,1649,4.393,1650,4.393,1651,4.393,1652,4.393,1653,5.751,1654,6.412,1655,4.393,1656,4.393,1657,4.393,1658,4.393,1659,4.393,1660,3.8,1661,4.393,1662,4.393,1663,3.8,1664,4.393,1665,4.393,1666,3.8,1667,4.393,1668,3.8,1669,4.393,1670,4.393,1671,3.8,1672,3.8,1673,4.393,1674,4.393,1675,4.393,1676,5.751,1677,5.751,1678,5.751,1679,4.393,1680,7.061,1681,3.8,1682,6.412,1683,3.8,1684,3.8,1685,4.393,1686,4.393,1687,4.393,1688,4.393,1689,4.393,1690,4.393]],["title/index.html",[81,0.3,1691,2.8,1692,2.8]],["body/index.html",[4,0.236,9,0.165,12,1.736,22,0.013,66,0.701,71,1.813,75,0.013,76,0.013,95,5.366,96,4.54,97,4.524,107,2.384,122,2.384,170,4.467,185,4.524,186,3.665,187,3.163,446,2.508,521,2.797,838,4.008,1000,4.947,1075,4.467,1076,4.008,1151,3.391,1314,4.008,1485,3.163,1594,4.008,1693,6.374,1694,5.164,1695,5.514,1696,4.467,1697,5.514,1698,5.164,1699,5.164,1700,5.164,1701,5.164,1702,5.164,1703,5.164,1704,5.164,1705,5.164,1706,5.514,1707,4.467,1708,5.164,1709,5.164,1710,4.467,1711,6.374,1712,5.164,1713,5.164,1714,5.164,1715,5.164,1716,4.467,1717,6.374,1718,5.164,1719,4.467,1720,5.164,1721,5.164,1722,5.164,1723,4.467,1724,5.164,1725,5.164,1726,4.467,1727,5.164,1728,5.164,1729,5.164,1730,4.467,1731,4.467,1732,4.467,1733,4.467,1734,6.914,1735,5.164,1736,6.374,1737,4.467,1738,5.164,1739,5.164,1740,6.374,1741,5.514,1742,6.743,1743,7.22,1744,5.164,1745,4.467,1746,5.164,1747,6.374,1748,4.467,1749,5.164,1750,6.374,1751,4.467,1752,5.164,1753,5.164,1754,4.467,1755,4.467,1756,5.164,1757,5.164]],["title/license.html",[1691,2.8,1692,2.8,1758,2.8]],["body/license.html",[0,0.343,4,0.323,9,0.055,20,0.095,22,0.003,24,0.026,25,3.611,54,1.781,57,0.311,66,0.319,71,0.274,75,0.005,76,0.003,87,0.158,90,0.19,122,0.445,179,0.834,184,0.749,185,0.684,186,2.601,189,4.902,194,0.223,210,0.181,211,0.189,222,0.151,255,1.133,273,0.749,284,2.825,292,1.476,439,0.84,443,0.434,445,0.514,446,0.469,457,0.494,463,0.494,471,0.522,495,0.899,570,3.74,574,0.749,576,0.936,609,1.135,625,0.445,715,1.692,716,1.382,717,0.445,718,1.601,719,0.84,720,1.601,722,1.085,758,0.886,772,1.78,838,0.749,857,0.834,860,0.749,902,0.834,921,0.834,1001,0.494,1052,3.307,1059,0.834,1076,0.749,1167,0.684,1252,2.222,1271,0.834,1272,0.834,1296,2.477,1297,0.834,1299,0.834,1302,1.495,1303,0.834,1305,0.834,1351,1.227,1393,3.17,1395,0.749,1397,2.222,1405,2.222,1464,1.135,1485,1.439,1490,2.222,1491,1.667,1514,1.667,1516,0.749,1547,0.834,1554,1.342,1577,2.032,1588,0.834,1590,1.495,1648,4.773,1660,3.17,1663,0.834,1666,0.834,1668,1.495,1671,0.834,1672,0.834,1681,0.834,1683,2.032,1684,1.495,1695,1.495,1696,3.17,1697,4.661,1706,0.834,1707,2.851,1710,2.032,1716,1.495,1719,4.538,1723,0.834,1726,6.137,1730,2.032,1731,2.477,1732,1.495,1733,3.445,1737,2.477,1741,0.834,1742,3.686,1748,0.834,1751,1.495,1754,0.834,1755,1.495,1758,6.7,1759,5.94,1760,6.251,1761,5.517,1762,0.965,1763,0.965,1764,2.349,1765,6.637,1766,4.261,1767,6.026,1768,6.491,1769,3.664,1770,0.965,1771,0.965,1772,1.729,1773,3.295,1774,6.378,1775,3.295,1776,2.349,1777,5.388,1778,2.349,1779,0.965,1780,2.349,1781,0.965,1782,0.965,1783,1.729,1784,3.664,1785,0.965,1786,0.965,1787,0.965,1788,4.261,1789,1.729,1790,3.295,1791,0.965,1792,0.965,1793,5.388,1794,7.183,1795,2.349,1796,2.349,1797,4.505,1798,1.729,1799,7.706,1800,1.729,1801,3.983,1802,5.388,1803,3.664,1804,0.965,1805,0.965,1806,2.863,1807,4.261,1808,1.729,1809,4.261,1810,2.349,1811,0.965,1812,1.729,1813,0.965,1814,2.349,1815,5.94,1816,3.295,1817,1.729,1818,2.863,1819,0.965,1820,0.965,1821,1.729,1822,2.863,1823,2.863,1824,1.729,1825,5.089,1826,1.729,1827,3.295,1828,6.106,1829,3.295,1830,1.729,1831,2.863,1832,0.965,1833,3.983,1834,3.295,1835,0.965,1836,4.261,1837,3.664,1838,6.722,1839,2.349,1840,3.983,1841,0.965,1842,0.965,1843,4.261,1844,1.729,1845,4.915,1846,4.722,1847,3.295,1848,1.729,1849,0.965,1850,0.965,1851,5.518,1852,1.729,1853,0.965,1854,0.965,1855,5.246,1856,1.729,1857,0.965,1858,2.349,1859,0.965,1860,0.965,1861,1.729,1862,0.965,1863,0.965,1864,3.664,1865,2.863,1866,0.965,1867,0.965,1868,0.965,1869,0.965,1870,0.965,1871,0.965,1872,1.729,1873,0.965,1874,0.965,1875,1.729,1876,0.965,1877,2.349,1878,1.729,1879,0.965,1880,0.965,1881,1.729,1882,1.729,1883,5.388,1884,0.965,1885,1.729,1886,1.729,1887,0.965,1888,0.965,1889,1.729,1890,2.349,1891,1.729,1892,2.349,1893,1.729,1894,0.965,1895,0.965,1896,3.664,1897,0.965,1898,0.965,1899,0.965,1900,3.295,1901,0.965,1902,0.965,1903,2.863,1904,0.965,1905,0.965,1906,1.729,1907,2.349,1908,0.965,1909,5.089,1910,0.965,1911,4.505,1912,0.965,1913,5.388,1914,2.863,1915,3.295,1916,3.664,1917,0.965,1918,2.349,1919,5.846,1920,1.729,1921,0.965,1922,0.965,1923,0.965,1924,2.349,1925,4.722,1926,0.965,1927,0.965,1928,1.729,1929,1.729,1930,0.965,1931,4.722,1932,0.965,1933,2.863,1934,4.261,1935,0.965,1936,2.349,1937,2.349,1938,1.729,1939,7.019,1940,2.349,1941,4.505,1942,2.863,1943,3.983,1944,1.729,1945,0.965,1946,1.729,1947,2.349,1948,4.505,1949,4.722,1950,2.863,1951,0.965,1952,1.729,1953,1.729,1954,2.863,1955,2.863,1956,3.897,1957,0.965,1958,2.349,1959,0.965,1960,6.436,1961,1.729,1962,0.965,1963,4.261,1964,0.965,1965,2.349,1966,4.261,1967,0.965,1968,5.518,1969,2.863,1970,1.729,1971,4.261,1972,4.915,1973,3.664,1974,0.965,1975,0.965,1976,0.965,1977,4.261,1978,0.965,1979,1.729,1980,5.246,1981,0.965,1982,2.349,1983,2.349,1984,0.965,1985,0.965,1986,0.965,1987,2.349,1988,2.349,1989,0.965,1990,0.965,1991,0.965,1992,0.965,1993,1.729,1994,4.722,1995,0.965,1996,0.965,1997,0.965,1998,3.295,1999,2.349,2000,2.349,2001,3.664,2002,2.349,2003,2.349,2004,0.965,2005,3.295,2006,0.965,2007,0.965,2008,1.729,2009,0.965,2010,2.349,2011,0.965,2012,2.349,2013,0.965,2014,0.965,2015,0.965,2016,1.729,2017,0.965,2018,6.251,2019,4.261,2020,0.965,2021,3.664,2022,1.729,2023,0.965,2024,1.729,2025,1.729,2026,2.863,2027,0.965,2028,0.965,2029,0.965,2030,1.729,2031,2.349,2032,3.295,2033,0.965,2034,1.729,2035,3.664,2036,0.965,2037,2.863,2038,0.965,2039,4.722,2040,3.983,2041,0.965,2042,3.295,2043,0.965,2044,1.729,2045,0.965,2046,0.965,2047,2.349,2048,0.965,2049,0.965,2050,0.965,2051,2.349,2052,0.965,2053,0.965,2054,1.729,2055,1.729,2056,3.295,2057,1.729,2058,0.965,2059,1.729,2060,0.965,2061,0.965,2062,0.965,2063,0.965,2064,0.965,2065,0.965,2066,2.349,2067,0.965,2068,0.965,2069,5.518,2070,0.965,2071,0.965,2072,0.965,2073,3.295,2074,3.295,2075,0.965,2076,0.965,2077,2.349,2078,0.965,2079,0.965,2080,2.863,2081,0.965,2082,1.729,2083,0.965,2084,0.965,2085,0.965,2086,0.965,2087,0.965,2088,0.965,2089,1.729,2090,1.729,2091,0.965,2092,2.349,2093,0.965,2094,0.965,2095,1.729,2096,0.965,2097,0.965,2098,0.965,2099,0.965,2100,1.729,2101,1.729,2102,1.729,2103,1.729,2104,4.505,2105,1.729,2106,0.965,2107,0.965,2108,1.729,2109,2.349,2110,2.349,2111,2.863,2112,2.863,2113,2.349,2114,2.863,2115,0.965,2116,3.295,2117,3.295,2118,2.032,2119,0.965,2120,1.729,2121,1.729,2122,3.295,2123,1.729,2124,2.863,2125,1.729,2126,2.349,2127,5.388,2128,3.295,2129,0.965,2130,0.965,2131,0.965,2132,2.349,2133,2.349,2134,1.729,2135,0.965,2136,0.965,2137,0.965,2138,0.965,2139,1.729,2140,0.965,2141,0.965,2142,2.349,2143,0.965,2144,0.965,2145,1.729,2146,2.349,2147,0.965,2148,1.729,2149,0.965,2150,2.349,2151,0.834,2152,0.965,2153,0.965,2154,1.729,2155,1.729,2156,3.664,2157,6.106,2158,2.349,2159,1.729,2160,1.729,2161,1.729,2162,1.729,2163,2.863,2164,2.863,2165,0.965,2166,0.965,2167,0.965,2168,0.965,2169,0.965,2170,3.983,2171,3.664,2172,1.729,2173,0.965,2174,3.295,2175,0.965,2176,0.965,2177,0.965,2178,1.729,2179,0.965,2180,1.729,2181,0.965,2182,4.261,2183,0.965,2184,4.915,2185,0.965,2186,0.965,2187,0.965,2188,0.965,2189,0.965,2190,0.965,2191,1.729,2192,0.965,2193,0.965,2194,0.965,2195,1.729,2196,2.349,2197,3.295,2198,1.729,2199,2.863,2200,2.863,2201,1.729,2202,0.965,2203,0.965,2204,1.729,2205,0.965,2206,0.965,2207,0.965,2208,1.729,2209,0.965,2210,0.965,2211,2.349,2212,2.863,2213,0.965,2214,1.729,2215,0.965,2216,1.729,2217,0.965,2218,2.349,2219,0.965,2220,0.965,2221,0.965,2222,0.965,2223,0.965,2224,1.729,2225,0.965,2226,0.965,2227,0.965,2228,0.965,2229,0.965,2230,0.965,2231,2.349,2232,0.965,2233,0.965,2234,0.965,2235,0.965,2236,0.965,2237,3.295,2238,0.965,2239,0.965,2240,2.863,2241,0.965,2242,0.965,2243,0.965,2244,0.965,2245,0.965,2246,0.965,2247,0.965,2248,0.965,2249,3.983,2250,0.965,2251,2.863,2252,0.965,2253,0.965,2254,2.349,2255,0.965,2256,0.965,2257,2.349,2258,0.965,2259,1.729,2260,0.965,2261,0.965,2262,0.965,2263,0.965,2264,0.965,2265,0.965,2266,0.965,2267,0.965,2268,1.729,2269,0.965,2270,0.965,2271,0.965,2272,0.965,2273,1.729,2274,1.729,2275,0.965,2276,0.965,2277,2.349,2278,0.965,2279,2.349,2280,1.729,2281,0.965,2282,1.729,2283,0.965,2284,1.729,2285,0.965,2286,2.349,2287,3.983,2288,0.965,2289,0.965,2290,0.965,2291,0.965,2292,0.965,2293,0.965,2294,0.965,2295,1.729,2296,2.863,2297,0.965,2298,3.295,2299,0.965,2300,0.965,2301,0.965,2302,0.965,2303,0.965,2304,0.965,2305,1.729,2306,1.729,2307,1.729,2308,2.349,2309,0.965,2310,1.729,2311,1.729,2312,0.965,2313,2.349,2314,0.965,2315,1.729,2316,0.965,2317,1.729,2318,0.965,2319,2.349,2320,1.729,2321,0.965,2322,0.965,2323,1.729,2324,6.251,2325,1.729,2326,0.965,2327,3.295,2328,4.722,2329,2.349,2330,0.965,2331,0.965,2332,0.965,2333,2.863,2334,0.965,2335,0.965,2336,2.349,2337,0.965,2338,1.729,2339,0.965,2340,0.965,2341,0.965,2342,1.729,2343,0.965,2344,0.965,2345,0.965,2346,0.965,2347,0.965,2348,2.863,2349,1.729,2350,0.965,2351,0.965,2352,2.349,2353,0.965,2354,1.729,2355,2.349,2356,1.729,2357,0.965,2358,0.965,2359,0.965,2360,0.965,2361,1.729,2362,2.349,2363,0.965,2364,0.965,2365,0.965,2366,1.729,2367,0.965,2368,1.729,2369,0.965,2370,0.965,2371,0.965,2372,0.965,2373,0.965,2374,2.349,2375,1.729,2376,0.965,2377,0.965,2378,2.863,2379,0.965,2380,2.349,2381,0.965,2382,0.965,2383,0.965,2384,1.729,2385,0.965,2386,0.965,2387,0.965,2388,2.349,2389,1.729,2390,1.729,2391,0.965,2392,3.983,2393,1.729,2394,2.349,2395,2.863,2396,0.965,2397,0.965,2398,0.965,2399,1.729,2400,0.965,2401,2.349,2402,0.965,2403,1.729,2404,0.965,2405,0.965,2406,0.965,2407,0.965,2408,2.349,2409,0.965,2410,1.729,2411,2.349,2412,1.729,2413,0.965,2414,1.729,2415,0.965,2416,0.965,2417,1.729,2418,1.729,2419,0.965,2420,0.965,2421,1.729,2422,0.965,2423,0.965,2424,0.965,2425,0.965,2426,2.349,2427,0.965,2428,0.965,2429,0.965,2430,0.965,2431,0.965,2432,2.863,2433,1.729,2434,2.349,2435,0.965,2436,0.965,2437,0.965,2438,0.965,2439,1.729,2440,0.965,2441,0.965,2442,0.965,2443,0.965,2444,0.965,2445,0.965,2446,0.965,2447,0.965,2448,0.965,2449,0.965,2450,0.965,2451,0.965,2452,0.965,2453,0.965,2454,2.863,2455,0.965,2456,1.729,2457,0.965,2458,0.965,2459,0.965,2460,0.965,2461,0.965,2462,0.965,2463,0.965,2464,0.965,2465,0.965,2466,2.349,2467,0.965,2468,0.834,2469,0.965,2470,0.965,2471,1.729,2472,0.965,2473,0.965,2474,0.965,2475,0.965,2476,0.965,2477,0.965,2478,0.965,2479,1.729,2480,1.729,2481,3.295,2482,2.349,2483,0.965,2484,1.729,2485,0.965,2486,0.965,2487,0.965,2488,0.965,2489,2.349,2490,1.729,2491,0.965,2492,1.729,2493,1.729,2494,1.729,2495,0.965,2496,0.965,2497,0.965,2498,0.965,2499,0.965,2500,0.965,2501,0.965,2502,0.965,2503,0.965,2504,1.729,2505,0.965,2506,2.349,2507,0.965,2508,0.965,2509,0.965,2510,0.965,2511,0.965,2512,0.965,2513,0.965,2514,0.965,2515,0.965,2516,0.965,2517,0.965,2518,0.965,2519,0.965,2520,0.965,2521,1.729,2522,0.965,2523,0.965,2524,0.965,2525,0.965,2526,0.965,2527,0.965,2528,0.965,2529,0.965,2530,0.965,2531,0.965,2532,0.965,2533,0.965,2534,0.965,2535,0.965,2536,0.965,2537,0.965,2538,2.349,2539,1.729,2540,0.965,2541,0.965,2542,0.965,2543,0.965,2544,0.965,2545,0.965,2546,1.729,2547,2.349,2548,1.729,2549,0.965,2550,0.965,2551,0.965,2552,0.965,2553,0.965,2554,0.965,2555,0.965,2556,1.729,2557,0.965,2558,0.965,2559,0.965,2560,0.965,2561,0.965,2562,0.965,2563,0.965,2564,0.965,2565,0.965,2566,0.965,2567,0.965,2568,0.965,2569,0.965,2570,0.965,2571,0.965,2572,0.965,2573,0.965,2574,0.965,2575,0.965,2576,0.965]],["title/modules.html",[104,2.326]],["body/modules.html",[22,0.014,69,1.731,75,0.014,76,0.014,103,4.145,104,2.568,115,2.992,116,3.577,117,3.577,118,3.577,128,6.135,964,3.577,970,3.577,971,3.577,1413,3.357,1956,5.052,2118,6.838,2577,7.905,2578,7.949]],["title/overview.html",[2579,4.575]],["body/overview.html",[1,1.771,2,1.392,22,0.016,26,0.999,34,2.156,36,1.771,38,1.771,41,1.846,44,2.069,46,1.846,48,1.771,50,1.771,52,1.771,56,1.846,58,2.156,60,1.771,62,1.771,64,2.156,68,2.156,70,2.069,75,0.011,76,0.011,86,3.19,102,1.392,103,5.679,104,1.821,105,1.912,106,1.658,107,1.912,108,2.012,109,1.658,110,3.582,111,3.582,112,3.582,113,3.582,114,3.582,115,3.547,116,4.242,117,4.67,118,4.703,119,3.814,120,2.833,121,1.821,122,1.912,165,2.939,289,2.536,423,2.012,495,1.585,559,2.612,855,3.582,964,4.875,965,3.582,966,3.582,967,3.582,968,3.582,969,3.582,970,4.364,971,4.364,1309,3.582,1310,3.582,1413,4.248,1422,3.582,1423,3.582,1424,3.582,1465,4.833,1466,4.833,1467,4.833,1469,3.582,1470,3.582,1471,3.582,1492,3.582,1493,3.582,1494,3.582,1518,3.582,1519,3.582,1520,3.582,1550,3.582,1551,3.582,1552,3.582,2151,3.582,2468,3.582,2579,3.582,2580,5.531,2581,4.141]],["title/properties.html",[82,0.911,1597,2.8]],["body/properties.html",[22,0.015,75,0.014,76,0.014,82,1.229,1761,5.437,2582,6.285]],["title/routes.html",[165,3.754]],["body/routes.html",[22,0.014,75,0.014,76,0.014,165,4.485]],["title/miscellaneous/typealiases.html",[1637,1.753,2583,4.662]],["body/miscellaneous/typealiases.html",[22,0.014,75,0.014,76,0.014,81,0.565,90,0.841,836,6.093,1486,5.466,1505,5.466,1637,3.306,2584,6.104,2585,7.425,2586,6.104,2587,7.425]],["title/miscellaneous/variables.html",[1637,1.753,2588,4.032]],["body/miscellaneous/variables.html",[22,0.016,75,0.014,76,0.014,81,0.554,90,0.767,93,2.152,94,2.064,570,4.265,600,3.93,602,2.51,1592,5.177,1594,5.886,1595,5.177,1637,3.242,1745,6.024,2588,5.177,2589,5.985,2590,5.985]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"modules/CurveModule.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"interfaces/MyChart.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyData.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":623,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"components/ToolsNavbarComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["0.0.0",{"_index":2582,"title":{},"body":{"properties.html":{}}}],["0.1.7",{"_index":1621,"title":{},"body":{"dependencies.html":{}}}],["0.11.4",{"_index":1636,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1586,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1563,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1580,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1573,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1565,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1579,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1564,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1568,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1583,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1567,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1566,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1574,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1572,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1582,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":716,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/MenubarComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["1.0",{"_index":1255,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["1.1.19",{"_index":1607,"title":{},"body":{"dependencies.html":{}}}],["1.10.3",{"_index":1617,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1559,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":1581,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1576,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1591,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1514,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["100",{"_index":676,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/SettingsComponent.html":{},"components/ToolsNavbarComponent.html":{},"coverage.html":{}}}],["100px",{"_index":854,"title":{},"body":{"components/CurveComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["10px",{"_index":948,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/LineFormComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{}}}],["11",{"_index":2082,"title":{},"body":{"license.html":{}}}],["11.1.0",{"_index":1619,"title":{},"body":{"dependencies.html":{}}}],["12.4.0",{"_index":1608,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":2468,"title":{},"body":{"license.html":{},"overview.html":{}}}],["14.1.0",{"_index":1609,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":1716,"title":{},"body":{"index.html":{},"license.html":{}}}],["15.2.9",{"_index":1599,"title":{},"body":{"dependencies.html":{}}}],["15px",{"_index":1391,"title":{},"body":{"components/LineFormComponent.html":{}}}],["16",{"_index":1590,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["17",{"_index":2581,"title":{},"body":{"overview.html":{}}}],["1996",{"_index":2088,"title":{},"body":{"license.html":{}}}],["2",{"_index":718,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["2.0.16",{"_index":1631,"title":{},"body":{"dependencies.html":{}}}],["2.0.5",{"_index":1613,"title":{},"body":{"dependencies.html":{}}}],["2.10.2",{"_index":1611,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":1634,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1561,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":1589,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2086,"title":{},"body":{"license.html":{}}}],["2007",{"_index":1764,"title":{},"body":{"license.html":{}}}],["200px",{"_index":1546,"title":{},"body":{"components/ToolsNavbarComponent.html":{}}}],["20px",{"_index":282,"title":{},"body":{"components/AppearanceComponent.html":{},"components/CurveComponent.html":{},"components/SettingsComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["250px",{"_index":287,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["28",{"_index":1588,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["29",{"_index":1762,"title":{},"body":{"license.html":{}}}],["2b4162",{"_index":486,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["3",{"_index":720,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["3.1.2",{"_index":1620,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1562,"title":{},"body":{"coverage.html":{}}}],["3/42",{"_index":1578,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2344,"title":{},"body":{"license.html":{}}}],["325769",{"_index":489,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["33",{"_index":1575,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":1517,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{}}}],["4",{"_index":722,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["4.1.1",{"_index":1623,"title":{},"body":{"dependencies.html":{}}}],["4.2.1",{"_index":1618,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1569,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":2151,"title":{},"body":{"license.html":{},"overview.html":{}}}],["5.0.0",{"_index":1626,"title":{},"body":{"dependencies.html":{}}}],["5.3.0",{"_index":1614,"title":{},"body":{"dependencies.html":{}}}],["5/7",{"_index":1571,"title":{},"body":{"coverage.html":{}}}],["500px",{"_index":1348,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["60",{"_index":2337,"title":{},"body":{"license.html":{}}}],["66",{"_index":1560,"title":{},"body":{"coverage.html":{}}}],["6b",{"_index":2179,"title":{},"body":{"license.html":{}}}],["6d",{"_index":2206,"title":{},"body":{"license.html":{}}}],["7",{"_index":1577,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["7.5.0",{"_index":1632,"title":{},"body":{"dependencies.html":{}}}],["71",{"_index":1570,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":855,"title":{},"body":{"components/CurveComponent.html":{},"overview.html":{}}}],["8.0.0",{"_index":1629,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":853,"title":{},"body":{"components/CurveComponent.html":{}}}],["9",{"_index":2580,"title":{},"body":{"overview.html":{}}}],["99",{"_index":1664,"title":{},"body":{"miscellaneous/functions.html":{}}}],["a['x",{"_index":773,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["a[0",{"_index":946,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["ability",{"_index":2256,"title":{},"body":{"license.html":{}}}],["about'},{'name",{"_index":33,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["about.component.html",{"_index":19,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.scss",{"_index":17,"title":{},"body":{"components/AboutComponent.html":{}}}],["aboutcomponent",{"_index":1,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["above",{"_index":2319,"title":{},"body":{"license.html":{}}}],["absence",{"_index":2115,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":1516,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"license.html":{}}}],["absolutely",{"_index":2555,"title":{},"body":{"license.html":{}}}],["abuse",{"_index":1874,"title":{},"body":{"license.html":{}}}],["accept",{"_index":2349,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":2348,"title":{},"body":{"license.html":{}}}],["access",{"_index":1864,"title":{},"body":{"license.html":{}}}],["accessible",{"_index":2420,"title":{},"body":{"license.html":{}}}],["accompanied",{"_index":2158,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":2531,"title":{},"body":{"license.html":{}}}],["accord",{"_index":2114,"title":{},"body":{"license.html":{}}}],["according",{"_index":2523,"title":{},"body":{"license.html":{}}}],["achieve",{"_index":2537,"title":{},"body":{"license.html":{}}}],["acknowledges",{"_index":2049,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":2399,"title":{},"body":{"license.html":{}}}],["action.action",{"_index":844,"title":{},"body":{"components/CurveComponent.html":{}}}],["actionhandler",{"_index":829,"title":{},"body":{"components/CurveComponent.html":{}}}],["actionhandler(actions",{"_index":835,"title":{},"body":{"components/CurveComponent.html":{}}}],["actions",{"_index":838,"title":{},"body":{"components/CurveComponent.html":{},"index.html":{},"license.html":{}}}],["actions.foreach((action",{"_index":843,"title":{},"body":{"components/CurveComponent.html":{}}}],["activities",{"_index":1958,"title":{},"body":{"license.html":{}}}],["activity",{"_index":2446,"title":{},"body":{"license.html":{}}}],["actual",{"_index":2424,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":74,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["actually",{"_index":2230,"title":{},"body":{"license.html":{}}}],["adapt",{"_index":1930,"title":{},"body":{"license.html":{}}}],["add",{"_index":1490,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["added",{"_index":2113,"title":{},"body":{"license.html":{}}}],["addexiftoimage",{"_index":1225,"title":{},"body":{"injectables/HonorCodeChartService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["addexiftoimage(destcanvas.todataurl('image/jpeg",{"_index":1254,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["addexiftoimage(jpegdata",{"_index":1644,"title":{},"body":{"miscellaneous/functions.html":{}}}],["additional",{"_index":2127,"title":{},"body":{"license.html":{}}}],["address",{"_index":2476,"title":{},"body":{"license.html":{}}}],["addressed",{"_index":1927,"title":{},"body":{"license.html":{}}}],["addrow",{"_index":845,"title":{},"body":{"components/CurveComponent.html":{},"classes/CurveData.html":{},"injectables/CurveService.html":{},"interfaces/MyData.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{}}}],["addrow(index",{"_index":751,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"interfaces/MyData.html":{}}}],["adopted",{"_index":2085,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":2263,"title":{},"body":{"license.html":{}}}],["advised",{"_index":2518,"title":{},"body":{"license.html":{}}}],["affects",{"_index":2264,"title":{},"body":{"license.html":{}}}],["affero",{"_index":2466,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":2379,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":2045,"title":{},"body":{"license.html":{}}}],["afterviewinit",{"_index":557,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/LineFormComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["against",{"_index":2103,"title":{},"body":{"license.html":{}}}],["aggregate",{"_index":2142,"title":{},"body":{"license.html":{}}}],["agree",{"_index":2462,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":2505,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":2411,"title":{},"body":{"license.html":{}}}],["aim",{"_index":1871,"title":{},"body":{"license.html":{}}}],["aliases",{"_index":2584,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":917,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["alleging",{"_index":2387,"title":{},"body":{"license.html":{}}}],["allow",{"_index":1898,"title":{},"body":{"license.html":{}}}],["allowed",{"_index":1780,"title":{},"body":{"license.html":{}}}],["along",{"_index":2117,"title":{},"body":{"license.html":{}}}],["alpha1",{"_index":1615,"title":{},"body":{"dependencies.html":{}}}],["already",{"_index":2398,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":2175,"title":{},"body":{"license.html":{}}}],["although",{"_index":1867,"title":{},"body":{"license.html":{}}}],["amount",{"_index":752,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"interfaces/MyData.html":{}}}],["ancillary",{"_index":2350,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":1847,"title":{},"body":{"license.html":{}}}],["angular",{"_index":1000,"title":{},"body":{"modules/CurveModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1598,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1600,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1601,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":1602,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":21,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"injectables/CurveService.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartFormComponent.html":{},"modules/CurveModule.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"components/LineFormComponent.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":1603,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1604,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":981,"title":{},"body":{"modules/CurveModule.html":{},"injectables/HonorCodePopupService.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["angular/material/icon",{"_index":995,"title":{},"body":{"modules/CurveModule.html":{},"modules/HonorCodePopupModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["angular/material/legacy",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["angular/material/progress",{"_index":1342,"title":{},"body":{"injectables/HonorCodePopupService.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["angular/material/sidenav",{"_index":1461,"title":{},"body":{"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["angular/material/toolbar",{"_index":1410,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{}}}],["angular/platform",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":166,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"dependencies.html":{}}}],["animation",{"_index":621,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveHighChartComponent.html":{}}}],["anlysis",{"_index":1698,"title":{},"body":{"index.html":{}}}],["anti",{"_index":2072,"title":{},"body":{"license.html":{}}}],["anyone",{"_index":2124,"title":{},"body":{"license.html":{}}}],["anything",{"_index":1942,"title":{},"body":{"license.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppearanceComponent.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["app.component",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":34,"title":{"components/AppComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearance",{"_index":181,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"components/SettingsComponent.html":{}}}],["appearance'},{'name",{"_index":37,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["appearance.component.html",{"_index":202,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["appearance.component.scss",{"_index":201,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["appearance.utils",{"_index":341,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{}}}],["appearancecomponent",{"_index":36,"title":{"components/AppearanceComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearanceservice",{"_index":86,"title":{"injectables/AppearanceService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearanceservice.getfontfamily",{"_index":244,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["appearanceservice.getfontsize",{"_index":246,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["appearanceservice.getfontstyle",{"_index":245,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["appearancestorageservice",{"_index":119,"title":{"injectables/AppearanceStorageService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"coverage.html":{},"overview.html":{}}}],["applicable",{"_index":1948,"title":{},"body":{"license.html":{}}}],["applications",{"_index":2570,"title":{},"body":{"license.html":{}}}],["applied",{"_index":1905,"title":{},"body":{"license.html":{}}}],["applies",{"_index":1798,"title":{},"body":{"license.html":{}}}],["apply",{"_index":1802,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":103,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":1971,"title":{},"body":{"license.html":{}}}],["appropriately",{"_index":2107,"title":{},"body":{"license.html":{}}}],["approutingmodule",{"_index":115,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"modules.html":{},"overview.html":{}}}],["approximates",{"_index":2527,"title":{},"body":{"license.html":{}}}],["area",{"_index":1876,"title":{},"body":{"license.html":{}}}],["arise",{"_index":1884,"title":{},"body":{"license.html":{}}}],["arising",{"_index":2509,"title":{},"body":{"license.html":{}}}],["arrange",{"_index":2421,"title":{},"body":{"license.html":{}}}],["arrangement",{"_index":2434,"title":{},"body":{"license.html":{}}}],["article",{"_index":2081,"title":{},"body":{"license.html":{}}}],["asking",{"_index":1820,"title":{},"body":{"license.html":{}}}],["assert",{"_index":1842,"title":{},"body":{"license.html":{}}}],["assets",{"_index":2369,"title":{},"body":{"license.html":{}}}],["associated",{"_index":2027,"title":{},"body":{"license.html":{}}}],["assume",{"_index":2500,"title":{},"body":{"license.html":{}}}],["assumption",{"_index":2530,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":2307,"title":{},"body":{"license.html":{}}}],["assures",{"_index":1908,"title":{},"body":{"license.html":{}}}],["astronony",{"_index":1704,"title":{},"body":{"index.html":{}}}],["attach",{"_index":2539,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":2322,"title":{},"body":{"license.html":{}}}],["attest",{"_index":1300,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["attributed",{"_index":1859,"title":{},"body":{"license.html":{}}}],["attributions",{"_index":2290,"title":{},"body":{"license.html":{}}}],["author",{"_index":1755,"title":{},"body":{"index.html":{},"license.html":{}}}],["authorization",{"_index":2242,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":2283,"title":{},"body":{"license.html":{}}}],["authorizes",{"_index":2393,"title":{},"body":{"license.html":{}}}],["authorizing",{"_index":2437,"title":{},"body":{"license.html":{}}}],["authors",{"_index":1733,"title":{},"body":{"index.html":{},"license.html":{}}}],["auto",{"_index":861,"title":{},"body":{"components/CurveComponent.html":{},"components/MenubarComponent.html":{}}}],["automatic",{"_index":2359,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":2037,"title":{},"body":{"license.html":{}}}],["available",{"_index":1956,"title":{},"body":{"license.html":{},"modules.html":{}}}],["avoid",{"_index":1902,"title":{},"body":{"license.html":{}}}],["away",{"_index":1787,"title":{},"body":{"license.html":{}}}],["axis",{"_index":675,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/LineFormComponent.html":{}}}],["b",{"_index":772,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"license.html":{}}}],["b['x",{"_index":774,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["b[0",{"_index":947,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["backdrop",{"_index":1525,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["bar",{"_index":1396,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["based",{"_index":186,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["basic",{"_index":2038,"title":{},"body":{"license.html":{}}}],["before",{"_index":1273,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["behalf",{"_index":2060,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":1526,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["behaviorsubject",{"_index":1073,"title":{},"body":{"injectables/CurveService.html":{}}}],["behaviorsubject(this.chartinfo",{"_index":1055,"title":{},"body":{"injectables/CurveService.html":{}}}],["behaviorsubject(this.curveimpl",{"_index":1071,"title":{},"body":{"injectables/CurveService.html":{}}}],["behaviorsubject(this.getdata",{"_index":1067,"title":{},"body":{"injectables/CurveService.html":{}}}],["behaviorsubject(this.getdatalabelarray",{"_index":1065,"title":{},"body":{"injectables/CurveService.html":{}}}],["being",{"_index":2204,"title":{},"body":{"license.html":{}}}],["believe",{"_index":2430,"title":{},"body":{"license.html":{}}}],["below",{"_index":2067,"title":{},"body":{"license.html":{}}}],["benefit",{"_index":2423,"title":{},"body":{"license.html":{}}}],["best",{"_index":2536,"title":{},"body":{"license.html":{}}}],["between",{"_index":1663,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["beyond",{"_index":2144,"title":{},"body":{"license.html":{}}}],["black",{"_index":491,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["blob",{"_index":1654,"title":{},"body":{"miscellaneous/functions.html":{}}}],["block",{"_index":1515,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{}}}],["blue",{"_index":434,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["body",{"_index":1992,"title":{},"body":{"license.html":{}}}],["bold",{"_index":458,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["bolder",{"_index":460,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["boolean",{"_index":778,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"components/LineFormComponent.html":{}}}],["bootstrap",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/MenubarModule.html":{},"modules/SettingsModule.html":{},"modules/SimpleDataButtonModule.html":{},"modules/SimpleGraphButtonModule.html":{},"modules/ToolsNavbarModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":1315,"title":{},"body":{"modules/HonorCodePopupModule.html":{},"dependencies.html":{}}}],["both",{"_index":1852,"title":{},"body":{"license.html":{}}}],["bottom",{"_index":612,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["box",{"_index":2561,"title":{},"body":{"license.html":{}}}],["break",{"_index":761,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["browse",{"_index":2578,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{}}}],["browseranimationsmodule",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{}}}],["browsermodule",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["brush",{"_index":1415,"title":{},"body":{"components/MenubarComponent.html":{}}}],["build",{"_index":1740,"title":{},"body":{"index.html":{}}}],["buildto",{"_index":1746,"title":{},"body":{"index.html":{}}}],["business",{"_index":2443,"title":{},"body":{"license.html":{}}}],["button",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"components/AppearanceComponent.html":{},"components/CurveComponent.html":{},"modules/CurveModule.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["button'},{'name",{"_index":67,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["button.component",{"_index":977,"title":{},"body":{"modules/CurveModule.html":{}}}],["button.component.html",{"_index":1475,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["button.component.scss",{"_index":1474,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["button.component.ts",{"_index":1473,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"coverage.html":{}}}],["button.component.ts:11",{"_index":1480,"title":{},"body":{"components/SimpleDataButtonComponent.html":{}}}],["button.component.ts:14",{"_index":1502,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{}}}],["button.component.ts:15",{"_index":1504,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{}}}],["button.component.ts:17",{"_index":1483,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{}}}],["button.component.ts:20",{"_index":1484,"title":{},"body":{"components/SimpleDataButtonComponent.html":{}}}],["button.component.ts:24",{"_index":1482,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{}}}],["button.component.ts:30",{"_index":1500,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{}}}],["button.component.ts:34",{"_index":1499,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{}}}],["button/simple",{"_index":976,"title":{},"body":{"modules/CurveModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"coverage.html":{}}}],["buttons",{"_index":923,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["c",{"_index":1766,"title":{},"body":{"license.html":{}}}],["c3cfd4",{"_index":488,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["called",{"_index":1937,"title":{},"body":{"license.html":{}}}],["canvas",{"_index":1240,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["canvas.height",{"_index":1245,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["canvas.width",{"_index":1243,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["carry",{"_index":2120,"title":{},"body":{"license.html":{}}}],["case",{"_index":758,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"license.html":{}}}],["cases",{"_index":2224,"title":{},"body":{"license.html":{}}}],["cause",{"_index":2148,"title":{},"body":{"license.html":{}}}],["cease",{"_index":2326,"title":{},"body":{"license.html":{}}}],["center",{"_index":918,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["certain",{"_index":1823,"title":{},"body":{"license.html":{}}}],["cessation",{"_index":2339,"title":{},"body":{"license.html":{}}}],["change",{"_index":1790,"title":{},"body":{"license.html":{}}}],["changed",{"_index":1857,"title":{},"body":{"license.html":{}}}],["changes",{"_index":883,"title":{},"body":{"classes/CurveData.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["changing",{"_index":1779,"title":{},"body":{"license.html":{}}}],["character",{"_index":1665,"title":{},"body":{"miscellaneous/functions.html":{}}}],["characterized",{"_index":2253,"title":{},"body":{"license.html":{}}}],["charge",{"_index":1807,"title":{},"body":{"license.html":{}}}],["chart",{"_index":42,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"modules/CurveModule.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["chart'},{'name",{"_index":40,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["chart.canvas",{"_index":1241,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["chart.component",{"_index":990,"title":{},"body":{"modules/CurveModule.html":{}}}],["chart.component.html",{"_index":568,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveHighChartComponent.html":{}}}],["chart.component.scss",{"_index":569,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveHighChartComponent.html":{}}}],["chart.component.ts",{"_index":537,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveHighChartComponent.html":{},"coverage.html":{}}}],["chart.component.ts:104",{"_index":910,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:110",{"_index":906,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:114",{"_index":905,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:12",{"_index":926,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:121",{"_index":556,"title":{},"body":{"classes/CurveChart.html":{}}}],["chart.component.ts:125",{"_index":551,"title":{},"body":{"classes/CurveChart.html":{}}}],["chart.component.ts:13",{"_index":927,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:14",{"_index":913,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:145",{"_index":554,"title":{},"body":{"classes/CurveChart.html":{}}}],["chart.component.ts:15",{"_index":914,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:16",{"_index":925,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:24",{"_index":645,"title":{},"body":{"components/CurveChartComponent.html":{}}}],["chart.component.ts:28",{"_index":644,"title":{},"body":{"components/CurveChartComponent.html":{}}}],["chart.component.ts:32",{"_index":646,"title":{},"body":{"components/CurveChartComponent.html":{}}}],["chart.component.ts:35",{"_index":898,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:36",{"_index":642,"title":{},"body":{"components/CurveChartComponent.html":{}}}],["chart.component.ts:43",{"_index":901,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:49",{"_index":903,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:54",{"_index":643,"title":{},"body":{"components/CurveChartComponent.html":{}}}],["chart.component.ts:66",{"_index":911,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:70",{"_index":908,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:74",{"_index":907,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:77",{"_index":544,"title":{},"body":{"classes/CurveChart.html":{}}}],["chart.component.ts:83",{"_index":545,"title":{},"body":{"classes/CurveChart.html":{}}}],["chart.component.ts:84",{"_index":912,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:90",{"_index":546,"title":{},"body":{"classes/CurveChart.html":{}}}],["chart.component.ts:98",{"_index":909,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.defaults.bordercolor",{"_index":580,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["chart.defaults.color",{"_index":578,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["chart.exportchart",{"_index":1259,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["chart.exportchartlocal",{"_index":1265,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["chart.getchart(\"curve",{"_index":1118,"title":{},"body":{"injectables/CurveService.html":{}}}],["chart.getchart(this.id)?.update('none",{"_index":624,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["chart.js",{"_index":521,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"injectables/CurveService.html":{},"injectables/HonorCodeChartService.html":{},"interfaces/MyChart.html":{},"dependencies.html":{},"index.html":{}}}],["chart.js/dist/types",{"_index":558,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"injectables/HonorCodeChartService.html":{}}}],["chart.service",{"_index":842,"title":{},"body":{"components/CurveComponent.html":{}}}],["chart.service.ts",{"_index":1197,"title":{},"body":{"injectables/HonorCodeChartService.html":{},"coverage.html":{}}}],["chart.service.ts:15",{"_index":1205,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["chart.service.ts:27",{"_index":1213,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["chart.service.ts:44",{"_index":1222,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["chart.service.ts:55",{"_index":1224,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["chart.service.ts:66",{"_index":1208,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["chart.service.ts:70",{"_index":1211,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["chart/curve",{"_index":536,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"modules/CurveModule.html":{},"coverage.html":{}}}],["chartaction",{"_index":1505,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"miscellaneous/typealiases.html":{}}}],["chartcolor",{"_index":340,"title":{"classes/ChartColor.html":{}},"body":{"injectables/AppearanceService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"coverage.html":{}}}],["chartcolor.getbackgroundcolor(this.getchartcolormode",{"_index":368,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["chartcolor.getfontcolor(this.getchartcolormode",{"_index":367,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["chartcolormode",{"_index":315,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["chartcolormode.dark",{"_index":372,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["chartcolormode.light",{"_index":370,"title":{},"body":{"injectables/AppearanceService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["chartcolormodekey",{"_index":376,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["chartconfiguration",{"_index":519,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"interfaces/MyChart.html":{}}}],["chartconfiguration['data",{"_index":527,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"interfaces/MyChart.html":{}}}],["chartconstructor",{"_index":886,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chartdata",{"_index":552,"title":{},"body":{"classes/CurveChart.html":{}}}],["chartinfo",{"_index":494,"title":{"interfaces/ChartInfo.html":{}},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"interfaces/MyChart.html":{},"interfaces/MyStorage.html":{},"coverage.html":{}}}],["chartinfokey",{"_index":794,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["chartinfoobject",{"_index":1136,"title":{},"body":{"classes/CurveStorage.html":{}}}],["chartinfosubject",{"_index":1003,"title":{},"body":{"injectables/CurveService.html":{}}}],["chartinitialized",{"_index":890,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chartinitialized($event",{"_index":899,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chartobject",{"_index":887,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chartoptions",{"_index":520,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveHighChartComponent.html":{},"interfaces/MyChart.html":{}}}],["charts",{"_index":993,"title":{},"body":{"modules/CurveModule.html":{},"injectables/HonorCodeChartService.html":{},"dependencies.html":{}}}],["charts/utils",{"_index":1229,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["chartservice",{"_index":832,"title":{},"body":{"components/CurveComponent.html":{}}}],["charttitle",{"_index":655,"title":{},"body":{"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["charttype",{"_index":1209,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["chartuseractionobs",{"_index":1496,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["check",{"_index":1738,"title":{},"body":{"index.html":{}}}],["children",{"_index":177,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["choose",{"_index":2484,"title":{},"body":{"license.html":{}}}],["choosing",{"_index":2488,"title":{},"body":{"license.html":{}}}],["circumstances",{"_index":2065,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":2073,"title":{},"body":{"license.html":{}}}],["civil",{"_index":2529,"title":{},"body":{"license.html":{}}}],["claim",{"_index":2384,"title":{},"body":{"license.html":{}}}],["claims",{"_index":2395,"title":{},"body":{"license.html":{}}}],["class",{"_index":24,"title":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"classes/CurveChartInfo.html":{},"classes/CurveData.html":{},"classes/CurveImpl.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"classes/DefaultAppearanceSettings.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"modules/CurveModule.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"coverage.html":{},"license.html":{}}}],["classes",{"_index":423,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"classes/CurveChartInfo.html":{},"classes/CurveData.html":{},"classes/CurveImpl.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"classes/DefaultAppearanceSettings.html":{},"overview.html":{}}}],["clear",{"_index":2187,"title":{},"body":{"license.html":{}}}],["clearly",{"_index":1849,"title":{},"body":{"license.html":{}}}],["click",{"_index":1304,"title":{},"body":{"components/HonorCodePopupComponent.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["close",{"_index":1295,"title":{},"body":{"components/HonorCodePopupComponent.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["closely",{"_index":2526,"title":{},"body":{"license.html":{}}}],["cluster_appmodule",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_curvemodule",{"_index":965,"title":{},"body":{"modules/CurveModule.html":{},"overview.html":{}}}],["cluster_curvemodule_declarations",{"_index":966,"title":{},"body":{"modules/CurveModule.html":{},"overview.html":{}}}],["cluster_curvemodule_exports",{"_index":968,"title":{},"body":{"modules/CurveModule.html":{},"overview.html":{}}}],["cluster_curvemodule_imports",{"_index":967,"title":{},"body":{"modules/CurveModule.html":{},"overview.html":{}}}],["cluster_curvemodule_providers",{"_index":969,"title":{},"body":{"modules/CurveModule.html":{},"overview.html":{}}}],["cluster_honorcodepopupmodule",{"_index":1309,"title":{},"body":{"modules/HonorCodePopupModule.html":{},"overview.html":{}}}],["cluster_honorcodepopupmodule_declarations",{"_index":1310,"title":{},"body":{"modules/HonorCodePopupModule.html":{},"overview.html":{}}}],["cluster_menubarmodule",{"_index":1422,"title":{},"body":{"modules/MenubarModule.html":{},"overview.html":{}}}],["cluster_menubarmodule_declarations",{"_index":1423,"title":{},"body":{"modules/MenubarModule.html":{},"overview.html":{}}}],["cluster_menubarmodule_exports",{"_index":1424,"title":{},"body":{"modules/MenubarModule.html":{},"overview.html":{}}}],["cluster_menubarmodule_imports",{"_index":1425,"title":{},"body":{"modules/MenubarModule.html":{}}}],["cluster_settingsmodule",{"_index":1469,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_declarations",{"_index":1471,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_imports",{"_index":1470,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_simpledatabuttonmodule",{"_index":1492,"title":{},"body":{"modules/SimpleDataButtonModule.html":{},"overview.html":{}}}],["cluster_simpledatabuttonmodule_declarations",{"_index":1493,"title":{},"body":{"modules/SimpleDataButtonModule.html":{},"overview.html":{}}}],["cluster_simpledatabuttonmodule_exports",{"_index":1494,"title":{},"body":{"modules/SimpleDataButtonModule.html":{},"overview.html":{}}}],["cluster_simplegraphbuttonmodule",{"_index":1518,"title":{},"body":{"modules/SimpleGraphButtonModule.html":{},"overview.html":{}}}],["cluster_simplegraphbuttonmodule_declarations",{"_index":1519,"title":{},"body":{"modules/SimpleGraphButtonModule.html":{},"overview.html":{}}}],["cluster_simplegraphbuttonmodule_exports",{"_index":1520,"title":{},"body":{"modules/SimpleGraphButtonModule.html":{},"overview.html":{}}}],["cluster_toolsnavbarmodule",{"_index":1550,"title":{},"body":{"modules/ToolsNavbarModule.html":{},"overview.html":{}}}],["cluster_toolsnavbarmodule_declarations",{"_index":1551,"title":{},"body":{"modules/ToolsNavbarModule.html":{},"overview.html":{}}}],["cluster_toolsnavbarmodule_exports",{"_index":1552,"title":{},"body":{"modules/ToolsNavbarModule.html":{},"overview.html":{}}}],["cluster_toolsnavbarmodule_imports",{"_index":1553,"title":{},"body":{"modules/ToolsNavbarModule.html":{}}}],["code",{"_index":54,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"coverage.html":{},"license.html":{}}}],["col",{"_index":755,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["collect",{"_index":1272,"title":{},"body":{"components/HonorCodePopupComponent.html":{},"license.html":{}}}],["colnames",{"_index":1156,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["color",{"_index":269,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["color.displayname",{"_index":271,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["colors",{"_index":619,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["colortheme",{"_index":221,"title":{},"body":{"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{}}}],["colorthemekey",{"_index":377,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["colorthemes",{"_index":318,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["colorthemes.dark",{"_index":371,"title":{},"body":{"injectables/AppearanceService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["colorthemes.high_contrast",{"_index":469,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["colorthemes.high_contrast_dark",{"_index":472,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["colorthemes.light",{"_index":369,"title":{},"body":{"injectables/AppearanceService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["colorthemesettings",{"_index":237,"title":{"classes/ColorThemeSettings.html":{}},"body":{"components/AppearanceComponent.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"coverage.html":{}}}],["colorthemesettings.getfontfamilylists",{"_index":229,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["colorthemesettings.getfontsizelists",{"_index":232,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["colorthemesettings.getfontstylelists",{"_index":235,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["colorthemesettings.getthemelists",{"_index":226,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["colorthemeslist",{"_index":205,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["column",{"_index":858,"title":{},"body":{"components/CurveComponent.html":{}}}],["combination",{"_index":2470,"title":{},"body":{"license.html":{}}}],["combine",{"_index":2467,"title":{},"body":{"license.html":{}}}],["combined",{"_index":2139,"title":{},"body":{"license.html":{}}}],["comes",{"_index":2125,"title":{},"body":{"license.html":{}}}],["comic",{"_index":466,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["comic_neue",{"_index":465,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["commands",{"_index":1982,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":2235,"title":{},"body":{"license.html":{}}}],["commitment",{"_index":2412,"title":{},"body":{"license.html":{}}}],["common",{"_index":2228,"title":{},"body":{"license.html":{}}}],["communication",{"_index":2034,"title":{},"body":{"license.html":{}}}],["compilation",{"_index":2134,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":2143,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":2448,"title":{},"body":{"license.html":{}}}],["compiler",{"_index":2015,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":2365,"title":{},"body":{"license.html":{}}}],["comply",{"_index":2058,"title":{},"body":{"license.html":{}}}],["compodoc/compodoc",{"_index":1606,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"coverage.html":{},"license.html":{}}}],["component_template",{"_index":31,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"overview.html":{}}}],["computer",{"_index":1952,"title":{},"body":{"license.html":{}}}],["computers",{"_index":1901,"title":{},"body":{"license.html":{}}}],["concerning",{"_index":2469,"title":{},"body":{"license.html":{}}}],["concerns",{"_index":2477,"title":{},"body":{"license.html":{}}}],["conditioned",{"_index":2442,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":1913,"title":{},"body":{"license.html":{}}}],["configuration",{"_index":572,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["connection",{"_index":2432,"title":{},"body":{"license.html":{}}}],["consequence",{"_index":2352,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":2508,"title":{},"body":{"license.html":{}}}],["consider",{"_index":2568,"title":{},"body":{"license.html":{}}}],["considered",{"_index":2309,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":2403,"title":{},"body":{"license.html":{}}}],["conspicuously",{"_index":2106,"title":{},"body":{"license.html":{}}}],["const",{"_index":168,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"injectables/HonorCodeChartService.html":{},"injectables/HonorCodePopupService.html":{}}}],["constantly",{"_index":1895,"title":{},"body":{"license.html":{}}}],["constitutes",{"_index":2048,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/LineFormComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{}}}],["constructor(appearanceservice",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/AppearanceComponent.html":{}}}],["constructor(dataservice",{"_index":1177,"title":{},"body":{"components/CurveTableComponent.html":{}}}],["constructor(defaultdata",{"_index":798,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["constructor(dialog",{"_index":1326,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["constructor(id",{"_index":543,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["constructor(matdialogref",{"_index":1281,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["constructor(popupservice",{"_index":1497,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{}}}],["constructor(private",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/LineFormComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["constructor(service",{"_index":641,"title":{},"body":{"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/LineFormComponent.html":{}}}],["constructor(storageservice",{"_index":308,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["construed",{"_index":2452,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":2212,"title":{},"body":{"license.html":{}}}],["contact",{"_index":1754,"title":{},"body":{"index.html":{},"license.html":{}}}],["contain",{"_index":2449,"title":{},"body":{"license.html":{}}}],["container",{"_index":280,"title":{},"body":{"components/AppearanceComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/SettingsComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["containing",{"_index":1666,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["contains",{"_index":1351,"title":{},"body":{"components/LineFormComponent.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"license.html":{}}}],["content",{"_index":860,"title":{},"body":{"components/CurveComponent.html":{},"components/ToolsNavbarComponent.html":{},"license.html":{}}}],["contents",{"_index":2407,"title":{},"body":{"license.html":{}}}],["context",{"_index":2009,"title":{},"body":{"license.html":{}}}],["contextbutton",{"_index":924,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["continue",{"_index":2259,"title":{},"body":{"license.html":{}}}],["continued",{"_index":2245,"title":{},"body":{"license.html":{}}}],["contractual",{"_index":2306,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":2458,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":471,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"license.html":{}}}],["contributor",{"_index":2392,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":2394,"title":{},"body":{"license.html":{}}}],["control",{"_index":2021,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":2397,"title":{},"body":{"license.html":{}}}],["convenient",{"_index":1974,"title":{},"body":{"license.html":{}}}],["convert",{"_index":1661,"title":{},"body":{"miscellaneous/functions.html":{}}}],["convey",{"_index":1960,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":2436,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":2254,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":1968,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":2305,"title":{},"body":{"license.html":{}}}],["copies",{"_index":1777,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1774,"title":{},"body":{"license.html":{}}}],["copying",{"_index":1914,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":1782,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1765,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":1923,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":2062,"title":{},"body":{"license.html":{}}}],["correction",{"_index":2503,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":1685,"title":{},"body":{"miscellaneous/functions.html":{}}}],["corresponding",{"_index":2018,"title":{},"body":{"license.html":{}}}],["cost",{"_index":2172,"title":{},"body":{"license.html":{}}}],["count",{"_index":787,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"components/LineFormComponent.html":{}}}],["counterclaim",{"_index":2385,"title":{},"body":{"license.html":{}}}],["countries",{"_index":1957,"title":{},"body":{"license.html":{}}}],["country",{"_index":2426,"title":{},"body":{"license.html":{}}}],["course",{"_index":1706,"title":{},"body":{"index.html":{},"license.html":{}}}],["court",{"_index":2457,"title":{},"body":{"license.html":{}}}],["courts",{"_index":2525,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":2415,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":1554,"title":{"coverage.html":{}},"body":{"coverage.html":{},"license.html":{}}}],["covered",{"_index":1939,"title":{},"body":{"license.html":{}}}],["create",{"_index":1256,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["created",{"_index":1267,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["credit",{"_index":1298,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["credits",{"_index":1263,"title":{},"body":{"injectables/HonorCodeChartService.html":{},"miscellaneous/functions.html":{}}}],["criterion",{"_index":1985,"title":{},"body":{"license.html":{}}}],["cross",{"_index":2383,"title":{},"body":{"license.html":{}}}],["cure",{"_index":2343,"title":{},"body":{"license.html":{}}}],["current",{"_index":1670,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cursive",{"_index":1414,"title":{},"body":{"components/MenubarComponent.html":{}}}],["curve",{"_index":39,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"modules/CurveModule.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["curve'},{'name",{"_index":45,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["curve.component",{"_index":974,"title":{},"body":{"modules/CurveModule.html":{}}}],["curve.component.html",{"_index":828,"title":{},"body":{"components/CurveComponent.html":{}}}],["curve.component.scss",{"_index":827,"title":{},"body":{"components/CurveComponent.html":{}}}],["curve.service",{"_index":560,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/LineFormComponent.html":{}}}],["curve.service.util",{"_index":566,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"injectables/CurveService.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/LineFormComponent.html":{}}}],["curvechart",{"_index":534,"title":{"classes/CurveChart.html":{}},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"coverage.html":{}}}],["curvechart(this.id",{"_index":583,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["curvechartcomponent",{"_index":38,"title":{"components/CurveChartComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["curvechartformcomponent",{"_index":41,"title":{"components/CurveChartFormComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["curvechartinfo",{"_index":563,"title":{"classes/CurveChartInfo.html":{}},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"coverage.html":{}}}],["curvechartinfo).getcharttitle",{"_index":618,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["curvechartinfo).gettablelabels",{"_index":598,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["curvechartinfo).getxaxislabel",{"_index":608,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["curvechartinfo).getyaxislabel",{"_index":614,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["curvechartinfo.getdefaultstorageobject",{"_index":1079,"title":{},"body":{"injectables/CurveService.html":{}}}],["curvechartinfostorageobject",{"_index":693,"title":{"interfaces/CurveChartInfoStorageObject.html":{}},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"coverage.html":{}}}],["curvecomponent",{"_index":44,"title":{"components/CurveComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["curvecount",{"_index":549,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["curvecount).join",{"_index":730,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["curvecounts",{"_index":564,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/LineFormComponent.html":{},"miscellaneous/enumerations.html":{}}}],["curvecounts.four",{"_index":638,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/LineFormComponent.html":{}}}],["curvecounts.one",{"_index":628,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/LineFormComponent.html":{}}}],["curvecounts.three",{"_index":635,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/LineFormComponent.html":{}}}],["curvecounts.two",{"_index":632,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/LineFormComponent.html":{}}}],["curvecountskeys",{"_index":1355,"title":{},"body":{"components/LineFormComponent.html":{}}}],["curvedata",{"_index":863,"title":{"classes/CurveData.html":{}},"body":{"classes/CurveData.html":{},"injectables/CurveService.html":{},"coverage.html":{}}}],["curvedata.getdefaultdata",{"_index":1078,"title":{},"body":{"injectables/CurveService.html":{}}}],["curvedatadict",{"_index":548,"title":{"interfaces/CurveDataDict.html":{}},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"coverage.html":{}}}],["curvehighchartcomponent",{"_index":46,"title":{"components/CurveHighChartComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["curveimpl",{"_index":782,"title":{"classes/CurveImpl.html":{}},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"coverage.html":{}}}],["curveimpl.getdefaultstorageobject",{"_index":1080,"title":{},"body":{"injectables/CurveService.html":{}}}],["curveinterface",{"_index":565,"title":{"interfaces/CurveInterface.html":{}},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"coverage.html":{}}}],["curveinterface).getcurvecount",{"_index":597,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["curveinterface).getismagnitudeon",{"_index":616,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["curveinterface.getismagnitudeon",{"_index":1388,"title":{},"body":{"components/LineFormComponent.html":{}}}],["curveinterfacestorageobject",{"_index":780,"title":{"interfaces/CurveInterfaceStorageObject.html":{}},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"coverage.html":{}}}],["curveinterfacestorageobject.curvecount",{"_index":789,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["curveinterfacestorageobject.ismagnitudeon",{"_index":790,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["curvemodule",{"_index":964,"title":{"modules/CurveModule.html":{}},"body":{"modules/CurveModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"modules.html":{},"overview.html":{}}}],["curveparam",{"_index":710,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"miscellaneous/enumerations.html":{}}}],["curveparam.x",{"_index":759,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["curveparam.y1",{"_index":762,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["curveparam.y2",{"_index":764,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["curveparam.y3",{"_index":766,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["curveparam.y4",{"_index":768,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["curves",{"_index":1352,"title":{},"body":{"components/LineFormComponent.html":{}}}],["curveservice",{"_index":559,"title":{"injectables/CurveService.html":{}},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"injectables/CurveService.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/LineFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["curvestorage",{"_index":791,"title":{"classes/CurveStorage.html":{}},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"coverage.html":{}}}],["curvetable",{"_index":1140,"title":{"classes/CurveTable.html":{}},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"coverage.html":{}}}],["curvetable(this.id",{"_index":1158,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["curvetablecomponent",{"_index":48,"title":{"components/CurveTableComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["custom",{"_index":571,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["customarily",{"_index":2161,"title":{},"body":{"license.html":{}}}],["customer",{"_index":2167,"title":{},"body":{"license.html":{}}}],["d",{"_index":2133,"title":{},"body":{"license.html":{}}}],["damages",{"_index":2506,"title":{},"body":{"license.html":{}}}],["danger",{"_index":1904,"title":{},"body":{"license.html":{}}}],["dark",{"_index":451,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["dark_theme",{"_index":452,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["data",{"_index":66,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"modules/CurveModule.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyData.html":{},"interfaces/MyStorage.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["data.getdata",{"_index":596,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["data/data.interface",{"_index":523,"title":{},"body":{"interfaces/ChartInfo.html":{},"interfaces/MyChart.html":{}}}],["data[i].x",{"_index":631,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["data[i].y1",{"_index":629,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["data[i].y2",{"_index":633,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["data[i].y3",{"_index":636,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["data[i].y4",{"_index":639,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["datadict",{"_index":555,"title":{},"body":{"classes/CurveChart.html":{},"injectables/CurveService.html":{}}}],["datakey",{"_index":792,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["datakeys",{"_index":1004,"title":{},"body":{"injectables/CurveService.html":{}}}],["datakeyssubject",{"_index":1005,"title":{},"body":{"injectables/CurveService.html":{}}}],["datalabel",{"_index":657,"title":{},"body":{"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{}}}],["datalabel.split(\",\").map((label",{"_index":732,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["datalabelarray",{"_index":731,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["datalabels",{"_index":678,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["datareset",{"_index":1476,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{}}}],["dataservice",{"_index":1159,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["dataset",{"_index":1157,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"miscellaneous/functions.html":{}}}],["datasetindex",{"_index":1676,"title":{},"body":{"miscellaneous/functions.html":{}}}],["datasets",{"_index":626,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"miscellaneous/functions.html":{}}}],["datasubject",{"_index":1006,"title":{},"body":{"injectables/CurveService.html":{}}}],["dataurl",{"_index":1653,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dataurltoblob",{"_index":1226,"title":{},"body":{"injectables/HonorCodeChartService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["dataurltoblob(dataurl",{"_index":1651,"title":{},"body":{"miscellaneous/functions.html":{}}}],["date",{"_index":1671,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["dateappendzero",{"_index":1585,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["dateappendzero(num",{"_index":1656,"title":{},"body":{"miscellaneous/functions.html":{}}}],["days",{"_index":2338,"title":{},"body":{"license.html":{}}}],["debouncetime",{"_index":652,"title":{},"body":{"components/CurveChartFormComponent.html":{}}}],["debouncetime(200",{"_index":664,"title":{},"body":{"components/CurveChartFormComponent.html":{}}}],["december",{"_index":2087,"title":{},"body":{"license.html":{}}}],["decide",{"_index":2486,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"modules/HonorCodePopupModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"overview.html":{}}}],["declared",{"_index":1276,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["declining",{"_index":2297,"title":{},"body":{"license.html":{}}}],["decorator",{"_index":1074,"title":{},"body":{"injectables/CurveService.html":{}}}],["decorators",{"_index":1371,"title":{},"body":{"components/LineFormComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["deemed",{"_index":2075,"title":{},"body":{"license.html":{}}}],["default",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/LineFormComponent.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defaultappearancesettings",{"_index":238,"title":{"classes/DefaultAppearanceSettings.html":{}},"body":{"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"coverage.html":{}}}],["defaultappearancesettings.chartcolormode",{"_index":373,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["defaultappearancesettings.fontfamily",{"_index":251,"title":{},"body":{"components/AppearanceComponent.html":{},"injectables/AppearanceStorageService.html":{}}}],["defaultappearancesettings.fontsize",{"_index":253,"title":{},"body":{"components/AppearanceComponent.html":{},"injectables/AppearanceStorageService.html":{}}}],["defaultappearancesettings.fontstyle",{"_index":252,"title":{},"body":{"components/AppearanceComponent.html":{},"injectables/AppearanceStorageService.html":{}}}],["defaultappearancesettings.theme",{"_index":407,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["defaultchartinfo",{"_index":796,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["defaultdata",{"_index":795,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["defaultinterface",{"_index":797,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["defective",{"_index":2499,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":2455,"title":{},"body":{"license.html":{}}}],["defined",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyData.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"license.html":{}}}],["definition",{"_index":2025,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":1917,"title":{},"body":{"license.html":{}}}],["delegate",{"_index":1051,"title":{},"body":{"injectables/CurveService.html":{}}}],["denied",{"_index":2260,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":2413,"title":{},"body":{"license.html":{}}}],["deny",{"_index":1863,"title":{},"body":{"license.html":{}}}],["denying",{"_index":1819,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":105,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/MenubarModule.html":{},"modules/SettingsModule.html":{},"modules/SimpleDataButtonModule.html":{},"modules/SimpleGraphButtonModule.html":{},"modules/ToolsNavbarModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deprive",{"_index":2422,"title":{},"body":{"license.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveComponent.html":{},"modules/CurveModule.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/PageNotFoundComponent.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"miscellaneous/functions.html":{}}}],["design",{"_index":1075,"title":{},"body":{"injectables/CurveService.html":{},"index.html":{}}}],["designated",{"_index":2181,"title":{},"body":{"license.html":{}}}],["designed",{"_index":1696,"title":{},"body":{"index.html":{},"license.html":{}}}],["destcanvas",{"_index":1238,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["destcanvas.getcontext('2d",{"_index":1247,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["destcanvas.height",{"_index":1244,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["destcanvas.width",{"_index":1242,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["destctx",{"_index":1246,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["destctx.drawimage(canvas",{"_index":1251,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["destctx.fillrect(0",{"_index":1250,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["destctx.fillstyle",{"_index":1248,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["detail",{"_index":2475,"title":{},"body":{"license.html":{}}}],["details",{"_index":2548,"title":{},"body":{"license.html":{}}}],["details.the",{"_index":2558,"title":{},"body":{"license.html":{}}}],["determining",{"_index":2222,"title":{},"body":{"license.html":{}}}],["develop",{"_index":2533,"title":{},"body":{"license.html":{}}}],["developers",{"_index":1839,"title":{},"body":{"license.html":{}}}],["development",{"_index":1741,"title":{},"body":{"index.html":{},"license.html":{}}}],["device",{"_index":1217,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["devices",{"_index":1862,"title":{},"body":{"license.html":{}}}],["dialog",{"_index":1289,"title":{},"body":{"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{}}}],["dictionary",{"_index":1680,"title":{},"body":{"miscellaneous/functions.html":{}}}],["differ",{"_index":2474,"title":{},"body":{"license.html":{}}}],["different",{"_index":1405,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"license.html":{}}}],["differently",{"_index":2288,"title":{},"body":{"license.html":{}}}],["direction",{"_index":2061,"title":{},"body":{"license.html":{}}}],["directions",{"_index":2188,"title":{},"body":{"license.html":{}}}],["directive",{"_index":29,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["directives",{"_index":73,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["directly",{"_index":1944,"title":{},"body":{"license.html":{}}}],["disablesavegraph",{"_index":1321,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["disclaim",{"_index":2098,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":2489,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":2285,"title":{},"body":{"license.html":{}}}],["discriminatory",{"_index":2439,"title":{},"body":{"license.html":{}}}],["dismiss",{"_index":1279,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["display",{"_index":609,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"license.html":{}}}],["displayed",{"_index":2291,"title":{},"body":{"license.html":{}}}],["displayname",{"_index":447,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["displays",{"_index":1970,"title":{},"body":{"license.html":{}}}],["distinguishing",{"_index":2478,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":1775,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":2544,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":2444,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":1915,"title":{},"body":{"license.html":{}}}],["docsto",{"_index":1747,"title":{},"body":{"index.html":{}}}],["document",{"_index":1778,"title":{},"body":{"license.html":{}}}],["document.createelement('canvas",{"_index":1239,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["documentation",{"_index":1555,"title":{},"body":{"coverage.html":{}}}],["documentations",{"_index":1734,"title":{},"body":{"index.html":{}}}],["documented",{"_index":2269,"title":{},"body":{"license.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["domains",{"_index":1886,"title":{},"body":{"license.html":{}}}],["doubtful",{"_index":2223,"title":{},"body":{"license.html":{}}}],["download",{"_index":1649,"title":{},"body":{"miscellaneous/functions.html":{}}}],["downloading",{"_index":1275,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["downstream",{"_index":2361,"title":{},"body":{"license.html":{}}}],["drawer",{"_index":1468,"title":{},"body":{"components/SettingsComponent.html":{}}}],["durable",{"_index":2160,"title":{},"body":{"license.html":{}}}],["duration",{"_index":622,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["dwelling",{"_index":2221,"title":{},"body":{"license.html":{}}}],["dynamic",{"_index":1605,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":2028,"title":{},"body":{"license.html":{}}}],["e",{"_index":2198,"title":{},"body":{"license.html":{}}}],["each",{"_index":1925,"title":{},"body":{"license.html":{}}}],["earlier",{"_index":1938,"title":{},"body":{"license.html":{}}}],["easy",{"_index":1699,"title":{},"body":{"index.html":{}}}],["effect",{"_index":2522,"title":{},"body":{"license.html":{}}}],["effected",{"_index":2096,"title":{},"body":{"license.html":{}}}],["effective",{"_index":2076,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":1906,"title":{},"body":{"license.html":{}}}],["efforts",{"_index":2377,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":2549,"title":{},"body":{"license.html":{}}}],["element",{"_index":28,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["embodied",{"_index":2155,"title":{},"body":{"license.html":{}}}],["employer",{"_index":2562,"title":{},"body":{"license.html":{}}}],["enable",{"_index":2007,"title":{},"body":{"license.html":{}}}],["enabled",{"_index":920,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["enables",{"_index":1962,"title":{},"body":{"license.html":{}}}],["enablesavegraph",{"_index":1322,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["encapsulate",{"_index":1543,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["encapsulating",{"_index":973,"title":{},"body":{"modules/CurveModule.html":{},"modules/HonorCodePopupModule.html":{}}}],["encapsution",{"_index":1412,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{}}}],["end",{"_index":2532,"title":{},"body":{"license.html":{}}}],["enforce",{"_index":2414,"title":{},"body":{"license.html":{}}}],["enforcing",{"_index":2102,"title":{},"body":{"license.html":{}}}],["ensure",{"_index":2195,"title":{},"body":{"license.html":{}}}],["entered",{"_index":2450,"title":{},"body":{"license.html":{}}}],["entire",{"_index":1397,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"license.html":{}}}],["entirely",{"_index":2465,"title":{},"body":{"license.html":{}}}],["entity",{"_index":2366,"title":{},"body":{"license.html":{}}}],["entry",{"_index":742,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["entry.y1",{"_index":745,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["entry.y2",{"_index":735,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["entry.y3",{"_index":737,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["entry.y4",{"_index":739,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["enum",{"_index":448,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["enumerations",{"_index":1638,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":1594,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["equivalent",{"_index":2051,"title":{},"body":{"license.html":{}}}],["erroneously",{"_index":1860,"title":{},"body":{"license.html":{}}}],["error(\"invalid",{"_index":786,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["escape",{"_index":1524,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["essential",{"_index":2010,"title":{},"body":{"license.html":{}}}],["even",{"_index":1732,"title":{},"body":{"index.html":{},"license.html":{}}}],["event",{"_index":902,"title":{},"body":{"components/CurveHighChartComponent.html":{},"license.html":{}}}],["eventemitter",{"_index":1481,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["everyone",{"_index":1772,"title":{},"body":{"license.html":{}}}],["exact",{"_index":1935,"title":{},"body":{"license.html":{}}}],["example",{"_index":1827,"title":{},"body":{"license.html":{}}}],["except",{"_index":1950,"title":{},"body":{"license.html":{}}}],["exceptions",{"_index":2274,"title":{},"body":{"license.html":{}}}],["excluded",{"_index":2210,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":2453,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":2542,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":2404,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":2055,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":2459,"title":{},"body":{"license.html":{}}}],["executable",{"_index":2000,"title":{},"body":{"license.html":{}}}],["execute",{"_index":2243,"title":{},"body":{"license.html":{}}}],["executing",{"_index":1951,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":2378,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":2097,"title":{},"body":{"license.html":{}}}],["exif",{"_index":1645,"title":{},"body":{"miscellaneous/functions.html":{}}}],["exifimage",{"_index":1253,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["existing",{"_index":1725,"title":{},"body":{"index.html":{}}}],["expected",{"_index":2233,"title":{},"body":{"license.html":{}}}],["expects",{"_index":2232,"title":{},"body":{"license.html":{}}}],["explains",{"_index":1850,"title":{},"body":{"license.html":{}}}],["explicitly",{"_index":2044,"title":{},"body":{"license.html":{}}}],["export",{"_index":23,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"modules/CurveModule.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"interfaces/MyChart.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyData.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["exporting",{"_index":922,"title":{},"body":{"components/CurveHighChartComponent.html":{},"injectables/HonorCodeChartService.html":{},"dependencies.html":{}}}],["exports",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CurveModule.html":{},"modules/HonorCodePopupModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"overview.html":{}}}],["express",{"_index":2410,"title":{},"body":{"license.html":{}}}],["expressed",{"_index":2491,"title":{},"body":{"license.html":{}}}],["expressly",{"_index":2321,"title":{},"body":{"license.html":{}}}],["extend",{"_index":1889,"title":{},"body":{"license.html":{}}}],["extended",{"_index":2438,"title":{},"body":{"license.html":{}}}],["extensions",{"_index":2138,"title":{},"body":{"license.html":{}}}],["extent",{"_index":1973,"title":{},"body":{"license.html":{}}}],["extra",{"_index":477,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["extra_bold",{"_index":459,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["extract",{"_index":1750,"title":{},"body":{"index.html":{}}}],["f",{"_index":2303,"title":{},"body":{"license.html":{}}}],["f5f0f6",{"_index":487,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["facilities",{"_index":2057,"title":{},"body":{"license.html":{}}}],["fact",{"_index":1301,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["fails",{"_index":2334,"title":{},"body":{"license.html":{}}}],["failure",{"_index":2516,"title":{},"body":{"license.html":{}}}],["fair",{"_index":2050,"title":{},"body":{"license.html":{}}}],["false",{"_index":602,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"injectables/HonorCodePopupService.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":273,"title":{},"body":{"components/AppearanceComponent.html":{},"components/MenubarComponent.html":{},"license.html":{}}}],["family.displayname",{"_index":274,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["fashion",{"_index":1932,"title":{},"body":{"license.html":{}}}],["favor",{"_index":2226,"title":{},"body":{"license.html":{}}}],["feature",{"_index":1059,"title":{},"body":{"injectables/CurveService.html":{},"license.html":{}}}],["fee",{"_index":1831,"title":{},"body":{"license.html":{}}}],["ffffff",{"_index":1249,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["field",{"_index":285,"title":{},"body":{"components/AppearanceComponent.html":{},"components/CurveChartFormComponent.html":{},"modules/CurveModule.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"modules/CurveModule.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"interfaces/MyChart.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyData.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["filename",{"_index":1260,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["files",{"_index":2026,"title":{},"body":{"license.html":{}}}],["finally",{"_index":1893,"title":{},"body":{"license.html":{}}}],["find",{"_index":2191,"title":{},"body":{"license.html":{}}}],["first",{"_index":2342,"title":{},"body":{"license.html":{}}}],["fit",{"_index":859,"title":{},"body":{"components/CurveComponent.html":{}}}],["fitness",{"_index":2494,"title":{},"body":{"license.html":{}}}],["fix",{"_index":1658,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fixed",{"_index":2159,"title":{},"body":{"license.html":{}}}],["flat",{"_index":1419,"title":{},"body":{"components/MenubarComponent.html":{}}}],["flex",{"_index":856,"title":{},"body":{"components/CurveComponent.html":{},"components/MenubarComponent.html":{}}}],["flip",{"_index":1354,"title":{},"body":{"components/LineFormComponent.html":{}}}],["flow",{"_index":857,"title":{},"body":{"components/CurveComponent.html":{},"license.html":{}}}],["follow",{"_index":1710,"title":{},"body":{"index.html":{},"license.html":{}}}],["following",{"_index":2408,"title":{},"body":{"license.html":{}}}],["font",{"_index":272,"title":{},"body":{"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["fontfamily",{"_index":217,"title":{},"body":{"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["fontfamily.comic_neue",{"_index":485,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["fontfamily.roboto",{"_index":484,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["fontkey",{"_index":378,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["fontlist",{"_index":206,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["fontsize",{"_index":219,"title":{},"body":{"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["fontsizekey",{"_index":379,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["fontsizes",{"_index":323,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["fontsizes.default",{"_index":480,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["fontsizes.large",{"_index":481,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["fontsizes.larger",{"_index":482,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["fontsizes.small",{"_index":479,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["fontsizeslist",{"_index":207,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["fontstyle",{"_index":218,"title":{},"body":{"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["fontstylekey",{"_index":380,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["fontstyles",{"_index":327,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["fontstyles.bold",{"_index":475,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["fontstyles.default",{"_index":474,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["fontstyles.extra_bold",{"_index":476,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["fontstyleslist",{"_index":208,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["forbid",{"_index":2095,"title":{},"body":{"license.html":{}}}],["force",{"_index":2052,"title":{},"body":{"license.html":{}}}],["forceoverride",{"_index":620,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["form",{"_index":284,"title":{},"body":{"components/AppearanceComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"modules/CurveModule.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"license.html":{}}}],["form'},{'name",{"_index":43,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["form.component",{"_index":979,"title":{},"body":{"modules/CurveModule.html":{}}}],["form.component.html",{"_index":650,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/LineFormComponent.html":{}}}],["form.component.scss",{"_index":649,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/LineFormComponent.html":{}}}],["form.component.ts",{"_index":648,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/LineFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:12",{"_index":651,"title":{},"body":{"components/CurveChartFormComponent.html":{}}}],["form.component.ts:22",{"_index":1364,"title":{},"body":{"components/LineFormComponent.html":{}}}],["form.component.ts:29",{"_index":1366,"title":{},"body":{"components/LineFormComponent.html":{}}}],["form.component.ts:31",{"_index":1368,"title":{},"body":{"components/LineFormComponent.html":{}}}],["form.component.ts:33",{"_index":1373,"title":{},"body":{"components/LineFormComponent.html":{}}}],["form.component.ts:34",{"_index":1359,"title":{},"body":{"components/LineFormComponent.html":{}}}],["form.component.ts:41",{"_index":1361,"title":{},"body":{"components/LineFormComponent.html":{}}}],["form.component.ts:46",{"_index":1363,"title":{},"body":{"components/LineFormComponent.html":{}}}],["form.component.ts:50",{"_index":1360,"title":{},"body":{"components/LineFormComponent.html":{}}}],["form/curve",{"_index":647,"title":{},"body":{"components/CurveChartFormComponent.html":{},"modules/CurveModule.html":{},"coverage.html":{}}}],["form/line",{"_index":978,"title":{},"body":{"modules/CurveModule.html":{},"components/LineFormComponent.html":{},"coverage.html":{}}}],["format",{"_index":1672,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["formattime",{"_index":1227,"title":{},"body":{"injectables/HonorCodeChartService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["formattime(getdatestring",{"_index":1266,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["formattime(time",{"_index":1258,"title":{},"body":{"injectables/HonorCodeChartService.html":{},"miscellaneous/functions.html":{}}}],["formbuilder",{"_index":1283,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["formcontrol",{"_index":240,"title":{},"body":{"components/AppearanceComponent.html":{},"components/CurveChartFormComponent.html":{},"components/LineFormComponent.html":{}}}],["formcontrol(colortheme",{"_index":256,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["formcontrol(curvecounts.one",{"_index":1367,"title":{},"body":{"components/LineFormComponent.html":{}}}],["formcontrol(fontfamily",{"_index":258,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["formcontrol(fontsize",{"_index":260,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["formcontrol(fontstyle",{"_index":259,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["formcontrol(this.service.getcharttitle",{"_index":656,"title":{},"body":{"components/CurveChartFormComponent.html":{}}}],["formcontrol(this.service.getdatalabel",{"_index":658,"title":{},"body":{"components/CurveChartFormComponent.html":{}}}],["formcontrol(this.service.getxaxislabel",{"_index":660,"title":{},"body":{"components/CurveChartFormComponent.html":{}}}],["formcontrol(this.service.getyaxislabel",{"_index":662,"title":{},"body":{"components/CurveChartFormComponent.html":{}}}],["formgroup",{"_index":209,"title":{},"body":{"components/AppearanceComponent.html":{},"components/CurveChartFormComponent.html":{},"components/HonorCodePopupComponent.html":{}}}],["forms",{"_index":2149,"title":{},"body":{"license.html":{}}}],["formsmodule",{"_index":983,"title":{},"body":{"modules/CurveModule.html":{},"modules/HonorCodePopupModule.html":{}}}],["found",{"_index":184,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"license.html":{}}}],["found'},{'name",{"_index":61,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["found.component",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["found.component.html",{"_index":1454,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.scss",{"_index":1453,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":1452,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found/page",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found:page",{"_index":183,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["foundation",{"_index":1769,"title":{},"body":{"license.html":{}}}],["four",{"_index":721,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"miscellaneous/enumerations.html":{}}}],["framework",{"_index":1717,"title":{},"body":{"index.html":{}}}],["free",{"_index":1767,"title":{},"body":{"license.html":{}}}],["freedom",{"_index":1788,"title":{},"body":{"license.html":{}}}],["freedoms",{"_index":1835,"title":{},"body":{"license.html":{}}}],["fu",{"_index":1757,"title":{},"body":{"index.html":{}}}],["fulfilling",{"_index":2079,"title":{},"body":{"license.html":{}}}],["full",{"_index":179,"title":{},"body":{"modules/AppRoutingModule.html":{},"license.html":{}}}],["functinoality",{"_index":1724,"title":{},"body":{"index.html":{}}}],["function",{"_index":192,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functioning",{"_index":2246,"title":{},"body":{"license.html":{}}}],["functions",{"_index":1641,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fundamentally",{"_index":1869,"title":{},"body":{"license.html":{}}}],["further",{"_index":2182,"title":{},"body":{"license.html":{}}}],["future",{"_index":1891,"title":{},"body":{"license.html":{}}}],["general",{"_index":1760,"title":{},"body":{"license.html":{}}}],["generally",{"_index":2023,"title":{},"body":{"license.html":{}}}],["generate",{"_index":185,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["generatechartconfig",{"_index":539,"title":{},"body":{"classes/CurveChart.html":{},"interfaces/MyChart.html":{}}}],["generatechartconfig(data",{"_index":525,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"interfaces/MyChart.html":{}}}],["generatechartoptions",{"_index":540,"title":{},"body":{"classes/CurveChart.html":{},"interfaces/MyChart.html":{}}}],["generatechartoptions(chartinfo",{"_index":528,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"interfaces/MyChart.html":{}}}],["generatecurvechartconfig",{"_index":541,"title":{},"body":{"classes/CurveChart.html":{}}}],["generatecurvechartconfig(chartdata",{"_index":547,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["generatefilename",{"_index":1200,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["generatefilename(charttype",{"_index":1206,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["generatesignature",{"_index":1201,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["generatesignature(signature",{"_index":1210,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["getbackgroundcolor",{"_index":428,"title":{},"body":{"classes/ChartColor.html":{}}}],["getbackgroundcolor(mode",{"_index":437,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["getchartbackgroundcolor",{"_index":293,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["getchartcolormode",{"_index":294,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["getchartfontcolor",{"_index":295,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["getchartinfo",{"_index":802,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"interfaces/MyStorage.html":{}}}],["getchartinfoobject",{"_index":1008,"title":{},"body":{"injectables/CurveService.html":{}}}],["getchartjs",{"_index":1009,"title":{},"body":{"injectables/CurveService.html":{}}}],["getcharttitle",{"_index":497,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"interfaces/MyChart.html":{}}}],["getcolortheme",{"_index":296,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{}}}],["getcurvecount",{"_index":775,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{}}}],["getcurvedata",{"_index":864,"title":{},"body":{"classes/CurveData.html":{}}}],["getcurvedata(curvecount",{"_index":872,"title":{},"body":{"classes/CurveData.html":{}}}],["getdata",{"_index":805,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"interfaces/MyData.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{}}}],["getdataarray",{"_index":741,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"interfaces/MyData.html":{}}}],["getdatalabel",{"_index":498,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"interfaces/MyChart.html":{}}}],["getdatalabelarray",{"_index":1010,"title":{},"body":{"injectables/CurveService.html":{}}}],["getdatalabelbycurvecount",{"_index":679,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["getdatalabelbycurvecount(curvecount",{"_index":690,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["getdataobject",{"_index":1011,"title":{},"body":{"injectables/CurveService.html":{}}}],["getdatestring",{"_index":1228,"title":{},"body":{"injectables/HonorCodeChartService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getdefaultdata",{"_index":865,"title":{},"body":{"classes/CurveData.html":{}}}],["getdefaultstorageobject",{"_index":680,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["getfont",{"_index":381,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["getfontcolor",{"_index":429,"title":{},"body":{"classes/ChartColor.html":{}}}],["getfontcolor(mode",{"_index":440,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["getfontfamily",{"_index":297,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["getfontfamilyclassname",{"_index":298,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["getfontfamilyclassname(font",{"_index":320,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["getfontfamilylists",{"_index":483,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["getfontsize",{"_index":299,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{}}}],["getfontsizeclassname",{"_index":300,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["getfontsizeclassname(fontsize",{"_index":324,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["getfontsizelists",{"_index":478,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["getfontstyle",{"_index":301,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{}}}],["getfontstyleclassname",{"_index":302,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["getfontstyleclassname(fontstyle",{"_index":328,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["getfontstylelists",{"_index":473,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["getformgroup",{"_index":212,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["getformgroup(colortheme",{"_index":216,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["gethighchart",{"_index":1012,"title":{},"body":{"injectables/CurveService.html":{}}}],["getinterface",{"_index":808,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"interfaces/MyStorage.html":{}}}],["getinterfaceobject",{"_index":1013,"title":{},"body":{"injectables/CurveService.html":{}}}],["getismagnitudeon",{"_index":777,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{}}}],["getlinecolor",{"_index":430,"title":{},"body":{"classes/ChartColor.html":{}}}],["getlinecolor(index",{"_index":442,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["getstorageobject",{"_index":681,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["gettable",{"_index":1144,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"interfaces/MyTable.html":{}}}],["gettablelabels",{"_index":682,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["getthemelists",{"_index":468,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["getting",{"_index":1691,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettoolsitename",{"_index":1558,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["gettoolsitename($localize`:about:about",{"_index":173,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["gettoolsitename($localize`:curve:curve",{"_index":174,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["gettoolsitename($localize`:home:home",{"_index":172,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["gettoolsitename($localize`:settings:settings",{"_index":176,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["gettoolsitename(tool",{"_index":193,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/functions.html":{}}}],["getxaxislabel",{"_index":499,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"interfaces/MyChart.html":{}}}],["getyaxislabel",{"_index":500,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"interfaces/MyChart.html":{}}}],["github",{"_index":1736,"title":{},"body":{"index.html":{}}}],["give",{"_index":2116,"title":{},"body":{"license.html":{}}}],["given",{"_index":1683,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["gives",{"_index":2130,"title":{},"body":{"license.html":{}}}],["giving",{"_index":1844,"title":{},"body":{"license.html":{}}}],["gnu",{"_index":1759,"title":{},"body":{"license.html":{}}}],["goal",{"_index":1721,"title":{},"body":{"index.html":{}}}],["good",{"_index":1728,"title":{},"body":{"index.html":{}}}],["governed",{"_index":2277,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":1840,"title":{},"body":{"license.html":{}}}],["grant",{"_index":2298,"title":{},"body":{"license.html":{}}}],["granted",{"_index":2040,"title":{},"body":{"license.html":{}}}],["grants",{"_index":2355,"title":{},"body":{"license.html":{}}}],["graph",{"_index":69,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"coverage.html":{},"modules.html":{}}}],["graphing",{"_index":187,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/MenubarComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["gratis",{"_index":1830,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":2534,"title":{},"body":{"license.html":{}}}],["green",{"_index":433,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["guarantee",{"_index":1792,"title":{},"body":{"license.html":{}}}],["gui",{"_index":2560,"title":{},"body":{"license.html":{}}}],["h2",{"_index":1307,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["handsontable",{"_index":1151,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"interfaces/MyTable.html":{},"dependencies.html":{},"index.html":{}}}],["handsontable/angular",{"_index":989,"title":{},"body":{"modules/CurveModule.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"dependencies.html":{}}}],["handsontable/registry",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["having",{"_index":2054,"title":{},"body":{"license.html":{}}}],["hc_dark_theme",{"_index":456,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["hc_exporting",{"_index":1232,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["hc_exporting(highcharts",{"_index":1236,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["hc_offline_exporting",{"_index":1234,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["hc_offline_exporting(highcharts",{"_index":1237,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["hc_theme",{"_index":454,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["height",{"_index":852,"title":{},"body":{"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/SettingsComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["here",{"_index":1739,"title":{},"body":{"index.html":{}}}],["hereafter",{"_index":2400,"title":{},"body":{"license.html":{}}}],["hh:mm:ss",{"_index":1674,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hidden",{"_index":1187,"title":{},"body":{"components/CurveTableComponent.html":{}}}],["high",{"_index":470,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"coverage.html":{}}}],["high_contrast",{"_index":453,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["high_contrast_dark",{"_index":455,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["highchart",{"_index":885,"title":{},"body":{"components/CurveHighChartComponent.html":{},"injectables/CurveService.html":{}}}],["highchart'},{'name",{"_index":47,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["highchart/curve",{"_index":884,"title":{},"body":{"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"coverage.html":{}}}],["highcharts",{"_index":888,"title":{},"body":{"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"injectables/CurveService.html":{},"injectables/HonorCodeChartService.html":{},"dependencies.html":{}}}],["highcharts.chart",{"_index":900,"title":{},"body":{"components/CurveHighChartComponent.html":{},"injectables/CurveService.html":{},"injectables/HonorCodeChartService.html":{}}}],["highcharts.options",{"_index":915,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["highcharts/modules/exporting",{"_index":1233,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["highcharts/modules/offline",{"_index":1235,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["highchartschartmodule",{"_index":999,"title":{},"body":{"modules/CurveModule.html":{}}}],["holder",{"_index":2328,"title":{},"body":{"license.html":{}}}],["holders",{"_index":2284,"title":{},"body":{"license.html":{}}}],["home",{"_index":171,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":51,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["home.component.html",{"_index":1195,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1194,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":50,"title":{"components/HomeComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["honor",{"_index":53,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{}}}],["honorcodechartservice",{"_index":833,"title":{"injectables/HonorCodeChartService.html":{}},"body":{"components/CurveComponent.html":{},"injectables/HonorCodeChartService.html":{},"coverage.html":{}}}],["honorcodepopupcomponent",{"_index":52,"title":{"components/HonorCodePopupComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["honorcodepopupmodule",{"_index":116,"title":{"modules/HonorCodePopupModule.html":{}},"body":{"modules/AppModule.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"modules.html":{},"overview.html":{}}}],["honorcodepopupservice",{"_index":831,"title":{"injectables/HonorCodePopupService.html":{}},"body":{"components/CurveComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"coverage.html":{}}}],["honorcodeservice",{"_index":830,"title":{},"body":{"components/CurveComponent.html":{}}}],["honored",{"_index":1323,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["hope",{"_index":2545,"title":{},"body":{"license.html":{}}}],["hosts",{"_index":2192,"title":{},"body":{"license.html":{}}}],["hotregisterer",{"_index":1143,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["hottablemodule",{"_index":988,"title":{},"body":{"modules/CurveModule.html":{}}}],["hottableregisterer",{"_index":1147,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["household",{"_index":2217,"title":{},"body":{"license.html":{}}}],["hover",{"_index":603,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["html",{"_index":27,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["https://fsf.org",{"_index":1771,"title":{},"body":{"license.html":{}}}],["https://stackoverflow.com/a/30407959/1154380",{"_index":1655,"title":{},"body":{"miscellaneous/functions.html":{}}}],["https://www.gnu.org/licenses",{"_index":2565,"title":{},"body":{"license.html":{}}}],["https://www.gnu.org/licenses/why",{"_index":2575,"title":{},"body":{"license.html":{}}}],["hypothetical",{"_index":2559,"title":{},"body":{"license.html":{}}}],["i18n",{"_index":1752,"title":{},"body":{"index.html":{}}}],["icons",{"_index":1616,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":538,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["identifiable",{"_index":2428,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":1556,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":1382,"title":{},"body":{"components/LineFormComponent.html":{}}}],["image",{"_index":1215,"title":{},"body":{"injectables/HonorCodeChartService.html":{},"miscellaneous/functions.html":{}}}],["image/jpeg",{"_index":1262,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["imagination",{"_index":1694,"title":{},"body":{"index.html":{}}}],["implement",{"_index":1723,"title":{},"body":{"index.html":{},"license.html":{}}}],["implementation",{"_index":2008,"title":{},"body":{"license.html":{}}}],["implements",{"_index":199,"title":{},"body":{"components/AppearanceComponent.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["implied",{"_index":2454,"title":{},"body":{"license.html":{}}}],["import",{"_index":20,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"modules/CurveModule.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"interfaces/MyChart.html":{},"interfaces/MyTable.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"license.html":{}}}],["importing",{"_index":2391,"title":{},"body":{"license.html":{}}}],["imports",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CurveModule.html":{},"modules/HonorCodePopupModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["impose",{"_index":2308,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":2456,"title":{},"body":{"license.html":{}}}],["inability",{"_index":2510,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":2513,"title":{},"body":{"license.html":{}}}],["inc",{"_index":1770,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":2507,"title":{},"body":{"license.html":{}}}],["include",{"_index":2001,"title":{},"body":{"license.html":{}}}],["included",{"_index":2003,"title":{},"body":{"license.html":{}}}],["includes",{"_index":1955,"title":{},"body":{"license.html":{}}}],["including",{"_index":2019,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":2147,"title":{},"body":{"license.html":{}}}],["incompatible",{"_index":1870,"title":{},"body":{"license.html":{}}}],["incorporating",{"_index":2566,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":2220,"title":{},"body":{"license.html":{}}}],["indemnification",{"_index":2304,"title":{},"body":{"license.html":{}}}],["independent",{"_index":2136,"title":{},"body":{"license.html":{}}}],["index",{"_index":81,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyData.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":2358,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":2318,"title":{},"body":{"license.html":{}}}],["individual",{"_index":2145,"title":{},"body":{"license.html":{}}}],["individuals",{"_index":1878,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":2236,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"modules/CurveModule.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"interfaces/MyChart.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyData.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["inform",{"_index":2202,"title":{},"body":{"license.html":{}}}],["information",{"_index":1052,"title":{},"body":{"injectables/CurveService.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["infringe",{"_index":2356,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":2388,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":1947,"title":{},"body":{"license.html":{}}}],["initiate",{"_index":2381,"title":{},"body":{"license.html":{}}}],["initiating",{"_index":1274,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["initiation",{"_index":1650,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injectable",{"_index":288,"title":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"injectables/CurveService.html":{},"injectables/HonorCodeChartService.html":{},"injectables/HonorCodePopupService.html":{}},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"injectables/CurveService.html":{},"injectables/HonorCodeChartService.html":{},"injectables/HonorCodePopupService.html":{},"coverage.html":{}}}],["injectables",{"_index":289,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"injectables/CurveService.html":{},"injectables/HonorCodeChartService.html":{},"injectables/HonorCodePopupService.html":{},"overview.html":{}}}],["input",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"modules/HonorCodePopupModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{}}}],["inputs",{"_index":1402,"title":{},"body":{"components/MenubarComponent.html":{}}}],["inside",{"_index":1866,"title":{},"body":{"license.html":{}}}],["install",{"_index":1865,"title":{},"body":{"license.html":{}}}],["installation",{"_index":2240,"title":{},"body":{"license.html":{}}}],["installed",{"_index":2257,"title":{},"body":{"license.html":{}}}],["instead",{"_index":2572,"title":{},"body":{"license.html":{}}}],["intact",{"_index":2110,"title":{},"body":{"license.html":{}}}],["intended",{"_index":1791,"title":{},"body":{"license.html":{}}}],["intention",{"_index":2099,"title":{},"body":{"license.html":{}}}],["interaction",{"_index":1965,"title":{},"body":{"license.html":{}}}],["interactive",{"_index":1969,"title":{},"body":{"license.html":{}}}],["interchange",{"_index":2162,"title":{},"body":{"license.html":{}}}],["interest",{"_index":2375,"title":{},"body":{"license.html":{}}}],["interface",{"_index":445,"title":{"interfaces/ChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"interfaces/CurveDataDict.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"interfaces/MyChart.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyData.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{}},"body":{"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"interfaces/MyChart.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyData.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"coverage.html":{},"license.html":{}}}],["interface.ts",{"_index":1447,"title":{},"body":{"interfaces/MyTable.html":{},"coverage.html":{}}}],["interface.ts:4",{"_index":1449,"title":{},"body":{"interfaces/MyTable.html":{}}}],["interface.ts:6",{"_index":1450,"title":{},"body":{"interfaces/MyTable.html":{}}}],["interface.ts:8",{"_index":1448,"title":{},"body":{"interfaces/MyTable.html":{}}}],["interfaceinfo",{"_index":1139,"title":{},"body":{"classes/CurveStorage.html":{},"interfaces/MyStorage.html":{}}}],["interfacekey",{"_index":793,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["interfaces",{"_index":495,"title":{},"body":{"interfaces/ChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"interfaces/CurveDataDict.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"interfaces/MyChart.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyData.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"license.html":{},"overview.html":{}}}],["interfacesubject",{"_index":1007,"title":{},"body":{"injectables/CurveService.html":{}}}],["interfered",{"_index":2248,"title":{},"body":{"license.html":{}}}],["interpretation",{"_index":2520,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":2017,"title":{},"body":{"license.html":{}}}],["intialize",{"_index":303,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["intimate",{"_index":2033,"title":{},"body":{"license.html":{}}}],["intro",{"_index":1702,"title":{},"body":{"index.html":{}}}],["invalidate",{"_index":2131,"title":{},"body":{"license.html":{}}}],["irrevocable",{"_index":2041,"title":{},"body":{"license.html":{}}}],["ismagnitudeon",{"_index":781,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{}}}],["it's",{"_index":1709,"title":{},"body":{"index.html":{}}}],["italic",{"_index":1549,"title":{},"body":{"components/ToolsNavbarComponent.html":{}}}],["item",{"_index":1547,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"license.html":{}}}],["itself",{"_index":2261,"title":{},"body":{"license.html":{}}}],["jpeg",{"_index":1647,"title":{},"body":{"miscellaneous/functions.html":{}}}],["jpegdata",{"_index":1646,"title":{},"body":{"miscellaneous/functions.html":{}}}],["jpg",{"_index":1218,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["json.parse(localstorage.getitem(this.chartinfokey",{"_index":804,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["json.parse(localstorage.getitem(this.colorthemekey",{"_index":406,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["json.parse(localstorage.getitem(this.datakey",{"_index":807,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["json.parse(localstorage.getitem(this.fontkey",{"_index":422,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["json.parse(localstorage.getitem(this.fontsizekey",{"_index":417,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["json.parse(localstorage.getitem(this.fontstylekey",{"_index":412,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["json.parse(localstorage.getitem(this.interfacekey",{"_index":810,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["json.stringify(chartinfoobject",{"_index":813,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["json.stringify(colortheme",{"_index":403,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["json.stringify(data",{"_index":816,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["json.stringify(font",{"_index":419,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["json.stringify(fontsize",{"_index":414,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["json.stringify(fontstyle",{"_index":409,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["json.stringify(interfaceinfo",{"_index":819,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["json.stringify(this.defaultchartinfo",{"_index":821,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["json.stringify(this.defaultdata",{"_index":823,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["json.stringify(this.defaultinterface",{"_index":825,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["june",{"_index":1763,"title":{},"body":{"license.html":{}}}],["keep",{"_index":2109,"title":{},"body":{"license.html":{}}}],["kernel",{"_index":2011,"title":{},"body":{"license.html":{}}}],["key",{"_index":446,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["keys",{"_index":1167,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["kind",{"_index":1961,"title":{},"body":{"license.html":{}}}],["kinds",{"_index":1783,"title":{},"body":{"license.html":{}}}],["know",{"_index":1812,"title":{},"body":{"license.html":{}}}],["knowingly",{"_index":2417,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":2425,"title":{},"body":{"license.html":{}}}],["lab",{"_index":1705,"title":{},"body":{"index.html":{}}}],["label",{"_index":1042,"title":{},"body":{"injectables/CurveService.html":{}}}],["label.trim",{"_index":733,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["labels",{"_index":550,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/SimpleGraphButtonComponent.html":{}}}],["language",{"_index":1751,"title":{},"body":{"index.html":{},"license.html":{}}}],["large",{"_index":462,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"components/ToolsNavbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["larger",{"_index":463,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["later",{"_index":2481,"title":{},"body":{"license.html":{}}}],["law",{"_index":1949,"title":{},"body":{"license.html":{}}}],["laws",{"_index":1920,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":2386,"title":{},"body":{"license.html":{}}}],["leading",{"_index":1667,"title":{},"body":{"miscellaneous/functions.html":{}}}],["left",{"_index":1389,"title":{},"body":{"components/LineFormComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["legal",{"_index":1845,"title":{},"body":{"license.html":{}}}],["legend",{"_index":26,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"overview.html":{}}}],["less",{"_index":1659,"title":{},"body":{"miscellaneous/functions.html":{}}}],["lesser",{"_index":2571,"title":{},"body":{"license.html":{}}}],["level",{"_index":1703,"title":{},"body":{"index.html":{}}}],["lgpl.html",{"_index":2576,"title":{},"body":{"license.html":{}}}],["liability",{"_index":2287,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1946,"title":{},"body":{"license.html":{}}}],["libaries",{"_index":1718,"title":{},"body":{"index.html":{}}}],["libraries",{"_index":1999,"title":{},"body":{"license.html":{}}}],["library",{"_index":2211,"title":{},"body":{"license.html":{}}}],["license",{"_index":1758,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":1924,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":1926,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":1928,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":1784,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":2360,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":2296,"title":{},"body":{"license.html":{}}}],["light",{"_index":449,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["light_theme",{"_index":450,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["likewise",{"_index":2353,"title":{},"body":{"license.html":{}}}],["limit",{"_index":2100,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":2504,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2492,"title":{},"body":{"license.html":{}}}],["limiting",{"_index":2286,"title":{},"body":{"license.html":{}}}],["line",{"_index":57,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"license.html":{}}}],["linear",{"_index":610,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["linechartdata",{"_index":573,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["linechartoptions",{"_index":575,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["linecolordarkarray",{"_index":426,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["linecolorlightarray",{"_index":427,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["lineformcomponent",{"_index":56,"title":{"components/LineFormComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["link",{"_index":1001,"title":{},"body":{"modules/CurveModule.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"license.html":{}}}],["linked",{"_index":2029,"title":{},"body":{"license.html":{}}}],["linking",{"_index":2569,"title":{},"body":{"license.html":{}}}],["list",{"_index":1464,"title":{},"body":{"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"license.html":{}}}],["literal",{"_index":2587,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["litigation",{"_index":2382,"title":{},"body":{"license.html":{}}}],["local",{"_index":2521,"title":{},"body":{"license.html":{}}}],["localize`:page",{"_index":182,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["localize`:site",{"_index":195,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["localstorage.getitem(this.chartinfokey",{"_index":803,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["localstorage.getitem(this.colorthemekey",{"_index":404,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["localstorage.getitem(this.datakey",{"_index":806,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["localstorage.getitem(this.fontkey",{"_index":420,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["localstorage.getitem(this.fontsizekey",{"_index":415,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["localstorage.getitem(this.fontstylekey",{"_index":410,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["localstorage.getitem(this.interfacekey",{"_index":809,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["localstorage.setitem(this.chartinfokey",{"_index":812,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["localstorage.setitem(this.colorthemekey",{"_index":402,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["localstorage.setitem(this.datakey",{"_index":815,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["localstorage.setitem(this.fontkey",{"_index":418,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["localstorage.setitem(this.fontsizekey",{"_index":413,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["localstorage.setitem(this.fontstylekey",{"_index":408,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["localstorage.setitem(this.interfacekey",{"_index":818,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["long",{"_index":1730,"title":{},"body":{"index.html":{},"license.html":{}}}],["loss",{"_index":2511,"title":{},"body":{"license.html":{}}}],["losses",{"_index":2514,"title":{},"body":{"license.html":{}}}],["machine",{"_index":2152,"title":{},"body":{"license.html":{}}}],["made",{"_index":1302,"title":{},"body":{"components/HonorCodePopupComponent.html":{},"license.html":{}}}],["magnitude",{"_index":1353,"title":{},"body":{"components/LineFormComponent.html":{}}}],["magslider",{"_index":1356,"title":{},"body":{"components/LineFormComponent.html":{}}}],["mail",{"_index":2551,"title":{},"body":{"license.html":{}}}],["maintain",{"_index":2186,"title":{},"body":{"license.html":{}}}],["maintainaspectratio",{"_index":601,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["maintainble",{"_index":1729,"title":{},"body":{"index.html":{}}}],["major",{"_index":2005,"title":{},"body":{"license.html":{}}}],["make",{"_index":1697,"title":{},"body":{"index.html":{},"license.html":{}}}],["makerawdata",{"_index":542,"title":{},"body":{"classes/CurveChart.html":{}}}],["makerawdata(datadict",{"_index":553,"title":{},"body":{"classes/CurveChart.html":{}}}],["makes",{"_index":2070,"title":{},"body":{"license.html":{}}}],["making",{"_index":1934,"title":{},"body":{"license.html":{}}}],["manner",{"_index":2401,"title":{},"body":{"license.html":{}}}],["manufacturer",{"_index":1868,"title":{},"body":{"license.html":{}}}],["march",{"_index":2451,"title":{},"body":{"license.html":{}}}],["margin",{"_index":1308,"title":{},"body":{"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["marked",{"_index":1856,"title":{},"body":{"license.html":{}}}],["marks",{"_index":2302,"title":{},"body":{"license.html":{}}}],["masks",{"_index":1922,"title":{},"body":{"license.html":{}}}],["mat",{"_index":283,"title":{},"body":{"components/AppearanceComponent.html":{},"components/CurveChartFormComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["matbutton",{"_index":1334,"title":{},"body":{"injectables/HonorCodePopupService.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["matbuttonmodule",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"modules/HonorCodePopupModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["matbuttontogglemodule",{"_index":980,"title":{},"body":{"modules/CurveModule.html":{}}}],["matching",{"_index":76,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"modules/CurveModule.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"interfaces/MyChart.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyData.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":1327,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["matdialogmodule",{"_index":1317,"title":{},"body":{"modules/HonorCodePopupModule.html":{}}}],["matdialogref",{"_index":1282,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["material",{"_index":1719,"title":{},"body":{"index.html":{},"license.html":{}}}],["materially",{"_index":2262,"title":{},"body":{"license.html":{}}}],["matformfieldmodule",{"_index":985,"title":{},"body":{"modules/CurveModule.html":{}}}],["maticonmodule",{"_index":994,"title":{},"body":{"modules/CurveModule.html":{},"modules/HonorCodePopupModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["matinputmodule",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"modules/HonorCodePopupModule.html":{}}}],["matlegacybuttonmodule",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"modules/HonorCodePopupModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["matlegacydialog",{"_index":1341,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["matlegacydialogmodule",{"_index":1316,"title":{},"body":{"modules/HonorCodePopupModule.html":{}}}],["matlegacydialogref",{"_index":1288,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["matlegacyformfieldmodule",{"_index":984,"title":{},"body":{"modules/CurveModule.html":{}}}],["matlegacyinputmodule",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"modules/HonorCodePopupModule.html":{}}}],["matlegacylistmodule",{"_index":1462,"title":{},"body":{"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["matlegacyselectmodule",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{}}}],["matlegacyslidetoggle",{"_index":1375,"title":{},"body":{"components/LineFormComponent.html":{}}}],["matlegacyslidetogglemodule",{"_index":996,"title":{},"body":{"modules/CurveModule.html":{}}}],["matlistmodule",{"_index":1463,"title":{},"body":{"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["matprogressspinner",{"_index":1337,"title":{},"body":{"injectables/HonorCodePopupService.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["matprogressspinnermodule",{"_index":1506,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["matselectmodule",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{}}}],["matsidenav",{"_index":1535,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["matsidenavmodule",{"_index":1460,"title":{},"body":{"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["matslidetoggle",{"_index":1370,"title":{},"body":{"components/LineFormComponent.html":{}}}],["matslidetogglemodule",{"_index":997,"title":{},"body":{"modules/CurveModule.html":{}}}],["mattoolbarmodule",{"_index":1409,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{}}}],["meaning",{"_index":2312,"title":{},"body":{"license.html":{}}}],["means",{"_index":1919,"title":{},"body":{"license.html":{}}}],["measure",{"_index":2078,"title":{},"body":{"license.html":{}}}],["measures",{"_index":2092,"title":{},"body":{"license.html":{}}}],["medium",{"_index":1393,"title":{},"body":{"components/LineFormComponent.html":{},"license.html":{}}}],["meet",{"_index":2119,"title":{},"body":{"license.html":{}}}],["meets",{"_index":1984,"title":{},"body":{"license.html":{}}}],["menu",{"_index":1395,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"license.html":{}}}],["menubar",{"_index":1398,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["menubar'},{'name",{"_index":59,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["menubar.component.html",{"_index":1400,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{}}}],["menubar.component.scss",{"_index":1399,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{}}}],["menubar/menubar.component",{"_index":1539,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["menubarcomponent",{"_index":58,"title":{"components/MenubarComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["menubarmodule",{"_index":1413,"title":{"modules/MenubarModule.html":{}},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"modules.html":{},"overview.html":{}}}],["merchantability",{"_index":2493,"title":{},"body":{"license.html":{}}}],["mere",{"_index":1964,"title":{},"body":{"license.html":{}}}],["merging",{"_index":2371,"title":{},"body":{"license.html":{}}}],["met",{"_index":2043,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["methods",{"_index":210,"title":{},"body":{"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyData.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"license.html":{}}}],["miscellaneous",{"_index":1637,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["misrepresentation",{"_index":2292,"title":{},"body":{"license.html":{}}}],["modalref",{"_index":1346,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["modalref.afterclosed",{"_index":1349,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["mode",{"_index":439,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"license.html":{}}}],["model",{"_index":2168,"title":{},"body":{"license.html":{}}}],["modern",{"_index":1727,"title":{},"body":{"index.html":{}}}],["modification",{"_index":1916,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":1987,"title":{},"body":{"license.html":{}}}],["modified",{"_index":1855,"title":{},"body":{"license.html":{}}}],["modifies",{"_index":2123,"title":{},"body":{"license.html":{}}}],["modify",{"_index":1825,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":1953,"title":{},"body":{"license.html":{}}}],["module",{"_index":102,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CurveModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/MenubarModule.html":{},"modules/SettingsModule.html":{},"modules/SimpleDataButtonModule.html":{},"modules/SimpleGraphButtonModule.html":{},"modules/ToolsNavbarModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/MenubarModule.html":{},"modules/SettingsModule.html":{},"modules/SimpleDataButtonModule.html":{},"modules/SimpleGraphButtonModule.html":{},"modules/ToolsNavbarModule.html":{},"overview.html":{}}}],["modules",{"_index":104,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CurveModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/MenubarModule.html":{},"modules/SettingsModule.html":{},"modules/SimpleDataButtonModule.html":{},"modules/SimpleGraphButtonModule.html":{},"modules/ToolsNavbarModule.html":{},"modules.html":{},"overview.html":{}}}],["moon",{"_index":1544,"title":{},"body":{"components/ToolsNavbarComponent.html":{}}}],["more",{"_index":2170,"title":{},"body":{"license.html":{}}}],["moreover",{"_index":2340,"title":{},"body":{"license.html":{}}}],["mt",{"_index":1417,"title":{},"body":{"components/MenubarComponent.html":{}}}],["multi",{"_index":1712,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":1687,"title":{},"body":{"miscellaneous/functions.html":{}}}],["myaction",{"_index":836,"title":{},"body":{"components/CurveComponent.html":{},"miscellaneous/typealiases.html":{}}}],["mychart",{"_index":524,"title":{"interfaces/MyChart.html":{}},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"interfaces/MyChart.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mycolortheme",{"_index":225,"title":{"interfaces/MyColorTheme.html":{}},"body":{"components/AppearanceComponent.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"coverage.html":{}}}],["mydata",{"_index":522,"title":{"interfaces/MyData.html":{}},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"interfaces/MyChart.html":{},"interfaces/MyData.html":{},"coverage.html":{}}}],["myfontfamily",{"_index":228,"title":{"interfaces/MyFontFamily.html":{}},"body":{"components/AppearanceComponent.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"coverage.html":{}}}],["myfontsize",{"_index":231,"title":{"interfaces/MyFontSize.html":{}},"body":{"components/AppearanceComponent.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"coverage.html":{}}}],["myfontstyle",{"_index":234,"title":{"interfaces/MyFontStyle.html":{}},"body":{"components/AppearanceComponent.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"coverage.html":{}}}],["mystorage",{"_index":708,"title":{"interfaces/MyStorage.html":{}},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"interfaces/MyStorage.html":{},"coverage.html":{}}}],["mytable",{"_index":1142,"title":{"interfaces/MyTable.html":{}},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"interfaces/MyTable.html":{},"coverage.html":{}}}],["name",{"_index":32,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyData.html":{},"interfaces/MyStorage.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"miscellaneous/functions.html":{}}}],["name:skynet",{"_index":196,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["names",{"_index":2295,"title":{},"body":{"license.html":{}}}],["nature",{"_index":2137,"title":{},"body":{"license.html":{}}}],["nav",{"_index":1545,"title":{},"body":{"components/ToolsNavbarComponent.html":{}}}],["navbar",{"_index":72,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["navbar.component",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{}}}],["navbar.component.html",{"_index":1530,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["navbar.component.scss",{"_index":1529,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["navbar.component.ts",{"_index":1522,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"coverage.html":{}}}],["navbar.component.ts:25",{"_index":1537,"title":{},"body":{"components/ToolsNavbarComponent.html":{}}}],["navbar.component.ts:30",{"_index":1534,"title":{},"body":{"components/ToolsNavbarComponent.html":{}}}],["navbar.component.ts:37",{"_index":1533,"title":{},"body":{"components/ToolsNavbarComponent.html":{}}}],["navbar/tools",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"coverage.html":{}}}],["navigation",{"_index":1408,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["nearest",{"_index":604,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["necessary",{"_index":1668,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["need",{"_index":1816,"title":{},"body":{"license.html":{}}}],["needed",{"_index":1892,"title":{},"body":{"license.html":{}}}],["needs",{"_index":1219,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["neo",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/MenubarComponent.html":{},"index.html":{}}}],["network",{"_index":1966,"title":{},"body":{"license.html":{}}}],["neue",{"_index":467,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["new",{"_index":255,"title":{},"body":{"components/AppearanceComponent.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/LineFormComponent.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"coverage.html":{},"license.html":{}}}],["next",{"_index":2189,"title":{},"body":{"license.html":{}}}],["ng",{"_index":1314,"title":{},"body":{"modules/HonorCodePopupModule.html":{},"dependencies.html":{},"index.html":{}}}],["ng2",{"_index":992,"title":{},"body":{"modules/CurveModule.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":591,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/LineFormComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["ngbmodule",{"_index":1313,"title":{},"body":{"modules/HonorCodePopupModule.html":{}}}],["ngchartsmodule",{"_index":991,"title":{},"body":{"modules/CurveModule.html":{}}}],["ngmodule",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CurveModule.html":{},"modules/HonorCodePopupModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["ngoninit",{"_index":213,"title":{},"body":{"components/AppearanceComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{}}}],["ngx",{"_index":1624,"title":{},"body":{"dependencies.html":{}}}],["node",{"_index":1627,"title":{},"body":{"dependencies.html":{}}}],["non",{"_index":1911,"title":{},"body":{"license.html":{}}}],["noncommercially",{"_index":2177,"title":{},"body":{"license.html":{}}}],["normal",{"_index":457,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["normally",{"_index":2216,"title":{},"body":{"license.html":{}}}],["nothing",{"_index":2354,"title":{},"body":{"license.html":{}}}],["notice",{"_index":1977,"title":{},"body":{"license.html":{}}}],["notices",{"_index":1972,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":2341,"title":{},"body":{"license.html":{}}}],["notify",{"_index":2335,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":2282,"title":{},"body":{"license.html":{}}}],["npm",{"_index":1743,"title":{},"body":{"index.html":{}}}],["null",{"_index":345,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["num",{"_index":1662,"title":{},"body":{"miscellaneous/functions.html":{}}}],["number",{"_index":443,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/LineFormComponent.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyData.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["numbered",{"_index":2480,"title":{},"body":{"license.html":{}}}],["object",{"_index":570,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/LineFormComponent.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["object.values(this.curvecounts",{"_index":1365,"title":{},"body":{"components/LineFormComponent.html":{}}}],["obligate",{"_index":2463,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":2194,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":2080,"title":{},"body":{"license.html":{}}}],["observable",{"_index":1332,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["occasionally",{"_index":2176,"title":{},"body":{"license.html":{}}}],["occurring",{"_index":2351,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":1875,"title":{},"body":{"license.html":{}}}],["offer",{"_index":1843,"title":{},"body":{"license.html":{}}}],["offered",{"_index":2205,"title":{},"body":{"license.html":{}}}],["offering",{"_index":2180,"title":{},"body":{"license.html":{}}}],["official",{"_index":1989,"title":{},"body":{"license.html":{}}}],["offline",{"_index":1622,"title":{},"body":{"dependencies.html":{}}}],["onchange",{"_index":1168,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["oncurvenumchange",{"_index":1357,"title":{},"body":{"components/LineFormComponent.html":{}}}],["one",{"_index":715,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/LineFormComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["oninit",{"_index":200,"title":{},"body":{"components/AppearanceComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{}}}],["oninsert",{"_index":1172,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["onmagnitude",{"_index":1358,"title":{},"body":{"components/LineFormComponent.html":{}}}],["onmagnitude(value",{"_index":1362,"title":{},"body":{"components/LineFormComponent.html":{}}}],["onremove",{"_index":1170,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["open",{"_index":1532,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["opening",{"_index":1407,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{}}}],["opentoolnavbar",{"_index":1401,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{}}}],["operate",{"_index":2517,"title":{},"body":{"license.html":{}}}],["operated",{"_index":2183,"title":{},"body":{"license.html":{}}}],["operating",{"_index":2013,"title":{},"body":{"license.html":{}}}],["operation",{"_index":2101,"title":{},"body":{"license.html":{}}}],["option",{"_index":2279,"title":{},"body":{"license.html":{}}}],["optional",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/LineFormComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyData.html":{},"interfaces/MyStorage.html":{},"components/SimpleGraphButtonComponent.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":574,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"license.html":{}}}],["orange",{"_index":432,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["order",{"_index":1684,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["organization",{"_index":2368,"title":{},"body":{"license.html":{}}}],["organizations",{"_index":1929,"title":{},"body":{"license.html":{}}}],["origin",{"_index":2293,"title":{},"body":{"license.html":{}}}],["original",{"_index":1695,"title":{},"body":{"index.html":{},"license.html":{}}}],["others",{"_index":1818,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":1660,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["out",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/MenubarModule.html":{},"modules/SettingsModule.html":{},"modules/SimpleDataButtonModule.html":{},"modules/SimpleGraphButtonModule.html":{},"modules/ToolsNavbarModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["outlet",{"_index":1528,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["output",{"_index":1485,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"index.html":{},"license.html":{}}}],["outputs",{"_index":1478,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{}}}],["outside",{"_index":2063,"title":{},"body":{"license.html":{}}}],["overflow",{"_index":1186,"title":{},"body":{"components/CurveTableComponent.html":{}}}],["overview",{"_index":2579,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owned",{"_index":2396,"title":{},"body":{"license.html":{}}}],["p",{"_index":1392,"title":{},"body":{"components/LineFormComponent.html":{}}}],["package",{"_index":1597,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packaged",{"_index":2129,"title":{},"body":{"license.html":{}}}],["packaging",{"_index":2004,"title":{},"body":{"license.html":{}}}],["padding",{"_index":281,"title":{},"body":{"components/AppearanceComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/SettingsComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["page",{"_index":12,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"index.html":{}}}],["pagenotfoundcomponent",{"_index":60,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["paper",{"_index":2550,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":2325,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":2409,"title":{},"body":{"license.html":{}}}],["param",{"_index":190,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/HonorCodeChartService.html":{}}}],["parameters",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/LineFormComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyData.html":{},"interfaces/MyStorage.html":{},"components/SimpleGraphButtonComponent.html":{},"miscellaneous/functions.html":{}}}],["part",{"_index":1931,"title":{},"body":{"license.html":{}}}],["particular",{"_index":1994,"title":{},"body":{"license.html":{}}}],["parties",{"_index":1963,"title":{},"body":{"license.html":{}}}],["parts",{"_index":2035,"title":{},"body":{"license.html":{}}}],["party",{"_index":2184,"title":{},"body":{"license.html":{}}}],["party's",{"_index":2373,"title":{},"body":{"license.html":{}}}],["pass",{"_index":1832,"title":{},"body":{"license.html":{}}}],["passing/parsing",{"_index":1376,"title":{},"body":{"components/LineFormComponent.html":{}}}],["password",{"_index":2270,"title":{},"body":{"license.html":{}}}],["patent",{"_index":2324,"title":{},"body":{"license.html":{}}}],["patents",{"_index":1896,"title":{},"body":{"license.html":{}}}],["path",{"_index":170,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{}}}],["pathmatch",{"_index":178,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pattern",{"_index":1076,"title":{},"body":{"injectables/CurveService.html":{},"index.html":{},"license.html":{}}}],["payment",{"_index":2445,"title":{},"body":{"license.html":{}}}],["peer",{"_index":2200,"title":{},"body":{"license.html":{}}}],["peers",{"_index":2203,"title":{},"body":{"license.html":{}}}],["perform",{"_index":1199,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["performance",{"_index":2497,"title":{},"body":{"license.html":{}}}],["performing",{"_index":2024,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":2333,"title":{},"body":{"license.html":{}}}],["permission",{"_index":1846,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":2039,"title":{},"body":{"license.html":{}}}],["permissive",{"_index":2112,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2146,"title":{},"body":{"license.html":{}}}],["permits",{"_index":2314,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":1773,"title":{},"body":{"license.html":{}}}],["perpetuity",{"_index":2252,"title":{},"body":{"license.html":{}}}],["personal",{"_index":2214,"title":{},"body":{"license.html":{}}}],["pertinent",{"_index":2461,"title":{},"body":{"license.html":{}}}],["physical",{"_index":2156,"title":{},"body":{"license.html":{}}}],["physically",{"_index":2173,"title":{},"body":{"license.html":{}}}],["pieces",{"_index":1811,"title":{},"body":{"license.html":{}}}],["piexif",{"_index":1630,"title":{},"body":{"dependencies.html":{}}}],["place",{"_index":1707,"title":{},"body":{"index.html":{},"license.html":{}}}],["please",{"_index":2573,"title":{},"body":{"license.html":{}}}],["pledge",{"_index":1294,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["plotted",{"_index":1377,"title":{},"body":{"components/LineFormComponent.html":{}}}],["plotting",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"index.html":{}}}],["plugins",{"_index":617,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["plus",{"_index":2376,"title":{},"body":{"license.html":{}}}],["pointer",{"_index":2543,"title":{},"body":{"license.html":{}}}],["popperjs/core",{"_index":1610,"title":{},"body":{"dependencies.html":{}}}],["popup",{"_index":1270,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["popup'},{'name",{"_index":55,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["popup.component",{"_index":1312,"title":{},"body":{"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{}}}],["popup.component.html",{"_index":1278,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["popup.component.scss",{"_index":1277,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["popup.component.ts",{"_index":1269,"title":{},"body":{"components/HonorCodePopupComponent.html":{},"coverage.html":{}}}],["popup.component.ts:16",{"_index":1284,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["popup.component.ts:21",{"_index":1286,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["popup.component.ts:27",{"_index":1285,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["popup.component.ts:31",{"_index":1287,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["popup.module",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["popup.module.ts",{"_index":1311,"title":{},"body":{"modules/HonorCodePopupModule.html":{}}}],["popup.service",{"_index":841,"title":{},"body":{"components/CurveComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["popup.service.ts",{"_index":1318,"title":{},"body":{"injectables/HonorCodePopupService.html":{},"coverage.html":{}}}],["popup.service.ts:12",{"_index":1340,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["popup.service.ts:13",{"_index":1328,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["popup.service.ts:18",{"_index":1335,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["popup.service.ts:22",{"_index":1338,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["popup.service.ts:26",{"_index":1329,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["popup.service.ts:30",{"_index":1330,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["popup.service.ts:34",{"_index":1331,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["popup/honor",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"components/CurveComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"coverage.html":{}}}],["popupservice",{"_index":1498,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["portion",{"_index":2208,"title":{},"body":{"license.html":{}}}],["position",{"_index":611,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["possesses",{"_index":2169,"title":{},"body":{"license.html":{}}}],["possession",{"_index":2126,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":2519,"title":{},"body":{"license.html":{}}}],["possible",{"_index":2535,"title":{},"body":{"license.html":{}}}],["power",{"_index":2094,"title":{},"body":{"license.html":{}}}],["practical",{"_index":1785,"title":{},"body":{"license.html":{}}}],["practice",{"_index":1882,"title":{},"body":{"license.html":{}}}],["pre",{"_index":1657,"title":{},"body":{"miscellaneous/functions.html":{}}}],["preamble",{"_index":1781,"title":{},"body":{"license.html":{}}}],["precise",{"_index":1912,"title":{},"body":{"license.html":{}}}],["precisely",{"_index":1879,"title":{},"body":{"license.html":{}}}],["predecessor",{"_index":2374,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":1986,"title":{},"body":{"license.html":{}}}],["present",{"_index":2473,"title":{},"body":{"license.html":{}}}],["presents",{"_index":1981,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":2289,"title":{},"body":{"license.html":{}}}],["prevent",{"_index":1817,"title":{},"body":{"license.html":{}}}],["prevented",{"_index":2247,"title":{},"body":{"license.html":{}}}],["previous",{"_index":1861,"title":{},"body":{"license.html":{}}}],["price",{"_index":1806,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":2447,"title":{},"body":{"license.html":{}}}],["prior",{"_index":2336,"title":{},"body":{"license.html":{}}}],["private",{"_index":211,"title":{},"body":{"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"license.html":{}}}],["problems",{"_index":1858,"title":{},"body":{"license.html":{}}}],["procedures",{"_index":2241,"title":{},"body":{"license.html":{}}}],["processdata",{"_index":891,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["processdata(data",{"_index":904,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["procuring",{"_index":2435,"title":{},"body":{"license.html":{}}}],["produce",{"_index":2016,"title":{},"body":{"license.html":{}}}],["product",{"_index":2157,"title":{},"body":{"license.html":{}}}],["production",{"_index":1745,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["products",{"_index":1877,"title":{},"body":{"license.html":{}}}],["program",{"_index":1794,"title":{},"body":{"license.html":{}}}],["program's",{"_index":2105,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":2563,"title":{},"body":{"license.html":{}}}],["programming",{"_index":1995,"title":{},"body":{"license.html":{}}}],["programs",{"_index":1803,"title":{},"body":{"license.html":{}}}],["prohibit",{"_index":1881,"title":{},"body":{"license.html":{}}}],["prohibiting",{"_index":2090,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":2441,"title":{},"body":{"license.html":{}}}],["project",{"_index":1715,"title":{},"body":{"index.html":{}}}],["projector",{"_index":1722,"title":{},"body":{"index.html":{}}}],["prominent",{"_index":1983,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":1975,"title":{},"body":{"license.html":{}}}],["prompt",{"_index":1548,"title":{},"body":{"components/ToolsNavbarComponent.html":{}}}],["propagate",{"_index":1941,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":2357,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":1954,"title":{},"body":{"license.html":{}}}],["properties",{"_index":82,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/LineFormComponent.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"properties.html":{}}}],["property",{"_index":2215,"title":{},"body":{"license.html":{}}}],["proprietary",{"_index":1907,"title":{},"body":{"license.html":{}}}],["protect",{"_index":1814,"title":{},"body":{"license.html":{}}}],["protected",{"_index":203,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["protecting",{"_index":1872,"title":{},"body":{"license.html":{}}}],["protection",{"_index":1848,"title":{},"body":{"license.html":{}}}],["protocols",{"_index":2267,"title":{},"body":{"license.html":{}}}],["prove",{"_index":2498,"title":{},"body":{"license.html":{}}}],["provide",{"_index":2056,"title":{},"body":{"license.html":{}}}],["provided",{"_index":1980,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":342,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"injectables/HonorCodeChartService.html":{},"injectables/HonorCodePopupService.html":{}}}],["providers",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"components/CurveComponent.html":{},"modules/CurveModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/MenubarModule.html":{},"modules/SettingsModule.html":{},"modules/SimpleDataButtonModule.html":{},"modules/SimpleGraphButtonModule.html":{},"modules/ToolsNavbarModule.html":{},"overview.html":{}}}],["provides",{"_index":1689,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provision",{"_index":1890,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":2330,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":2485,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":2487,"title":{},"body":{"license.html":{}}}],["public",{"_index":292,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"license.html":{}}}],["publicity",{"_index":2294,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":2268,"title":{},"body":{"license.html":{}}}],["publish",{"_index":2108,"title":{},"body":{"license.html":{}}}],["published",{"_index":2482,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1900,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":2218,"title":{},"body":{"license.html":{}}}],["pursuant",{"_index":2431,"title":{},"body":{"license.html":{}}}],["qualify",{"_index":2347,"title":{},"body":{"license.html":{}}}],["quality",{"_index":2496,"title":{},"body":{"license.html":{}}}],["re",{"_index":1693,"title":{},"body":{"index.html":{}}}],["reactiveformsmodule",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"modules/HonorCodePopupModule.html":{}}}],["read",{"_index":2574,"title":{},"body":{"license.html":{}}}],["readable",{"_index":2153,"title":{},"body":{"license.html":{}}}],["readily",{"_index":2419,"title":{},"body":{"license.html":{}}}],["reading",{"_index":2272,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":204,"title":{},"body":{"components/AppearanceComponent.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["ready",{"_index":1888,"title":{},"body":{"license.html":{}}}],["reason",{"_index":2429,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":2171,"title":{},"body":{"license.html":{}}}],["receipt",{"_index":2345,"title":{},"body":{"license.html":{}}}],["receive",{"_index":1809,"title":{},"body":{"license.html":{}}}],["received",{"_index":1836,"title":{},"body":{"license.html":{}}}],["receives",{"_index":2362,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":1297,"title":{},"body":{"components/HonorCodePopupComponent.html":{},"license.html":{}}}],["recipient",{"_index":2251,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":2427,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":1833,"title":{},"body":{"license.html":{}}}],["recognized",{"_index":1990,"title":{},"body":{"license.html":{}}}],["red",{"_index":431,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["redirectto",{"_index":180,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redistribute",{"_index":2538,"title":{},"body":{"license.html":{}}}],["reed",{"_index":1756,"title":{},"body":{"index.html":{}}}],["referring",{"_index":1805,"title":{},"body":{"license.html":{}}}],["refers",{"_index":1918,"title":{},"body":{"license.html":{}}}],["refrain",{"_index":2464,"title":{},"body":{"license.html":{}}}],["regard",{"_index":2278,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":2128,"title":{},"body":{"license.html":{}}}],["regenerate",{"_index":2036,"title":{},"body":{"license.html":{}}}],["registerallmodules",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["registersavegraphbutton",{"_index":1324,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["registersavegraphbutton(button",{"_index":1333,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["registersavegraphspinner",{"_index":1325,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["registersavegraphspinner(spinner",{"_index":1336,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["reinstated",{"_index":2329,"title":{},"body":{"license.html":{}}}],["relationship",{"_index":2064,"title":{},"body":{"license.html":{}}}],["released",{"_index":1800,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":2121,"title":{},"body":{"license.html":{}}}],["relicensing",{"_index":2315,"title":{},"body":{"license.html":{}}}],["relying",{"_index":2418,"title":{},"body":{"license.html":{}}}],["remain",{"_index":2193,"title":{},"body":{"license.html":{}}}],["remains",{"_index":1796,"title":{},"body":{"license.html":{}}}],["removal",{"_index":2281,"title":{},"body":{"license.html":{}}}],["remove",{"_index":2280,"title":{},"body":{"license.html":{}}}],["removerow",{"_index":866,"title":{},"body":{"classes/CurveData.html":{},"injectables/CurveService.html":{},"interfaces/MyData.html":{}}}],["removerow(index",{"_index":877,"title":{},"body":{"classes/CurveData.html":{},"injectables/CurveService.html":{},"interfaces/MyData.html":{}}}],["render",{"_index":1910,"title":{},"body":{"license.html":{}}}],["renderchart",{"_index":529,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"interfaces/MyChart.html":{}}}],["rendered",{"_index":2512,"title":{},"body":{"license.html":{}}}],["renderer",{"_index":291,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["renderer2",{"_index":339,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["rendererfactory",{"_index":309,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["rendererfactory.createrenderer(document.body",{"_index":344,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["rendererfactory2",{"_index":310,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["rendertable",{"_index":1145,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"interfaces/MyTable.html":{}}}],["repair",{"_index":2502,"title":{},"body":{"license.html":{}}}],["represent",{"_index":2238,"title":{},"body":{"license.html":{}}}],["require",{"_index":2032,"title":{},"body":{"license.html":{}}}],["required",{"_index":1296,"title":{},"body":{"components/HonorCodePopupComponent.html":{},"license.html":{}}}],["requirement",{"_index":2122,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":2197,"title":{},"body":{"license.html":{}}}],["requires",{"_index":1854,"title":{},"body":{"license.html":{}}}],["requiring",{"_index":1933,"title":{},"body":{"license.html":{}}}],["reset",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"components/AppearanceComponent.html":{},"modules/CurveModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/MenubarModule.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"modules/ToolsNavbarModule.html":{},"overview.html":{}}}],["resetchartinfo",{"_index":820,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"interfaces/MyStorage.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["resetdata",{"_index":822,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"interfaces/MyStorage.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{}}}],["resetdefault",{"_index":214,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["resetgraphinfo",{"_index":1495,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["resetinterface",{"_index":824,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"interfaces/MyStorage.html":{}}}],["resolved",{"_index":2225,"title":{},"body":{"license.html":{}}}],["respect",{"_index":1826,"title":{},"body":{"license.html":{}}}],["responsibilities",{"_index":1824,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":2364,"title":{},"body":{"license.html":{}}}],["responsive",{"_index":599,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["restrict",{"_index":1899,"title":{},"body":{"license.html":{}}}],["restricting",{"_index":2091,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":2313,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":2310,"title":{},"body":{"license.html":{}}}],["result",{"_index":625,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"license.html":{}}}],["result.push(row",{"_index":740,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["result.slice(0",{"_index":729,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["result[0].push([entry.x",{"_index":744,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["result[0].push({x",{"_index":630,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["result[1].push([entry.x",{"_index":746,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["result[1].push({x",{"_index":634,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["result[2].push([entry.x",{"_index":747,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["result[2].push({x",{"_index":637,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["result[3].push([entry.x",{"_index":748,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["result[3].push({x",{"_index":640,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["resulting",{"_index":1936,"title":{},"body":{"license.html":{}}}],["results",{"_index":75,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"modules/CurveModule.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"interfaces/MyChart.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyData.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retains",{"_index":2255,"title":{},"body":{"license.html":{}}}],["return",{"_index":194,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"injectables/HonorCodeChartService.html":{},"injectables/HonorCodePopupService.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"license.html":{}}}],["returned",{"_index":1669,"title":{},"body":{"miscellaneous/functions.html":{}}}],["returns",{"_index":191,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyData.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"miscellaneous/functions.html":{}}}],["reverse",{"_index":615,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["reverseyaxis",{"_index":892,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["reviewing",{"_index":2524,"title":{},"body":{"license.html":{}}}],["revised",{"_index":2471,"title":{},"body":{"license.html":{}}}],["right",{"_index":1491,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"license.html":{}}}],["rights",{"_index":1815,"title":{},"body":{"license.html":{}}}],["risk",{"_index":2495,"title":{},"body":{"license.html":{}}}],["roboto",{"_index":464,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["rom",{"_index":2258,"title":{},"body":{"license.html":{}}}],["root",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"injectables/HonorCodeChartService.html":{},"injectables/HonorCodePopupService.html":{}}}],["root'},{'name",{"_index":35,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["router",{"_index":1527,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["routerlink",{"_index":1465,"title":{},"body":{"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"overview.html":{}}}],["routerlinkactive",{"_index":1466,"title":{},"body":{"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"overview.html":{}}}],["routermodule",{"_index":164,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(tools_routes",{"_index":197,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routeroutlet",{"_index":1467,"title":{},"body":{"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"overview.html":{}}}],["routes",{"_index":165,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["routing.module.ts",{"_index":163,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["row",{"_index":754,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/SimpleDataButtonComponent.html":{}}}],["row.y2",{"_index":734,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["row.y3",{"_index":736,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["row.y4",{"_index":738,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["royalty",{"_index":2380,"title":{},"body":{"license.html":{}}}],["rules",{"_index":2266,"title":{},"body":{"license.html":{}}}],["run",{"_index":1742,"title":{},"body":{"index.html":{},"license.html":{}}}],["running",{"_index":2047,"title":{},"body":{"license.html":{}}}],["runs",{"_index":2014,"title":{},"body":{"license.html":{}}}],["rxjs",{"_index":653,"title":{},"body":{"components/CurveChartFormComponent.html":{},"injectables/CurveService.html":{},"injectables/HonorCodePopupService.html":{},"dependencies.html":{}}}],["safest",{"_index":2540,"title":{},"body":{"license.html":{}}}],["sake",{"_index":1853,"title":{},"body":{"license.html":{}}}],["sale",{"_index":2390,"title":{},"body":{"license.html":{}}}],["same",{"_index":1834,"title":{},"body":{"license.html":{}}}],["sass",{"_index":1628,"title":{},"body":{"dependencies.html":{}}}],["satisfy",{"_index":2196,"title":{},"body":{"license.html":{}}}],["save",{"_index":1214,"title":{},"body":{"injectables/HonorCodeChartService.html":{},"components/SimpleGraphButtonComponent.html":{}}}],["saveas",{"_index":1230,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["saveas(dataurltoblob(exifimage",{"_index":1257,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["savechartinfo",{"_index":1120,"title":{},"body":{"classes/CurveStorage.html":{},"interfaces/MyStorage.html":{}}}],["savechartinfo(chartinfo",{"_index":1442,"title":{},"body":{"interfaces/MyStorage.html":{}}}],["savechartinfo(chartinfoobject",{"_index":811,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["saved",{"_index":1220,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["savedata",{"_index":1121,"title":{},"body":{"classes/CurveStorage.html":{},"interfaces/MyStorage.html":{}}}],["savedata(data",{"_index":814,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"interfaces/MyStorage.html":{}}}],["savegraph",{"_index":847,"title":{},"body":{"components/CurveComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["savegraphbutton",{"_index":1319,"title":{},"body":{"injectables/HonorCodePopupService.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["savegraphspinner",{"_index":1320,"title":{},"body":{"injectables/HonorCodePopupService.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["saveimage",{"_index":1202,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["saveimage(chart",{"_index":1212,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["saveimagehighchart",{"_index":1203,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["saveimagehighchart(chart",{"_index":1221,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["saveimagehighchartoffline",{"_index":1204,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["saveimagehighchartoffline(chart",{"_index":1223,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["saveinterface",{"_index":1122,"title":{},"body":{"classes/CurveStorage.html":{},"interfaces/MyStorage.html":{}}}],["saveinterface(interfaceinfo",{"_index":817,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"interfaces/MyStorage.html":{}}}],["saver",{"_index":1231,"title":{},"body":{"injectables/HonorCodeChartService.html":{},"dependencies.html":{}}}],["saying",{"_index":2190,"title":{},"body":{"license.html":{}}}],["scales",{"_index":605,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["school",{"_index":2564,"title":{},"body":{"license.html":{}}}],["scope",{"_index":2440,"title":{},"body":{"license.html":{}}}],["script",{"_index":1416,"title":{},"body":{"components/MenubarComponent.html":{}}}],["scripts",{"_index":2020,"title":{},"body":{"license.html":{}}}],["secondarily",{"_index":1945,"title":{},"body":{"license.html":{}}}],["section",{"_index":2069,"title":{},"body":{"license.html":{}}}],["sections",{"_index":2150,"title":{},"body":{"license.html":{}}}],["see",{"_index":2547,"title":{},"body":{"license.html":{}}}],["select",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/ToolsNavbarComponent.html":{}}}],["selecting",{"_index":1538,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["sell",{"_index":2406,"title":{},"body":{"license.html":{}}}],["selling",{"_index":2389,"title":{},"body":{"license.html":{}}}],["semiconductor",{"_index":1921,"title":{},"body":{"license.html":{}}}],["separable",{"_index":2207,"title":{},"body":{"license.html":{}}}],["separate",{"_index":2135,"title":{},"body":{"license.html":{}}}],["separately",{"_index":2132,"title":{},"body":{"license.html":{}}}],["serif",{"_index":1418,"title":{},"body":{"components/MenubarComponent.html":{}}}],["serve",{"_index":1749,"title":{},"body":{"index.html":{}}}],["server",{"_index":2174,"title":{},"body":{"license.html":{}}}],["serves",{"_index":2006,"title":{},"body":{"license.html":{}}}],["service",{"_index":576,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/LineFormComponent.html":{},"dependencies.html":{},"license.html":{}}}],["service/appearance.service",{"_index":242,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["service/appearance.utils",{"_index":239,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["services",{"_index":1198,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["servicing",{"_index":2501,"title":{},"body":{"license.html":{}}}],["set",{"_index":1735,"title":{},"body":{"index.html":{}}}],["setchartseries",{"_index":893,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["setcharttitle",{"_index":501,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChartInfo.html":{},"components/CurveHighChartComponent.html":{},"injectables/CurveService.html":{}}}],["setcharttitle(title",{"_index":509,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"interfaces/MyChart.html":{}}}],["setchartxaxis",{"_index":894,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["setchartyaxis",{"_index":895,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["setcolortheme",{"_index":304,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{}}}],["setcolortheme(colortheme",{"_index":331,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{}}}],["setcurvecount",{"_index":949,"title":{},"body":{"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"injectables/CurveService.html":{}}}],["setcurvecount(count",{"_index":1036,"title":{},"body":{"injectables/CurveService.html":{}}}],["setcurvecount(curvecount",{"_index":776,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["setdata",{"_index":867,"title":{},"body":{"classes/CurveData.html":{},"injectables/CurveService.html":{},"interfaces/MyData.html":{}}}],["setdata(data",{"_index":749,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"interfaces/MyData.html":{}}}],["setdata(datadict",{"_index":1038,"title":{},"body":{"injectables/CurveService.html":{}}}],["setdatabycell",{"_index":868,"title":{},"body":{"classes/CurveData.html":{}}}],["setdatabycell(value",{"_index":756,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["setdatabycellontablechange",{"_index":869,"title":{},"body":{"classes/CurveData.html":{}}}],["setdatabycellontablechange(changes",{"_index":881,"title":{},"body":{"classes/CurveData.html":{}}}],["setdatalabel",{"_index":502,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChartInfo.html":{},"injectables/CurveService.html":{}}}],["setdatalabel(data",{"_index":511,"title":{},"body":{"interfaces/ChartInfo.html":{},"interfaces/MyChart.html":{}}}],["setdatalabel(datalabel",{"_index":699,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["setdatalabel(label",{"_index":1040,"title":{},"body":{"injectables/CurveService.html":{}}}],["setfont",{"_index":382,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["setfont(font",{"_index":389,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["setfontfamily",{"_index":305,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["setfontfamily(fontfamily",{"_index":333,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["setfontsize",{"_index":306,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{}}}],["setfontsize(fontsize",{"_index":335,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{}}}],["setfontstyle",{"_index":307,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{}}}],["setfontstyle(fontstyle",{"_index":337,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{}}}],["sethighchart",{"_index":1014,"title":{},"body":{"injectables/CurveService.html":{}}}],["sethighchart(highchart",{"_index":1043,"title":{},"body":{"injectables/CurveService.html":{}}}],["setismagnitudeon",{"_index":950,"title":{},"body":{"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"injectables/CurveService.html":{}}}],["setismagnitudeon(ismagnitudeon",{"_index":779,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{}}}],["setstorageobject",{"_index":683,"title":{},"body":{"classes/CurveChartInfo.html":{},"classes/CurveImpl.html":{}}}],["setstorageobject(curveinterfacestorageobject",{"_index":788,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["setstorageobject(storageobject",{"_index":701,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["setting",{"_index":279,"title":{},"body":{"components/AppearanceComponent.html":{},"components/SettingsComponent.html":{}}}],["settings",{"_index":175,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MenubarComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{}}}],["settings'},{'name",{"_index":63,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["settings.component.html",{"_index":1457,"title":{},"body":{"components/SettingsComponent.html":{},"modules/SettingsModule.html":{}}}],["settings.component.scss",{"_index":1456,"title":{},"body":{"components/SettingsComponent.html":{},"modules/SettingsModule.html":{}}}],["settingscomponent",{"_index":62,"title":{"components/SettingsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["settingsmodule",{"_index":117,"title":{"modules/SettingsModule.html":{}},"body":{"modules/AppModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["setxaxislabel",{"_index":503,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChartInfo.html":{},"injectables/CurveService.html":{}}}],["setxaxislabel(label",{"_index":1046,"title":{},"body":{"injectables/CurveService.html":{}}}],["setxaxislabel(xaxis",{"_index":513,"title":{},"body":{"interfaces/ChartInfo.html":{},"interfaces/MyChart.html":{}}}],["setxaxislabel(xaxislabel",{"_index":704,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["setyaxislabel",{"_index":504,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChartInfo.html":{},"injectables/CurveService.html":{}}}],["setyaxislabel(label",{"_index":1048,"title":{},"body":{"injectables/CurveService.html":{}}}],["setyaxislabel(yaxis",{"_index":516,"title":{},"body":{"interfaces/ChartInfo.html":{},"interfaces/MyChart.html":{}}}],["setyaxislabel(yaxislabel",{"_index":706,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["shall",{"_index":2074,"title":{},"body":{"license.html":{}}}],["share",{"_index":1789,"title":{},"body":{"license.html":{}}}],["shared",{"_index":921,"title":{},"body":{"components/CurveHighChartComponent.html":{},"license.html":{}}}],["shared/about/about.component",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["shared/charts/chart.interface",{"_index":561,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{}}}],["shared/data/data.interface",{"_index":562,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{}}}],["shared/home/home.component",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["shared/honor",{"_index":840,"title":{},"body":{"components/CurveComponent.html":{}}}],["shared/page",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["shared/settings/appearance/appearance.component",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["shared/settings/appearance/service/appearance",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/settings/appearance/service/appearance.service",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["shared/settings/appearance/service/appearance.utils",{"_index":567,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["shared/settings/settings.component",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["shared/simple",{"_index":975,"title":{},"body":{"modules/CurveModule.html":{}}}],["shared/storage/storage.interface",{"_index":709,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["shared/tables/table",{"_index":1153,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["shared/tools",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/types/actions",{"_index":839,"title":{},"body":{"components/CurveComponent.html":{}}}],["short",{"_index":2553,"title":{},"body":{"license.html":{}}}],["show",{"_index":1837,"title":{},"body":{"license.html":{}}}],["sidenav",{"_index":1523,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["sign",{"_index":1299,"title":{},"body":{"components/HonorCodePopupComponent.html":{},"license.html":{}}}],["signature",{"_index":1207,"title":{},"body":{"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"miscellaneous/functions.html":{}}}],["significant",{"_index":2239,"title":{},"body":{"license.html":{}}}],["similar",{"_index":2089,"title":{},"body":{"license.html":{}}}],["simple",{"_index":65,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{}}}],["simpledatabuttoncomponent",{"_index":64,"title":{"components/SimpleDataButtonComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["simpledatabuttonmodule",{"_index":970,"title":{"modules/SimpleDataButtonModule.html":{}},"body":{"modules/CurveModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"modules.html":{},"overview.html":{}}}],["simplegraphbuttoncomponent",{"_index":68,"title":{"components/SimpleGraphButtonComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["simplegraphbuttonmodule",{"_index":971,"title":{"modules/SimpleGraphButtonModule.html":{}},"body":{"modules/CurveModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"modules.html":{},"overview.html":{}}}],["simultaneously",{"_index":2460,"title":{},"body":{"license.html":{}}}],["single",{"_index":2433,"title":{},"body":{"license.html":{}}}],["site",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"miscellaneous/functions.html":{}}}],["size",{"_index":277,"title":{},"body":{"components/AppearanceComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["size.displayname",{"_index":278,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["skynet",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/MenubarComponent.html":{},"index.html":{}}}],["skynet.unc.edu",{"_index":1268,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["slide",{"_index":998,"title":{},"body":{"modules/CurveModule.html":{},"components/LineFormComponent.html":{}}}],["small",{"_index":461,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["software",{"_index":1768,"title":{},"body":{"license.html":{}}}],["sold",{"_index":2219,"title":{},"body":{"license.html":{}}}],["sole",{"_index":2053,"title":{},"body":{"license.html":{}}}],["solely",{"_index":2066,"title":{},"body":{"license.html":{}}}],["sort((a",{"_index":945,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["sortdatabyx",{"_index":770,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"modules/CurveModule.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"interfaces/MyChart.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyData.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"index.html":{},"license.html":{}}}],["space",{"_index":1708,"title":{},"body":{"index.html":{}}}],["spacer",{"_index":1421,"title":{},"body":{"components/MenubarComponent.html":{}}}],["spare",{"_index":2166,"title":{},"body":{"license.html":{}}}],["speak",{"_index":1804,"title":{},"body":{"license.html":{}}}],["special",{"_index":1903,"title":{},"body":{"license.html":{}}}],["specific",{"_index":2012,"title":{},"body":{"license.html":{}}}],["specifically",{"_index":2031,"title":{},"body":{"license.html":{}}}],["specified",{"_index":1993,"title":{},"body":{"license.html":{}}}],["specifies",{"_index":2479,"title":{},"body":{"license.html":{}}}],["specify",{"_index":2483,"title":{},"body":{"license.html":{}}}],["spinner",{"_index":1339,"title":{},"body":{"injectables/HonorCodePopupService.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["spirit",{"_index":2472,"title":{},"body":{"license.html":{}}}],["src/.../actions.ts",{"_index":2585,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../app",{"_index":1643,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../appearance.utils.ts",{"_index":1639,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../curve.service.util.ts",{"_index":1640,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.ts",{"_index":2589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utils.ts",{"_index":1642,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":162,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/app.component.ts",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:16",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/shared/about/about.component.ts",{"_index":10,"title":{},"body":{"components/AboutComponent.html":{},"coverage.html":{}}}],["src/app/shared/home/home.component.ts",{"_index":1193,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/shared/menubar/menubar.component.ts",{"_index":1394,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"coverage.html":{}}}],["src/app/shared/menubar/menubar.component.ts:20",{"_index":1403,"title":{},"body":{"components/MenubarComponent.html":{}}}],["src/app/shared/menubar/menubar.component.ts:25",{"_index":1406,"title":{},"body":{"components/MenubarComponent.html":{}}}],["src/app/shared/page",{"_index":1451,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/shared/settings/appearance/appearance.component.ts",{"_index":198,"title":{},"body":{"components/AppearanceComponent.html":{},"coverage.html":{}}}],["src/app/shared/settings/appearance/appearance.component.ts:20",{"_index":227,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["src/app/shared/settings/appearance/appearance.component.ts:21",{"_index":236,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["src/app/shared/settings/appearance/appearance.component.ts:22",{"_index":233,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["src/app/shared/settings/appearance/appearance.component.ts:23",{"_index":230,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["src/app/shared/settings/appearance/appearance.component.ts:25",{"_index":215,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["src/app/shared/settings/appearance/appearance.component.ts:34",{"_index":223,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["src/app/shared/settings/appearance/appearance.component.ts:37",{"_index":224,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["src/app/shared/settings/appearance/appearance.component.ts:47",{"_index":220,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["src/app/shared/settings/appearance/service/appearance",{"_index":374,"title":{},"body":{"injectables/AppearanceStorageService.html":{},"coverage.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts",{"_index":290,"title":{},"body":{"injectables/AppearanceService.html":{},"coverage.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:17",{"_index":311,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:23",{"_index":330,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:31",{"_index":336,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:37",{"_index":322,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:41",{"_index":332,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:47",{"_index":317,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:51",{"_index":338,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:57",{"_index":326,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:61",{"_index":334,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:67",{"_index":319,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:71",{"_index":316,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:75",{"_index":313,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:79",{"_index":325,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:83",{"_index":329,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:87",{"_index":321,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:91",{"_index":314,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts",{"_index":424,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:100",{"_index":441,"title":{},"body":{"classes/ChartColor.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:104",{"_index":438,"title":{},"body":{"classes/ChartColor.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:108",{"_index":444,"title":{},"body":{"classes/ChartColor.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:47",{"_index":533,"title":{},"body":{"classes/ColorThemeSettings.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:56",{"_index":532,"title":{},"body":{"classes/ColorThemeSettings.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:64",{"_index":531,"title":{},"body":{"classes/ColorThemeSettings.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:73",{"_index":530,"title":{},"body":{"classes/ColorThemeSettings.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:88",{"_index":1192,"title":{},"body":{"classes/DefaultAppearanceSettings.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:89",{"_index":1191,"title":{},"body":{"classes/DefaultAppearanceSettings.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:90",{"_index":1190,"title":{},"body":{"classes/DefaultAppearanceSettings.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:91",{"_index":1189,"title":{},"body":{"classes/DefaultAppearanceSettings.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:92",{"_index":1188,"title":{},"body":{"classes/DefaultAppearanceSettings.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:97",{"_index":436,"title":{},"body":{"classes/ChartColor.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:98",{"_index":435,"title":{},"body":{"classes/ChartColor.html":{}}}],["src/app/shared/settings/settings.component.ts",{"_index":1455,"title":{},"body":{"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"coverage.html":{}}}],["src/app/shared/settings/settings.component.ts:13",{"_index":1458,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/shared/settings/settings.component.ts:18",{"_index":1459,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/shared/tools",{"_index":1521,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"coverage.html":{}}}],["src/app/tools/curve/curve",{"_index":535,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"coverage.html":{}}}],["src/app/tools/curve/curve.component.ts",{"_index":826,"title":{},"body":{"components/CurveComponent.html":{},"coverage.html":{}}}],["src/app/tools/curve/curve.component.ts:16",{"_index":834,"title":{},"body":{"components/CurveComponent.html":{}}}],["src/app/tools/curve/curve.component.ts:22",{"_index":837,"title":{},"body":{"components/CurveComponent.html":{}}}],["src/app/tools/curve/curve.module.ts",{"_index":972,"title":{},"body":{"modules/CurveModule.html":{}}}],["src/app/tools/curve/curve.service.ts",{"_index":1002,"title":{},"body":{"injectables/CurveService.html":{},"coverage.html":{}}}],["src/app/tools/curve/curve.service.ts:104",{"_index":1041,"title":{},"body":{"injectables/CurveService.html":{}}}],["src/app/tools/curve/curve.service.ts:112",{"_index":1021,"title":{},"body":{"injectables/CurveService.html":{}}}],["src/app/tools/curve/curve.service.ts:116",{"_index":1022,"title":{},"body":{"injectables/CurveService.html":{}}}],["src/app/tools/curve/curve.service.ts:120",{"_index":1039,"title":{},"body":{"injectables/CurveService.html":{}}}],["src/app/tools/curve/curve.service.ts:127",{"_index":1016,"title":{},"body":{"injectables/CurveService.html":{}}}],["src/app/tools/curve/curve.service.ts:132",{"_index":1031,"title":{},"body":{"injectables/CurveService.html":{}}}],["src/app/tools/curve/curve.service.ts:138",{"_index":1020,"title":{},"body":{"injectables/CurveService.html":{}}}],["src/app/tools/curve/curve.service.ts:142",{"_index":1028,"title":{},"body":{"injectables/CurveService.html":{}}}],["src/app/tools/curve/curve.service.ts:146",{"_index":1037,"title":{},"body":{"injectables/CurveService.html":{}}}],["src/app/tools/curve/curve.service.ts:154",{"_index":1045,"title":{},"body":{"injectables/CurveService.html":{}}}],["src/app/tools/curve/curve.service.ts:16",{"_index":1050,"title":{},"body":{"injectables/CurveService.html":{}}}],["src/app/tools/curve/curve.service.ts:161",{"_index":1033,"title":{},"body":{"injectables/CurveService.html":{}}}],["src/app/tools/curve/curve.service.ts:167",{"_index":1032,"title":{},"body":{"injectables/CurveService.html":{}}}],["src/app/tools/curve/curve.service.ts:173",{"_index":1034,"title":{},"body":{"injectables/CurveService.html":{}}}],["src/app/tools/curve/curve.service.ts:181",{"_index":1018,"title":{},"body":{"injectables/CurveService.html":{}}}],["src/app/tools/curve/curve.service.ts:185",{"_index":1044,"title":{},"body":{"injectables/CurveService.html":{}}}],["src/app/tools/curve/curve.service.ts:189",{"_index":1026,"title":{},"body":{"injectables/CurveService.html":{}}}],["src/app/tools/curve/curve.service.ts:21",{"_index":1057,"title":{},"body":{"injectables/CurveService.html":{}}}],["src/app/tools/curve/curve.service.ts:27",{"_index":1058,"title":{},"body":{"injectables/CurveService.html":{}}}],["src/app/tools/curve/curve.service.ts:29",{"_index":1069,"title":{},"body":{"injectables/CurveService.html":{}}}],["src/app/tools/curve/curve.service.ts:33",{"_index":1060,"title":{},"body":{"injectables/CurveService.html":{}}}],["src/app/tools/curve/curve.service.ts:34",{"_index":1068,"title":{},"body":{"injectables/CurveService.html":{}}}],["src/app/tools/curve/curve.service.ts:35",{"_index":1062,"title":{},"body":{"injectables/CurveService.html":{}}}],["src/app/tools/curve/curve.service.ts:36",{"_index":1066,"title":{},"body":{"injectables/CurveService.html":{}}}],["src/app/tools/curve/curve.service.ts:37",{"_index":1064,"title":{},"body":{"injectables/CurveService.html":{}}}],["src/app/tools/curve/curve.service.ts:38",{"_index":1056,"title":{},"body":{"injectables/CurveService.html":{}}}],["src/app/tools/curve/curve.service.ts:39",{"_index":1054,"title":{},"body":{"injectables/CurveService.html":{}}}],["src/app/tools/curve/curve.service.ts:40",{"_index":1072,"title":{},"body":{"injectables/CurveService.html":{}}}],["src/app/tools/curve/curve.service.ts:41",{"_index":1015,"title":{},"body":{"injectables/CurveService.html":{}}}],["src/app/tools/curve/curve.service.ts:53",{"_index":1017,"title":{},"body":{"injectables/CurveService.html":{}}}],["src/app/tools/curve/curve.service.ts:57",{"_index":1025,"title":{},"body":{"injectables/CurveService.html":{}}}],["src/app/tools/curve/curve.service.ts:61",{"_index":1027,"title":{},"body":{"injectables/CurveService.html":{}}}],["src/app/tools/curve/curve.service.ts:66",{"_index":1019,"title":{},"body":{"injectables/CurveService.html":{}}}],["src/app/tools/curve/curve.service.ts:70",{"_index":1029,"title":{},"body":{"injectables/CurveService.html":{}}}],["src/app/tools/curve/curve.service.ts:74",{"_index":1030,"title":{},"body":{"injectables/CurveService.html":{}}}],["src/app/tools/curve/curve.service.ts:78",{"_index":1023,"title":{},"body":{"injectables/CurveService.html":{}}}],["src/app/tools/curve/curve.service.ts:82",{"_index":1024,"title":{},"body":{"injectables/CurveService.html":{}}}],["src/app/tools/curve/curve.service.ts:86",{"_index":1035,"title":{},"body":{"injectables/CurveService.html":{}}}],["src/app/tools/curve/curve.service.ts:92",{"_index":1047,"title":{},"body":{"injectables/CurveService.html":{}}}],["src/app/tools/curve/curve.service.ts:98",{"_index":1049,"title":{},"body":{"injectables/CurveService.html":{}}}],["src/app/tools/curve/curve.service.util.ts",{"_index":677,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/tools/curve/curve.service.util.ts:101",{"_index":694,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:110",{"_index":702,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:121",{"_index":870,"title":{},"body":{"classes/CurveData.html":{}}}],["src/app/tools/curve/curve.service.util.ts:127",{"_index":876,"title":{},"body":{"classes/CurveData.html":{}}}],["src/app/tools/curve/curve.service.util.ts:147",{"_index":873,"title":{},"body":{"classes/CurveData.html":{}}}],["src/app/tools/curve/curve.service.util.ts:165",{"_index":875,"title":{},"body":{"classes/CurveData.html":{}}}],["src/app/tools/curve/curve.service.util.ts:176",{"_index":879,"title":{},"body":{"classes/CurveData.html":{}}}],["src/app/tools/curve/curve.service.util.ts:182",{"_index":871,"title":{},"body":{"classes/CurveData.html":{}}}],["src/app/tools/curve/curve.service.util.ts:191",{"_index":878,"title":{},"body":{"classes/CurveData.html":{}}}],["src/app/tools/curve/curve.service.util.ts:195",{"_index":874,"title":{},"body":{"classes/CurveData.html":{}}}],["src/app/tools/curve/curve.service.util.ts:199",{"_index":882,"title":{},"body":{"classes/CurveData.html":{}}}],["src/app/tools/curve/curve.service.util.ts:205",{"_index":880,"title":{},"body":{"classes/CurveData.html":{}}}],["src/app/tools/curve/curve.service.util.ts:246",{"_index":960,"title":{},"body":{"interfaces/CurveInterface.html":{}}}],["src/app/tools/curve/curve.service.util.ts:248",{"_index":962,"title":{},"body":{"interfaces/CurveInterface.html":{}}}],["src/app/tools/curve/curve.service.util.ts:250",{"_index":961,"title":{},"body":{"interfaces/CurveInterface.html":{}}}],["src/app/tools/curve/curve.service.util.ts:252",{"_index":963,"title":{},"body":{"interfaces/CurveInterface.html":{}}}],["src/app/tools/curve/curve.service.util.ts:263",{"_index":951,"title":{},"body":{"classes/CurveImpl.html":{}}}],["src/app/tools/curve/curve.service.util.ts:264",{"_index":952,"title":{},"body":{"classes/CurveImpl.html":{}}}],["src/app/tools/curve/curve.service.util.ts:266",{"_index":954,"title":{},"body":{"classes/CurveImpl.html":{}}}],["src/app/tools/curve/curve.service.util.ts:270",{"_index":953,"title":{},"body":{"classes/CurveImpl.html":{}}}],["src/app/tools/curve/curve.service.util.ts:274",{"_index":955,"title":{},"body":{"classes/CurveImpl.html":{}}}],["src/app/tools/curve/curve.service.util.ts:278",{"_index":957,"title":{},"body":{"classes/CurveImpl.html":{}}}],["src/app/tools/curve/curve.service.util.ts:285",{"_index":958,"title":{},"body":{"classes/CurveImpl.html":{}}}],["src/app/tools/curve/curve.service.util.ts:289",{"_index":956,"title":{},"body":{"classes/CurveImpl.html":{}}}],["src/app/tools/curve/curve.service.util.ts:293",{"_index":959,"title":{},"body":{"classes/CurveImpl.html":{}}}],["src/app/tools/curve/curve.service.util.ts:302",{"_index":1125,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:303",{"_index":1128,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:304",{"_index":1124,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:305",{"_index":1127,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:306",{"_index":1126,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:307",{"_index":1123,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:315",{"_index":1129,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:322",{"_index":1130,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:329",{"_index":1131,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:336",{"_index":1135,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:340",{"_index":1137,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:344",{"_index":1138,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:348",{"_index":1132,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:352",{"_index":1133,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:356",{"_index":1134,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:36",{"_index":685,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:37",{"_index":686,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:38",{"_index":687,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:39",{"_index":684,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:48",{"_index":692,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:57",{"_index":688,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:61",{"_index":689,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:65",{"_index":695,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:69",{"_index":691,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:74",{"_index":696,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:78",{"_index":697,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:82",{"_index":698,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:86",{"_index":700,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:93",{"_index":705,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:97",{"_index":707,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/line",{"_index":1350,"title":{},"body":{"components/LineFormComponent.html":{},"coverage.html":{}}}],["src/app/tools/shared/charts/chart.interface.ts",{"_index":496,"title":{},"body":{"interfaces/ChartInfo.html":{},"interfaces/MyChart.html":{},"coverage.html":{}}}],["src/app/tools/shared/charts/chart.interface.ts:11",{"_index":506,"title":{},"body":{"interfaces/ChartInfo.html":{}}}],["src/app/tools/shared/charts/chart.interface.ts:13",{"_index":510,"title":{},"body":{"interfaces/ChartInfo.html":{}}}],["src/app/tools/shared/charts/chart.interface.ts:15",{"_index":514,"title":{},"body":{"interfaces/ChartInfo.html":{}}}],["src/app/tools/shared/charts/chart.interface.ts:17",{"_index":517,"title":{},"body":{"interfaces/ChartInfo.html":{}}}],["src/app/tools/shared/charts/chart.interface.ts:19",{"_index":512,"title":{},"body":{"interfaces/ChartInfo.html":{}}}],["src/app/tools/shared/charts/chart.interface.ts:23",{"_index":1426,"title":{},"body":{"interfaces/MyChart.html":{}}}],["src/app/tools/shared/charts/chart.interface.ts:25",{"_index":1427,"title":{},"body":{"interfaces/MyChart.html":{}}}],["src/app/tools/shared/charts/chart.interface.ts:27",{"_index":1428,"title":{},"body":{"interfaces/MyChart.html":{}}}],["src/app/tools/shared/charts/chart.interface.ts:5",{"_index":505,"title":{},"body":{"interfaces/ChartInfo.html":{}}}],["src/app/tools/shared/charts/chart.interface.ts:7",{"_index":507,"title":{},"body":{"interfaces/ChartInfo.html":{}}}],["src/app/tools/shared/charts/chart.interface.ts:9",{"_index":508,"title":{},"body":{"interfaces/ChartInfo.html":{}}}],["src/app/tools/shared/charts/utils.ts",{"_index":1584,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/tools/shared/data/data.interface.ts",{"_index":1429,"title":{},"body":{"interfaces/MyData.html":{},"coverage.html":{}}}],["src/app/tools/shared/data/data.interface.ts:10",{"_index":1433,"title":{},"body":{"interfaces/MyData.html":{}}}],["src/app/tools/shared/data/data.interface.ts:2",{"_index":1431,"title":{},"body":{"interfaces/MyData.html":{}}}],["src/app/tools/shared/data/data.interface.ts:4",{"_index":1432,"title":{},"body":{"interfaces/MyData.html":{}}}],["src/app/tools/shared/data/data.interface.ts:6",{"_index":1434,"title":{},"body":{"interfaces/MyData.html":{}}}],["src/app/tools/shared/data/data.interface.ts:8",{"_index":1430,"title":{},"body":{"interfaces/MyData.html":{}}}],["src/app/tools/shared/honor",{"_index":1196,"title":{},"body":{"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"coverage.html":{}}}],["src/app/tools/shared/simple",{"_index":1472,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"coverage.html":{}}}],["src/app/tools/shared/storage/storage.interface.ts",{"_index":1435,"title":{},"body":{"interfaces/MyStorage.html":{},"coverage.html":{}}}],["src/app/tools/shared/storage/storage.interface.ts:10",{"_index":1438,"title":{},"body":{"interfaces/MyStorage.html":{}}}],["src/app/tools/shared/storage/storage.interface.ts:12",{"_index":1445,"title":{},"body":{"interfaces/MyStorage.html":{}}}],["src/app/tools/shared/storage/storage.interface.ts:14",{"_index":1440,"title":{},"body":{"interfaces/MyStorage.html":{}}}],["src/app/tools/shared/storage/storage.interface.ts:16",{"_index":1441,"title":{},"body":{"interfaces/MyStorage.html":{}}}],["src/app/tools/shared/storage/storage.interface.ts:18",{"_index":1439,"title":{},"body":{"interfaces/MyStorage.html":{}}}],["src/app/tools/shared/storage/storage.interface.ts:2",{"_index":1437,"title":{},"body":{"interfaces/MyStorage.html":{}}}],["src/app/tools/shared/storage/storage.interface.ts:4",{"_index":1444,"title":{},"body":{"interfaces/MyStorage.html":{}}}],["src/app/tools/shared/storage/storage.interface.ts:6",{"_index":1436,"title":{},"body":{"interfaces/MyStorage.html":{}}}],["src/app/tools/shared/storage/storage.interface.ts:8",{"_index":1443,"title":{},"body":{"interfaces/MyStorage.html":{}}}],["src/app/tools/shared/tables/table",{"_index":1446,"title":{},"body":{"interfaces/MyTable.html":{},"coverage.html":{}}}],["src/app/tools/shared/types/actions.ts",{"_index":2586,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/environments/environment.prod.ts",{"_index":1592,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1595,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/locale",{"_index":1753,"title":{},"body":{"index.html":{}}}],["stand",{"_index":1887,"title":{},"body":{"license.html":{}}}],["standard",{"_index":1988,"title":{},"body":{"license.html":{}}}],["standards",{"_index":1991,"title":{},"body":{"license.html":{}}}],["start",{"_index":1305,"title":{},"body":{"components/HonorCodePopupComponent.html":{},"license.html":{}}}],["started",{"_index":1692,"title":{"index.html":{},"license.html":{}},"body":{}}],["starts",{"_index":2554,"title":{},"body":{"license.html":{}}}],["startto",{"_index":1744,"title":{},"body":{"index.html":{}}}],["state",{"_index":2541,"title":{},"body":{"license.html":{}}}],["stated",{"_index":2042,"title":{},"body":{"license.html":{}}}],["statement",{"_index":2317,"title":{},"body":{"license.html":{}}}],["statements",{"_index":1557,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":1897,"title":{},"body":{"license.html":{}}}],["static",{"_index":425,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["stating",{"_index":2111,"title":{},"body":{"license.html":{}}}],["status",{"_index":2229,"title":{},"body":{"license.html":{}}}],["steps",{"_index":1841,"title":{},"body":{"license.html":{}}}],["storage",{"_index":2141,"title":{},"body":{"license.html":{}}}],["storage.service",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppearanceService.html":{}}}],["storage.service.ts",{"_index":375,"title":{},"body":{"injectables/AppearanceStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:15",{"_index":394,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:16",{"_index":400,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:17",{"_index":398,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:18",{"_index":396,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:19",{"_index":393,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:20",{"_index":395,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:21",{"_index":401,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:22",{"_index":399,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:23",{"_index":397,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:24",{"_index":383,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:29",{"_index":388,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:33",{"_index":384,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:42",{"_index":392,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:46",{"_index":387,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:55",{"_index":391,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:59",{"_index":386,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:68",{"_index":390,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:72",{"_index":385,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storageobject",{"_index":703,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["storageservice",{"_index":312,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["string",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"injectables/HonorCodeChartService.html":{},"interfaces/MyChart.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/functions.html":{}}}],["students",{"_index":1700,"title":{},"body":{"index.html":{}}}],["style",{"_index":275,"title":{},"body":{"components/AppearanceComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["style.displayname",{"_index":276,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["styledmode",{"_index":916,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["styleurls",{"_index":16,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["subdividing",{"_index":2370,"title":{},"body":{"license.html":{}}}],["subject",{"_index":2363,"title":{},"body":{"license.html":{}}}],["sublicenses",{"_index":2402,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":2068,"title":{},"body":{"license.html":{}}}],["submit",{"_index":1280,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["subprograms",{"_index":2030,"title":{},"body":{"license.html":{}}}],["subroutine",{"_index":2567,"title":{},"body":{"license.html":{}}}],["subscribe(label",{"_index":671,"title":{},"body":{"components/CurveChartFormComponent.html":{}}}],["subscribe(labels",{"_index":668,"title":{},"body":{"components/CurveChartFormComponent.html":{}}}],["subscribe(title",{"_index":665,"title":{},"body":{"components/CurveChartFormComponent.html":{}}}],["subsection",{"_index":2178,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":2234,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":1885,"title":{},"body":{"license.html":{}}}],["such",{"_index":1828,"title":{},"body":{"license.html":{}}}],["sue",{"_index":2416,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":2244,"title":{},"body":{"license.html":{}}}],["supplement",{"_index":2273,"title":{},"body":{"license.html":{}}}],["support",{"_index":2118,"title":{},"body":{"license.html":{},"modules.html":{}}}],["supports",{"_index":2185,"title":{},"body":{"license.html":{}}}],["sure",{"_index":1795,"title":{},"body":{"license.html":{}}}],["surrender",{"_index":1821,"title":{},"body":{"license.html":{}}}],["survive",{"_index":2316,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":2515,"title":{},"body":{"license.html":{}}}],["svg",{"_index":2577,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":757,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["system",{"_index":1998,"title":{},"body":{"license.html":{}}}],["systematic",{"_index":1873,"title":{},"body":{"license.html":{}}}],["table",{"_index":862,"title":{},"body":{"components/CurveComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":49,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["table.component",{"_index":987,"title":{},"body":{"modules/CurveModule.html":{}}}],["table.component.html",{"_index":1154,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["table.component.scss",{"_index":1155,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["table.component.ts",{"_index":1141,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"coverage.html":{}}}],["table.component.ts:15",{"_index":1180,"title":{},"body":{"components/CurveTableComponent.html":{}}}],["table.component.ts:16",{"_index":1181,"title":{},"body":{"components/CurveTableComponent.html":{}}}],["table.component.ts:17",{"_index":1182,"title":{},"body":{"components/CurveTableComponent.html":{}}}],["table.component.ts:18",{"_index":1178,"title":{},"body":{"components/CurveTableComponent.html":{}}}],["table.component.ts:25",{"_index":1179,"title":{},"body":{"components/CurveTableComponent.html":{}}}],["table.component.ts:39",{"_index":1183,"title":{},"body":{"components/CurveTableComponent.html":{}}}],["table.component.ts:45",{"_index":1185,"title":{},"body":{"components/CurveTableComponent.html":{}}}],["table.component.ts:49",{"_index":1184,"title":{},"body":{"components/CurveTableComponent.html":{}}}],["table.component.ts:58",{"_index":1148,"title":{},"body":{"classes/CurveTable.html":{}}}],["table.component.ts:59",{"_index":1146,"title":{},"body":{"classes/CurveTable.html":{}}}],["table.component.ts:65",{"_index":1150,"title":{},"body":{"classes/CurveTable.html":{}}}],["table.component.ts:69",{"_index":1152,"title":{},"body":{"classes/CurveTable.html":{}}}],["table.component.ts:73",{"_index":1149,"title":{},"body":{"classes/CurveTable.html":{}}}],["table/curve",{"_index":986,"title":{},"body":{"modules/CurveModule.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"coverage.html":{}}}],["tableaction",{"_index":1486,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"miscellaneous/typealiases.html":{}}}],["tableaddrow",{"_index":1477,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{}}}],["tabledata",{"_index":1688,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1596,"title":{},"body":{"coverage.html":{}}}],["tableuseractionobs",{"_index":1479,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{}}}],["take",{"_index":1786,"title":{},"body":{"license.html":{}}}],["takes",{"_index":1679,"title":{},"body":{"miscellaneous/functions.html":{}}}],["taking",{"_index":1701,"title":{},"body":{"index.html":{}}}],["tangible",{"_index":2213,"title":{},"body":{"license.html":{}}}],["technological",{"_index":2077,"title":{},"body":{"license.html":{}}}],["tells",{"_index":1978,"title":{},"body":{"license.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["term",{"_index":1731,"title":{},"body":{"index.html":{},"license.html":{}}}],["terminal",{"_index":2552,"title":{},"body":{"license.html":{}}}],["terminate",{"_index":2323,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":2346,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":2332,"title":{},"body":{"license.html":{}}}],["termination",{"_index":2320,"title":{},"body":{"license.html":{}}}],["terms",{"_index":1838,"title":{},"body":{"license.html":{}}}],["text",{"_index":607,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveHighChartComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/ToolsNavbarComponent.html":{}}}],["theme",{"_index":270,"title":{},"body":{"components/AppearanceComponent.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["therefore",{"_index":1822,"title":{},"body":{"license.html":{}}}],["things",{"_index":1813,"title":{},"body":{"license.html":{}}}],["third",{"_index":2104,"title":{},"body":{"license.html":{}}}],["this.appearanceservice.getchartbackgroundcolor",{"_index":581,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.appearanceservice.getchartfontcolor",{"_index":579,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.appearanceservice.intialize",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["this.appearanceservice.setcolortheme(defaultappearancesettings.theme",{"_index":247,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["this.appearanceservice.setcolortheme(value",{"_index":262,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["this.appearanceservice.setfontfamily(value",{"_index":264,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["this.appearanceservice.setfontsize(defaultappearancesettings.fontsize",{"_index":249,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["this.appearanceservice.setfontsize(value",{"_index":268,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["this.appearanceservice.setfontstyle(defaultappearancesettings.fontstyle",{"_index":248,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["this.appearanceservice.setfontstyle(value",{"_index":266,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["this.chart",{"_index":582,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.chart.generatechartconfig",{"_index":585,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.chart.generatechartoptions",{"_index":590,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.chart.renderchart",{"_index":593,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.chartinfo",{"_index":1084,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.chartinfo.getcharttitle",{"_index":1087,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.chartinfo.getdatalabelbycurvecount(this.getcurvecount",{"_index":1090,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.chartinfo.gettablelabels",{"_index":1091,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.chartinfo.getxaxislabel",{"_index":1088,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.chartinfo.getyaxislabel",{"_index":1089,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.chartinfo.setcharttitle(title",{"_index":1092,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.chartinfo.setdatalabel(label",{"_index":1097,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.chartinfo.setstorageobject(curvechartinfo.getdefaultstorageobject",{"_index":1114,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.chartinfo.setstorageobject(this.curvestorage.getchartinfo",{"_index":1082,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.chartinfo.setxaxislabel(label",{"_index":1095,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.chartinfo.setyaxislabel(label",{"_index":1096,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.chartinfosubject.asobservable",{"_index":1053,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.chartinfosubject.next(this.chartinfo",{"_index":1094,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.chartobject",{"_index":932,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["this.chartoptions.title",{"_index":942,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["this.chartservice.saveimagehighchartoffline(this.service.gethighchart",{"_index":849,"title":{},"body":{"components/CurveComponent.html":{}}}],["this.charttitle",{"_index":723,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.chartuseractionobs",{"_index":1509,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["this.chartuseractionobs$.emit([{action",{"_index":1512,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["this.colnames",{"_index":1160,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["this.colortheme",{"_index":405,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["this.curvecount",{"_index":783,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.curvedata",{"_index":1085,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.curvedata.addrow(index",{"_index":1104,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.curvedata.getcurvedata(this.getcurvecount",{"_index":1099,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.curvedata.getdataarray",{"_index":1100,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.curvedata.removerow(index",{"_index":1105,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.curvedata.setdata(datadict",{"_index":1101,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.curvedata.setdata(this.curvestorage.getdata",{"_index":1081,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.curvedatadict",{"_index":743,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.curvedatadict.sort",{"_index":771,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.curvedatadict[row][curveparam.x",{"_index":760,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.curvedatadict[row][curveparam.y1",{"_index":763,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.curvedatadict[row][curveparam.y2",{"_index":765,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.curvedatadict[row][curveparam.y3",{"_index":767,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.curvedatadict[row][curveparam.y4",{"_index":769,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.curveimpl",{"_index":1086,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.curveimpl.getcurvecount",{"_index":1106,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.curveimpl.getismagnitudeon",{"_index":1107,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.curveimpl.setcurvecount(count",{"_index":1108,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.curveimpl.setismagnitudeon(ismagnitudeon",{"_index":1110,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.curveimpl.setstorageobject(curveimpl.getdefaultstorageobject",{"_index":1116,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.curveimpl.setstorageobject(this.curvestorage.getinterface",{"_index":1083,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.curvestorage",{"_index":1077,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.curvestorage.resetchartinfo",{"_index":1115,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.curvestorage.resetdata",{"_index":1113,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.curvestorage.resetinterface",{"_index":1117,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.curvestorage.savechartinfo(this.chartinfo.getstorageobject",{"_index":1093,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.curvestorage.savedata(datadict",{"_index":1102,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.curvestorage.saveinterface(this.curveimpl.getstorageobject",{"_index":1109,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.datakeyssubject.asobservable",{"_index":1063,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.datakeyssubject.next(this.getdatalabelarray",{"_index":1098,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.datalabels",{"_index":726,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.datalabels.join",{"_index":727,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.dataservice.addrow(index",{"_index":1173,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["this.dataservice.data$.subscribe",{"_index":1164,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["this.dataservice.datakeys$.subscribe",{"_index":1166,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["this.dataservice.getdata",{"_index":1163,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["this.dataservice.getdatalabelarray",{"_index":1161,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["this.dataservice.removerow(index",{"_index":1171,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["this.dataservice.setdata(this.table.getdata",{"_index":1169,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["this.dataset",{"_index":1162,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["this.datasubject.asobservable",{"_index":1061,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.datasubject.next(this.getdata",{"_index":1103,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.defaultchartinfo",{"_index":800,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.defaultdata",{"_index":799,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.defaultinterface",{"_index":801,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.dialog.open(honorcodepopupcomponent",{"_index":1347,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["this.font",{"_index":421,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["this.fontsize",{"_index":416,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["this.fontstyle",{"_index":411,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["this.form",{"_index":1290,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["this.form.setvalue(curveinterface.getcurvecount",{"_index":1386,"title":{},"body":{"components/LineFormComponent.html":{}}}],["this.form.setvalue(this.service.getcurvecount",{"_index":1379,"title":{},"body":{"components/LineFormComponent.html":{}}}],["this.form.valid",{"_index":1293,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["this.formbuilder.group",{"_index":1291,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["this.formgroup",{"_index":254,"title":{},"body":{"components/AppearanceComponent.html":{},"components/CurveChartFormComponent.html":{}}}],["this.formgroup.controls['charttitle'].valuechanges.pipe",{"_index":663,"title":{},"body":{"components/CurveChartFormComponent.html":{}}}],["this.formgroup.controls['datalabel'].valuechanges.pipe",{"_index":667,"title":{},"body":{"components/CurveChartFormComponent.html":{}}}],["this.formgroup.controls['xaxislabel'].valuechanges.pipe",{"_index":670,"title":{},"body":{"components/CurveChartFormComponent.html":{}}}],["this.formgroup.controls['yaxislabel'].valuechanges.pipe",{"_index":673,"title":{},"body":{"components/CurveChartFormComponent.html":{}}}],["this.formgroup.get(\"colortheme\")?.valuechanges.subscribe(value",{"_index":261,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["this.formgroup.get(\"fontfamily\")?.valuechanges.subscribe(value",{"_index":263,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["this.formgroup.get(\"fontsize\")?.valuechanges.subscribe(value",{"_index":267,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["this.formgroup.get(\"fontstyle\")?.valuechanges.subscribe(value",{"_index":265,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["this.generatecurvechartconfig",{"_index":595,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.generatefilename(charttype",{"_index":1261,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["this.generatesignature(signature",{"_index":1264,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["this.getcolortheme",{"_index":356,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.getfontfamilyclassname(fontfamily",{"_index":364,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.getfontfamilyclassname(this.getfontfamily",{"_index":363,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.getfontsizeclassname(fontsize",{"_index":353,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.getfontsizeclassname(this.getfontsize",{"_index":351,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.getfontstyleclassname(fontstyle",{"_index":360,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.getfontstyleclassname(this.getfontstyle",{"_index":359,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.getformgroup(appearanceservice.getcolortheme",{"_index":243,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["this.getformgroup(defaultappearancesettings.theme",{"_index":250,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["this.gettable().getsourcedata",{"_index":1176,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["this.gettable().render",{"_index":1175,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["this.highchart",{"_index":1119,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.honorcodeservice.honored().subscribe((name",{"_index":848,"title":{},"body":{"components/CurveComponent.html":{}}}],["this.hotregisterer.getinstance(this.id",{"_index":1174,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["this.id",{"_index":577,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["this.interfacesubject.asobservable",{"_index":1070,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.interfacesubject.next(this.curveimpl",{"_index":1111,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.ismagnitudeon",{"_index":784,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.linechartdata",{"_index":584,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.linechartoptions",{"_index":589,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.linecolordarkarray[index",{"_index":493,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["this.linecolorlightarray.length",{"_index":490,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["this.linecolorlightarray[index",{"_index":492,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["this.magnitude",{"_index":1380,"title":{},"body":{"components/LineFormComponent.html":{}}}],["this.magslider.checked",{"_index":1387,"title":{},"body":{"components/LineFormComponent.html":{}}}],["this.makerawdata(chartdata",{"_index":627,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.matdialogref.close",{"_index":1292,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["this.navbar.open",{"_index":1411,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{}}}],["this.popupservice.registersavegraphbutton(this.savegraphbutton",{"_index":1510,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["this.popupservice.registersavegraphspinner(this.savegraphspinner",{"_index":1511,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["this.renderer",{"_index":343,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.renderer.addclass(document.body",{"_index":352,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.renderer.removeclass(document.body",{"_index":350,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.reverseyaxis",{"_index":940,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["this.savegraphbutton",{"_index":1343,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["this.savegraphbutton.disabled",{"_index":1345,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["this.savegraphspinner",{"_index":1344,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["this.service.addrow",{"_index":846,"title":{},"body":{"components/CurveComponent.html":{}}}],["this.service.chartinfo$.subscribe",{"_index":594,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.service.chartinfo$.subscribe((info",{"_index":935,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["this.service.chartinfo$.subscribe(info",{"_index":654,"title":{},"body":{"components/CurveChartFormComponent.html":{}}}],["this.service.data$.subscribe",{"_index":592,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.service.data$.subscribe((data",{"_index":937,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["this.service.getchartinfoobject",{"_index":587,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.service.getcharttitle",{"_index":943,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["this.service.getdataobject",{"_index":586,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.service.getinterfaceobject",{"_index":588,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.service.getismagnitudeon",{"_index":1369,"title":{},"body":{"components/LineFormComponent.html":{}}}],["this.service.interface$.subscribe",{"_index":939,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["this.service.interface$.subscribe((curveinterface",{"_index":1385,"title":{},"body":{"components/LineFormComponent.html":{}}}],["this.service.resetchartinfo",{"_index":851,"title":{},"body":{"components/CurveComponent.html":{}}}],["this.service.resetdata",{"_index":850,"title":{},"body":{"components/CurveComponent.html":{}}}],["this.service.setcharttitle(title",{"_index":666,"title":{},"body":{"components/CurveChartFormComponent.html":{}}}],["this.service.setcurvecount(this.form.value",{"_index":1383,"title":{},"body":{"components/LineFormComponent.html":{}}}],["this.service.setdatalabel(labels",{"_index":669,"title":{},"body":{"components/CurveChartFormComponent.html":{}}}],["this.service.sethighchart(this.chartobject",{"_index":934,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["this.service.setismagnitudeon(value",{"_index":1384,"title":{},"body":{"components/LineFormComponent.html":{}}}],["this.service.setxaxislabel(label",{"_index":672,"title":{},"body":{"components/CurveChartFormComponent.html":{}}}],["this.service.setyaxislabel(label",{"_index":674,"title":{},"body":{"components/CurveChartFormComponent.html":{}}}],["this.setchartseries",{"_index":933,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["this.setcharttitle",{"_index":929,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["this.setchartxaxis",{"_index":930,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["this.setchartyaxis",{"_index":931,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["this.setcolortheme(this.getcolortheme",{"_index":346,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.setdata(curvedata.getdefaultdata",{"_index":1112,"title":{},"body":{"injectables/CurveService.html":{}}}],["this.setdatabycell(newvalue",{"_index":753,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.setfontfamily(this.getfontfamily",{"_index":347,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.setfontsize(this.getfontsize",{"_index":348,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.setfontstyle(this.getfontstyle",{"_index":349,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.sortdatabyx",{"_index":750,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.storageservice.getcolortheme",{"_index":358,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.storageservice.getfont",{"_index":366,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.storageservice.getfontsize",{"_index":355,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.storageservice.getfontstyle",{"_index":362,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.storageservice.setcolortheme(colortheme",{"_index":357,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.storageservice.setfont(fontfamily",{"_index":365,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.storageservice.setfontsize(fontsize",{"_index":354,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.storageservice.setfontstyle(fontstyle",{"_index":361,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.table.rendertable",{"_index":1165,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["this.tableuseractionobs",{"_index":1488,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{}}}],["this.tableuseractionobs$.emit([{action",{"_index":1489,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{}}}],["this.toolsnav.close",{"_index":1542,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["this.toolsnav.open",{"_index":1541,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["this.updatechart",{"_index":936,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["this.updatechartseries",{"_index":938,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["this.updateflag",{"_index":941,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["this.xaxislabel",{"_index":724,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.yaxislabel",{"_index":725,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["those",{"_index":1883,"title":{},"body":{"license.html":{}}}],["though",{"_index":2276,"title":{},"body":{"license.html":{}}}],["threatened",{"_index":1894,"title":{},"body":{"license.html":{}}}],["three",{"_index":719,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["through",{"_index":1737,"title":{},"body":{"index.html":{},"license.html":{}}}],["throw",{"_index":785,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["thus",{"_index":2059,"title":{},"body":{"license.html":{}}}],["time",{"_index":1252,"title":{},"body":{"injectables/HonorCodeChartService.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["title",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{}}}],["toggle",{"_index":982,"title":{},"body":{"modules/CurveModule.html":{},"components/LineFormComponent.html":{}}}],["tool",{"_index":188,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/ToolsNavbarComponent.html":{},"miscellaneous/functions.html":{}}}],["toolbar",{"_index":1420,"title":{},"body":{"components/MenubarComponent.html":{}}}],["toolinterface",{"_index":526,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"interfaces/MyChart.html":{}}}],["tools",{"_index":71,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"index.html":{},"license.html":{}}}],["tools/curve/curve.component",{"_index":167,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["tools/curve/curve.module",{"_index":1540,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["tools/shared/honor",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["tools_routes",{"_index":169,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["toolsbar",{"_index":1404,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{}}}],["toolsnav",{"_index":1531,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["toolsnavbarcomponent",{"_index":70,"title":{"components/ToolsNavbarComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"coverage.html":{},"overview.html":{}}}],["toolsnavbarmodule",{"_index":118,"title":{"modules/ToolsNavbarModule.html":{}},"body":{"modules/AppModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"modules.html":{},"overview.html":{}}}],["tooltip",{"_index":919,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["top",{"_index":1390,"title":{},"body":{"components/LineFormComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["trade",{"_index":2300,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":2299,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":2301,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":2249,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":1967,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":2250,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":2367,"title":{},"body":{"license.html":{}}}],["transmission",{"_index":2201,"title":{},"body":{"license.html":{}}}],["treated",{"_index":2275,"title":{},"body":{"license.html":{}}}],["treaty",{"_index":2084,"title":{},"body":{"license.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["true",{"_index":600,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveHighChartComponent.html":{},"injectables/HonorCodePopupService.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":1381,"title":{},"body":{"components/LineFormComponent.html":{},"dependencies.html":{}}}],["tslib",{"_index":1633,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":1652,"title":{},"body":{"miscellaneous/functions.html":{}}}],["two",{"_index":717,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["type",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyData.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"interfaces/MyStorage.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2583,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":928,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["types/actions",{"_index":1487,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["types/file",{"_index":1612,"title":{},"body":{"dependencies.html":{}}}],["typical",{"_index":2227,"title":{},"body":{"license.html":{}}}],["typing",{"_index":1306,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["ultimate",{"_index":1720,"title":{},"body":{"index.html":{}}}],["unacceptable",{"_index":1880,"title":{},"body":{"license.html":{}}}],["under",{"_index":1726,"title":{},"body":{"index.html":{},"license.html":{}}}],["universe",{"_index":1714,"title":{},"body":{"index.html":{}}}],["unless",{"_index":2237,"title":{},"body":{"license.html":{}}}],["unlimited",{"_index":2046,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":1940,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":2071,"title":{},"body":{"license.html":{}}}],["unpacking",{"_index":2271,"title":{},"body":{"license.html":{}}}],["until",{"_index":2331,"title":{},"body":{"license.html":{}}}],["up",{"_index":1711,"title":{},"body":{"index.html":{}}}],["update",{"_index":1686,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updatechart",{"_index":896,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["updatechartseries",{"_index":897,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["updated",{"_index":1690,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updateflag",{"_index":889,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["updateline",{"_index":1587,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["updateline(tabledata",{"_index":1675,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updates",{"_index":1681,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["use",{"_index":189,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["used",{"_index":1909,"title":{},"body":{"license.html":{}}}],["useful",{"_index":2546,"title":{},"body":{"license.html":{}}}],["user",{"_index":1648,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["user's",{"_index":1216,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["users",{"_index":1797,"title":{},"body":{"license.html":{}}}],["uses",{"_index":2231,"title":{},"body":{"license.html":{}}}],["using",{"_index":2199,"title":{},"body":{"license.html":{}}}],["valid",{"_index":2164,"title":{},"body":{"license.html":{}}}],["validators",{"_index":241,"title":{},"body":{"components/AppearanceComponent.html":{},"components/HonorCodePopupComponent.html":{}}}],["validators.required",{"_index":257,"title":{},"body":{"components/AppearanceComponent.html":{},"components/HonorCodePopupComponent.html":{}}}],["value",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/LineFormComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value[0",{"_index":944,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["values",{"_index":1682,"title":{},"body":{"miscellaneous/functions.html":{}}}],["var",{"_index":30,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["variable",{"_index":1593,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2588,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbatim",{"_index":1776,"title":{},"body":{"license.html":{}}}],["version",{"_index":1761,"title":{},"body":{"license.html":{},"properties.html":{}}}],["versions",{"_index":1793,"title":{},"body":{"license.html":{}}}],["view",{"_index":1748,"title":{},"body":{"index.html":{},"license.html":{}}}],["viewchild",{"_index":1374,"title":{},"body":{"components/LineFormComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["viewchild(\"magslider",{"_index":1378,"title":{},"body":{"components/LineFormComponent.html":{}}}],["viewchild(\"savegraphbutton",{"_index":1507,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["viewchild(\"savegraphspinner",{"_index":1508,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["viewchild('magslider",{"_index":1372,"title":{},"body":{"components/LineFormComponent.html":{}}}],["viewchild('savegraphbutton",{"_index":1501,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{}}}],["viewchild('savegraphspinner",{"_index":1503,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{}}}],["viewchild('toolsnav",{"_index":1536,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["violates",{"_index":2265,"title":{},"body":{"license.html":{}}}],["violation",{"_index":2327,"title":{},"body":{"license.html":{}}}],["visible",{"_index":1976,"title":{},"body":{"license.html":{}}}],["void",{"_index":222,"title":{},"body":{"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"injectables/CurveService.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyData.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"license.html":{}}}],["volume",{"_index":2140,"title":{},"body":{"license.html":{}}}],["w",{"_index":2556,"title":{},"body":{"license.html":{}}}],["waive",{"_index":2093,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":2528,"title":{},"body":{"license.html":{}}}],["want",{"_index":1810,"title":{},"body":{"license.html":{}}}],["warranties",{"_index":1979,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1851,"title":{},"body":{"license.html":{}}}],["wavelength",{"_index":1713,"title":{},"body":{"index.html":{}}}],["way",{"_index":1801,"title":{},"body":{"license.html":{}}}],["ways",{"_index":2154,"title":{},"body":{"license.html":{}}}],["webstorage",{"_index":1625,"title":{},"body":{"dependencies.html":{}}}],["welcome",{"_index":2557,"title":{},"body":{"license.html":{}}}],["well",{"_index":1959,"title":{},"body":{"license.html":{}}}],["whatever",{"_index":2372,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1829,"title":{},"body":{"license.html":{}}}],["whole",{"_index":2002,"title":{},"body":{"license.html":{}}}],["whose",{"_index":2209,"title":{},"body":{"license.html":{}}}],["widely",{"_index":1996,"title":{},"body":{"license.html":{}}}],["width",{"_index":286,"title":{},"body":{"components/AppearanceComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/LineFormComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["window",{"_index":1271,"title":{},"body":{"components/HonorCodePopupComponent.html":{},"license.html":{}}}],["wipo",{"_index":2083,"title":{},"body":{"license.html":{}}}],["wish",{"_index":1808,"title":{},"body":{"license.html":{}}}],["within",{"_index":2311,"title":{},"body":{"license.html":{}}}],["without",{"_index":1943,"title":{},"body":{"license.html":{}}}],["work",{"_index":1799,"title":{},"body":{"license.html":{}}}],["work's",{"_index":2022,"title":{},"body":{"license.html":{}}}],["working",{"_index":1997,"title":{},"body":{"license.html":{}}}],["works",{"_index":25,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"license.html":{}}}],["worldwide",{"_index":2405,"title":{},"body":{"license.html":{}}}],["writing",{"_index":2490,"title":{},"body":{"license.html":{}}}],["written",{"_index":2163,"title":{},"body":{"license.html":{}}}],["x",{"_index":606,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["x\"].concat(this.datalabels",{"_index":728,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["xaxis",{"_index":515,"title":{},"body":{"interfaces/ChartInfo.html":{}}}],["xaxislabel",{"_index":659,"title":{},"body":{"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["xkey",{"_index":1677,"title":{},"body":{"miscellaneous/functions.html":{}}}],["y",{"_index":613,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/LineFormComponent.html":{},"miscellaneous/functions.html":{}}}],["y1",{"_index":711,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"miscellaneous/enumerations.html":{}}}],["y2",{"_index":712,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"miscellaneous/enumerations.html":{}}}],["y3",{"_index":713,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"miscellaneous/enumerations.html":{}}}],["y4",{"_index":714,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"miscellaneous/enumerations.html":{}}}],["yaxis",{"_index":518,"title":{},"body":{"interfaces/ChartInfo.html":{}}}],["yaxislabel",{"_index":661,"title":{},"body":{"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["years",{"_index":2165,"title":{},"body":{"license.html":{}}}],["ykey",{"_index":1678,"title":{},"body":{"miscellaneous/functions.html":{}}}],["yourself",{"_index":1303,"title":{},"body":{"components/HonorCodePopupComponent.html":{},"license.html":{}}}],["yyyy:mm:dd",{"_index":1673,"title":{},"body":{"miscellaneous/functions.html":{}}}],["z",{"_index":1513,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{}}}],["zone.js",{"_index":1635,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/MenubarModule.html":{},"modules/SettingsModule.html":{},"modules/SimpleDataButtonModule.html":{},"modules/SimpleGraphButtonModule.html":{},"modules/ToolsNavbarModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/about/about.component.ts\n\n\n\n    \n        Description\n    \n    \n        The About page component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n\n\n            \n                styleUrls\n                ./about.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component} from '@angular/core';\n\n/**\n * The About page component\n */\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent {\n\n}\n\n    \n\n    \n        about works!\n\n    \n\n    \n                \n                    ./about.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'about works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        App Component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(appearanceService: AppearanceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appearanceService\n                                                  \n                                                        \n                                                                        AppearanceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'skynet-plotting-neo'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n            \n                \n                    Default title of the site\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {AppearanceService} from \"./shared/settings/appearance/service/appearance.service\";\n\n/**\n * App Component\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  /**\n   * Default title of the site\n   */\n  title = 'skynet-plotting-neo';\n\n  constructor(private appearanceService: AppearanceService) {\n    this.appearanceService.intialize();\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppearanceComponent\n\nAppearanceComponent\n\nAppModule -->\n\nAppearanceComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nHonorCodePopupModule\n\nHonorCodePopupModule\n\nAppModule -->\n\nHonorCodePopupModule->AppModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nAppModule -->\n\nSettingsModule->AppModule\n\n\n\n\n\nToolsNavbarModule\n\nToolsNavbarModule\n\nAppModule -->\n\nToolsNavbarModule->AppModule\n\n\n\n\n\nAppearanceService\n\nAppearanceService\n\nAppModule -->\n\nAppearanceService->AppModule\n\n\n\n\n\nAppearanceStorageService\n\nAppearanceStorageService\n\nAppModule -->\n\nAppearanceStorageService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            AppearanceComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            PageNotFoundComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AppearanceService\n                        \n                        \n                            AppearanceStorageService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            HonorCodePopupModule\n                        \n                        \n                            SettingsModule\n                        \n                        \n                            ToolsNavbarModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {ToolsNavbarModule} from './shared/tools-navbar/tools-navbar.component';\nimport {registerAllModules} from 'handsontable/registry';\nimport {HomeComponent} from \"./shared/home/home.component\";\nimport {AboutComponent} from \"./shared/about/about.component\";\nimport {PageNotFoundComponent} from \"./shared/page-not-found/page-not-found.component\";\nimport {HonorCodePopupModule} from \"./tools/shared/honor-code-popup/honor-code-popup.module\";\nimport {SettingsModule} from './shared/settings/settings.component';\nimport {AppearanceComponent} from './shared/settings/appearance/appearance.component';\nimport {MatLegacyInputModule as MatInputModule} from \"@angular/material/legacy-input\";\nimport {MatLegacySelectModule as MatSelectModule} from \"@angular/material/legacy-select\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {AppearanceStorageService} from \"./shared/settings/appearance/service/appearance-storage.service\";\nimport {MatLegacyButtonModule as MatButtonModule} from \"@angular/material/legacy-button\";\nimport {AppearanceService} from \"./shared/settings/appearance/service/appearance.service\";\n\n\nregisterAllModules();\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ToolsNavbarModule,\n    HonorCodePopupModule,\n    SettingsModule,\n    MatInputModule,\n    MatSelectModule,\n    ReactiveFormsModule,\n    MatButtonModule\n  ],\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    AboutComponent,\n    PageNotFoundComponent,\n    AppearanceComponent,\n  ],\n  providers: [AppearanceStorageService, AppearanceService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {CurveComponent} from \"./tools/curve/curve.component\";\nimport {HomeComponent} from \"./shared/home/home.component\";\nimport {AboutComponent} from \"./shared/about/about.component\";\nimport {PageNotFoundComponent} from \"./shared/page-not-found/page-not-found.component\";\nimport {SettingsComponent} from \"./shared/settings/settings.component\";\nimport {AppearanceComponent} from \"./shared/settings/appearance/appearance.component\";\n\n/**\n * Routes for the site\n */\nconst TOOLS_ROUTES: Routes = [\n  {path: \"home\", component: HomeComponent, data: {title: \"getToolSiteName($localize`:home:Home`)\"}},\n  {path: \"about\", component: AboutComponent, data: {title: \"getToolSiteName($localize`:about:About`)\"}},\n  {path: \"curve\", component: CurveComponent, data: {title: \"getToolSiteName($localize`:curve:Curve`)\"}},\n  {\n    path: \"settings\", component: SettingsComponent, data: {title: \"getToolSiteName($localize`:settings:Settings`)\"},\n    children: [\n      {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'appearance'\n      },\n      {\n        path: 'appearance',\n        component: AppearanceComponent,\n        data: {title: 'Appearance Settings'},\n      },]\n  },\n  {path: '', redirectTo: '/home', pathMatch: 'full'},\n  {path: '**', component: PageNotFoundComponent, data: {title: $localize`:page-not-found:Page Not Found`}}\n]\n\n/**\n * Generate name of the site based on the graphing tool in use.\n * @param tool the graphing tool in use\n * @returns\n */\nfunction getToolSiteName(tool: string): string {\n  return $localize`:site-name:Skynet Plotting Neo` + tool;\n}\n\n@NgModule({\n  imports: [RouterModule.forRoot(TOOLS_ROUTES)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppearanceComponent.html":{"url":"components/AppearanceComponent.html","title":"component - AppearanceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppearanceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/settings/appearance/appearance.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-appearance\n            \n\n\n\n            \n                styleUrls\n                ./appearance.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./appearance.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                ColorThemesList\n                            \n                            \n                                    Protected\n                                    Readonly\n                                FontList\n                            \n                            \n                                    Protected\n                                    Readonly\n                                FontSizesList\n                            \n                            \n                                    Protected\n                                    Readonly\n                                FontStylesList\n                            \n                            \n                                    Protected\n                                formGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getFormGroup\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                resetDefault\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(appearanceService: AppearanceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/settings/appearance/appearance.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appearanceService\n                                                  \n                                                        \n                                                                        AppearanceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getFormGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormGroup(colorTheme: string, fontFamily: string, fontStyle: string, fontSize: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/appearance.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    colorTheme\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fontFamily\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fontStyle\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fontSize\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/appearance.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        resetDefault\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetDefault()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/appearance.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        ColorThemesList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MyColorTheme[]\n\n                    \n                \n                \n                    \n                        Default value : ColorThemeSettings.getThemeLists()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/appearance.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        FontList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MyFontFamily[]\n\n                    \n                \n                \n                    \n                        Default value : ColorThemeSettings.getFontFamilyLists()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/appearance.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        FontSizesList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MyFontSize[]\n\n                    \n                \n                \n                    \n                        Default value : ColorThemeSettings.getFontSizeLists()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/appearance.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        FontStylesList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MyFontStyle[]\n\n                    \n                \n                \n                    \n                        Default value : ColorThemeSettings.getFontStyleLists()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/appearance.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/appearance.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {\n  ColorThemeSettings,\n  DefaultAppearanceSettings,\n  MyColorTheme,\n  MyFontFamily,\n  MyFontSize,\n  MyFontStyle\n} from \"./service/appearance.utils\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {AppearanceService} from \"./service/appearance.service\";\n\n@Component({\n  selector: 'app-appearance',\n  templateUrl: './appearance.component.html',\n  styleUrls: ['./appearance.component.scss']\n})\nexport class AppearanceComponent implements OnInit {\n\n  protected readonly ColorThemesList: MyColorTheme[] = ColorThemeSettings.getThemeLists();\n  protected readonly FontStylesList: MyFontStyle[] = ColorThemeSettings.getFontStyleLists();\n  protected readonly FontSizesList: MyFontSize[] = ColorThemeSettings.getFontSizeLists();\n  protected readonly FontList: MyFontFamily[] = ColorThemeSettings.getFontFamilyLists();\n\n  protected formGroup!: FormGroup;\n\n  constructor(private appearanceService: AppearanceService) {\n    this.getFormGroup(appearanceService.getColorTheme(),\n      appearanceService.getFontFamily(),\n      appearanceService.getFontStyle(),\n      appearanceService.getFontSize());\n  }\n\n  ngOnInit(): void {\n  }\n\n  protected resetDefault(): void {\n    this.appearanceService.setColorTheme(DefaultAppearanceSettings.theme);\n    this.appearanceService.setFontStyle(DefaultAppearanceSettings.fontStyle);\n    this.appearanceService.setFontSize(DefaultAppearanceSettings.fontSize);\n    this.getFormGroup(DefaultAppearanceSettings.theme,\n      DefaultAppearanceSettings.fontFamily,\n      DefaultAppearanceSettings.fontStyle,\n      DefaultAppearanceSettings.fontSize);\n  }\n\n  private getFormGroup(colorTheme: string,\n                       fontFamily: string,\n                       fontStyle: string,\n                       fontSize: string): void {\n    this.formGroup = new FormGroup({\n      colorTheme: new FormControl(colorTheme, [Validators.required]),\n      fontFamily: new FormControl(fontFamily, [Validators.required]),\n      fontStyle: new FormControl(fontStyle, [Validators.required],\n      ),\n      fontSize: new FormControl(fontSize, [Validators.required])\n    });\n    this.formGroup.get(\"colorTheme\")?.valueChanges.subscribe(value => {\n      this.appearanceService.setColorTheme(value);\n    });\n    this.formGroup.get(\"fontFamily\")?.valueChanges.subscribe(value => {\n      this.appearanceService.setFontFamily(value);\n    });\n    this.formGroup.get(\"fontStyle\")?.valueChanges.subscribe(value => {\n      this.appearanceService.setFontStyle(value);\n    });\n    this.formGroup.get(\"fontSize\")?.valueChanges.subscribe(value => {\n      this.appearanceService.setFontSize(value);\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Color Theme\n        \n          {{color.displayName}}\n        \n      \n    \n    \n      \n        Font Family\n        \n          {{family.displayName}}\n        \n      \n    \n    \n      \n        Font Style\n        \n          {{style.displayName}}\n        \n      \n    \n    \n      \n        Font Size\n        \n          {{size.displayName}}\n        \n      \n    \n    \n      Reset Default\n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./appearance.component.scss\n                \n                \n.setting-container {\n  padding: 20px;\n}\n\nmat-form-field {\n  width: 250px;\n}\n\nbutton {\n  width: 250px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Color Theme                  {{color.displayName}}                                    Font Family                  {{family.displayName}}                                    Font Style                  {{style.displayName}}                                    Font Size                  {{size.displayName}}                            Reset Default            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppearanceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppearanceService.html":{"url":"injectables/AppearanceService.html","title":"injectable - AppearanceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppearanceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/settings/appearance/service/appearance.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                renderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getChartBackgroundColor\n                            \n                            \n                                    Private\n                                getChartColorMode\n                            \n                            \n                                    Public\n                                getChartFontColor\n                            \n                            \n                                    Public\n                                getColorTheme\n                            \n                            \n                                    Public\n                                getFontFamily\n                            \n                            \n                                    Private\n                                getFontFamilyClassname\n                            \n                            \n                                    Public\n                                getFontSize\n                            \n                            \n                                    Private\n                                getFontSizeClassname\n                            \n                            \n                                    Public\n                                getFontStyle\n                            \n                            \n                                    Private\n                                getFontStyleClassname\n                            \n                            \n                                    Public\n                                intialize\n                            \n                            \n                                    Public\n                                setColorTheme\n                            \n                            \n                                    Public\n                                setFontFamily\n                            \n                            \n                                    Public\n                                setFontSize\n                            \n                            \n                                    Public\n                                setFontStyle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: AppearanceStorageService, rendererFactory: RendererFactory2)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/settings/appearance/service/appearance.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        AppearanceStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rendererFactory\n                                                  \n                                                        \n                                                                    RendererFactory2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getChartBackgroundColor\n                        \n                    \n                \n            \n            \n                \n                    \n                    getChartBackgroundColor()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getChartColorMode\n                        \n                    \n                \n            \n            \n                \n                    \n                    getChartColorMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ChartColorMode\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getChartFontColor\n                        \n                    \n                \n            \n            \n                \n                    \n                    getChartFontColor()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getColorTheme\n                        \n                    \n                \n            \n            \n                \n                    \n                    getColorTheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ColorThemes\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getFontFamily\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFontFamily()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FontFamily\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getFontFamilyClassname\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFontFamilyClassname(font: FontFamily)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    font\n                                    \n                                                FontFamily\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getFontSize\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFontSize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FontSizes\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getFontSizeClassname\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFontSizeClassname(fontSize: FontSizes)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fontSize\n                                    \n                                                FontSizes\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getFontStyle\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFontStyle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FontStyles\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getFontStyleClassname\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFontStyleClassname(fontStyle: FontStyles)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fontStyle\n                                    \n                                                FontStyles\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        intialize\n                        \n                    \n                \n            \n            \n                \n                    \n                    intialize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setColorTheme\n                        \n                    \n                \n            \n            \n                \n                    \n                    setColorTheme(colorTheme: ColorThemes)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    colorTheme\n                                    \n                                                ColorThemes\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setFontFamily\n                        \n                    \n                \n            \n            \n                \n                    \n                    setFontFamily(fontFamily: FontFamily)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fontFamily\n                                    \n                                                FontFamily\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setFontSize\n                        \n                    \n                \n            \n            \n                \n                    \n                    setFontSize(fontSize: FontSizes)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fontSize\n                                    \n                                                FontSizes\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setFontStyle\n                        \n                    \n                \n            \n            \n                \n                    \n                    setFontStyle(fontStyle: FontStyles)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fontStyle\n                                    \n                                                FontStyles\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        renderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Renderer2\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable, Renderer2, RendererFactory2} from '@angular/core';\nimport {\n  ChartColor,\n  ChartColorMode,\n  ColorThemes,\n  DefaultAppearanceSettings,\n  FontFamily,\n  FontSizes,\n  FontStyles\n} from \"./appearance.utils\";\nimport {AppearanceStorageService} from \"./appearance-storage.service\";\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AppearanceService {\n  private renderer: Renderer2;\n\n  constructor(private storageService: AppearanceStorageService, private rendererFactory: RendererFactory2) {\n    this.renderer = rendererFactory.createRenderer(document.body, null);\n  }\n\n  public intialize(): void {\n    this.setColorTheme(this.getColorTheme());\n    this.setFontFamily(this.getFontFamily());\n    this.setFontSize(this.getFontSize());\n    this.setFontStyle(this.getFontStyle());\n  }\n\n\n  public setFontSize(fontSize: FontSizes): void {\n    this.renderer.removeClass(document.body, this.getFontSizeClassname(this.getFontSize()));\n    this.renderer.addClass(document.body, this.getFontSizeClassname(fontSize));\n    this.storageService.setFontSize(fontSize);\n  }\n\n  public getFontSize(): FontSizes {\n    return this.storageService.getFontSize();\n  }\n\n  public setColorTheme(colorTheme: ColorThemes): void {\n    this.renderer.removeClass(document.body, this.getColorTheme());\n    this.renderer.addClass(document.body, colorTheme);\n    this.storageService.setColorTheme(colorTheme);\n  }\n\n  public getColorTheme(): ColorThemes {\n    return this.storageService.getColorTheme();\n  }\n\n  public setFontStyle(fontStyle: FontStyles): void {\n    this.renderer.removeClass(document.body, this.getFontStyleClassname(this.getFontStyle()));\n    this.renderer.addClass(document.body, this.getFontStyleClassname(fontStyle));\n    this.storageService.setFontStyle(fontStyle);\n  }\n\n  public getFontStyle(): FontStyles {\n    return this.storageService.getFontStyle();\n  }\n\n  public setFontFamily(fontFamily: FontFamily): void {\n    this.renderer.removeClass(document.body, this.getFontFamilyClassname(this.getFontFamily()));\n    this.renderer.addClass(document.body, this.getFontFamilyClassname(fontFamily));\n    this.storageService.setFont(fontFamily);\n  }\n\n  public getFontFamily(): FontFamily {\n    return this.storageService.getFont();\n  }\n\n  public getChartFontColor(): string {\n    return ChartColor.getFontColor(this.getChartColorMode());\n  }\n\n  public getChartBackgroundColor(): string {\n    return ChartColor.getBackgroundColor(this.getChartColorMode());\n  }\n\n  private getFontSizeClassname(fontSize: FontSizes): string {\n    return 'fontSize-' + fontSize;\n  }\n\n  private getFontStyleClassname(fontStyle: FontStyles): string {\n    return 'fontStyle-' + fontStyle;\n  }\n\n  private getFontFamilyClassname(font: FontFamily): string {\n    return 'fontFamily-' + font;\n  }\n\n  private getChartColorMode(): ChartColorMode {\n    if (this.getColorTheme() === ColorThemes.LIGHT)\n      return ChartColorMode.LIGHT;\n    else if (this.getColorTheme() === ColorThemes.DARK)\n      return ChartColorMode.DARK;\n    else\n      return DefaultAppearanceSettings.chartColorMode;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppearanceStorageService.html":{"url":"injectables/AppearanceStorageService.html","title":"injectable - AppearanceStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppearanceStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/settings/appearance/service/appearance-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chartColorMode\n                            \n                            \n                                    Private\n                                    Readonly\n                                chartColorModeKey\n                            \n                            \n                                    Private\n                                colorTheme\n                            \n                            \n                                    Private\n                                    Readonly\n                                colorThemeKey\n                            \n                            \n                                    Private\n                                font\n                            \n                            \n                                    Private\n                                    Readonly\n                                fontKey\n                            \n                            \n                                    Private\n                                fontSize\n                            \n                            \n                                    Private\n                                    Readonly\n                                fontSizeKey\n                            \n                            \n                                    Private\n                                fontStyle\n                            \n                            \n                                    Private\n                                    Readonly\n                                fontStyleKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getColorTheme\n                            \n                            \n                                    Public\n                                getFont\n                            \n                            \n                                    Public\n                                getFontSize\n                            \n                            \n                                    Public\n                                getFontStyle\n                            \n                            \n                                    Public\n                                setColorTheme\n                            \n                            \n                                    Public\n                                setFont\n                            \n                            \n                                    Public\n                                setFontSize\n                            \n                            \n                                    Public\n                                setFontStyle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:24\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getColorTheme\n                        \n                    \n                \n            \n            \n                \n                    \n                    getColorTheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ColorThemes\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getFont\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFont()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FontFamily\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getFontSize\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFontSize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FontSizes\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getFontStyle\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFontStyle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FontStyles\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setColorTheme\n                        \n                    \n                \n            \n            \n                \n                    \n                    setColorTheme(colorTheme: ColorThemes)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    colorTheme\n                                    \n                                                ColorThemes\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setFont\n                        \n                    \n                \n            \n            \n                \n                    \n                    setFont(font: FontFamily)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    font\n                                    \n                                                FontFamily\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setFontSize\n                        \n                    \n                \n            \n            \n                \n                    \n                    setFontSize(fontSize: FontSizes)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fontSize\n                                    \n                                                FontSizes\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setFontStyle\n                        \n                    \n                \n            \n            \n                \n                    \n                    setFontStyle(fontStyle: FontStyles)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fontStyle\n                                    \n                                                FontStyles\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartColorMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChartColorMode\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        chartColorModeKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"chartColorMode\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        colorTheme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ColorThemes\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        colorThemeKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"colorTheme\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        font\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FontFamily\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        fontKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"font\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fontSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FontSizes\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        fontSizeKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"fontSize\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fontStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FontStyles\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        fontStyleKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"fontStyle\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {\n  ChartColorMode,\n  ColorThemes,\n  DefaultAppearanceSettings,\n  FontFamily,\n  FontSizes,\n  FontStyles\n} from \"./appearance.utils\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppearanceStorageService {\n  private colorTheme!: ColorThemes;\n  private fontStyle!: FontStyles;\n  private fontSize!: FontSizes;\n  private font!: FontFamily;\n  private chartColorMode!: ChartColorMode;\n  private readonly colorThemeKey = \"colorTheme\";\n  private readonly fontStyleKey = \"fontStyle\";\n  private readonly fontSizeKey = \"fontSize\";\n  private readonly fontKey = \"font\";\n  private readonly chartColorModeKey = \"chartColorMode\";\n\n  constructor() {\n  }\n\n  public setColorTheme(colorTheme: ColorThemes): void {\n    localStorage.setItem(this.colorThemeKey, JSON.stringify(colorTheme));\n  }\n\n  public getColorTheme(): ColorThemes {\n    if (localStorage.getItem(this.colorThemeKey) !== null) {\n      this.colorTheme = JSON.parse(localStorage.getItem(this.colorThemeKey) as string);\n    } else {\n      this.colorTheme = DefaultAppearanceSettings.theme;\n    }\n    return this.colorTheme;\n  }\n\n  public setFontStyle(fontStyle: FontStyles): void {\n    localStorage.setItem(this.fontStyleKey, JSON.stringify(fontStyle));\n  }\n\n  public getFontStyle(): FontStyles {\n    if (localStorage.getItem(this.fontStyleKey) !== null) {\n      this.fontStyle = JSON.parse(localStorage.getItem(this.fontStyleKey) as string);\n    } else {\n      this.fontStyle = DefaultAppearanceSettings.fontStyle;\n    }\n    return this.fontStyle;\n  }\n\n  public setFontSize(fontSize: FontSizes): void {\n    localStorage.setItem(this.fontSizeKey, JSON.stringify(fontSize));\n  }\n\n  public getFontSize(): FontSizes {\n    if (localStorage.getItem(this.fontSizeKey) !== null) {\n      this.fontSize = JSON.parse(localStorage.getItem(this.fontSizeKey) as string);\n    } else {\n      this.fontSize = DefaultAppearanceSettings.fontSize;\n    }\n    return this.fontSize;\n  }\n\n  public setFont(font: FontFamily): void {\n    localStorage.setItem(this.fontKey, JSON.stringify(font));\n  }\n\n  public getFont(): FontFamily {\n    if (localStorage.getItem(this.fontKey) !== null) {\n      this.font = JSON.parse(localStorage.getItem(this.fontKey) as string);\n    } else {\n      this.font = DefaultAppearanceSettings.fontFamily;\n    }\n    return this.font;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChartColor.html":{"url":"classes/ChartColor.html","title":"class - ChartColor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChartColor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/settings/appearance/service/appearance.utils.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                lineColorDarkArray\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                lineColorLightArray\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getBackgroundColor\n                            \n                            \n                                    Static\n                                getFontColor\n                            \n                            \n                                    Static\n                                getLineColor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        lineColorDarkArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\"red\", \"orange\", \"green\", \"blue\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        lineColorLightArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\"red\", \"orange\", \"green\", \"blue\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:97\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getBackgroundColor\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBackgroundColor(mode: ChartColorMode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mode\n                                    \n                                                ChartColorMode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getFontColor\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFontColor(mode: ChartColorMode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mode\n                                    \n                                                ChartColorMode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getLineColor\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLineColor(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface MyColorTheme {\n  key: string;\n  displayName: string;\n}\n\nexport enum ColorThemes {\n  LIGHT = 'LIGHT_THEME',\n  DARK = 'DARK_THEME',\n  // HIGH_CONTRAST = 'HC_THEME',\n  HIGH_CONTRAST_DARK = 'HC_DARK_THEME'\n}\n\nexport interface MyFontStyle {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontStyles {\n  DEFAULT = 'normal',\n  BOLD = 'bold',\n  EXTRA_BOLD = 'bolder',\n}\n\nexport interface MyFontSize {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontSizes {\n  SMALL = \"small\",\n  DEFAULT = \"default\",\n  LARGE = \"large\",\n  LARGER = \"larger\",\n}\n\nexport enum FontFamily {\n  ROBOTO = 'Roboto',\n  COMIC_NEUE = 'Comic-Neue',\n}\n\nexport interface MyFontFamily {\n  key: string;\n  displayName: string;\n}\n\nexport class ColorThemeSettings {\n  public static getThemeLists(): MyColorTheme[] {\n    return [\n      {key: ColorThemes.LIGHT, displayName: 'Light'},\n      {key: ColorThemes.DARK, displayName: 'Dark'},\n      // {key: ColorThemes.HIGH_CONTRAST, displayName: 'High Contrast'},\n      {key: ColorThemes.HIGH_CONTRAST_DARK, displayName: 'High Contrast Dark'}\n    ];\n  }\n\n  public static getFontStyleLists(): MyFontStyle[] {\n    return [\n      {key: FontStyles.DEFAULT, displayName: 'Default'},\n      {key: FontStyles.BOLD, displayName: 'Bold'},\n      {key: FontStyles.EXTRA_BOLD, displayName: 'Extra Bold'}\n    ]\n  }\n\n  public static getFontSizeLists(): MyFontSize[] {\n    return [\n      {key: FontSizes.SMALL, displayName: 'Small'},\n      {key: FontSizes.DEFAULT, displayName: 'Default'},\n      {key: FontSizes.LARGE, displayName: 'Large'},\n      {key: FontSizes.LARGER, displayName: 'Larger'}\n    ]\n  }\n\n  public static getFontFamilyLists(): MyFontFamily[] {\n    return [\n      {key: FontFamily.ROBOTO, displayName: 'Roboto'},\n      {key: FontFamily.COMIC_NEUE, displayName: 'Comic Neue'}\n    ]\n  }\n}\n\nexport enum ChartColorMode {\n  LIGHT = 'LIGHT',\n  DARK = 'DARK'\n}\n\n\nexport class DefaultAppearanceSettings {\n  public static theme: ColorThemes = ColorThemes.LIGHT;\n  public static fontStyle: FontStyles = FontStyles.DEFAULT;\n  public static fontSize: FontSizes = FontSizes.DEFAULT;\n  public static fontFamily: FontFamily = FontFamily.ROBOTO;\n  public static chartColorMode: ChartColorMode = ChartColorMode.LIGHT;\n}\n\n\nexport class ChartColor {\n  private static readonly lineColorLightArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n  private static readonly lineColorDarkArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n\n  public static getFontColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#2b4162' : '#f5f0f6';\n  }\n\n  public static getBackgroundColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#C3CFD4' : '#325769';\n  }\n\n  public static getLineColor(index: number): string {\n    if (index = this.lineColorLightArray.length)\n      return 'black';\n    else\n      // return mode === ChartColorMode.LIGHT ? this.lineColorLightArray[index] : this.lineColorDarkArray[index];\n      return this.lineColorLightArray[index];\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChartInfo.html":{"url":"interfaces/ChartInfo.html","title":"interface - ChartInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChartInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/shared/charts/chart.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getChartTitle\n                                    \n                                \n                                \n                                    \n                                        getDataLabel\n                                    \n                                \n                                \n                                    \n                                        getXAxisLabel\n                                    \n                                \n                                \n                                    \n                                        getYAxisLabel\n                                    \n                                \n                                \n                                    \n                                        setChartTitle\n                                    \n                                \n                                \n                                    \n                                        setDataLabel\n                                    \n                                \n                                \n                                    \n                                        setXAxisLabel\n                                    \n                                \n                                \n                                    \n                                        setYAxisLabel\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getChartTitle\n                        \n                    \n                \n            \n            \n                \ngetChartTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/charts/chart.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataLabel\n                        \n                    \n                \n            \n            \n                \ngetDataLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/charts/chart.interface.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getXAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetXAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/charts/chart.interface.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getYAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetYAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/charts/chart.interface.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setChartTitle\n                        \n                    \n                \n            \n            \n                \nsetChartTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/charts/chart.interface.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDataLabel\n                        \n                    \n                \n            \n            \n                \nsetDataLabel(data: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/charts/chart.interface.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setXAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetXAxisLabel(xAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/charts/chart.interface.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    xAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setYAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetYAxisLabel(yAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/charts/chart.interface.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    yAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {ChartConfiguration, ChartOptions} from \"chart.js\";\nimport {MyData} from \"../data/data.interface\";\n\nexport interface ChartInfo {\n  getChartTitle(): string;\n\n  getXAxisLabel(): string;\n\n  getYAxisLabel(): string;\n\n  getDataLabel(): string;\n\n  setChartTitle(title: string): void;\n\n  setXAxisLabel(xAxis: string): void;\n\n  setYAxisLabel(yAxis: string): void;\n\n  setDataLabel(data: string): void;\n}\n\nexport interface MyChart {\n  generateChartConfig(data: MyData, chartInfo: ChartInfo, toolInterface: any): ChartConfiguration['data'];\n\n  generateChartOptions(chartInfo: ChartInfo, toolInterface: any): ChartOptions;\n\n  renderChart(): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ColorThemeSettings.html":{"url":"classes/ColorThemeSettings.html","title":"class - ColorThemeSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ColorThemeSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/settings/appearance/service/appearance.utils.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getFontFamilyLists\n                            \n                            \n                                    Static\n                                getFontSizeLists\n                            \n                            \n                                    Static\n                                getFontStyleLists\n                            \n                            \n                                    Static\n                                getThemeLists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getFontFamilyLists\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFontFamilyLists()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MyFontFamily[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getFontSizeLists\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFontSizeLists()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MyFontSize[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getFontStyleLists\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFontStyleLists()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MyFontStyle[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getThemeLists\n                        \n                    \n                \n            \n            \n                \n                    \n                    getThemeLists()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MyColorTheme[]\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface MyColorTheme {\n  key: string;\n  displayName: string;\n}\n\nexport enum ColorThemes {\n  LIGHT = 'LIGHT_THEME',\n  DARK = 'DARK_THEME',\n  // HIGH_CONTRAST = 'HC_THEME',\n  HIGH_CONTRAST_DARK = 'HC_DARK_THEME'\n}\n\nexport interface MyFontStyle {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontStyles {\n  DEFAULT = 'normal',\n  BOLD = 'bold',\n  EXTRA_BOLD = 'bolder',\n}\n\nexport interface MyFontSize {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontSizes {\n  SMALL = \"small\",\n  DEFAULT = \"default\",\n  LARGE = \"large\",\n  LARGER = \"larger\",\n}\n\nexport enum FontFamily {\n  ROBOTO = 'Roboto',\n  COMIC_NEUE = 'Comic-Neue',\n}\n\nexport interface MyFontFamily {\n  key: string;\n  displayName: string;\n}\n\nexport class ColorThemeSettings {\n  public static getThemeLists(): MyColorTheme[] {\n    return [\n      {key: ColorThemes.LIGHT, displayName: 'Light'},\n      {key: ColorThemes.DARK, displayName: 'Dark'},\n      // {key: ColorThemes.HIGH_CONTRAST, displayName: 'High Contrast'},\n      {key: ColorThemes.HIGH_CONTRAST_DARK, displayName: 'High Contrast Dark'}\n    ];\n  }\n\n  public static getFontStyleLists(): MyFontStyle[] {\n    return [\n      {key: FontStyles.DEFAULT, displayName: 'Default'},\n      {key: FontStyles.BOLD, displayName: 'Bold'},\n      {key: FontStyles.EXTRA_BOLD, displayName: 'Extra Bold'}\n    ]\n  }\n\n  public static getFontSizeLists(): MyFontSize[] {\n    return [\n      {key: FontSizes.SMALL, displayName: 'Small'},\n      {key: FontSizes.DEFAULT, displayName: 'Default'},\n      {key: FontSizes.LARGE, displayName: 'Large'},\n      {key: FontSizes.LARGER, displayName: 'Larger'}\n    ]\n  }\n\n  public static getFontFamilyLists(): MyFontFamily[] {\n    return [\n      {key: FontFamily.ROBOTO, displayName: 'Roboto'},\n      {key: FontFamily.COMIC_NEUE, displayName: 'Comic Neue'}\n    ]\n  }\n}\n\nexport enum ChartColorMode {\n  LIGHT = 'LIGHT',\n  DARK = 'DARK'\n}\n\n\nexport class DefaultAppearanceSettings {\n  public static theme: ColorThemes = ColorThemes.LIGHT;\n  public static fontStyle: FontStyles = FontStyles.DEFAULT;\n  public static fontSize: FontSizes = FontSizes.DEFAULT;\n  public static fontFamily: FontFamily = FontFamily.ROBOTO;\n  public static chartColorMode: ChartColorMode = ChartColorMode.LIGHT;\n}\n\n\nexport class ChartColor {\n  private static readonly lineColorLightArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n  private static readonly lineColorDarkArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n\n  public static getFontColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#2b4162' : '#f5f0f6';\n  }\n\n  public static getBackgroundColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#C3CFD4' : '#325769';\n  }\n\n  public static getLineColor(index: number): string {\n    if (index = this.lineColorLightArray.length)\n      return 'black';\n    else\n      // return mode === ChartColorMode.LIGHT ? this.lineColorLightArray[index] : this.lineColorDarkArray[index];\n      return this.lineColorLightArray[index];\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CurveChart.html":{"url":"classes/CurveChart.html","title":"class - CurveChart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CurveChart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/curve/curve-chart/curve-chart.component.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyChart\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                generateChartConfig\n                            \n                            \n                                    Public\n                                generateChartOptions\n                            \n                            \n                                    Private\n                                generateCurveChartConfig\n                            \n                            \n                                    Private\n                                makeRawData\n                            \n                            \n                                    Public\n                                renderChart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:77\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:77\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        generateChartConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateChartConfig(data: MyData, chartInfo: ChartInfo, toolInterface: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                MyData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    chartInfo\n                                    \n                                                ChartInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    toolInterface\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        generateChartOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateChartOptions(chartInfo: ChartInfo, toolInterface: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartInfo\n                                    \n                                                ChartInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    toolInterface\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ChartOptions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generateCurveChartConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCurveChartConfig(chartData: CurveDataDict[], curveCount: number, labels: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartData\n                                    \n                                                CurveDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    curveCount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    labels\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        makeRawData\n                        \n                    \n                \n            \n            \n                \n                    \n                    makeRawData(dataDict: CurveDataDict[], curveCount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dataDict\n                                    \n                                                CurveDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    curveCount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [][]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        renderChart\n                        \n                    \n                \n            \n            \n                \n                    \n                    renderChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {AfterViewInit, Component} from '@angular/core';\nimport {Chart} from \"chart.js\";\nimport {ChartConfiguration, ChartOptions} from \"chart.js/dist/types\";\nimport {CurveService} from \"../curve.service\";\nimport {ChartInfo, MyChart} from \"../../shared/charts/chart.interface\";\nimport {MyData} from \"../../shared/data/data.interface\";\nimport {CurveChartInfo, CurveCounts, CurveDataDict, CurveInterface} from \"../curve.service.util\";\nimport {AppearanceService} from \"../../../shared/settings/appearance/service/appearance.service\";\nimport {ChartColor} from \"../../../shared/settings/appearance/service/appearance.utils\";\n\n/**\n * Chart for the curve graphing tools.\n *\n */\n@Component({\n  selector: 'app-curve-chart',\n  templateUrl: './curve-chart.component.html',\n  styleUrls: ['./curve-chart.component.scss'],\n})\nexport class CurveChartComponent implements AfterViewInit {\n  /**\n   * Chart.js object id\n   */\n  id!: string;\n  /**\n   * Custom Chart object\n   */\n  chart!: CurveChart;\n  /**\n   * Chart.js object data configuration\n   */\n  lineChartData!: ChartConfiguration['data'];\n  /**\n   * Chart.js object options configuration\n   */\n  lineChartOptions!: ChartOptions;\n\n\n  constructor(private service: CurveService, private appearanceService: AppearanceService) {\n    this.id = \"curve-chart\";\n    Chart.defaults.color = this.appearanceService.getChartFontColor();\n    Chart.defaults.borderColor = this.appearanceService.getChartBackgroundColor();\n    this.chart = new CurveChart(this.id);\n    this.lineChartData = this.chart.generateChartConfig(\n      this.service.getDataObject(),\n      this.service.getChartInfoObject(),\n      this.service.getInterfaceObject());\n    this.lineChartOptions = this.chart.generateChartOptions(\n      this.service.getChartInfoObject(),\n      this.service.getInterfaceObject()\n    );\n  }\n\n  ngAfterViewInit(): void {\n    this.service.data$.subscribe(\n      () => {\n        this.lineChartData = this.chart.generateChartConfig(\n          this.service.getDataObject(),\n          this.service.getChartInfoObject(),\n          this.service.getInterfaceObject());\n        this.chart.renderChart();\n      }\n    )\n    this.service.chartInfo$.subscribe(\n      () => {\n        this.lineChartOptions = this.chart.generateChartOptions(\n          this.service.getChartInfoObject(),\n          this.service.getInterfaceObject()\n        );\n        this.chart.renderChart();\n      }\n    )\n  }\n}\n\nclass CurveChart implements MyChart {\n  private readonly id: string;\n\n  constructor(id: string) {\n    this.id = id;\n  }\n\n  public generateChartConfig(data: MyData, chartInfo: ChartInfo, toolInterface: any): ChartConfiguration['data'] {\n    return this.generateCurveChartConfig(\n      data.getData(),\n      (toolInterface as CurveInterface).getCurveCount(),\n      (chartInfo as CurveChartInfo).getTableLabels());\n  }\n\n  public generateChartOptions(chartInfo: ChartInfo, toolInterface: any): ChartOptions {\n    return {\n      responsive: true,\n      maintainAspectRatio: false,\n      hover: {mode: 'nearest'},\n      scales: {\n        x: {\n          title: {text: (chartInfo as CurveChartInfo).getXAxisLabel(), display: true},\n          type: 'linear',\n          position: 'bottom',\n        },\n        y: {\n          title: {text: (chartInfo as CurveChartInfo).getYAxisLabel(), display: true},\n          reverse: (toolInterface as CurveInterface).getIsMagnitudeOn(),\n        }\n      },\n      plugins: {\n        title: {\n          text: (chartInfo as CurveChartInfo).getChartTitle(),\n          display: true,\n        },\n        colors: {\n          forceOverride: true,\n        }\n      },\n      animation: {\n        duration: 0,\n      }\n    };\n  }\n\n  public renderChart(): void {\n    Chart.getChart(this.id)?.update('none');\n  }\n\n  private generateCurveChartConfig(chartData: CurveDataDict[], curveCount: number, labels: string[]): ChartConfiguration['data'] {\n    let result: any = {datasets: []};\n    const data = this.makeRawData(chartData, curveCount);\n    for (let i = 0; i = CurveCounts.ONE && data[i].y1 != null)\n        result[0].push({x: data[i].x, y: data[i].y1});\n      if (curveCount >= CurveCounts.TWO && data[i].y2 != null)\n        result[1].push({x: data[i].x, y: data[i].y2});\n      if (curveCount >= CurveCounts.THREE && data[i].y3 != null)\n        result[2].push({x: data[i].x, y: data[i].y3});\n      if (curveCount >= CurveCounts.FOUR && data[i].y4 != null)\n        result[3].push({x: data[i].x, y: data[i].y4});\n    }\n    return result;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CurveChartComponent.html":{"url":"components/CurveChartComponent.html","title":"component - CurveChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CurveChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/curve/curve-chart/curve-chart.component.ts\n\n\n\n    \n        Description\n    \n    \n        Chart for the curve graphing tools.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-curve-chart\n            \n\n\n\n            \n                styleUrls\n                ./curve-chart.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./curve-chart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chart\n                            \n                            \n                                id\n                            \n                            \n                                lineChartData\n                            \n                            \n                                lineChartOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: CurveService, appearanceService: AppearanceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        CurveService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appearanceService\n                                                  \n                                                        \n                                                                        AppearanceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CurveChart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:28\n                        \n                    \n\n            \n                \n                    Custom Chart object\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:24\n                        \n                    \n\n            \n                \n                    Chart.js object id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lineChartData\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:32\n                        \n                    \n\n            \n                \n                    Chart.js object data configuration\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lineChartOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ChartOptions\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:36\n                        \n                    \n\n            \n                \n                    Chart.js object options configuration\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component} from '@angular/core';\nimport {Chart} from \"chart.js\";\nimport {ChartConfiguration, ChartOptions} from \"chart.js/dist/types\";\nimport {CurveService} from \"../curve.service\";\nimport {ChartInfo, MyChart} from \"../../shared/charts/chart.interface\";\nimport {MyData} from \"../../shared/data/data.interface\";\nimport {CurveChartInfo, CurveCounts, CurveDataDict, CurveInterface} from \"../curve.service.util\";\nimport {AppearanceService} from \"../../../shared/settings/appearance/service/appearance.service\";\nimport {ChartColor} from \"../../../shared/settings/appearance/service/appearance.utils\";\n\n/**\n * Chart for the curve graphing tools.\n *\n */\n@Component({\n  selector: 'app-curve-chart',\n  templateUrl: './curve-chart.component.html',\n  styleUrls: ['./curve-chart.component.scss'],\n})\nexport class CurveChartComponent implements AfterViewInit {\n  /**\n   * Chart.js object id\n   */\n  id!: string;\n  /**\n   * Custom Chart object\n   */\n  chart!: CurveChart;\n  /**\n   * Chart.js object data configuration\n   */\n  lineChartData!: ChartConfiguration['data'];\n  /**\n   * Chart.js object options configuration\n   */\n  lineChartOptions!: ChartOptions;\n\n\n  constructor(private service: CurveService, private appearanceService: AppearanceService) {\n    this.id = \"curve-chart\";\n    Chart.defaults.color = this.appearanceService.getChartFontColor();\n    Chart.defaults.borderColor = this.appearanceService.getChartBackgroundColor();\n    this.chart = new CurveChart(this.id);\n    this.lineChartData = this.chart.generateChartConfig(\n      this.service.getDataObject(),\n      this.service.getChartInfoObject(),\n      this.service.getInterfaceObject());\n    this.lineChartOptions = this.chart.generateChartOptions(\n      this.service.getChartInfoObject(),\n      this.service.getInterfaceObject()\n    );\n  }\n\n  ngAfterViewInit(): void {\n    this.service.data$.subscribe(\n      () => {\n        this.lineChartData = this.chart.generateChartConfig(\n          this.service.getDataObject(),\n          this.service.getChartInfoObject(),\n          this.service.getInterfaceObject());\n        this.chart.renderChart();\n      }\n    )\n    this.service.chartInfo$.subscribe(\n      () => {\n        this.lineChartOptions = this.chart.generateChartOptions(\n          this.service.getChartInfoObject(),\n          this.service.getInterfaceObject()\n        );\n        this.chart.renderChart();\n      }\n    )\n  }\n}\n\nclass CurveChart implements MyChart {\n  private readonly id: string;\n\n  constructor(id: string) {\n    this.id = id;\n  }\n\n  public generateChartConfig(data: MyData, chartInfo: ChartInfo, toolInterface: any): ChartConfiguration['data'] {\n    return this.generateCurveChartConfig(\n      data.getData(),\n      (toolInterface as CurveInterface).getCurveCount(),\n      (chartInfo as CurveChartInfo).getTableLabels());\n  }\n\n  public generateChartOptions(chartInfo: ChartInfo, toolInterface: any): ChartOptions {\n    return {\n      responsive: true,\n      maintainAspectRatio: false,\n      hover: {mode: 'nearest'},\n      scales: {\n        x: {\n          title: {text: (chartInfo as CurveChartInfo).getXAxisLabel(), display: true},\n          type: 'linear',\n          position: 'bottom',\n        },\n        y: {\n          title: {text: (chartInfo as CurveChartInfo).getYAxisLabel(), display: true},\n          reverse: (toolInterface as CurveInterface).getIsMagnitudeOn(),\n        }\n      },\n      plugins: {\n        title: {\n          text: (chartInfo as CurveChartInfo).getChartTitle(),\n          display: true,\n        },\n        colors: {\n          forceOverride: true,\n        }\n      },\n      animation: {\n        duration: 0,\n      }\n    };\n  }\n\n  public renderChart(): void {\n    Chart.getChart(this.id)?.update('none');\n  }\n\n  private generateCurveChartConfig(chartData: CurveDataDict[], curveCount: number, labels: string[]): ChartConfiguration['data'] {\n    let result: any = {datasets: []};\n    const data = this.makeRawData(chartData, curveCount);\n    for (let i = 0; i = CurveCounts.ONE && data[i].y1 != null)\n        result[0].push({x: data[i].x, y: data[i].y1});\n      if (curveCount >= CurveCounts.TWO && data[i].y2 != null)\n        result[1].push({x: data[i].x, y: data[i].y2});\n      if (curveCount >= CurveCounts.THREE && data[i].y3 != null)\n        result[2].push({x: data[i].x, y: data[i].y3});\n      if (curveCount >= CurveCounts.FOUR && data[i].y4 != null)\n        result[3].push({x: data[i].x, y: data[i].y4});\n    }\n    return result;\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./curve-chart.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CurveChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CurveChartFormComponent.html":{"url":"components/CurveChartFormComponent.html","title":"component - CurveChartFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CurveChartFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/curve/curve-chart-form/curve-chart-form.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-curve-chart-form\n            \n\n\n\n            \n                styleUrls\n                ./curve-chart-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./curve-chart-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                formGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: CurveService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/curve/curve-chart-form/curve-chart-form.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        CurveService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-chart-form/curve-chart-form.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {CurveService} from \"../curve.service\";\nimport {debounceTime} from \"rxjs\";\n\n@Component({\n  selector: 'app-curve-chart-form',\n  templateUrl: './curve-chart-form.component.html',\n  styleUrls: ['./curve-chart-form.component.scss']\n})\nexport class CurveChartFormComponent {\n  public formGroup!: FormGroup;\n\n  constructor(private service: CurveService) {\n    this.service.chartInfo$.subscribe(info => {\n      this.formGroup = new FormGroup({\n        chartTitle: new FormControl(this.service.getChartTitle()),\n        dataLabel: new FormControl(this.service.getDataLabel()),\n        xAxisLabel: new FormControl(this.service.getXAxisLabel()),\n        yAxisLabel: new FormControl(this.service.getYAxisLabel()),\n      })\n      this.formGroup.controls['chartTitle'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(title => {\n        this.service.setChartTitle(title);\n      });\n      this.formGroup.controls['dataLabel'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(labels => {\n        this.service.setDataLabel(labels);\n      });\n      this.formGroup.controls['xAxisLabel'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(label => {\n        this.service.setXAxisLabel(label);\n      });\n      this.formGroup.controls['yAxisLabel'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(label => {\n        this.service.setYAxisLabel(label);\n      });\n    })\n  }\n\n}\n\n\n    \n\n    \n        \n  \n    \n      \n        Title\n        \n      \n    \n    \n      \n        Data\n        \n      \n    \n  \n  \n    \n      \n        X Axis\n        \n      \n    \n    \n      \n        Y Axis\n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./curve-chart-form.component.scss\n                \n                mat-form-field {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Title                                    Data                                        X Axis                                    Y Axis                    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CurveChartFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CurveChartInfo.html":{"url":"classes/CurveChartInfo.html","title":"class - CurveChartInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CurveChartInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/curve/curve.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ChartInfo\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chartTitle\n                            \n                            \n                                    Private\n                                dataLabels\n                            \n                            \n                                    Private\n                                xAxisLabel\n                            \n                            \n                                    Private\n                                yAxisLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getChartTitle\n                            \n                            \n                                getDataLabel\n                            \n                            \n                                getDataLabelByCurveCount\n                            \n                            \n                                    Static\n                                getDefaultStorageObject\n                            \n                            \n                                getStorageObject\n                            \n                            \n                                getTableLabels\n                            \n                            \n                                getXAxisLabel\n                            \n                            \n                                getYAxisLabel\n                            \n                            \n                                setChartTitle\n                            \n                            \n                                setDataLabel\n                            \n                            \n                                setStorageObject\n                            \n                            \n                                setXAxisLabel\n                            \n                            \n                                setYAxisLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/curve/curve.service.util.ts:39\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.util.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataLabels\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.util.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        xAxisLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.util.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        yAxisLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.util.ts:38\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getChartTitle\n                        \n                    \n                \n            \n            \n                \ngetChartTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataLabel\n                        \n                    \n                \n            \n            \n                \ngetDataLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataLabelByCurveCount\n                        \n                    \n                \n            \n            \n                \ngetDataLabelByCurveCount(curveCount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    curveCount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getDefaultStorageObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         CurveChartInfoStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStorageObject\n                        \n                    \n                \n            \n            \n                \ngetStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         CurveChartInfoStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTableLabels\n                        \n                    \n                \n            \n            \n                \ngetTableLabels()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getXAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetXAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getYAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetYAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setChartTitle\n                        \n                    \n                \n            \n            \n                \nsetChartTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDataLabel\n                        \n                    \n                \n            \n            \n                \nsetDataLabel(dataLabel: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dataLabel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStorageObject\n                        \n                    \n                \n            \n            \n                \nsetStorageObject(storageObject: CurveChartInfoStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storageObject\n                                    \n                                                CurveChartInfoStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setXAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetXAxisLabel(xAxisLabel: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    xAxisLabel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setYAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetYAxisLabel(yAxisLabel: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    yAxisLabel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\n\nexport enum CurveParam {\n  X = 'x',\n  Y1 = 'y1',\n  Y2 = 'y2',\n  Y3 = 'y3',\n  Y4 = 'y4'\n}\n\nexport enum CurveCounts {\n  ONE = 1,\n  TWO = 2,\n  THREE = 3,\n  FOUR = 4\n}\n\nexport interface CurveDataDict {\n  x: number | null;\n  y1: number | null;\n  y2?: number | null;\n  y3?: number | null;\n  y4?: number | null;\n}\n\nexport interface CurveChartInfoStorageObject {\n  chartTitle: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n  dataLabels: string;\n}\n\nexport class CurveChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n  private dataLabels: string[];\n\n  constructor() {\n    this.chartTitle = \"Title\";\n    this.xAxisLabel = \"x\";\n    this.yAxisLabel = \"y\";\n    this.dataLabels = [\"y1\", \"y2\", \"y3\", \"y4\"];\n  }\n\n  static getDefaultStorageObject(): CurveChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n      dataLabels: \"y1, y2, y3, y4\"\n    };\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabels.join(\", \");\n  }\n\n  getTableLabels(): string[] {\n    return [\"x\"].concat(this.dataLabels);\n  }\n\n  getDataLabelByCurveCount(curveCount: number): string {\n    const result = this.dataLabels;\n    return result.slice(0, curveCount).join(\", \");\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(dataLabel: string): void {\n    const dataLabelArray = dataLabel.split(\",\").map((label) => label.trim());\n    for (let i = 0; i = CurveCounts.TWO) {\n        row.y2 = entry.y2;\n      }\n      if (curveCount >= CurveCounts.THREE) {\n        row.y3 = entry.y3;\n      }\n      if (curveCount >= CurveCounts.FOUR) {\n        row.y4 = entry.y4;\n      }\n      result.push(row);\n    }\n    return result;\n  }\n\n  public getDataArray(): any[] {\n    let result: any[] = [[], [], [], []];\n    for (const entry of this.curveDataDict) {\n      result[0].push([entry.x, entry.y1]);\n      result[1].push([entry.x, entry.y2]);\n      result[2].push([entry.x, entry.y3]);\n      result[3].push([entry.x, entry.y4]);\n    }\n    return result;\n  }\n\n  public setData(data: CurveDataDict[]): void {\n    this.curveDataDict = data;\n    // this.sortDataByX();\n  }\n\n\n  addRow(index: number, amount: number) {\n    if (index > 0) {\n      for (let i = 0; i  {\n      this.setDataByCell(newValue, row, col);\n    });\n  }\n\n  private setDataByCell(value: number | null, row: number, col: string): void {\n    switch (col) {\n      case CurveParam.X:\n        this.curveDataDict[row][CurveParam.X] = value;\n        break;\n      case CurveParam.Y1:\n        this.curveDataDict[row][CurveParam.Y1] = value;\n        break;\n      case CurveParam.Y2:\n        this.curveDataDict[row][CurveParam.Y2] = value;\n        break;\n      case CurveParam.Y3:\n        this.curveDataDict[row][CurveParam.Y3] = value;\n        break;\n      case CurveParam.Y4:\n        this.curveDataDict[row][CurveParam.Y4] = value;\n        break;\n    }\n    // this.sortDataByX();\n  }\n\n  // private sortDataByX(): void {\n  //   this.curveDataDict = this.curveDataDict.sort(\n  //     (a, b) => {\n  //       if (a['x'] === null)\n  //         return 1;\n  //       if (b['x'] === null)\n  //         return -1;\n  //       if (a['x']  b['x'])\n  //         return 1;\n  //       else\n  //         return 0;\n  //     }\n  //   );\n  // }\n}\n\n\nexport interface CurveInterface {\n  getCurveCount(): number;\n\n  setCurveCount(curveCount: number): void;\n\n  getIsMagnitudeOn(): boolean;\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void;\n}\n\n\nexport interface CurveInterfaceStorageObject {\n  curveCount: CurveCounts;\n  isMagnitudeOn: boolean;\n}\n\n\nexport class CurveImpl implements CurveInterface {\n  private curveCount: number = CurveCounts.ONE;\n  private isMagnitudeOn: boolean = false;\n\n  public static getDefaultStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: CurveCounts.ONE, isMagnitudeOn: false};\n  }\n\n  getCurveCount(): number {\n    return this.curveCount;\n  }\n\n  getIsMagnitudeOn(): boolean {\n    return this.isMagnitudeOn;\n  }\n\n  setCurveCount(curveCount: number): void {\n    if (curveCount in CurveCounts)\n      this.curveCount = curveCount;\n    else\n      throw new Error(\"Invalid curve count\");\n  }\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void {\n    this.isMagnitudeOn = isMagnitudeOn;\n  }\n\n  public getStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: this.curveCount, isMagnitudeOn: this.isMagnitudeOn};\n  }\n\n  public setStorageObject(curveInterfaceStorageObject: CurveInterfaceStorageObject): void {\n    this.curveCount = curveInterfaceStorageObject.curveCount;\n    this.isMagnitudeOn = curveInterfaceStorageObject.isMagnitudeOn;\n  }\n\n}\n\n\nexport class CurveStorage implements MyStorage {\n  private readonly dataKey: string = \"curve-data\";\n  private readonly interfaceKey: string = \"curve-interface\";\n  private readonly chartInfoKey: string = \"curve-chart-info\";\n  private readonly defaultData: CurveDataDict[]\n  private readonly defaultChartInfo!: CurveChartInfoStorageObject\n  private readonly defaultInterface!: CurveInterfaceStorageObject\n\n  constructor(defaultData: CurveDataDict[], defaultChartInfo: CurveChartInfoStorageObject, defaultInterface: CurveInterfaceStorageObject) {\n    this.defaultData = defaultData;\n    this.defaultChartInfo = defaultChartInfo;\n    this.defaultInterface = defaultInterface;\n  }\n\n  getChartInfo(): CurveChartInfoStorageObject {\n    if (localStorage.getItem(this.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(this.chartInfoKey)!);\n    } else\n      return this.defaultChartInfo;\n  }\n\n  getData(): CurveDataDict[] {\n    if (localStorage.getItem(this.dataKey)) {\n      return JSON.parse(localStorage.getItem(this.dataKey)!);\n    } else\n      return this.defaultData;\n  }\n\n  getInterface(): any {\n    if (localStorage.getItem(this.interfaceKey)) {\n      return JSON.parse(localStorage.getItem(this.interfaceKey)!);\n    } else\n      return this.defaultInterface;\n  }\n\n  saveChartInfo(chartInfoObject: CurveChartInfoStorageObject): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(chartInfoObject));\n  }\n\n  saveData(data: CurveDataDict[]): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: any): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(interfaceInfo));\n  }\n\n  resetChartInfo(): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(this.defaultChartInfo));\n  }\n\n  resetData(): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(this.defaultData));\n  }\n\n  resetInterface(): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(this.defaultInterface));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CurveChartInfoStorageObject.html":{"url":"interfaces/CurveChartInfoStorageObject.html","title":"interface - CurveChartInfoStorageObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CurveChartInfoStorageObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/curve/curve.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            chartTitle\n                                        \n                                \n                                \n                                        \n                                            dataLabels\n                                        \n                                \n                                \n                                        \n                                            xAxisLabel\n                                        \n                                \n                                \n                                        \n                                            yAxisLabel\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chartTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chartTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataLabels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dataLabels:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xAxisLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        xAxisLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yAxisLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        yAxisLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\n\nexport enum CurveParam {\n  X = 'x',\n  Y1 = 'y1',\n  Y2 = 'y2',\n  Y3 = 'y3',\n  Y4 = 'y4'\n}\n\nexport enum CurveCounts {\n  ONE = 1,\n  TWO = 2,\n  THREE = 3,\n  FOUR = 4\n}\n\nexport interface CurveDataDict {\n  x: number | null;\n  y1: number | null;\n  y2?: number | null;\n  y3?: number | null;\n  y4?: number | null;\n}\n\nexport interface CurveChartInfoStorageObject {\n  chartTitle: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n  dataLabels: string;\n}\n\nexport class CurveChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n  private dataLabels: string[];\n\n  constructor() {\n    this.chartTitle = \"Title\";\n    this.xAxisLabel = \"x\";\n    this.yAxisLabel = \"y\";\n    this.dataLabels = [\"y1\", \"y2\", \"y3\", \"y4\"];\n  }\n\n  static getDefaultStorageObject(): CurveChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n      dataLabels: \"y1, y2, y3, y4\"\n    };\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabels.join(\", \");\n  }\n\n  getTableLabels(): string[] {\n    return [\"x\"].concat(this.dataLabels);\n  }\n\n  getDataLabelByCurveCount(curveCount: number): string {\n    const result = this.dataLabels;\n    return result.slice(0, curveCount).join(\", \");\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(dataLabel: string): void {\n    const dataLabelArray = dataLabel.split(\",\").map((label) => label.trim());\n    for (let i = 0; i = CurveCounts.TWO) {\n        row.y2 = entry.y2;\n      }\n      if (curveCount >= CurveCounts.THREE) {\n        row.y3 = entry.y3;\n      }\n      if (curveCount >= CurveCounts.FOUR) {\n        row.y4 = entry.y4;\n      }\n      result.push(row);\n    }\n    return result;\n  }\n\n  public getDataArray(): any[] {\n    let result: any[] = [[], [], [], []];\n    for (const entry of this.curveDataDict) {\n      result[0].push([entry.x, entry.y1]);\n      result[1].push([entry.x, entry.y2]);\n      result[2].push([entry.x, entry.y3]);\n      result[3].push([entry.x, entry.y4]);\n    }\n    return result;\n  }\n\n  public setData(data: CurveDataDict[]): void {\n    this.curveDataDict = data;\n    // this.sortDataByX();\n  }\n\n\n  addRow(index: number, amount: number) {\n    if (index > 0) {\n      for (let i = 0; i  {\n      this.setDataByCell(newValue, row, col);\n    });\n  }\n\n  private setDataByCell(value: number | null, row: number, col: string): void {\n    switch (col) {\n      case CurveParam.X:\n        this.curveDataDict[row][CurveParam.X] = value;\n        break;\n      case CurveParam.Y1:\n        this.curveDataDict[row][CurveParam.Y1] = value;\n        break;\n      case CurveParam.Y2:\n        this.curveDataDict[row][CurveParam.Y2] = value;\n        break;\n      case CurveParam.Y3:\n        this.curveDataDict[row][CurveParam.Y3] = value;\n        break;\n      case CurveParam.Y4:\n        this.curveDataDict[row][CurveParam.Y4] = value;\n        break;\n    }\n    // this.sortDataByX();\n  }\n\n  // private sortDataByX(): void {\n  //   this.curveDataDict = this.curveDataDict.sort(\n  //     (a, b) => {\n  //       if (a['x'] === null)\n  //         return 1;\n  //       if (b['x'] === null)\n  //         return -1;\n  //       if (a['x']  b['x'])\n  //         return 1;\n  //       else\n  //         return 0;\n  //     }\n  //   );\n  // }\n}\n\n\nexport interface CurveInterface {\n  getCurveCount(): number;\n\n  setCurveCount(curveCount: number): void;\n\n  getIsMagnitudeOn(): boolean;\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void;\n}\n\n\nexport interface CurveInterfaceStorageObject {\n  curveCount: CurveCounts;\n  isMagnitudeOn: boolean;\n}\n\n\nexport class CurveImpl implements CurveInterface {\n  private curveCount: number = CurveCounts.ONE;\n  private isMagnitudeOn: boolean = false;\n\n  public static getDefaultStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: CurveCounts.ONE, isMagnitudeOn: false};\n  }\n\n  getCurveCount(): number {\n    return this.curveCount;\n  }\n\n  getIsMagnitudeOn(): boolean {\n    return this.isMagnitudeOn;\n  }\n\n  setCurveCount(curveCount: number): void {\n    if (curveCount in CurveCounts)\n      this.curveCount = curveCount;\n    else\n      throw new Error(\"Invalid curve count\");\n  }\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void {\n    this.isMagnitudeOn = isMagnitudeOn;\n  }\n\n  public getStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: this.curveCount, isMagnitudeOn: this.isMagnitudeOn};\n  }\n\n  public setStorageObject(curveInterfaceStorageObject: CurveInterfaceStorageObject): void {\n    this.curveCount = curveInterfaceStorageObject.curveCount;\n    this.isMagnitudeOn = curveInterfaceStorageObject.isMagnitudeOn;\n  }\n\n}\n\n\nexport class CurveStorage implements MyStorage {\n  private readonly dataKey: string = \"curve-data\";\n  private readonly interfaceKey: string = \"curve-interface\";\n  private readonly chartInfoKey: string = \"curve-chart-info\";\n  private readonly defaultData: CurveDataDict[]\n  private readonly defaultChartInfo!: CurveChartInfoStorageObject\n  private readonly defaultInterface!: CurveInterfaceStorageObject\n\n  constructor(defaultData: CurveDataDict[], defaultChartInfo: CurveChartInfoStorageObject, defaultInterface: CurveInterfaceStorageObject) {\n    this.defaultData = defaultData;\n    this.defaultChartInfo = defaultChartInfo;\n    this.defaultInterface = defaultInterface;\n  }\n\n  getChartInfo(): CurveChartInfoStorageObject {\n    if (localStorage.getItem(this.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(this.chartInfoKey)!);\n    } else\n      return this.defaultChartInfo;\n  }\n\n  getData(): CurveDataDict[] {\n    if (localStorage.getItem(this.dataKey)) {\n      return JSON.parse(localStorage.getItem(this.dataKey)!);\n    } else\n      return this.defaultData;\n  }\n\n  getInterface(): any {\n    if (localStorage.getItem(this.interfaceKey)) {\n      return JSON.parse(localStorage.getItem(this.interfaceKey)!);\n    } else\n      return this.defaultInterface;\n  }\n\n  saveChartInfo(chartInfoObject: CurveChartInfoStorageObject): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(chartInfoObject));\n  }\n\n  saveData(data: CurveDataDict[]): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: any): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(interfaceInfo));\n  }\n\n  resetChartInfo(): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(this.defaultChartInfo));\n  }\n\n  resetData(): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(this.defaultData));\n  }\n\n  resetInterface(): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(this.defaultInterface));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CurveComponent.html":{"url":"components/CurveComponent.html","title":"component - CurveComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CurveComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/curve/curve.component.ts\n\n\n\n    \n        Description\n    \n    \n        Curve Component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-curve\n            \n\n\n\n            \n                styleUrls\n                ./curve.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./curve.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                actionHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: CurveService, honorCodeService: HonorCodePopupService, chartService: HonorCodeChartService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/curve/curve.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        CurveService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        honorCodeService\n                                                  \n                                                        \n                                                                        HonorCodePopupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chartService\n                                                  \n                                                        \n                                                                        HonorCodeChartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        actionHandler\n                        \n                    \n                \n            \n            \n                \nactionHandler(actions: MyAction[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    actions\n                                    \n                                                MyAction[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component,} from '@angular/core';\nimport {MyAction} from \"../shared/types/actions\";\nimport {CurveService} from \"./curve.service\";\nimport {HonorCodePopupService} from \"../shared/honor-code-popup/honor-code-popup.service\";\nimport {HonorCodeChartService} from \"../shared/honor-code-popup/honor-code-chart.service\";\n\n/**\n * Curve Component\n */\n@Component({\n  selector: 'app-curve',\n  templateUrl: './curve.component.html',\n  styleUrls: ['./curve.component.scss'],\n  providers: [],\n})\nexport class CurveComponent {\n  constructor(private service: CurveService,\n              private honorCodeService: HonorCodePopupService,\n              private chartService: HonorCodeChartService) {\n  }\n\n  actionHandler(actions: MyAction[]) {\n    actions.forEach((action) => {\n      if (action.action === \"addRow\") {\n        this.service.addRow(-1, 1);\n      } else if (action.action === \"saveGraph\") {\n        this.honorCodeService.honored().subscribe((name: string) => {\n          this.chartService.saveImageHighChartOffline(this.service.getHighChart(), \"curve\", name);\n        })\n      } else if (action.action === \"resetData\") {\n        this.service.resetData();\n      } else if (action.action === \"resetChartInfo\") {\n        this.service.resetChartInfo();\n      }\n    })\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n  \n    \n      -->\n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./curve.component.scss\n                \n                .container-row {\n  height: 80%;\n  padding: 20px 100px 20px 100px;\n  width: 100%;\n}\n\n.col-4, .col-8 {\n  display: flex;\n  flex-flow: column;\n}\n\n.data-form-row, data-button-row, chart-form-row, chart-button-row {\n  height: fit-content;\n  flex: 0 1 auto;\n}\n\n.data-table-row, .chart-row {\n  flex: 1 1 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                          -->                                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CurveComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CurveData.html":{"url":"classes/CurveData.html","title":"class - CurveData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CurveData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/curve/curve.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyData\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                curveDataDict\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRow\n                            \n                            \n                                    Public\n                                getCurveData\n                            \n                            \n                                    Public\n                                getData\n                            \n                            \n                                    Public\n                                getDataArray\n                            \n                            \n                                    Static\n                                getDefaultData\n                            \n                            \n                                removeRow\n                            \n                            \n                                    Public\n                                setData\n                            \n                            \n                                    Private\n                                setDataByCell\n                            \n                            \n                                setDataByCellOnTableChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/curve/curve.service.util.ts:121\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        curveDataDict\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CurveDataDict[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.util.ts:121\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRow\n                        \n                    \n                \n            \n            \n                \naddRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:182\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCurveData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurveData(curveCount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    curveCount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CurveDataDict[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getDataArray\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDataArray()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getDefaultData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         CurveDataDict[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRow\n                        \n                    \n                \n            \n            \n                \nremoveRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:191\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setData\n                        \n                    \n                \n            \n            \n                \n                    \n                    setData(data: CurveDataDict[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:176\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CurveDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setDataByCell\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDataByCell(value: number | null, row: number, col: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:205\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            number | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    row\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    col\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDataByCellOnTableChange\n                        \n                    \n                \n            \n            \n                \nsetDataByCellOnTableChange(changes: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:199\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\n\nexport enum CurveParam {\n  X = 'x',\n  Y1 = 'y1',\n  Y2 = 'y2',\n  Y3 = 'y3',\n  Y4 = 'y4'\n}\n\nexport enum CurveCounts {\n  ONE = 1,\n  TWO = 2,\n  THREE = 3,\n  FOUR = 4\n}\n\nexport interface CurveDataDict {\n  x: number | null;\n  y1: number | null;\n  y2?: number | null;\n  y3?: number | null;\n  y4?: number | null;\n}\n\nexport interface CurveChartInfoStorageObject {\n  chartTitle: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n  dataLabels: string;\n}\n\nexport class CurveChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n  private dataLabels: string[];\n\n  constructor() {\n    this.chartTitle = \"Title\";\n    this.xAxisLabel = \"x\";\n    this.yAxisLabel = \"y\";\n    this.dataLabels = [\"y1\", \"y2\", \"y3\", \"y4\"];\n  }\n\n  static getDefaultStorageObject(): CurveChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n      dataLabels: \"y1, y2, y3, y4\"\n    };\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabels.join(\", \");\n  }\n\n  getTableLabels(): string[] {\n    return [\"x\"].concat(this.dataLabels);\n  }\n\n  getDataLabelByCurveCount(curveCount: number): string {\n    const result = this.dataLabels;\n    return result.slice(0, curveCount).join(\", \");\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(dataLabel: string): void {\n    const dataLabelArray = dataLabel.split(\",\").map((label) => label.trim());\n    for (let i = 0; i = CurveCounts.TWO) {\n        row.y2 = entry.y2;\n      }\n      if (curveCount >= CurveCounts.THREE) {\n        row.y3 = entry.y3;\n      }\n      if (curveCount >= CurveCounts.FOUR) {\n        row.y4 = entry.y4;\n      }\n      result.push(row);\n    }\n    return result;\n  }\n\n  public getDataArray(): any[] {\n    let result: any[] = [[], [], [], []];\n    for (const entry of this.curveDataDict) {\n      result[0].push([entry.x, entry.y1]);\n      result[1].push([entry.x, entry.y2]);\n      result[2].push([entry.x, entry.y3]);\n      result[3].push([entry.x, entry.y4]);\n    }\n    return result;\n  }\n\n  public setData(data: CurveDataDict[]): void {\n    this.curveDataDict = data;\n    // this.sortDataByX();\n  }\n\n\n  addRow(index: number, amount: number) {\n    if (index > 0) {\n      for (let i = 0; i  {\n      this.setDataByCell(newValue, row, col);\n    });\n  }\n\n  private setDataByCell(value: number | null, row: number, col: string): void {\n    switch (col) {\n      case CurveParam.X:\n        this.curveDataDict[row][CurveParam.X] = value;\n        break;\n      case CurveParam.Y1:\n        this.curveDataDict[row][CurveParam.Y1] = value;\n        break;\n      case CurveParam.Y2:\n        this.curveDataDict[row][CurveParam.Y2] = value;\n        break;\n      case CurveParam.Y3:\n        this.curveDataDict[row][CurveParam.Y3] = value;\n        break;\n      case CurveParam.Y4:\n        this.curveDataDict[row][CurveParam.Y4] = value;\n        break;\n    }\n    // this.sortDataByX();\n  }\n\n  // private sortDataByX(): void {\n  //   this.curveDataDict = this.curveDataDict.sort(\n  //     (a, b) => {\n  //       if (a['x'] === null)\n  //         return 1;\n  //       if (b['x'] === null)\n  //         return -1;\n  //       if (a['x']  b['x'])\n  //         return 1;\n  //       else\n  //         return 0;\n  //     }\n  //   );\n  // }\n}\n\n\nexport interface CurveInterface {\n  getCurveCount(): number;\n\n  setCurveCount(curveCount: number): void;\n\n  getIsMagnitudeOn(): boolean;\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void;\n}\n\n\nexport interface CurveInterfaceStorageObject {\n  curveCount: CurveCounts;\n  isMagnitudeOn: boolean;\n}\n\n\nexport class CurveImpl implements CurveInterface {\n  private curveCount: number = CurveCounts.ONE;\n  private isMagnitudeOn: boolean = false;\n\n  public static getDefaultStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: CurveCounts.ONE, isMagnitudeOn: false};\n  }\n\n  getCurveCount(): number {\n    return this.curveCount;\n  }\n\n  getIsMagnitudeOn(): boolean {\n    return this.isMagnitudeOn;\n  }\n\n  setCurveCount(curveCount: number): void {\n    if (curveCount in CurveCounts)\n      this.curveCount = curveCount;\n    else\n      throw new Error(\"Invalid curve count\");\n  }\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void {\n    this.isMagnitudeOn = isMagnitudeOn;\n  }\n\n  public getStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: this.curveCount, isMagnitudeOn: this.isMagnitudeOn};\n  }\n\n  public setStorageObject(curveInterfaceStorageObject: CurveInterfaceStorageObject): void {\n    this.curveCount = curveInterfaceStorageObject.curveCount;\n    this.isMagnitudeOn = curveInterfaceStorageObject.isMagnitudeOn;\n  }\n\n}\n\n\nexport class CurveStorage implements MyStorage {\n  private readonly dataKey: string = \"curve-data\";\n  private readonly interfaceKey: string = \"curve-interface\";\n  private readonly chartInfoKey: string = \"curve-chart-info\";\n  private readonly defaultData: CurveDataDict[]\n  private readonly defaultChartInfo!: CurveChartInfoStorageObject\n  private readonly defaultInterface!: CurveInterfaceStorageObject\n\n  constructor(defaultData: CurveDataDict[], defaultChartInfo: CurveChartInfoStorageObject, defaultInterface: CurveInterfaceStorageObject) {\n    this.defaultData = defaultData;\n    this.defaultChartInfo = defaultChartInfo;\n    this.defaultInterface = defaultInterface;\n  }\n\n  getChartInfo(): CurveChartInfoStorageObject {\n    if (localStorage.getItem(this.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(this.chartInfoKey)!);\n    } else\n      return this.defaultChartInfo;\n  }\n\n  getData(): CurveDataDict[] {\n    if (localStorage.getItem(this.dataKey)) {\n      return JSON.parse(localStorage.getItem(this.dataKey)!);\n    } else\n      return this.defaultData;\n  }\n\n  getInterface(): any {\n    if (localStorage.getItem(this.interfaceKey)) {\n      return JSON.parse(localStorage.getItem(this.interfaceKey)!);\n    } else\n      return this.defaultInterface;\n  }\n\n  saveChartInfo(chartInfoObject: CurveChartInfoStorageObject): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(chartInfoObject));\n  }\n\n  saveData(data: CurveDataDict[]): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: any): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(interfaceInfo));\n  }\n\n  resetChartInfo(): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(this.defaultChartInfo));\n  }\n\n  resetData(): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(this.defaultData));\n  }\n\n  resetInterface(): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(this.defaultInterface));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CurveDataDict.html":{"url":"interfaces/CurveDataDict.html","title":"interface - CurveDataDict","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CurveDataDict\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/curve/curve.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y1\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            y2\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            y3\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            y4\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y1\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y1:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y2\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y2:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y3\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y3:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y4\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y4:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\n\nexport enum CurveParam {\n  X = 'x',\n  Y1 = 'y1',\n  Y2 = 'y2',\n  Y3 = 'y3',\n  Y4 = 'y4'\n}\n\nexport enum CurveCounts {\n  ONE = 1,\n  TWO = 2,\n  THREE = 3,\n  FOUR = 4\n}\n\nexport interface CurveDataDict {\n  x: number | null;\n  y1: number | null;\n  y2?: number | null;\n  y3?: number | null;\n  y4?: number | null;\n}\n\nexport interface CurveChartInfoStorageObject {\n  chartTitle: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n  dataLabels: string;\n}\n\nexport class CurveChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n  private dataLabels: string[];\n\n  constructor() {\n    this.chartTitle = \"Title\";\n    this.xAxisLabel = \"x\";\n    this.yAxisLabel = \"y\";\n    this.dataLabels = [\"y1\", \"y2\", \"y3\", \"y4\"];\n  }\n\n  static getDefaultStorageObject(): CurveChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n      dataLabels: \"y1, y2, y3, y4\"\n    };\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabels.join(\", \");\n  }\n\n  getTableLabels(): string[] {\n    return [\"x\"].concat(this.dataLabels);\n  }\n\n  getDataLabelByCurveCount(curveCount: number): string {\n    const result = this.dataLabels;\n    return result.slice(0, curveCount).join(\", \");\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(dataLabel: string): void {\n    const dataLabelArray = dataLabel.split(\",\").map((label) => label.trim());\n    for (let i = 0; i = CurveCounts.TWO) {\n        row.y2 = entry.y2;\n      }\n      if (curveCount >= CurveCounts.THREE) {\n        row.y3 = entry.y3;\n      }\n      if (curveCount >= CurveCounts.FOUR) {\n        row.y4 = entry.y4;\n      }\n      result.push(row);\n    }\n    return result;\n  }\n\n  public getDataArray(): any[] {\n    let result: any[] = [[], [], [], []];\n    for (const entry of this.curveDataDict) {\n      result[0].push([entry.x, entry.y1]);\n      result[1].push([entry.x, entry.y2]);\n      result[2].push([entry.x, entry.y3]);\n      result[3].push([entry.x, entry.y4]);\n    }\n    return result;\n  }\n\n  public setData(data: CurveDataDict[]): void {\n    this.curveDataDict = data;\n    // this.sortDataByX();\n  }\n\n\n  addRow(index: number, amount: number) {\n    if (index > 0) {\n      for (let i = 0; i  {\n      this.setDataByCell(newValue, row, col);\n    });\n  }\n\n  private setDataByCell(value: number | null, row: number, col: string): void {\n    switch (col) {\n      case CurveParam.X:\n        this.curveDataDict[row][CurveParam.X] = value;\n        break;\n      case CurveParam.Y1:\n        this.curveDataDict[row][CurveParam.Y1] = value;\n        break;\n      case CurveParam.Y2:\n        this.curveDataDict[row][CurveParam.Y2] = value;\n        break;\n      case CurveParam.Y3:\n        this.curveDataDict[row][CurveParam.Y3] = value;\n        break;\n      case CurveParam.Y4:\n        this.curveDataDict[row][CurveParam.Y4] = value;\n        break;\n    }\n    // this.sortDataByX();\n  }\n\n  // private sortDataByX(): void {\n  //   this.curveDataDict = this.curveDataDict.sort(\n  //     (a, b) => {\n  //       if (a['x'] === null)\n  //         return 1;\n  //       if (b['x'] === null)\n  //         return -1;\n  //       if (a['x']  b['x'])\n  //         return 1;\n  //       else\n  //         return 0;\n  //     }\n  //   );\n  // }\n}\n\n\nexport interface CurveInterface {\n  getCurveCount(): number;\n\n  setCurveCount(curveCount: number): void;\n\n  getIsMagnitudeOn(): boolean;\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void;\n}\n\n\nexport interface CurveInterfaceStorageObject {\n  curveCount: CurveCounts;\n  isMagnitudeOn: boolean;\n}\n\n\nexport class CurveImpl implements CurveInterface {\n  private curveCount: number = CurveCounts.ONE;\n  private isMagnitudeOn: boolean = false;\n\n  public static getDefaultStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: CurveCounts.ONE, isMagnitudeOn: false};\n  }\n\n  getCurveCount(): number {\n    return this.curveCount;\n  }\n\n  getIsMagnitudeOn(): boolean {\n    return this.isMagnitudeOn;\n  }\n\n  setCurveCount(curveCount: number): void {\n    if (curveCount in CurveCounts)\n      this.curveCount = curveCount;\n    else\n      throw new Error(\"Invalid curve count\");\n  }\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void {\n    this.isMagnitudeOn = isMagnitudeOn;\n  }\n\n  public getStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: this.curveCount, isMagnitudeOn: this.isMagnitudeOn};\n  }\n\n  public setStorageObject(curveInterfaceStorageObject: CurveInterfaceStorageObject): void {\n    this.curveCount = curveInterfaceStorageObject.curveCount;\n    this.isMagnitudeOn = curveInterfaceStorageObject.isMagnitudeOn;\n  }\n\n}\n\n\nexport class CurveStorage implements MyStorage {\n  private readonly dataKey: string = \"curve-data\";\n  private readonly interfaceKey: string = \"curve-interface\";\n  private readonly chartInfoKey: string = \"curve-chart-info\";\n  private readonly defaultData: CurveDataDict[]\n  private readonly defaultChartInfo!: CurveChartInfoStorageObject\n  private readonly defaultInterface!: CurveInterfaceStorageObject\n\n  constructor(defaultData: CurveDataDict[], defaultChartInfo: CurveChartInfoStorageObject, defaultInterface: CurveInterfaceStorageObject) {\n    this.defaultData = defaultData;\n    this.defaultChartInfo = defaultChartInfo;\n    this.defaultInterface = defaultInterface;\n  }\n\n  getChartInfo(): CurveChartInfoStorageObject {\n    if (localStorage.getItem(this.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(this.chartInfoKey)!);\n    } else\n      return this.defaultChartInfo;\n  }\n\n  getData(): CurveDataDict[] {\n    if (localStorage.getItem(this.dataKey)) {\n      return JSON.parse(localStorage.getItem(this.dataKey)!);\n    } else\n      return this.defaultData;\n  }\n\n  getInterface(): any {\n    if (localStorage.getItem(this.interfaceKey)) {\n      return JSON.parse(localStorage.getItem(this.interfaceKey)!);\n    } else\n      return this.defaultInterface;\n  }\n\n  saveChartInfo(chartInfoObject: CurveChartInfoStorageObject): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(chartInfoObject));\n  }\n\n  saveData(data: CurveDataDict[]): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: any): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(interfaceInfo));\n  }\n\n  resetChartInfo(): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(this.defaultChartInfo));\n  }\n\n  resetData(): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(this.defaultData));\n  }\n\n  resetInterface(): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(this.defaultInterface));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CurveHighChartComponent.html":{"url":"components/CurveHighChartComponent.html","title":"component - CurveHighChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CurveHighChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/curve/curve-highchart/curve-high-chart.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-curve-highchart\n            \n\n\n\n            \n                styleUrls\n                ./curve-high-chart.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./curve-high-chart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chartConstructor\n                            \n                            \n                                chartObject\n                            \n                            \n                                chartOptions\n                            \n                            \n                                Highcharts\n                            \n                            \n                                updateFlag\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                chartInitialized\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Private\n                                processData\n                            \n                            \n                                    Private\n                                reverseYAxis\n                            \n                            \n                                    Private\n                                setChartSeries\n                            \n                            \n                                    Private\n                                setChartTitle\n                            \n                            \n                                    Private\n                                setChartXAxis\n                            \n                            \n                                    Private\n                                setChartYAxis\n                            \n                            \n                                    Private\n                                updateChart\n                            \n                            \n                                    Private\n                                updateChartSeries\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: CurveService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        CurveService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        chartInitialized\n                        \n                    \n                \n            \n            \n                \nchartInitialized($event: Highcharts.Chart)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                            Highcharts.Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        processData\n                        \n                    \n                \n            \n            \n                \n                    \n                    processData(data: number[][])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            number[][]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [][]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        reverseYAxis\n                        \n                    \n                \n            \n            \n                \n                    \n                    reverseYAxis()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setChartSeries\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChartSeries()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setChartTitle\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChartTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setChartXAxis\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChartXAxis()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setChartYAxis\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChartYAxis()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateChart\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateChartSeries\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateChartSeries()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chartConstructor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : \"chart\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartObject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Highcharts.Chart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Highcharts.Options\n\n                    \n                \n                \n                    \n                        Default value : {\n    chart: {\n      animation: false,\n      styledMode: true,\n    },\n    legend: {\n      align: 'center',\n    },\n    tooltip: {\n      enabled: true,\n      shared: true,\n    },\n    exporting: {\n      buttons: {\n        contextButton: {\n          enabled: false,\n        }\n      }\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Highcharts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Highcharts\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFlag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component} from '@angular/core';\nimport * as Highcharts from 'highcharts';\nimport {CurveService} from \"../curve.service\";\nimport {ChartInfo} from \"../../shared/charts/chart.interface\";\n\n@Component({\n  selector: 'app-curve-highchart',\n  templateUrl: './curve-high-chart.component.html',\n  styleUrls: ['./curve-high-chart.component.scss']\n})\nexport class CurveHighChartComponent implements AfterViewInit {\n  Highcharts: typeof Highcharts = Highcharts;\n  updateFlag: boolean = true;\n  chartConstructor: any = \"chart\";\n  chartObject!: Highcharts.Chart;\n  chartOptions: Highcharts.Options = {\n    chart: {\n      animation: false,\n      styledMode: true,\n    },\n    legend: {\n      align: 'center',\n    },\n    tooltip: {\n      enabled: true,\n      shared: true,\n    },\n    exporting: {\n      buttons: {\n        contextButton: {\n          enabled: false,\n        }\n      }\n    }\n  };\n\n  constructor(private service: CurveService) {\n    this.setChartTitle();\n    this.setChartXAxis();\n    this.setChartYAxis();\n  }\n\n  chartInitialized($event: Highcharts.Chart) {\n    this.chartObject = $event;\n    this.setChartSeries();\n    this.service.setHighChart(this.chartObject);\n  }\n\n  ngAfterViewInit(): void {\n    this.service.chartInfo$.subscribe((info: ChartInfo) => {\n      this.setChartYAxis();\n      this.setChartXAxis();\n      this.setChartTitle();\n      this.updateChart();\n    });\n    this.service.data$.subscribe((data) => {\n      this.updateChartSeries();\n      this.updateChart();\n    });\n    this.service.interface$.subscribe(() => {\n      this.reverseYAxis();\n      this.updateChart();\n    });\n  }\n\n  private updateChart(): void {\n    this.updateFlag = true;\n  }\n\n  private setChartTitle(): void {\n    this.chartOptions.title = {text: this.service.getChartTitle()};\n  }\n\n  private setChartSeries(): void {\n    for (let count = 0; count  {\n      // return true;\n      return (value[0] !== null);\n    }).sort((a: number[], b: number[]) => {\n      return a[0] - b[0];\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n\n\n    \n\n    \n                \n                    ./curve-high-chart.component.scss\n                \n                .chart-container {\n  width: 100%;\n  height: 100%;\n  padding: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CurveHighChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CurveImpl.html":{"url":"classes/CurveImpl.html","title":"class - CurveImpl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CurveImpl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/curve/curve.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            CurveInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                curveCount\n                            \n                            \n                                    Private\n                                isMagnitudeOn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurveCount\n                            \n                            \n                                    Static\n                                getDefaultStorageObject\n                            \n                            \n                                getIsMagnitudeOn\n                            \n                            \n                                    Public\n                                getStorageObject\n                            \n                            \n                                setCurveCount\n                            \n                            \n                                setIsMagnitudeOn\n                            \n                            \n                                    Public\n                                setStorageObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        curveCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : CurveCounts.ONE\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.util.ts:263\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isMagnitudeOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.util.ts:264\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurveCount\n                        \n                    \n                \n            \n            \n                \ngetCurveCount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:270\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getDefaultStorageObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:266\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         CurveInterfaceStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIsMagnitudeOn\n                        \n                    \n                \n            \n            \n                \ngetIsMagnitudeOn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:274\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getStorageObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:289\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         CurveInterfaceStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCurveCount\n                        \n                    \n                \n            \n            \n                \nsetCurveCount(curveCount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:278\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    curveCount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setIsMagnitudeOn\n                        \n                    \n                \n            \n            \n                \nsetIsMagnitudeOn(isMagnitudeOn: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:285\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isMagnitudeOn\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setStorageObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    setStorageObject(curveInterfaceStorageObject: CurveInterfaceStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:293\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    curveInterfaceStorageObject\n                                    \n                                                CurveInterfaceStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\n\nexport enum CurveParam {\n  X = 'x',\n  Y1 = 'y1',\n  Y2 = 'y2',\n  Y3 = 'y3',\n  Y4 = 'y4'\n}\n\nexport enum CurveCounts {\n  ONE = 1,\n  TWO = 2,\n  THREE = 3,\n  FOUR = 4\n}\n\nexport interface CurveDataDict {\n  x: number | null;\n  y1: number | null;\n  y2?: number | null;\n  y3?: number | null;\n  y4?: number | null;\n}\n\nexport interface CurveChartInfoStorageObject {\n  chartTitle: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n  dataLabels: string;\n}\n\nexport class CurveChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n  private dataLabels: string[];\n\n  constructor() {\n    this.chartTitle = \"Title\";\n    this.xAxisLabel = \"x\";\n    this.yAxisLabel = \"y\";\n    this.dataLabels = [\"y1\", \"y2\", \"y3\", \"y4\"];\n  }\n\n  static getDefaultStorageObject(): CurveChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n      dataLabels: \"y1, y2, y3, y4\"\n    };\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabels.join(\", \");\n  }\n\n  getTableLabels(): string[] {\n    return [\"x\"].concat(this.dataLabels);\n  }\n\n  getDataLabelByCurveCount(curveCount: number): string {\n    const result = this.dataLabels;\n    return result.slice(0, curveCount).join(\", \");\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(dataLabel: string): void {\n    const dataLabelArray = dataLabel.split(\",\").map((label) => label.trim());\n    for (let i = 0; i = CurveCounts.TWO) {\n        row.y2 = entry.y2;\n      }\n      if (curveCount >= CurveCounts.THREE) {\n        row.y3 = entry.y3;\n      }\n      if (curveCount >= CurveCounts.FOUR) {\n        row.y4 = entry.y4;\n      }\n      result.push(row);\n    }\n    return result;\n  }\n\n  public getDataArray(): any[] {\n    let result: any[] = [[], [], [], []];\n    for (const entry of this.curveDataDict) {\n      result[0].push([entry.x, entry.y1]);\n      result[1].push([entry.x, entry.y2]);\n      result[2].push([entry.x, entry.y3]);\n      result[3].push([entry.x, entry.y4]);\n    }\n    return result;\n  }\n\n  public setData(data: CurveDataDict[]): void {\n    this.curveDataDict = data;\n    // this.sortDataByX();\n  }\n\n\n  addRow(index: number, amount: number) {\n    if (index > 0) {\n      for (let i = 0; i  {\n      this.setDataByCell(newValue, row, col);\n    });\n  }\n\n  private setDataByCell(value: number | null, row: number, col: string): void {\n    switch (col) {\n      case CurveParam.X:\n        this.curveDataDict[row][CurveParam.X] = value;\n        break;\n      case CurveParam.Y1:\n        this.curveDataDict[row][CurveParam.Y1] = value;\n        break;\n      case CurveParam.Y2:\n        this.curveDataDict[row][CurveParam.Y2] = value;\n        break;\n      case CurveParam.Y3:\n        this.curveDataDict[row][CurveParam.Y3] = value;\n        break;\n      case CurveParam.Y4:\n        this.curveDataDict[row][CurveParam.Y4] = value;\n        break;\n    }\n    // this.sortDataByX();\n  }\n\n  // private sortDataByX(): void {\n  //   this.curveDataDict = this.curveDataDict.sort(\n  //     (a, b) => {\n  //       if (a['x'] === null)\n  //         return 1;\n  //       if (b['x'] === null)\n  //         return -1;\n  //       if (a['x']  b['x'])\n  //         return 1;\n  //       else\n  //         return 0;\n  //     }\n  //   );\n  // }\n}\n\n\nexport interface CurveInterface {\n  getCurveCount(): number;\n\n  setCurveCount(curveCount: number): void;\n\n  getIsMagnitudeOn(): boolean;\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void;\n}\n\n\nexport interface CurveInterfaceStorageObject {\n  curveCount: CurveCounts;\n  isMagnitudeOn: boolean;\n}\n\n\nexport class CurveImpl implements CurveInterface {\n  private curveCount: number = CurveCounts.ONE;\n  private isMagnitudeOn: boolean = false;\n\n  public static getDefaultStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: CurveCounts.ONE, isMagnitudeOn: false};\n  }\n\n  getCurveCount(): number {\n    return this.curveCount;\n  }\n\n  getIsMagnitudeOn(): boolean {\n    return this.isMagnitudeOn;\n  }\n\n  setCurveCount(curveCount: number): void {\n    if (curveCount in CurveCounts)\n      this.curveCount = curveCount;\n    else\n      throw new Error(\"Invalid curve count\");\n  }\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void {\n    this.isMagnitudeOn = isMagnitudeOn;\n  }\n\n  public getStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: this.curveCount, isMagnitudeOn: this.isMagnitudeOn};\n  }\n\n  public setStorageObject(curveInterfaceStorageObject: CurveInterfaceStorageObject): void {\n    this.curveCount = curveInterfaceStorageObject.curveCount;\n    this.isMagnitudeOn = curveInterfaceStorageObject.isMagnitudeOn;\n  }\n\n}\n\n\nexport class CurveStorage implements MyStorage {\n  private readonly dataKey: string = \"curve-data\";\n  private readonly interfaceKey: string = \"curve-interface\";\n  private readonly chartInfoKey: string = \"curve-chart-info\";\n  private readonly defaultData: CurveDataDict[]\n  private readonly defaultChartInfo!: CurveChartInfoStorageObject\n  private readonly defaultInterface!: CurveInterfaceStorageObject\n\n  constructor(defaultData: CurveDataDict[], defaultChartInfo: CurveChartInfoStorageObject, defaultInterface: CurveInterfaceStorageObject) {\n    this.defaultData = defaultData;\n    this.defaultChartInfo = defaultChartInfo;\n    this.defaultInterface = defaultInterface;\n  }\n\n  getChartInfo(): CurveChartInfoStorageObject {\n    if (localStorage.getItem(this.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(this.chartInfoKey)!);\n    } else\n      return this.defaultChartInfo;\n  }\n\n  getData(): CurveDataDict[] {\n    if (localStorage.getItem(this.dataKey)) {\n      return JSON.parse(localStorage.getItem(this.dataKey)!);\n    } else\n      return this.defaultData;\n  }\n\n  getInterface(): any {\n    if (localStorage.getItem(this.interfaceKey)) {\n      return JSON.parse(localStorage.getItem(this.interfaceKey)!);\n    } else\n      return this.defaultInterface;\n  }\n\n  saveChartInfo(chartInfoObject: CurveChartInfoStorageObject): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(chartInfoObject));\n  }\n\n  saveData(data: CurveDataDict[]): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: any): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(interfaceInfo));\n  }\n\n  resetChartInfo(): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(this.defaultChartInfo));\n  }\n\n  resetData(): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(this.defaultData));\n  }\n\n  resetInterface(): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(this.defaultInterface));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CurveInterface.html":{"url":"interfaces/CurveInterface.html","title":"interface - CurveInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CurveInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/curve/curve.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getCurveCount\n                                    \n                                \n                                \n                                    \n                                        getIsMagnitudeOn\n                                    \n                                \n                                \n                                    \n                                        setCurveCount\n                                    \n                                \n                                \n                                    \n                                        setIsMagnitudeOn\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurveCount\n                        \n                    \n                \n            \n            \n                \ngetCurveCount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:246\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIsMagnitudeOn\n                        \n                    \n                \n            \n            \n                \ngetIsMagnitudeOn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:250\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCurveCount\n                        \n                    \n                \n            \n            \n                \nsetCurveCount(curveCount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:248\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    curveCount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setIsMagnitudeOn\n                        \n                    \n                \n            \n            \n                \nsetIsMagnitudeOn(isMagnitudeOn: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:252\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isMagnitudeOn\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\n\nexport enum CurveParam {\n  X = 'x',\n  Y1 = 'y1',\n  Y2 = 'y2',\n  Y3 = 'y3',\n  Y4 = 'y4'\n}\n\nexport enum CurveCounts {\n  ONE = 1,\n  TWO = 2,\n  THREE = 3,\n  FOUR = 4\n}\n\nexport interface CurveDataDict {\n  x: number | null;\n  y1: number | null;\n  y2?: number | null;\n  y3?: number | null;\n  y4?: number | null;\n}\n\nexport interface CurveChartInfoStorageObject {\n  chartTitle: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n  dataLabels: string;\n}\n\nexport class CurveChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n  private dataLabels: string[];\n\n  constructor() {\n    this.chartTitle = \"Title\";\n    this.xAxisLabel = \"x\";\n    this.yAxisLabel = \"y\";\n    this.dataLabels = [\"y1\", \"y2\", \"y3\", \"y4\"];\n  }\n\n  static getDefaultStorageObject(): CurveChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n      dataLabels: \"y1, y2, y3, y4\"\n    };\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabels.join(\", \");\n  }\n\n  getTableLabels(): string[] {\n    return [\"x\"].concat(this.dataLabels);\n  }\n\n  getDataLabelByCurveCount(curveCount: number): string {\n    const result = this.dataLabels;\n    return result.slice(0, curveCount).join(\", \");\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(dataLabel: string): void {\n    const dataLabelArray = dataLabel.split(\",\").map((label) => label.trim());\n    for (let i = 0; i = CurveCounts.TWO) {\n        row.y2 = entry.y2;\n      }\n      if (curveCount >= CurveCounts.THREE) {\n        row.y3 = entry.y3;\n      }\n      if (curveCount >= CurveCounts.FOUR) {\n        row.y4 = entry.y4;\n      }\n      result.push(row);\n    }\n    return result;\n  }\n\n  public getDataArray(): any[] {\n    let result: any[] = [[], [], [], []];\n    for (const entry of this.curveDataDict) {\n      result[0].push([entry.x, entry.y1]);\n      result[1].push([entry.x, entry.y2]);\n      result[2].push([entry.x, entry.y3]);\n      result[3].push([entry.x, entry.y4]);\n    }\n    return result;\n  }\n\n  public setData(data: CurveDataDict[]): void {\n    this.curveDataDict = data;\n    // this.sortDataByX();\n  }\n\n\n  addRow(index: number, amount: number) {\n    if (index > 0) {\n      for (let i = 0; i  {\n      this.setDataByCell(newValue, row, col);\n    });\n  }\n\n  private setDataByCell(value: number | null, row: number, col: string): void {\n    switch (col) {\n      case CurveParam.X:\n        this.curveDataDict[row][CurveParam.X] = value;\n        break;\n      case CurveParam.Y1:\n        this.curveDataDict[row][CurveParam.Y1] = value;\n        break;\n      case CurveParam.Y2:\n        this.curveDataDict[row][CurveParam.Y2] = value;\n        break;\n      case CurveParam.Y3:\n        this.curveDataDict[row][CurveParam.Y3] = value;\n        break;\n      case CurveParam.Y4:\n        this.curveDataDict[row][CurveParam.Y4] = value;\n        break;\n    }\n    // this.sortDataByX();\n  }\n\n  // private sortDataByX(): void {\n  //   this.curveDataDict = this.curveDataDict.sort(\n  //     (a, b) => {\n  //       if (a['x'] === null)\n  //         return 1;\n  //       if (b['x'] === null)\n  //         return -1;\n  //       if (a['x']  b['x'])\n  //         return 1;\n  //       else\n  //         return 0;\n  //     }\n  //   );\n  // }\n}\n\n\nexport interface CurveInterface {\n  getCurveCount(): number;\n\n  setCurveCount(curveCount: number): void;\n\n  getIsMagnitudeOn(): boolean;\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void;\n}\n\n\nexport interface CurveInterfaceStorageObject {\n  curveCount: CurveCounts;\n  isMagnitudeOn: boolean;\n}\n\n\nexport class CurveImpl implements CurveInterface {\n  private curveCount: number = CurveCounts.ONE;\n  private isMagnitudeOn: boolean = false;\n\n  public static getDefaultStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: CurveCounts.ONE, isMagnitudeOn: false};\n  }\n\n  getCurveCount(): number {\n    return this.curveCount;\n  }\n\n  getIsMagnitudeOn(): boolean {\n    return this.isMagnitudeOn;\n  }\n\n  setCurveCount(curveCount: number): void {\n    if (curveCount in CurveCounts)\n      this.curveCount = curveCount;\n    else\n      throw new Error(\"Invalid curve count\");\n  }\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void {\n    this.isMagnitudeOn = isMagnitudeOn;\n  }\n\n  public getStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: this.curveCount, isMagnitudeOn: this.isMagnitudeOn};\n  }\n\n  public setStorageObject(curveInterfaceStorageObject: CurveInterfaceStorageObject): void {\n    this.curveCount = curveInterfaceStorageObject.curveCount;\n    this.isMagnitudeOn = curveInterfaceStorageObject.isMagnitudeOn;\n  }\n\n}\n\n\nexport class CurveStorage implements MyStorage {\n  private readonly dataKey: string = \"curve-data\";\n  private readonly interfaceKey: string = \"curve-interface\";\n  private readonly chartInfoKey: string = \"curve-chart-info\";\n  private readonly defaultData: CurveDataDict[]\n  private readonly defaultChartInfo!: CurveChartInfoStorageObject\n  private readonly defaultInterface!: CurveInterfaceStorageObject\n\n  constructor(defaultData: CurveDataDict[], defaultChartInfo: CurveChartInfoStorageObject, defaultInterface: CurveInterfaceStorageObject) {\n    this.defaultData = defaultData;\n    this.defaultChartInfo = defaultChartInfo;\n    this.defaultInterface = defaultInterface;\n  }\n\n  getChartInfo(): CurveChartInfoStorageObject {\n    if (localStorage.getItem(this.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(this.chartInfoKey)!);\n    } else\n      return this.defaultChartInfo;\n  }\n\n  getData(): CurveDataDict[] {\n    if (localStorage.getItem(this.dataKey)) {\n      return JSON.parse(localStorage.getItem(this.dataKey)!);\n    } else\n      return this.defaultData;\n  }\n\n  getInterface(): any {\n    if (localStorage.getItem(this.interfaceKey)) {\n      return JSON.parse(localStorage.getItem(this.interfaceKey)!);\n    } else\n      return this.defaultInterface;\n  }\n\n  saveChartInfo(chartInfoObject: CurveChartInfoStorageObject): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(chartInfoObject));\n  }\n\n  saveData(data: CurveDataDict[]): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: any): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(interfaceInfo));\n  }\n\n  resetChartInfo(): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(this.defaultChartInfo));\n  }\n\n  resetData(): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(this.defaultData));\n  }\n\n  resetInterface(): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(this.defaultInterface));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CurveInterfaceStorageObject.html":{"url":"interfaces/CurveInterfaceStorageObject.html","title":"interface - CurveInterfaceStorageObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CurveInterfaceStorageObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/curve/curve.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            curveCount\n                                        \n                                \n                                \n                                        \n                                            isMagnitudeOn\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        curveCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        curveCount:         CurveCounts\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CurveCounts\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isMagnitudeOn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isMagnitudeOn:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\n\nexport enum CurveParam {\n  X = 'x',\n  Y1 = 'y1',\n  Y2 = 'y2',\n  Y3 = 'y3',\n  Y4 = 'y4'\n}\n\nexport enum CurveCounts {\n  ONE = 1,\n  TWO = 2,\n  THREE = 3,\n  FOUR = 4\n}\n\nexport interface CurveDataDict {\n  x: number | null;\n  y1: number | null;\n  y2?: number | null;\n  y3?: number | null;\n  y4?: number | null;\n}\n\nexport interface CurveChartInfoStorageObject {\n  chartTitle: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n  dataLabels: string;\n}\n\nexport class CurveChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n  private dataLabels: string[];\n\n  constructor() {\n    this.chartTitle = \"Title\";\n    this.xAxisLabel = \"x\";\n    this.yAxisLabel = \"y\";\n    this.dataLabels = [\"y1\", \"y2\", \"y3\", \"y4\"];\n  }\n\n  static getDefaultStorageObject(): CurveChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n      dataLabels: \"y1, y2, y3, y4\"\n    };\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabels.join(\", \");\n  }\n\n  getTableLabels(): string[] {\n    return [\"x\"].concat(this.dataLabels);\n  }\n\n  getDataLabelByCurveCount(curveCount: number): string {\n    const result = this.dataLabels;\n    return result.slice(0, curveCount).join(\", \");\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(dataLabel: string): void {\n    const dataLabelArray = dataLabel.split(\",\").map((label) => label.trim());\n    for (let i = 0; i = CurveCounts.TWO) {\n        row.y2 = entry.y2;\n      }\n      if (curveCount >= CurveCounts.THREE) {\n        row.y3 = entry.y3;\n      }\n      if (curveCount >= CurveCounts.FOUR) {\n        row.y4 = entry.y4;\n      }\n      result.push(row);\n    }\n    return result;\n  }\n\n  public getDataArray(): any[] {\n    let result: any[] = [[], [], [], []];\n    for (const entry of this.curveDataDict) {\n      result[0].push([entry.x, entry.y1]);\n      result[1].push([entry.x, entry.y2]);\n      result[2].push([entry.x, entry.y3]);\n      result[3].push([entry.x, entry.y4]);\n    }\n    return result;\n  }\n\n  public setData(data: CurveDataDict[]): void {\n    this.curveDataDict = data;\n    // this.sortDataByX();\n  }\n\n\n  addRow(index: number, amount: number) {\n    if (index > 0) {\n      for (let i = 0; i  {\n      this.setDataByCell(newValue, row, col);\n    });\n  }\n\n  private setDataByCell(value: number | null, row: number, col: string): void {\n    switch (col) {\n      case CurveParam.X:\n        this.curveDataDict[row][CurveParam.X] = value;\n        break;\n      case CurveParam.Y1:\n        this.curveDataDict[row][CurveParam.Y1] = value;\n        break;\n      case CurveParam.Y2:\n        this.curveDataDict[row][CurveParam.Y2] = value;\n        break;\n      case CurveParam.Y3:\n        this.curveDataDict[row][CurveParam.Y3] = value;\n        break;\n      case CurveParam.Y4:\n        this.curveDataDict[row][CurveParam.Y4] = value;\n        break;\n    }\n    // this.sortDataByX();\n  }\n\n  // private sortDataByX(): void {\n  //   this.curveDataDict = this.curveDataDict.sort(\n  //     (a, b) => {\n  //       if (a['x'] === null)\n  //         return 1;\n  //       if (b['x'] === null)\n  //         return -1;\n  //       if (a['x']  b['x'])\n  //         return 1;\n  //       else\n  //         return 0;\n  //     }\n  //   );\n  // }\n}\n\n\nexport interface CurveInterface {\n  getCurveCount(): number;\n\n  setCurveCount(curveCount: number): void;\n\n  getIsMagnitudeOn(): boolean;\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void;\n}\n\n\nexport interface CurveInterfaceStorageObject {\n  curveCount: CurveCounts;\n  isMagnitudeOn: boolean;\n}\n\n\nexport class CurveImpl implements CurveInterface {\n  private curveCount: number = CurveCounts.ONE;\n  private isMagnitudeOn: boolean = false;\n\n  public static getDefaultStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: CurveCounts.ONE, isMagnitudeOn: false};\n  }\n\n  getCurveCount(): number {\n    return this.curveCount;\n  }\n\n  getIsMagnitudeOn(): boolean {\n    return this.isMagnitudeOn;\n  }\n\n  setCurveCount(curveCount: number): void {\n    if (curveCount in CurveCounts)\n      this.curveCount = curveCount;\n    else\n      throw new Error(\"Invalid curve count\");\n  }\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void {\n    this.isMagnitudeOn = isMagnitudeOn;\n  }\n\n  public getStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: this.curveCount, isMagnitudeOn: this.isMagnitudeOn};\n  }\n\n  public setStorageObject(curveInterfaceStorageObject: CurveInterfaceStorageObject): void {\n    this.curveCount = curveInterfaceStorageObject.curveCount;\n    this.isMagnitudeOn = curveInterfaceStorageObject.isMagnitudeOn;\n  }\n\n}\n\n\nexport class CurveStorage implements MyStorage {\n  private readonly dataKey: string = \"curve-data\";\n  private readonly interfaceKey: string = \"curve-interface\";\n  private readonly chartInfoKey: string = \"curve-chart-info\";\n  private readonly defaultData: CurveDataDict[]\n  private readonly defaultChartInfo!: CurveChartInfoStorageObject\n  private readonly defaultInterface!: CurveInterfaceStorageObject\n\n  constructor(defaultData: CurveDataDict[], defaultChartInfo: CurveChartInfoStorageObject, defaultInterface: CurveInterfaceStorageObject) {\n    this.defaultData = defaultData;\n    this.defaultChartInfo = defaultChartInfo;\n    this.defaultInterface = defaultInterface;\n  }\n\n  getChartInfo(): CurveChartInfoStorageObject {\n    if (localStorage.getItem(this.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(this.chartInfoKey)!);\n    } else\n      return this.defaultChartInfo;\n  }\n\n  getData(): CurveDataDict[] {\n    if (localStorage.getItem(this.dataKey)) {\n      return JSON.parse(localStorage.getItem(this.dataKey)!);\n    } else\n      return this.defaultData;\n  }\n\n  getInterface(): any {\n    if (localStorage.getItem(this.interfaceKey)) {\n      return JSON.parse(localStorage.getItem(this.interfaceKey)!);\n    } else\n      return this.defaultInterface;\n  }\n\n  saveChartInfo(chartInfoObject: CurveChartInfoStorageObject): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(chartInfoObject));\n  }\n\n  saveData(data: CurveDataDict[]): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: any): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(interfaceInfo));\n  }\n\n  resetChartInfo(): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(this.defaultChartInfo));\n  }\n\n  resetData(): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(this.defaultData));\n  }\n\n  resetInterface(): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(this.defaultInterface));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CurveModule.html":{"url":"modules/CurveModule.html","title":"module - CurveModule","body":"\n                   \n\n\n\n\n    Modules\n    CurveModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CurveModule\n\n\n\ncluster_CurveModule_declarations\n\n\n\ncluster_CurveModule_imports\n\n\n\ncluster_CurveModule_exports\n\n\n\ncluster_CurveModule_providers\n\n\n\n\nCurveChartComponent\n\nCurveChartComponent\n\n\n\nCurveModule\n\nCurveModule\n\nCurveModule -->\n\nCurveChartComponent->CurveModule\n\n\n\n\n\nCurveChartFormComponent\n\nCurveChartFormComponent\n\nCurveModule -->\n\nCurveChartFormComponent->CurveModule\n\n\n\n\n\nCurveComponent\n\nCurveComponent\n\nCurveModule -->\n\nCurveComponent->CurveModule\n\n\n\n\n\nCurveHighChartComponent\n\nCurveHighChartComponent\n\nCurveModule -->\n\nCurveHighChartComponent->CurveModule\n\n\n\n\n\nCurveTableComponent\n\nCurveTableComponent\n\nCurveModule -->\n\nCurveTableComponent->CurveModule\n\n\n\n\n\nLineFormComponent\n\nLineFormComponent\n\nCurveModule -->\n\nLineFormComponent->CurveModule\n\n\n\n\n\nCurveComponent \n\nCurveComponent \n\nCurveComponent  -->\n\nCurveModule->CurveComponent \n\n\n\n\n\nSimpleDataButtonModule\n\nSimpleDataButtonModule\n\nCurveModule -->\n\nSimpleDataButtonModule->CurveModule\n\n\n\n\n\nSimpleGraphButtonModule\n\nSimpleGraphButtonModule\n\nCurveModule -->\n\nSimpleGraphButtonModule->CurveModule\n\n\n\n\n\nCurveService\n\nCurveService\n\nCurveModule -->\n\nCurveService->CurveModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tools/curve/curve.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module encapsulating CurveComponent\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CurveChartComponent\n                        \n                        \n                            CurveChartFormComponent\n                        \n                        \n                            CurveComponent\n                        \n                        \n                            CurveHighChartComponent\n                        \n                        \n                            CurveTableComponent\n                        \n                        \n                            LineFormComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            CurveService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SimpleDataButtonModule\n                        \n                        \n                            SimpleGraphButtonModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CurveComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from \"@angular/core\";\nimport {CurveComponent} from \"./curve.component\";\nimport {SimpleDataButtonModule} from \"../shared/simple-data-button/simple-data-button.component\";\nimport {SimpleGraphButtonModule} from \"../shared/simple-graph-button/simple-graph-button.component\";\nimport {LineFormComponent} from \"./line-form/line-form.component\";\nimport {MatButtonToggleModule} from \"@angular/material/button-toggle\";\nimport {MatLegacyInputModule as MatInputModule} from \"@angular/material/legacy-input\";\nimport {MatLegacySelectModule as MatSelectModule} from \"@angular/material/legacy-select\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {MatLegacyFormFieldModule as MatFormFieldModule} from \"@angular/material/legacy-form-field\";\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport {CurveTableComponent} from './curve-table/curve-table.component';\nimport {HotTableModule} from \"@handsontable/angular\";\nimport {CurveService} from \"./curve.service\";\nimport {CurveChartComponent} from \"./curve-chart/curve-chart.component\";\nimport {NgChartsModule} from \"ng2-charts\";\nimport {CurveChartFormComponent} from './curve-chart-form/curve-chart-form.component';\nimport {MatLegacyButtonModule as MatButtonModule} from \"@angular/material/legacy-button\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatLegacySlideToggleModule as MatSlideToggleModule} from \"@angular/material/legacy-slide-toggle\";\nimport {CurveHighChartComponent} from './curve-highchart/curve-high-chart.component';\nimport {HighchartsChartModule} from \"highcharts-angular\";\n\n/**\n * Module encapsulating {@link CurveComponent}\n */\n@NgModule({\n  imports: [\n    NgChartsModule,\n    SimpleDataButtonModule,\n    SimpleGraphButtonModule,\n    MatButtonToggleModule,\n    MatInputModule,\n    MatSelectModule,\n    FormsModule,\n    MatFormFieldModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    HotTableModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSlideToggleModule,\n    HighchartsChartModule,\n  ],\n  declarations: [\n    CurveComponent,\n    LineFormComponent,\n    CurveTableComponent,\n    CurveChartComponent,\n    CurveChartFormComponent,\n    CurveHighChartComponent,\n  ],\n  exports: [CurveComponent],\n  providers: [CurveService],\n})\nexport class CurveModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CurveService.html":{"url":"injectables/CurveService.html","title":"injectable - CurveService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CurveService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/curve/curve.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chartInfo\n                            \n                            \n                                chartInfo$\n                            \n                            \n                                    Private\n                                chartInfoSubject\n                            \n                            \n                                    Private\n                                curveData\n                            \n                            \n                                    Private\n                                curveImpl\n                            \n                            \n                                    Private\n                                curveStorage\n                            \n                            \n                                data$\n                            \n                            \n                                dataKeys$\n                            \n                            \n                                    Private\n                                dataKeysSubject\n                            \n                            \n                                    Private\n                                dataSubject\n                            \n                            \n                                    Private\n                                highChart\n                            \n                            \n                                interface$\n                            \n                            \n                                    Private\n                                interfaceSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addRow\n                            \n                            \n                                    Public\n                                getChartInfoObject\n                            \n                            \n                                    Public\n                                getChartJs\n                            \n                            \n                                    Public\n                                getChartTitle\n                            \n                            \n                                    Public\n                                getCurveCount\n                            \n                            \n                                    Public\n                                getData\n                            \n                            \n                                    Public\n                                getDataArray\n                            \n                            \n                                    Public\n                                getDataLabel\n                            \n                            \n                                    Public\n                                getDataLabelArray\n                            \n                            \n                                    Public\n                                getDataObject\n                            \n                            \n                                    Public\n                                getHighChart\n                            \n                            \n                                    Public\n                                getInterfaceObject\n                            \n                            \n                                    Public\n                                getIsMagnitudeOn\n                            \n                            \n                                    Public\n                                getXAxisLabel\n                            \n                            \n                                    Public\n                                getYAxisLabel\n                            \n                            \n                                    Public\n                                removeRow\n                            \n                            \n                                    Public\n                                resetChartInfo\n                            \n                            \n                                    Public\n                                resetData\n                            \n                            \n                                    Public\n                                resetInterface\n                            \n                            \n                                    Public\n                                setChartTitle\n                            \n                            \n                                    Public\n                                setCurveCount\n                            \n                            \n                                    Public\n                                setData\n                            \n                            \n                                    Public\n                                setDataLabel\n                            \n                            \n                                    Public\n                                setHighChart\n                            \n                            \n                                    Public\n                                setIsMagnitudeOn\n                            \n                            \n                                    Public\n                                setXAxisLabel\n                            \n                            \n                                    Public\n                                setYAxisLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/curve/curve.service.ts:41\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addRow\n                        \n                    \n                \n            \n            \n                \n                    \n                    addRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getChartInfoObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    getChartInfoObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ChartInfo\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getChartJs\n                        \n                    \n                \n            \n            \n                \n                    \n                    getChartJs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Chart\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getChartTitle\n                        \n                    \n                \n            \n            \n                \n                    \n                    getChartTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCurveCount\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurveCount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         CurveDataDict[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getDataArray\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDataArray()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getDataLabel\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDataLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getDataLabelArray\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDataLabelArray()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getDataObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDataObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MyData\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getHighChart\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHighChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.ts:189\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Highcharts.Chart\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getInterfaceObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    getInterfaceObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getIsMagnitudeOn\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIsMagnitudeOn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getXAxisLabel\n                        \n                    \n                \n            \n            \n                \n                    \n                    getXAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getYAxisLabel\n                        \n                    \n                \n            \n            \n                \n                    \n                    getYAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeRow\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        resetChartInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        resetData\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        resetInterface\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setChartTitle\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChartTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setCurveCount\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCurveCount(count: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    count\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setData\n                        \n                    \n                \n            \n            \n                \n                    \n                    setData(dataDict: CurveDataDict[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dataDict\n                                    \n                                                CurveDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setDataLabel\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDataLabel(label: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setHighChart\n                        \n                    \n                \n            \n            \n                \n                    \n                    setHighChart(highChart: Highcharts.Chart)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    highChart\n                                    \n                                            Highcharts.Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setIsMagnitudeOn\n                        \n                    \n                \n            \n            \n                \n                    \n                    setIsMagnitudeOn(isMagnitudeOn: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isMagnitudeOn\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setXAxisLabel\n                        \n                    \n                \n            \n            \n                \n                    \n                    setXAxisLabel(label: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setYAxisLabel\n                        \n                    \n                \n            \n            \n                \n                    \n                    setYAxisLabel(label: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CurveChartInfo\n\n                    \n                \n                \n                    \n                        Default value : new CurveChartInfo()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.ts:16\n                        \n                    \n\n            \n                \n                    Delegate Chart Information to CurveChartInfo\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartInfo$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.chartInfoSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartInfoSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(this.chartInfo)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        curveData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CurveData\n\n                    \n                \n                \n                    \n                        Default value : new CurveData()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.ts:21\n                        \n                    \n\n            \n                \n                    Delegate Data to CurveData\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        curveImpl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CurveImpl\n\n                    \n                \n                \n                    \n                        Default value : new CurveImpl()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.ts:27\n                        \n                    \n\n            \n                \n                    Delegate Curve interface feature to CurveImpl\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        curveStorage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CurveStorage\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.dataSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataKeys$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.dataKeysSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataKeysSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(this.getDataLabelArray())\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(this.getData())\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        highChart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Highcharts.Chart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interface$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.interfaceSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        interfaceSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(this.curveImpl)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.ts:40\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {BehaviorSubject} from \"rxjs\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {Chart} from \"chart.js\";\nimport {CurveChartInfo, CurveData, CurveDataDict, CurveImpl, CurveInterface, CurveStorage,} from \"./curve.service.util\";\nimport {MyData} from \"../shared/data/data.interface\";\nimport * as Highcharts from 'highcharts';\n\n@Injectable()\nexport class CurveService implements ChartInfo, MyData, CurveInterface {\n  // Decorator Design Pattern\n  /**\n   * @private chartInfo: CurveChartInfo\n   * Delegate Chart Information to CurveChartInfo\n   */\n  private chartInfo: CurveChartInfo = new CurveChartInfo();\n  /**\n   * @private curveData: CurveData\n   * Delegate Data to CurveData\n   */\n  private curveData: CurveData = new CurveData();\n  /**\n   * @private curveImpl: CurveImpl\n   * Delegate Curve interface feature to CurveImpl\n   */\n\n  private curveImpl: CurveImpl = new CurveImpl();\n\n  private highChart!: Highcharts.Chart;\n  /**\n   *\n   */\n  private curveStorage!: CurveStorage;\n  private dataSubject = new BehaviorSubject(this.getData());\n  data$ = this.dataSubject.asObservable();\n  private dataKeysSubject = new BehaviorSubject(this.getDataLabelArray());\n  dataKeys$ = this.dataKeysSubject.asObservable();\n  private chartInfoSubject = new BehaviorSubject(this.chartInfo);\n  chartInfo$ = this.chartInfoSubject.asObservable();\n  private interfaceSubject = new BehaviorSubject(this.curveImpl);\n  interface$ = this.interfaceSubject.asObservable();\n\n  constructor() {\n    this.curveStorage = new CurveStorage(\n      CurveData.getDefaultData(),\n      CurveChartInfo.getDefaultStorageObject(),\n      CurveImpl.getDefaultStorageObject());\n    this.curveData.setData(this.curveStorage.getData());\n    this.chartInfo.setStorageObject(this.curveStorage.getChartInfo());\n    this.curveImpl.setStorageObject(this.curveStorage.getInterface());\n  }\n\n  public getChartInfoObject(): ChartInfo {\n    return this.chartInfo;\n  }\n\n  public getDataObject(): MyData {\n    return this.curveData;\n  }\n\n  public getInterfaceObject(): any {\n    return this.curveImpl;\n  }\n\n  // ChartInfo Methods\n  public getChartTitle(): string {\n    return this.chartInfo.getChartTitle();\n  }\n\n  public getXAxisLabel(): string {\n    return this.chartInfo.getXAxisLabel();\n  }\n\n  public getYAxisLabel(): string {\n    return this.chartInfo.getYAxisLabel();\n  }\n\n  public getDataLabel(): string {\n    return this.chartInfo.getDataLabelByCurveCount(this.getCurveCount());\n  }\n\n  public getDataLabelArray(): string[] {\n    return this.chartInfo.getTableLabels();\n  }\n\n  public setChartTitle(title: string): void {\n    this.chartInfo.setChartTitle(title);\n    this.curveStorage.saveChartInfo(this.chartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.chartInfo);\n  }\n\n  public setXAxisLabel(label: string): void {\n    this.chartInfo.setXAxisLabel(label);\n    this.curveStorage.saveChartInfo(this.chartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.chartInfo);\n  }\n\n  public setYAxisLabel(label: string): void {\n    this.chartInfo.setYAxisLabel(label);\n    this.curveStorage.saveChartInfo(this.chartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.chartInfo);\n  }\n\n  public setDataLabel(label: string): void {\n    this.chartInfo.setDataLabel(label);\n    this.curveStorage.saveChartInfo(this.chartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.chartInfo);\n    this.dataKeysSubject.next(this.getDataLabelArray());\n  }\n\n  // MyData Methods\n  public getData(): CurveDataDict[] {\n    return this.curveData.getCurveData(this.getCurveCount());\n  }\n\n  public getDataArray(): any[] {\n    return this.curveData.getDataArray();\n  }\n\n  public setData(dataDict: CurveDataDict[]): void {\n    this.curveData.setData(dataDict);\n    this.curveStorage.saveData(dataDict);\n    this.dataSubject.next(this.getData());\n  }\n\n\n  public addRow(index: number, amount: number): void {\n    this.curveData.addRow(index, amount);\n    this.dataSubject.next(this.getData());\n  }\n\n  public removeRow(index: number, amount: number): void {\n    this.curveData.removeRow(index, amount);\n    this.dataSubject.next(this.getData());\n  }\n\n  // CurveInterface Methods\n  public getCurveCount(): number {\n    return this.curveImpl.getCurveCount();\n  }\n\n  public getIsMagnitudeOn(): boolean {\n    return this.curveImpl.getIsMagnitudeOn();\n  }\n\n  public setCurveCount(count: number): void {\n    this.curveImpl.setCurveCount(count);\n    this.curveStorage.saveInterface(this.curveImpl.getStorageObject());\n    this.dataKeysSubject.next(this.getDataLabelArray());\n    this.dataSubject.next(this.getData());\n    this.chartInfoSubject.next(this.chartInfo);\n  }\n\n  public setIsMagnitudeOn(isMagnitudeOn: boolean): void {\n    this.curveImpl.setIsMagnitudeOn(isMagnitudeOn);\n    this.curveStorage.saveInterface(this.curveImpl.getStorageObject());\n    this.interfaceSubject.next(this.curveImpl);\n  }\n\n  // CurveStorage Methods\n  public resetData(): void {\n    this.setData(CurveData.getDefaultData());\n    this.curveStorage.resetData();\n    this.dataSubject.next(this.getData());\n  }\n\n  public resetChartInfo(): void {\n    this.chartInfo.setStorageObject(CurveChartInfo.getDefaultStorageObject());\n    this.curveStorage.resetChartInfo();\n    this.chartInfoSubject.next(this.chartInfo);\n  }\n\n  public resetInterface(): void {\n    this.curveImpl.setStorageObject(CurveImpl.getDefaultStorageObject());\n    this.curveStorage.resetInterface();\n    this.interfaceSubject.next(this.curveImpl);\n    this.chartInfoSubject.next(this.chartInfo);\n    this.dataSubject.next(this.getData());\n  }\n\n  public getChartJs(): Chart {\n    return (Chart.getChart(\"curve-chart\") as Chart);\n  }\n\n  public setHighChart(highChart: Highcharts.Chart): void {\n    this.highChart = highChart;\n  }\n\n  public getHighChart(): Highcharts.Chart {\n    return this.highChart;\n  }\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CurveStorage.html":{"url":"classes/CurveStorage.html","title":"class - CurveStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CurveStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/curve/curve.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyStorage\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                chartInfoKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                dataKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                defaultChartInfo\n                            \n                            \n                                    Private\n                                    Readonly\n                                defaultData\n                            \n                            \n                                    Private\n                                    Readonly\n                                defaultInterface\n                            \n                            \n                                    Private\n                                    Readonly\n                                interfaceKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getChartInfo\n                            \n                            \n                                getData\n                            \n                            \n                                getInterface\n                            \n                            \n                                resetChartInfo\n                            \n                            \n                                resetData\n                            \n                            \n                                resetInterface\n                            \n                            \n                                saveChartInfo\n                            \n                            \n                                saveData\n                            \n                            \n                                saveInterface\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(defaultData: CurveDataDict[], defaultChartInfo: CurveChartInfoStorageObject, defaultInterface: CurveInterfaceStorageObject)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/curve/curve.service.util.ts:307\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        defaultData\n                                                  \n                                                        \n                                                                        CurveDataDict[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        defaultChartInfo\n                                                  \n                                                        \n                                                                        CurveChartInfoStorageObject\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        defaultInterface\n                                                  \n                                                        \n                                                                        CurveInterfaceStorageObject\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        chartInfoKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"curve-chart-info\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.util.ts:304\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dataKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"curve-data\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.util.ts:302\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        defaultChartInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CurveChartInfoStorageObject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.util.ts:306\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        defaultData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CurveDataDict[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.util.ts:305\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        defaultInterface\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CurveInterfaceStorageObject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.util.ts:307\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        interfaceKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"curve-interface\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.util.ts:303\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getChartInfo\n                        \n                    \n                \n            \n            \n                \ngetChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:315\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         CurveChartInfoStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:322\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         CurveDataDict[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInterface\n                        \n                    \n                \n            \n            \n                \ngetInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:329\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetChartInfo\n                        \n                    \n                \n            \n            \n                \nresetChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:348\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetData\n                        \n                    \n                \n            \n            \n                \nresetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:352\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetInterface\n                        \n                    \n                \n            \n            \n                \nresetInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:356\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveChartInfo\n                        \n                    \n                \n            \n            \n                \nsaveChartInfo(chartInfoObject: CurveChartInfoStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:336\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartInfoObject\n                                    \n                                                CurveChartInfoStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveData\n                        \n                    \n                \n            \n            \n                \nsaveData(data: CurveDataDict[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:340\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CurveDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveInterface\n                        \n                    \n                \n            \n            \n                \nsaveInterface(interfaceInfo: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:344\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    interfaceInfo\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\n\nexport enum CurveParam {\n  X = 'x',\n  Y1 = 'y1',\n  Y2 = 'y2',\n  Y3 = 'y3',\n  Y4 = 'y4'\n}\n\nexport enum CurveCounts {\n  ONE = 1,\n  TWO = 2,\n  THREE = 3,\n  FOUR = 4\n}\n\nexport interface CurveDataDict {\n  x: number | null;\n  y1: number | null;\n  y2?: number | null;\n  y3?: number | null;\n  y4?: number | null;\n}\n\nexport interface CurveChartInfoStorageObject {\n  chartTitle: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n  dataLabels: string;\n}\n\nexport class CurveChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n  private dataLabels: string[];\n\n  constructor() {\n    this.chartTitle = \"Title\";\n    this.xAxisLabel = \"x\";\n    this.yAxisLabel = \"y\";\n    this.dataLabels = [\"y1\", \"y2\", \"y3\", \"y4\"];\n  }\n\n  static getDefaultStorageObject(): CurveChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n      dataLabels: \"y1, y2, y3, y4\"\n    };\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabels.join(\", \");\n  }\n\n  getTableLabels(): string[] {\n    return [\"x\"].concat(this.dataLabels);\n  }\n\n  getDataLabelByCurveCount(curveCount: number): string {\n    const result = this.dataLabels;\n    return result.slice(0, curveCount).join(\", \");\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(dataLabel: string): void {\n    const dataLabelArray = dataLabel.split(\",\").map((label) => label.trim());\n    for (let i = 0; i = CurveCounts.TWO) {\n        row.y2 = entry.y2;\n      }\n      if (curveCount >= CurveCounts.THREE) {\n        row.y3 = entry.y3;\n      }\n      if (curveCount >= CurveCounts.FOUR) {\n        row.y4 = entry.y4;\n      }\n      result.push(row);\n    }\n    return result;\n  }\n\n  public getDataArray(): any[] {\n    let result: any[] = [[], [], [], []];\n    for (const entry of this.curveDataDict) {\n      result[0].push([entry.x, entry.y1]);\n      result[1].push([entry.x, entry.y2]);\n      result[2].push([entry.x, entry.y3]);\n      result[3].push([entry.x, entry.y4]);\n    }\n    return result;\n  }\n\n  public setData(data: CurveDataDict[]): void {\n    this.curveDataDict = data;\n    // this.sortDataByX();\n  }\n\n\n  addRow(index: number, amount: number) {\n    if (index > 0) {\n      for (let i = 0; i  {\n      this.setDataByCell(newValue, row, col);\n    });\n  }\n\n  private setDataByCell(value: number | null, row: number, col: string): void {\n    switch (col) {\n      case CurveParam.X:\n        this.curveDataDict[row][CurveParam.X] = value;\n        break;\n      case CurveParam.Y1:\n        this.curveDataDict[row][CurveParam.Y1] = value;\n        break;\n      case CurveParam.Y2:\n        this.curveDataDict[row][CurveParam.Y2] = value;\n        break;\n      case CurveParam.Y3:\n        this.curveDataDict[row][CurveParam.Y3] = value;\n        break;\n      case CurveParam.Y4:\n        this.curveDataDict[row][CurveParam.Y4] = value;\n        break;\n    }\n    // this.sortDataByX();\n  }\n\n  // private sortDataByX(): void {\n  //   this.curveDataDict = this.curveDataDict.sort(\n  //     (a, b) => {\n  //       if (a['x'] === null)\n  //         return 1;\n  //       if (b['x'] === null)\n  //         return -1;\n  //       if (a['x']  b['x'])\n  //         return 1;\n  //       else\n  //         return 0;\n  //     }\n  //   );\n  // }\n}\n\n\nexport interface CurveInterface {\n  getCurveCount(): number;\n\n  setCurveCount(curveCount: number): void;\n\n  getIsMagnitudeOn(): boolean;\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void;\n}\n\n\nexport interface CurveInterfaceStorageObject {\n  curveCount: CurveCounts;\n  isMagnitudeOn: boolean;\n}\n\n\nexport class CurveImpl implements CurveInterface {\n  private curveCount: number = CurveCounts.ONE;\n  private isMagnitudeOn: boolean = false;\n\n  public static getDefaultStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: CurveCounts.ONE, isMagnitudeOn: false};\n  }\n\n  getCurveCount(): number {\n    return this.curveCount;\n  }\n\n  getIsMagnitudeOn(): boolean {\n    return this.isMagnitudeOn;\n  }\n\n  setCurveCount(curveCount: number): void {\n    if (curveCount in CurveCounts)\n      this.curveCount = curveCount;\n    else\n      throw new Error(\"Invalid curve count\");\n  }\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void {\n    this.isMagnitudeOn = isMagnitudeOn;\n  }\n\n  public getStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: this.curveCount, isMagnitudeOn: this.isMagnitudeOn};\n  }\n\n  public setStorageObject(curveInterfaceStorageObject: CurveInterfaceStorageObject): void {\n    this.curveCount = curveInterfaceStorageObject.curveCount;\n    this.isMagnitudeOn = curveInterfaceStorageObject.isMagnitudeOn;\n  }\n\n}\n\n\nexport class CurveStorage implements MyStorage {\n  private readonly dataKey: string = \"curve-data\";\n  private readonly interfaceKey: string = \"curve-interface\";\n  private readonly chartInfoKey: string = \"curve-chart-info\";\n  private readonly defaultData: CurveDataDict[]\n  private readonly defaultChartInfo!: CurveChartInfoStorageObject\n  private readonly defaultInterface!: CurveInterfaceStorageObject\n\n  constructor(defaultData: CurveDataDict[], defaultChartInfo: CurveChartInfoStorageObject, defaultInterface: CurveInterfaceStorageObject) {\n    this.defaultData = defaultData;\n    this.defaultChartInfo = defaultChartInfo;\n    this.defaultInterface = defaultInterface;\n  }\n\n  getChartInfo(): CurveChartInfoStorageObject {\n    if (localStorage.getItem(this.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(this.chartInfoKey)!);\n    } else\n      return this.defaultChartInfo;\n  }\n\n  getData(): CurveDataDict[] {\n    if (localStorage.getItem(this.dataKey)) {\n      return JSON.parse(localStorage.getItem(this.dataKey)!);\n    } else\n      return this.defaultData;\n  }\n\n  getInterface(): any {\n    if (localStorage.getItem(this.interfaceKey)) {\n      return JSON.parse(localStorage.getItem(this.interfaceKey)!);\n    } else\n      return this.defaultInterface;\n  }\n\n  saveChartInfo(chartInfoObject: CurveChartInfoStorageObject): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(chartInfoObject));\n  }\n\n  saveData(data: CurveDataDict[]): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: any): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(interfaceInfo));\n  }\n\n  resetChartInfo(): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(this.defaultChartInfo));\n  }\n\n  resetData(): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(this.defaultData));\n  }\n\n  resetInterface(): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(this.defaultInterface));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CurveTable.html":{"url":"classes/CurveTable.html","title":"class - CurveTable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CurveTable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/curve/curve-table/curve-table.component.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyTable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hotRegisterer\n                            \n                            \n                                    Private\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                            \n                                getTable\n                            \n                            \n                                renderTable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/curve/curve-table/curve-table.component.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hotRegisterer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HotTableRegisterer()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-table/curve-table.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-table/curve-table.component.ts:58\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-table/curve-table.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTable\n                        \n                    \n                \n            \n            \n                \ngetTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-table/curve-table.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Handsontable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderTable\n                        \n                    \n                \n            \n            \n                \nrenderTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-table/curve-table.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {AfterViewInit, Component} from '@angular/core';\nimport {CurveService} from \"../curve.service\";\n\nimport {CurveDataDict} from \"../curve.service.util\";\nimport {MyTable} from \"../../shared/tables/table-interface\";\nimport Handsontable from \"handsontable\";\nimport {HotTableRegisterer} from \"@handsontable/angular\";\n\n@Component({\n  selector: 'app-curve-table',\n  templateUrl: './curve-table.component.html',\n  styleUrls: ['./curve-table.component.scss']\n})\nexport class CurveTableComponent implements AfterViewInit {\n  colNames: any;\n  dataSet: any;\n  id: string = \"curve-table\";\n  table: CurveTable = new CurveTable(this.id);\n\n  constructor(private dataService: CurveService) {\n    this.colNames = this.dataService.getDataLabelArray();\n    this.dataSet = this.dataService.getData();\n  }\n\n  ngAfterViewInit(): void {\n    this.dataService.data$.subscribe(\n      (data: CurveDataDict[]) => {\n        this.dataSet = this.dataService.getData();\n        this.table.renderTable();\n      });\n    this.dataService.dataKeys$.subscribe(\n      (keys: string[]) => {\n        this.colNames = keys;\n        this.table.renderTable();\n      }\n    );\n  }\n\n  public onChange = (changes: any, source: any) => {\n    if (changes) {\n      this.dataService.setData(this.table.getData());\n    }\n  }\n\n  public onRemove = (index: number, amount: number) => {\n    this.dataService.removeRow(index, amount);\n  }\n\n  public onInsert = (index: number, amount: number) => {\n    this.dataService.addRow(index, amount);\n  }\n\n\n}\n\n\nclass CurveTable implements MyTable {\n  private readonly id: string;\n  private hotRegisterer = new HotTableRegisterer();\n\n  constructor(id: string) {\n    this.id = id;\n  }\n\n  getTable(): Handsontable {\n    return this.hotRegisterer.getInstance(this.id);\n  }\n\n  renderTable(): void {\n    this.getTable().render();\n  }\n\n  getData(): any[] {\n    return this.getTable().getSourceData();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CurveTableComponent.html":{"url":"components/CurveTableComponent.html","title":"component - CurveTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CurveTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/curve/curve-table/curve-table.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-curve-table\n            \n\n\n\n            \n                styleUrls\n                ./curve-table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./curve-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                colNames\n                            \n                            \n                                dataSet\n                            \n                            \n                                id\n                            \n                            \n                                    Public\n                                onChange\n                            \n                            \n                                    Public\n                                onInsert\n                            \n                            \n                                    Public\n                                onRemove\n                            \n                            \n                                table\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: CurveService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/curve/curve-table/curve-table.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        CurveService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-table/curve-table.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        colNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-table/curve-table.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-table/curve-table.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"curve-table\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-table/curve-table.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-table/curve-table.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onInsert\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-table/curve-table.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onRemove\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-table/curve-table.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        table\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CurveTable\n\n                    \n                \n                \n                    \n                        Default value : new CurveTable(this.id)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-table/curve-table.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component} from '@angular/core';\nimport {CurveService} from \"../curve.service\";\n\nimport {CurveDataDict} from \"../curve.service.util\";\nimport {MyTable} from \"../../shared/tables/table-interface\";\nimport Handsontable from \"handsontable\";\nimport {HotTableRegisterer} from \"@handsontable/angular\";\n\n@Component({\n  selector: 'app-curve-table',\n  templateUrl: './curve-table.component.html',\n  styleUrls: ['./curve-table.component.scss']\n})\nexport class CurveTableComponent implements AfterViewInit {\n  colNames: any;\n  dataSet: any;\n  id: string = \"curve-table\";\n  table: CurveTable = new CurveTable(this.id);\n\n  constructor(private dataService: CurveService) {\n    this.colNames = this.dataService.getDataLabelArray();\n    this.dataSet = this.dataService.getData();\n  }\n\n  ngAfterViewInit(): void {\n    this.dataService.data$.subscribe(\n      (data: CurveDataDict[]) => {\n        this.dataSet = this.dataService.getData();\n        this.table.renderTable();\n      });\n    this.dataService.dataKeys$.subscribe(\n      (keys: string[]) => {\n        this.colNames = keys;\n        this.table.renderTable();\n      }\n    );\n  }\n\n  public onChange = (changes: any, source: any) => {\n    if (changes) {\n      this.dataService.setData(this.table.getData());\n    }\n  }\n\n  public onRemove = (index: number, amount: number) => {\n    this.dataService.removeRow(index, amount);\n  }\n\n  public onInsert = (index: number, amount: number) => {\n    this.dataService.addRow(index, amount);\n  }\n\n\n}\n\n\nclass CurveTable implements MyTable {\n  private readonly id: string;\n  private hotRegisterer = new HotTableRegisterer();\n\n  constructor(id: string) {\n    this.id = id;\n  }\n\n  getTable(): Handsontable {\n    return this.hotRegisterer.getInstance(this.id);\n  }\n\n  renderTable(): void {\n    this.getTable().render();\n  }\n\n  getData(): any[] {\n    return this.getTable().getSourceData();\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./curve-table.component.scss\n                \n                .container {\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CurveTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultAppearanceSettings.html":{"url":"classes/DefaultAppearanceSettings.html","title":"class - DefaultAppearanceSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultAppearanceSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/settings/appearance/service/appearance.utils.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                chartColorMode\n                            \n                            \n                                    Static\n                                fontFamily\n                            \n                            \n                                    Static\n                                fontSize\n                            \n                            \n                                    Static\n                                fontStyle\n                            \n                            \n                                    Static\n                                theme\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        chartColorMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChartColorMode\n\n                    \n                \n                \n                    \n                        Default value : ChartColorMode.LIGHT\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fontFamily\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FontFamily\n\n                    \n                \n                \n                    \n                        Default value : FontFamily.ROBOTO\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fontSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FontSizes\n\n                    \n                \n                \n                    \n                        Default value : FontSizes.DEFAULT\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fontStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FontStyles\n\n                    \n                \n                \n                    \n                        Default value : FontStyles.DEFAULT\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ColorThemes\n\n                    \n                \n                \n                    \n                        Default value : ColorThemes.LIGHT\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:88\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface MyColorTheme {\n  key: string;\n  displayName: string;\n}\n\nexport enum ColorThemes {\n  LIGHT = 'LIGHT_THEME',\n  DARK = 'DARK_THEME',\n  // HIGH_CONTRAST = 'HC_THEME',\n  HIGH_CONTRAST_DARK = 'HC_DARK_THEME'\n}\n\nexport interface MyFontStyle {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontStyles {\n  DEFAULT = 'normal',\n  BOLD = 'bold',\n  EXTRA_BOLD = 'bolder',\n}\n\nexport interface MyFontSize {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontSizes {\n  SMALL = \"small\",\n  DEFAULT = \"default\",\n  LARGE = \"large\",\n  LARGER = \"larger\",\n}\n\nexport enum FontFamily {\n  ROBOTO = 'Roboto',\n  COMIC_NEUE = 'Comic-Neue',\n}\n\nexport interface MyFontFamily {\n  key: string;\n  displayName: string;\n}\n\nexport class ColorThemeSettings {\n  public static getThemeLists(): MyColorTheme[] {\n    return [\n      {key: ColorThemes.LIGHT, displayName: 'Light'},\n      {key: ColorThemes.DARK, displayName: 'Dark'},\n      // {key: ColorThemes.HIGH_CONTRAST, displayName: 'High Contrast'},\n      {key: ColorThemes.HIGH_CONTRAST_DARK, displayName: 'High Contrast Dark'}\n    ];\n  }\n\n  public static getFontStyleLists(): MyFontStyle[] {\n    return [\n      {key: FontStyles.DEFAULT, displayName: 'Default'},\n      {key: FontStyles.BOLD, displayName: 'Bold'},\n      {key: FontStyles.EXTRA_BOLD, displayName: 'Extra Bold'}\n    ]\n  }\n\n  public static getFontSizeLists(): MyFontSize[] {\n    return [\n      {key: FontSizes.SMALL, displayName: 'Small'},\n      {key: FontSizes.DEFAULT, displayName: 'Default'},\n      {key: FontSizes.LARGE, displayName: 'Large'},\n      {key: FontSizes.LARGER, displayName: 'Larger'}\n    ]\n  }\n\n  public static getFontFamilyLists(): MyFontFamily[] {\n    return [\n      {key: FontFamily.ROBOTO, displayName: 'Roboto'},\n      {key: FontFamily.COMIC_NEUE, displayName: 'Comic Neue'}\n    ]\n  }\n}\n\nexport enum ChartColorMode {\n  LIGHT = 'LIGHT',\n  DARK = 'DARK'\n}\n\n\nexport class DefaultAppearanceSettings {\n  public static theme: ColorThemes = ColorThemes.LIGHT;\n  public static fontStyle: FontStyles = FontStyles.DEFAULT;\n  public static fontSize: FontSizes = FontSizes.DEFAULT;\n  public static fontFamily: FontFamily = FontFamily.ROBOTO;\n  public static chartColorMode: ChartColorMode = ChartColorMode.LIGHT;\n}\n\n\nexport class ChartColor {\n  private static readonly lineColorLightArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n  private static readonly lineColorDarkArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n\n  public static getFontColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#2b4162' : '#f5f0f6';\n  }\n\n  public static getBackgroundColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#C3CFD4' : '#325769';\n  }\n\n  public static getLineColor(index: number): string {\n    if (index = this.lineColorLightArray.length)\n      return 'black';\n    else\n      // return mode === ChartColorMode.LIGHT ? this.lineColorLightArray[index] : this.lineColorDarkArray[index];\n      return this.lineColorLightArray[index];\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/home/home.component.ts\n\n\n\n    \n        Description\n    \n    \n        Home page of the site\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component} from '@angular/core';\n\n/**\n * Home page of the site\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent {\n\n}\n\n    \n\n    \n        home works!\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'home works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HonorCodeChartService.html":{"url":"injectables/HonorCodeChartService.html","title":"injectable - HonorCodeChartService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HonorCodeChartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/shared/honor-code-popup/honor-code-chart.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Services for charts to perform\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateFileName\n                            \n                            \n                                    Private\n                                generateSignature\n                            \n                            \n                                saveImage\n                            \n                            \n                                    Public\n                                saveImageHighChart\n                            \n                            \n                                    Public\n                                saveImageHighChartOffline\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/shared/honor-code-popup/honor-code-chart.service.ts:15\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generateFileName\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateFileName(chartType: string, signature: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/honor-code-popup/honor-code-chart.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    signature\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generateSignature\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateSignature(signature: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/honor-code-popup/honor-code-chart.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signature\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveImage\n                        \n                    \n                \n            \n            \n                \nsaveImage(chart: Chart, signature: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/honor-code-popup/honor-code-chart.service.ts:27\n                \n            \n\n\n            \n                \n                    Save image to user's device as jpg.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    chart\n                                    \n                                            Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The chart.js that needs to be saved\n\n                                    \n                                \n                                \n                                    signature\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User's signature\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        saveImageHighChart\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveImageHighChart(chart: Highcharts.Chart, chartType: string, signature: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/honor-code-popup/honor-code-chart.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chart\n                                    \n                                            Highcharts.Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    chartType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    signature\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        saveImageHighChartOffline\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveImageHighChartOffline(chart: Highcharts.Chart, ChartType: string, signature: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/honor-code-popup/honor-code-chart.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chart\n                                    \n                                            Highcharts.Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ChartType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    signature\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Chart} from \"chart.js/dist/types\";\nimport {addEXIFToImage, dataURLtoBlob, formatTime, getDateString} from \"../charts/utils\";\nimport {saveAs} from 'file-saver';\nimport * as Highcharts from 'highcharts';\nimport HC_exporting from \"highcharts/modules/exporting\";\nimport HC_offline_exporting from \"highcharts/modules/offline-exporting\";\n\n/**\n * Services for charts to perform\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class HonorCodeChartService {\n\n  constructor() {\n    HC_exporting(Highcharts);\n    HC_offline_exporting(Highcharts);\n  }\n\n  /**\n   * Save image to user's device as jpg.\n   * @param chart The chart.js that needs to be saved\n   * @param signature User's signature\n   */\n  saveImage(chart: Chart, signature: string): void {\n    const destCanvas = document.createElement('canvas');\n    const canvas = chart.canvas;\n    destCanvas.width = canvas.width;\n    destCanvas.height = canvas.height;\n    const destCtx = destCanvas.getContext('2d');\n    if (!destCtx)\n      return;\n    destCtx.fillStyle = '#FFFFFF';\n    destCtx.fillRect(0, 0, destCanvas.width, destCanvas.height);\n    destCtx.drawImage(canvas, 0, 0);\n    const time = getDateString();\n    const exifImage = addEXIFToImage(destCanvas.toDataURL('image/jpeg', 1.0), signature, time);\n    //create image\n    saveAs(dataURLtoBlob(exifImage), 'chart-' + formatTime(time) + '.jpg');\n  }\n\n  public saveImageHighChart(chart: Highcharts.Chart, chartType: string, signature: string): void {\n    if (chartType && signature) {\n      chart.exportChart(\n        {\n          filename: this.generateFileName(chartType, signature),\n          type: 'image/jpeg',\n        },\n        {credits: {text: this.generateSignature(signature)}});\n    }\n  }\n\n  public saveImageHighChartOffline(chart: Highcharts.Chart, ChartType: string, signature: string): void {\n    if (ChartType && signature) {\n      chart.exportChartLocal(\n        {\n          filename: this.generateFileName(ChartType, signature),\n          type: 'image/jpeg',\n        },\n        {credits: {text: this.generateSignature(signature)}});\n    }\n  }\n\n  private generateFileName(chartType: string, signature: string): string {\n    return chartType + '-' + formatTime(getDateString()) + '-' + signature;\n  }\n\n  private generateSignature(signature: string): string {\n    return \"Created by \" + signature + \" at skynet.unc.edu\";\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HonorCodePopupComponent.html":{"url":"components/HonorCodePopupComponent.html","title":"component - HonorCodePopupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HonorCodePopupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/shared/honor-code-popup/honor-code-popup.component.ts\n\n\n\n    \n        Description\n    \n    \n        Popup window to collect signature before initiating graph downloading.\nDeclared in HonorCodePopupModule\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-honor-code-popup\n            \n\n\n\n            \n                styleUrls\n                ./honor-code-popup.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./honor-code-popup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dismiss\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matDialogRef: MatDialogRef, formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/shared/honor-code-popup/honor-code-popup.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matDialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        dismiss\n                        \n                    \n                \n            \n            \n                \n                    \n                    dismiss()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/honor-code-popup/honor-code-popup.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/honor-code-popup/honor-code-popup.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        submit\n                        \n                    \n                \n            \n            \n                \n                    \n                    submit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/honor-code-popup/honor-code-popup.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/shared/honor-code-popup/honor-code-popup.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {MatLegacyDialogRef as MatDialogRef} from \"@angular/material/legacy-dialog\";\n\n/**\n * Popup window to collect signature before initiating graph downloading.\n *\n * Declared in {@link HonorCodePopupModule}\n */\n@Component({\n  selector: 'app-honor-code-popup',\n  templateUrl: './honor-code-popup.component.html',\n  styleUrls: ['./honor-code-popup.component.scss']\n})\nexport class HonorCodePopupComponent implements OnInit {\n  form!: FormGroup;\n\n  constructor(private matDialogRef: MatDialogRef, private formBuilder: FormBuilder) {\n  }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      signature: ['', Validators.required]\n    });\n  }\n\n  public dismiss() {\n    this.matDialogRef.close();\n  }\n\n  public submit() {\n    if (this.form.valid) {\n      this.matDialogRef.close();\n    }\n  }\n\n}\n\n    \n\n    \n        \n  Honor Code Pledge\n  \n    close\n  \n\n\n  \n    REQUIRED FOR RECEIVING CREDIT\n    \n      Sign your name to attest to the fact that you made this graph yourself:\n      \n      Click to start typing\n    \n  \n  \n    Submit\n    \n  \n\n\n    \n\n    \n                \n                    ./honor-code-popup.component.scss\n                \n                h2 {\n  margin-bottom: 0;\n}\n\nmat-form-field {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Honor Code Pledge      close        REQUIRED FOR RECEIVING CREDIT          Sign your name to attest to the fact that you made this graph yourself:            Click to start typing            Submit      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HonorCodePopupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HonorCodePopupModule.html":{"url":"modules/HonorCodePopupModule.html","title":"module - HonorCodePopupModule","body":"\n                   \n\n\n\n\n    Modules\n    HonorCodePopupModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HonorCodePopupModule\n\n\n\ncluster_HonorCodePopupModule_declarations\n\n\n\n\nHonorCodePopupComponent\n\nHonorCodePopupComponent\n\n\n\nHonorCodePopupModule\n\nHonorCodePopupModule\n\nHonorCodePopupModule -->\n\nHonorCodePopupComponent->HonorCodePopupModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tools/shared/honor-code-popup/honor-code-popup.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module encapsulating HonorCodePopupComponent\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HonorCodePopupComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from \"@angular/core\";\nimport {HonorCodePopupComponent} from \"./honor-code-popup.component\";\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {MatLegacyButtonModule as MatButtonModule} from \"@angular/material/legacy-button\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatLegacyInputModule as MatInputModule} from \"@angular/material/legacy-input\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {MatLegacyDialogModule as MatDialogModule} from \"@angular/material/legacy-dialog\";\n\n/**\n * Module encapsulating {@link HonorCodePopupComponent}\n */\n@NgModule({\n  imports: [\n    NgbModule,\n    MatButtonModule,\n    MatIconModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatDialogModule,\n  ],\n  declarations: [HonorCodePopupComponent]\n})\nexport class HonorCodePopupModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HonorCodePopupService.html":{"url":"injectables/HonorCodePopupService.html","title":"injectable - HonorCodePopupService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HonorCodePopupService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/shared/honor-code-popup/honor-code-popup.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                saveGraphButton\n                            \n                            \n                                    Private\n                                saveGraphSpinner\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                disableSaveGraph\n                            \n                            \n                                    Public\n                                enableSaveGraph\n                            \n                            \n                                    Public\n                                honored\n                            \n                            \n                                    Public\n                                registerSaveGraphButton\n                            \n                            \n                                    Public\n                                registerSaveGraphSpinner\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/shared/honor-code-popup/honor-code-popup.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        disableSaveGraph\n                        \n                    \n                \n            \n            \n                \n                    \n                    disableSaveGraph()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/honor-code-popup/honor-code-popup.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        enableSaveGraph\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableSaveGraph()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/honor-code-popup/honor-code-popup.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        honored\n                        \n                    \n                \n            \n            \n                \n                    \n                    honored()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/honor-code-popup/honor-code-popup.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        registerSaveGraphButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerSaveGraphButton(button: MatButton)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/honor-code-popup/honor-code-popup.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    button\n                                    \n                                            MatButton\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        registerSaveGraphSpinner\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerSaveGraphSpinner(spinner: MatProgressSpinner)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/honor-code-popup/honor-code-popup.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    spinner\n                                    \n                                            MatProgressSpinner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        saveGraphButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatButton\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/shared/honor-code-popup/honor-code-popup.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        saveGraphSpinner\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatProgressSpinner\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/shared/honor-code-popup/honor-code-popup.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HonorCodePopupComponent} from \"./honor-code-popup.component\";\nimport {MatLegacyDialog as MatDialog} from \"@angular/material/legacy-dialog\";\nimport {Observable} from \"rxjs\";\nimport {MatButton} from \"@angular/material/button\";\nimport {MatProgressSpinner} from \"@angular/material/progress-spinner\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HonorCodePopupService {\n  private saveGraphButton!: MatButton;\n  private saveGraphSpinner!: MatProgressSpinner;\n\n  constructor(private dialog: MatDialog) {\n  }\n\n  public registerSaveGraphButton(button: MatButton): void {\n    this.saveGraphButton = button;\n  }\n\n  public registerSaveGraphSpinner(spinner: MatProgressSpinner): void {\n    this.saveGraphSpinner = spinner;\n  }\n\n  public disableSaveGraph(): void {\n    this.saveGraphButton.disabled = true;\n  }\n\n  public enableSaveGraph(): void {\n    this.saveGraphButton.disabled = false;\n  }\n\n  public honored(): Observable {\n    const modalRef = this.dialog.open(HonorCodePopupComponent,\n      {width: '500px',});\n    return modalRef.afterClosed();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LineFormComponent.html":{"url":"components/LineFormComponent.html","title":"component - LineFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LineFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/curve/line-form/line-form.component.ts\n\n\n\n    \n        Description\n    \n    \n        Data form for the CurveComponent\nContains one selector for number of curves; and a toggle button for magnitude to flip Y axis.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-line-form\n            \n\n\n\n            \n                styleUrls\n                ./line-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./line-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                curveCounts\n                            \n                            \n                                curveCountsKeys\n                            \n                            \n                                form\n                            \n                            \n                                magnitude\n                            \n                            \n                                    \n                                magSlider\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                onCurveNumChange\n                            \n                            \n                                onMagnitude\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: CurveService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/curve/line-form/line-form.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        CurveService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/line-form/line-form.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCurveNumChange\n                        \n                    \n                \n            \n            \n                \nonCurveNumChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/line-form/line-form.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMagnitude\n                        \n                    \n                \n            \n            \n                \nonMagnitude(value: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/line-form/line-form.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        curveCounts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    [CurveCounts.ONE]: CurveCounts.ONE,\n    [CurveCounts.TWO]: CurveCounts.TWO,\n    [CurveCounts.THREE]: CurveCounts.THREE,\n    [CurveCounts.FOUR]: CurveCounts.FOUR,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/line-form/line-form.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        curveCountsKeys\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(this.curveCounts)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/line-form/line-form.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(CurveCounts.ONE)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/line-form/line-form.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        magnitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : this.service.getIsMagnitudeOn()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/line-form/line-form.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        magSlider\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSlideToggle\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('magSlider')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/line-form/line-form.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, ViewChild} from '@angular/core';\nimport {FormControl} from \"@angular/forms\";\nimport {CurveService} from \"../curve.service\";\nimport {CurveCounts} from \"../curve.service.util\";\nimport {MatLegacySlideToggle as MatSlideToggle} from \"@angular/material/legacy-slide-toggle\";\n\n/**\n * Type for passing/parsing number of curve to be plotted to the @LineFormComponent\n */\n\n/**\n * Data form for the {@link CurveComponent}\n *\n * Contains one selector for number of curves; and a toggle button for magnitude to flip Y axis.\n */\n@Component({\n  selector: 'app-line-form',\n  templateUrl: './line-form.component.html',\n  styleUrls: ['./line-form.component.scss'],\n})\nexport class LineFormComponent implements AfterViewInit {\n  curveCounts = {\n    [CurveCounts.ONE]: CurveCounts.ONE,\n    [CurveCounts.TWO]: CurveCounts.TWO,\n    [CurveCounts.THREE]: CurveCounts.THREE,\n    [CurveCounts.FOUR]: CurveCounts.FOUR,\n  };\n\n  curveCountsKeys = Object.values(this.curveCounts);\n\n  form = new FormControl(CurveCounts.ONE);\n\n  @ViewChild(\"magSlider\") magSlider!: MatSlideToggle;\n  magnitude: boolean = this.service.getIsMagnitudeOn();\n\n  constructor(private service: CurveService) {\n    this.form.setValue(this.service.getCurveCount());\n    this.magnitude = this.service.getIsMagnitudeOn();\n  }\n\n  onCurveNumChange() {\n    // @ts-ignore\n    this.service.setCurveCount(this.form.value);\n  };\n\n  onMagnitude(value: boolean) {\n    this.service.setIsMagnitudeOn(value);\n  }\n\n  ngAfterViewInit(): void {\n    this.service.interface$.subscribe((curveInterface) => {\n      this.form.setValue(curveInterface.getCurveCount());\n      this.magSlider.checked = curveInterface.getIsMagnitudeOn();\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          Number of Curves\n          \n            \n              {{count}}\n            \n          \n        \n      \n    \n    \n      \n        Magnitude\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./line-form.component.scss\n                \n                mat-form-field {\n  width: 100%;\n}\n\nmat-slide-toggle {\n  margin-left: 10px;\n  margin-top: 15px;\n  font-size: large;\n}\n\np {\n  margin-top: 15px;\n  //font-size: medium;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              Number of Curves                                    {{count}}                                                          Magnitude            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LineFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenubarComponent.html":{"url":"components/MenubarComponent.html","title":"component - MenubarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MenubarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/menubar/menubar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Menu bar for the entire app\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-menubar\n            \n\n\n\n            \n                styleUrls\n                ./menubar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menubar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openToolNavbar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                navbar\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        navbar\n                    \n                \n                \n                    \n                        Type :         ToolsNavbarComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/menubar/menubar.component.ts:20\n                            \n                        \n                \n                    \n                        Toolsbar component to select different interface\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        openToolNavbar\n                        \n                    \n                \n            \n            \n                \nopenToolNavbar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/menubar/menubar.component.ts:25\n                \n            \n\n\n            \n                \n                    function for opening the tool navigation bar\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, NgModule} from '@angular/core';\nimport {ToolsNavbarComponent} from \"../tools-navbar/tools-navbar.component\";\nimport {AppRoutingModule} from \"../../app-routing.module\";\nimport {MatLegacyButtonModule as MatButtonModule} from \"@angular/material/legacy-button\";\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\nimport {MatIconModule} from \"@angular/material/icon\";\n\n/**\n * Menu bar for the entire app\n */\n@Component({\n  selector: 'app-menubar',\n  templateUrl: './menubar.component.html',\n  styleUrls: ['./menubar.component.scss']\n})\nexport class MenubarComponent {\n  /**\n   * Toolsbar component to select different interface\n   */\n  @Input() navbar!: ToolsNavbarComponent\n\n  /**\n   * function for opening the tool navigation bar\n   */\n  openToolNavbar() {\n    this.navbar.open();\n  }\n\n}\n\n/**\n * Encapsution for {@link MenubarComponent}\n */\n@NgModule({\n  imports: [\n    AppRoutingModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n  ],\n  declarations: [\n    MenubarComponent\n  ],\n  exports: [MenubarComponent],\n})\nexport class MenubarModule {\n}\n\n\n    \n\n    \n        \n  \n    menu\n  \n  \n    Skynet Graphing Tool neo\n  \n  \n    settings\n  \n  \n    info\n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./menubar.component.scss\n                \n                .cursive {\n  font-family: \"Brush Script MT\", serif;\n}\n\n.mat-flat-button {\n  font-size: large;\n}\n\n.toolbar-spacer {\n  flex: 1 1 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      menu        Skynet Graphing Tool neo        settings        info                    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MenubarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MenubarModule.html":{"url":"modules/MenubarModule.html","title":"module - MenubarModule","body":"\n                   \n\n\n\n\n    Modules\n    MenubarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MenubarModule\n\n\n\ncluster_MenubarModule_declarations\n\n\n\ncluster_MenubarModule_exports\n\n\n\ncluster_MenubarModule_imports\n\n\n\n\nMenubarComponent\n\nMenubarComponent\n\n\n\nMenubarModule\n\nMenubarModule\n\nMenubarModule -->\n\nMenubarComponent->MenubarModule\n\n\n\n\n\nMenubarComponent \n\nMenubarComponent \n\nMenubarComponent  -->\n\nMenubarModule->MenubarComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nMenubarModule -->\n\nAppRoutingModule->MenubarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/menubar/menubar.component.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Encapsution for MenubarComponent\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MenubarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MenubarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {Component, Input, NgModule} from '@angular/core';\nimport {ToolsNavbarComponent} from \"../tools-navbar/tools-navbar.component\";\nimport {AppRoutingModule} from \"../../app-routing.module\";\nimport {MatLegacyButtonModule as MatButtonModule} from \"@angular/material/legacy-button\";\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\nimport {MatIconModule} from \"@angular/material/icon\";\n\n/**\n * Menu bar for the entire app\n */\n@Component({\n  selector: 'app-menubar',\n  templateUrl: './menubar.component.html',\n  styleUrls: ['./menubar.component.scss']\n})\nexport class MenubarComponent {\n  /**\n   * Toolsbar component to select different interface\n   */\n  @Input() navbar!: ToolsNavbarComponent\n\n  /**\n   * function for opening the tool navigation bar\n   */\n  openToolNavbar() {\n    this.navbar.open();\n  }\n\n}\n\n/**\n * Encapsution for {@link MenubarComponent}\n */\n@NgModule({\n  imports: [\n    AppRoutingModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n  ],\n  declarations: [\n    MenubarComponent\n  ],\n  exports: [MenubarComponent],\n})\nexport class MenubarModule {\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MyChart.html":{"url":"interfaces/MyChart.html","title":"interface - MyChart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MyChart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/shared/charts/chart.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        generateChartConfig\n                                    \n                                \n                                \n                                    \n                                        generateChartOptions\n                                    \n                                \n                                \n                                    \n                                        renderChart\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateChartConfig\n                        \n                    \n                \n            \n            \n                \ngenerateChartConfig(data: MyData, chartInfo: ChartInfo, toolInterface: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/charts/chart.interface.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                MyData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    chartInfo\n                                    \n                                                ChartInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    toolInterface\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateChartOptions\n                        \n                    \n                \n            \n            \n                \ngenerateChartOptions(chartInfo: ChartInfo, toolInterface: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/charts/chart.interface.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartInfo\n                                    \n                                                ChartInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    toolInterface\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ChartOptions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderChart\n                        \n                    \n                \n            \n            \n                \nrenderChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/charts/chart.interface.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {ChartConfiguration, ChartOptions} from \"chart.js\";\nimport {MyData} from \"../data/data.interface\";\n\nexport interface ChartInfo {\n  getChartTitle(): string;\n\n  getXAxisLabel(): string;\n\n  getYAxisLabel(): string;\n\n  getDataLabel(): string;\n\n  setChartTitle(title: string): void;\n\n  setXAxisLabel(xAxis: string): void;\n\n  setYAxisLabel(yAxis: string): void;\n\n  setDataLabel(data: string): void;\n}\n\nexport interface MyChart {\n  generateChartConfig(data: MyData, chartInfo: ChartInfo, toolInterface: any): ChartConfiguration['data'];\n\n  generateChartOptions(chartInfo: ChartInfo, toolInterface: any): ChartOptions;\n\n  renderChart(): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MyColorTheme.html":{"url":"interfaces/MyColorTheme.html","title":"interface - MyColorTheme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MyColorTheme\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/settings/appearance/service/appearance.utils.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            displayName\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MyColorTheme {\n  key: string;\n  displayName: string;\n}\n\nexport enum ColorThemes {\n  LIGHT = 'LIGHT_THEME',\n  DARK = 'DARK_THEME',\n  // HIGH_CONTRAST = 'HC_THEME',\n  HIGH_CONTRAST_DARK = 'HC_DARK_THEME'\n}\n\nexport interface MyFontStyle {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontStyles {\n  DEFAULT = 'normal',\n  BOLD = 'bold',\n  EXTRA_BOLD = 'bolder',\n}\n\nexport interface MyFontSize {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontSizes {\n  SMALL = \"small\",\n  DEFAULT = \"default\",\n  LARGE = \"large\",\n  LARGER = \"larger\",\n}\n\nexport enum FontFamily {\n  ROBOTO = 'Roboto',\n  COMIC_NEUE = 'Comic-Neue',\n}\n\nexport interface MyFontFamily {\n  key: string;\n  displayName: string;\n}\n\nexport class ColorThemeSettings {\n  public static getThemeLists(): MyColorTheme[] {\n    return [\n      {key: ColorThemes.LIGHT, displayName: 'Light'},\n      {key: ColorThemes.DARK, displayName: 'Dark'},\n      // {key: ColorThemes.HIGH_CONTRAST, displayName: 'High Contrast'},\n      {key: ColorThemes.HIGH_CONTRAST_DARK, displayName: 'High Contrast Dark'}\n    ];\n  }\n\n  public static getFontStyleLists(): MyFontStyle[] {\n    return [\n      {key: FontStyles.DEFAULT, displayName: 'Default'},\n      {key: FontStyles.BOLD, displayName: 'Bold'},\n      {key: FontStyles.EXTRA_BOLD, displayName: 'Extra Bold'}\n    ]\n  }\n\n  public static getFontSizeLists(): MyFontSize[] {\n    return [\n      {key: FontSizes.SMALL, displayName: 'Small'},\n      {key: FontSizes.DEFAULT, displayName: 'Default'},\n      {key: FontSizes.LARGE, displayName: 'Large'},\n      {key: FontSizes.LARGER, displayName: 'Larger'}\n    ]\n  }\n\n  public static getFontFamilyLists(): MyFontFamily[] {\n    return [\n      {key: FontFamily.ROBOTO, displayName: 'Roboto'},\n      {key: FontFamily.COMIC_NEUE, displayName: 'Comic Neue'}\n    ]\n  }\n}\n\nexport enum ChartColorMode {\n  LIGHT = 'LIGHT',\n  DARK = 'DARK'\n}\n\n\nexport class DefaultAppearanceSettings {\n  public static theme: ColorThemes = ColorThemes.LIGHT;\n  public static fontStyle: FontStyles = FontStyles.DEFAULT;\n  public static fontSize: FontSizes = FontSizes.DEFAULT;\n  public static fontFamily: FontFamily = FontFamily.ROBOTO;\n  public static chartColorMode: ChartColorMode = ChartColorMode.LIGHT;\n}\n\n\nexport class ChartColor {\n  private static readonly lineColorLightArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n  private static readonly lineColorDarkArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n\n  public static getFontColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#2b4162' : '#f5f0f6';\n  }\n\n  public static getBackgroundColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#C3CFD4' : '#325769';\n  }\n\n  public static getLineColor(index: number): string {\n    if (index = this.lineColorLightArray.length)\n      return 'black';\n    else\n      // return mode === ChartColorMode.LIGHT ? this.lineColorLightArray[index] : this.lineColorDarkArray[index];\n      return this.lineColorLightArray[index];\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MyData.html":{"url":"interfaces/MyData.html","title":"interface - MyData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MyData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/shared/data/data.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        addRow\n                                    \n                                \n                                \n                                    \n                                        getData\n                                    \n                                \n                                \n                                    \n                                        getDataArray\n                                    \n                                \n                                \n                                    \n                                        removeRow\n                                    \n                                \n                                \n                                    \n                                        setData\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRow\n                        \n                    \n                \n            \n            \n                \naddRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/data/data.interface.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/data/data.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataArray\n                        \n                    \n                \n            \n            \n                \ngetDataArray()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/data/data.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRow\n                        \n                    \n                \n            \n            \n                \nremoveRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/data/data.interface.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setData\n                        \n                    \n                \n            \n            \n                \nsetData(data: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/data/data.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface MyData {\n  getData(): any[];\n\n  getDataArray(): any[];\n\n  setData(data: any[]): void;\n\n  addRow(index: number, amount: number): void;\n\n  removeRow(index: number, amount: number): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MyFontFamily.html":{"url":"interfaces/MyFontFamily.html","title":"interface - MyFontFamily","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MyFontFamily\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/settings/appearance/service/appearance.utils.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            displayName\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MyColorTheme {\n  key: string;\n  displayName: string;\n}\n\nexport enum ColorThemes {\n  LIGHT = 'LIGHT_THEME',\n  DARK = 'DARK_THEME',\n  // HIGH_CONTRAST = 'HC_THEME',\n  HIGH_CONTRAST_DARK = 'HC_DARK_THEME'\n}\n\nexport interface MyFontStyle {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontStyles {\n  DEFAULT = 'normal',\n  BOLD = 'bold',\n  EXTRA_BOLD = 'bolder',\n}\n\nexport interface MyFontSize {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontSizes {\n  SMALL = \"small\",\n  DEFAULT = \"default\",\n  LARGE = \"large\",\n  LARGER = \"larger\",\n}\n\nexport enum FontFamily {\n  ROBOTO = 'Roboto',\n  COMIC_NEUE = 'Comic-Neue',\n}\n\nexport interface MyFontFamily {\n  key: string;\n  displayName: string;\n}\n\nexport class ColorThemeSettings {\n  public static getThemeLists(): MyColorTheme[] {\n    return [\n      {key: ColorThemes.LIGHT, displayName: 'Light'},\n      {key: ColorThemes.DARK, displayName: 'Dark'},\n      // {key: ColorThemes.HIGH_CONTRAST, displayName: 'High Contrast'},\n      {key: ColorThemes.HIGH_CONTRAST_DARK, displayName: 'High Contrast Dark'}\n    ];\n  }\n\n  public static getFontStyleLists(): MyFontStyle[] {\n    return [\n      {key: FontStyles.DEFAULT, displayName: 'Default'},\n      {key: FontStyles.BOLD, displayName: 'Bold'},\n      {key: FontStyles.EXTRA_BOLD, displayName: 'Extra Bold'}\n    ]\n  }\n\n  public static getFontSizeLists(): MyFontSize[] {\n    return [\n      {key: FontSizes.SMALL, displayName: 'Small'},\n      {key: FontSizes.DEFAULT, displayName: 'Default'},\n      {key: FontSizes.LARGE, displayName: 'Large'},\n      {key: FontSizes.LARGER, displayName: 'Larger'}\n    ]\n  }\n\n  public static getFontFamilyLists(): MyFontFamily[] {\n    return [\n      {key: FontFamily.ROBOTO, displayName: 'Roboto'},\n      {key: FontFamily.COMIC_NEUE, displayName: 'Comic Neue'}\n    ]\n  }\n}\n\nexport enum ChartColorMode {\n  LIGHT = 'LIGHT',\n  DARK = 'DARK'\n}\n\n\nexport class DefaultAppearanceSettings {\n  public static theme: ColorThemes = ColorThemes.LIGHT;\n  public static fontStyle: FontStyles = FontStyles.DEFAULT;\n  public static fontSize: FontSizes = FontSizes.DEFAULT;\n  public static fontFamily: FontFamily = FontFamily.ROBOTO;\n  public static chartColorMode: ChartColorMode = ChartColorMode.LIGHT;\n}\n\n\nexport class ChartColor {\n  private static readonly lineColorLightArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n  private static readonly lineColorDarkArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n\n  public static getFontColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#2b4162' : '#f5f0f6';\n  }\n\n  public static getBackgroundColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#C3CFD4' : '#325769';\n  }\n\n  public static getLineColor(index: number): string {\n    if (index = this.lineColorLightArray.length)\n      return 'black';\n    else\n      // return mode === ChartColorMode.LIGHT ? this.lineColorLightArray[index] : this.lineColorDarkArray[index];\n      return this.lineColorLightArray[index];\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MyFontSize.html":{"url":"interfaces/MyFontSize.html","title":"interface - MyFontSize","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MyFontSize\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/settings/appearance/service/appearance.utils.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            displayName\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MyColorTheme {\n  key: string;\n  displayName: string;\n}\n\nexport enum ColorThemes {\n  LIGHT = 'LIGHT_THEME',\n  DARK = 'DARK_THEME',\n  // HIGH_CONTRAST = 'HC_THEME',\n  HIGH_CONTRAST_DARK = 'HC_DARK_THEME'\n}\n\nexport interface MyFontStyle {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontStyles {\n  DEFAULT = 'normal',\n  BOLD = 'bold',\n  EXTRA_BOLD = 'bolder',\n}\n\nexport interface MyFontSize {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontSizes {\n  SMALL = \"small\",\n  DEFAULT = \"default\",\n  LARGE = \"large\",\n  LARGER = \"larger\",\n}\n\nexport enum FontFamily {\n  ROBOTO = 'Roboto',\n  COMIC_NEUE = 'Comic-Neue',\n}\n\nexport interface MyFontFamily {\n  key: string;\n  displayName: string;\n}\n\nexport class ColorThemeSettings {\n  public static getThemeLists(): MyColorTheme[] {\n    return [\n      {key: ColorThemes.LIGHT, displayName: 'Light'},\n      {key: ColorThemes.DARK, displayName: 'Dark'},\n      // {key: ColorThemes.HIGH_CONTRAST, displayName: 'High Contrast'},\n      {key: ColorThemes.HIGH_CONTRAST_DARK, displayName: 'High Contrast Dark'}\n    ];\n  }\n\n  public static getFontStyleLists(): MyFontStyle[] {\n    return [\n      {key: FontStyles.DEFAULT, displayName: 'Default'},\n      {key: FontStyles.BOLD, displayName: 'Bold'},\n      {key: FontStyles.EXTRA_BOLD, displayName: 'Extra Bold'}\n    ]\n  }\n\n  public static getFontSizeLists(): MyFontSize[] {\n    return [\n      {key: FontSizes.SMALL, displayName: 'Small'},\n      {key: FontSizes.DEFAULT, displayName: 'Default'},\n      {key: FontSizes.LARGE, displayName: 'Large'},\n      {key: FontSizes.LARGER, displayName: 'Larger'}\n    ]\n  }\n\n  public static getFontFamilyLists(): MyFontFamily[] {\n    return [\n      {key: FontFamily.ROBOTO, displayName: 'Roboto'},\n      {key: FontFamily.COMIC_NEUE, displayName: 'Comic Neue'}\n    ]\n  }\n}\n\nexport enum ChartColorMode {\n  LIGHT = 'LIGHT',\n  DARK = 'DARK'\n}\n\n\nexport class DefaultAppearanceSettings {\n  public static theme: ColorThemes = ColorThemes.LIGHT;\n  public static fontStyle: FontStyles = FontStyles.DEFAULT;\n  public static fontSize: FontSizes = FontSizes.DEFAULT;\n  public static fontFamily: FontFamily = FontFamily.ROBOTO;\n  public static chartColorMode: ChartColorMode = ChartColorMode.LIGHT;\n}\n\n\nexport class ChartColor {\n  private static readonly lineColorLightArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n  private static readonly lineColorDarkArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n\n  public static getFontColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#2b4162' : '#f5f0f6';\n  }\n\n  public static getBackgroundColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#C3CFD4' : '#325769';\n  }\n\n  public static getLineColor(index: number): string {\n    if (index = this.lineColorLightArray.length)\n      return 'black';\n    else\n      // return mode === ChartColorMode.LIGHT ? this.lineColorLightArray[index] : this.lineColorDarkArray[index];\n      return this.lineColorLightArray[index];\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MyFontStyle.html":{"url":"interfaces/MyFontStyle.html","title":"interface - MyFontStyle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MyFontStyle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/settings/appearance/service/appearance.utils.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            displayName\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MyColorTheme {\n  key: string;\n  displayName: string;\n}\n\nexport enum ColorThemes {\n  LIGHT = 'LIGHT_THEME',\n  DARK = 'DARK_THEME',\n  // HIGH_CONTRAST = 'HC_THEME',\n  HIGH_CONTRAST_DARK = 'HC_DARK_THEME'\n}\n\nexport interface MyFontStyle {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontStyles {\n  DEFAULT = 'normal',\n  BOLD = 'bold',\n  EXTRA_BOLD = 'bolder',\n}\n\nexport interface MyFontSize {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontSizes {\n  SMALL = \"small\",\n  DEFAULT = \"default\",\n  LARGE = \"large\",\n  LARGER = \"larger\",\n}\n\nexport enum FontFamily {\n  ROBOTO = 'Roboto',\n  COMIC_NEUE = 'Comic-Neue',\n}\n\nexport interface MyFontFamily {\n  key: string;\n  displayName: string;\n}\n\nexport class ColorThemeSettings {\n  public static getThemeLists(): MyColorTheme[] {\n    return [\n      {key: ColorThemes.LIGHT, displayName: 'Light'},\n      {key: ColorThemes.DARK, displayName: 'Dark'},\n      // {key: ColorThemes.HIGH_CONTRAST, displayName: 'High Contrast'},\n      {key: ColorThemes.HIGH_CONTRAST_DARK, displayName: 'High Contrast Dark'}\n    ];\n  }\n\n  public static getFontStyleLists(): MyFontStyle[] {\n    return [\n      {key: FontStyles.DEFAULT, displayName: 'Default'},\n      {key: FontStyles.BOLD, displayName: 'Bold'},\n      {key: FontStyles.EXTRA_BOLD, displayName: 'Extra Bold'}\n    ]\n  }\n\n  public static getFontSizeLists(): MyFontSize[] {\n    return [\n      {key: FontSizes.SMALL, displayName: 'Small'},\n      {key: FontSizes.DEFAULT, displayName: 'Default'},\n      {key: FontSizes.LARGE, displayName: 'Large'},\n      {key: FontSizes.LARGER, displayName: 'Larger'}\n    ]\n  }\n\n  public static getFontFamilyLists(): MyFontFamily[] {\n    return [\n      {key: FontFamily.ROBOTO, displayName: 'Roboto'},\n      {key: FontFamily.COMIC_NEUE, displayName: 'Comic Neue'}\n    ]\n  }\n}\n\nexport enum ChartColorMode {\n  LIGHT = 'LIGHT',\n  DARK = 'DARK'\n}\n\n\nexport class DefaultAppearanceSettings {\n  public static theme: ColorThemes = ColorThemes.LIGHT;\n  public static fontStyle: FontStyles = FontStyles.DEFAULT;\n  public static fontSize: FontSizes = FontSizes.DEFAULT;\n  public static fontFamily: FontFamily = FontFamily.ROBOTO;\n  public static chartColorMode: ChartColorMode = ChartColorMode.LIGHT;\n}\n\n\nexport class ChartColor {\n  private static readonly lineColorLightArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n  private static readonly lineColorDarkArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n\n  public static getFontColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#2b4162' : '#f5f0f6';\n  }\n\n  public static getBackgroundColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#C3CFD4' : '#325769';\n  }\n\n  public static getLineColor(index: number): string {\n    if (index = this.lineColorLightArray.length)\n      return 'black';\n    else\n      // return mode === ChartColorMode.LIGHT ? this.lineColorLightArray[index] : this.lineColorDarkArray[index];\n      return this.lineColorLightArray[index];\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MyStorage.html":{"url":"interfaces/MyStorage.html","title":"interface - MyStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MyStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/shared/storage/storage.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getChartInfo\n                                    \n                                \n                                \n                                    \n                                        getData\n                                    \n                                \n                                \n                                    \n                                        getInterface\n                                    \n                                \n                                \n                                    \n                                        resetChartInfo\n                                    \n                                \n                                \n                                    \n                                        resetData\n                                    \n                                \n                                \n                                    \n                                        resetInterface\n                                    \n                                \n                                \n                                    \n                                        saveChartInfo\n                                    \n                                \n                                \n                                    \n                                        saveData\n                                    \n                                \n                                \n                                    \n                                        saveInterface\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getChartInfo\n                        \n                    \n                \n            \n            \n                \ngetChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/storage/storage.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/storage/storage.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInterface\n                        \n                    \n                \n            \n            \n                \ngetInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/storage/storage.interface.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetChartInfo\n                        \n                    \n                \n            \n            \n                \nresetChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/storage/storage.interface.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetData\n                        \n                    \n                \n            \n            \n                \nresetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/storage/storage.interface.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetInterface\n                        \n                    \n                \n            \n            \n                \nresetInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/storage/storage.interface.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveChartInfo\n                        \n                    \n                \n            \n            \n                \nsaveChartInfo(chartInfo: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/storage/storage.interface.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartInfo\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveData\n                        \n                    \n                \n            \n            \n                \nsaveData(data: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/storage/storage.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveInterface\n                        \n                    \n                \n            \n            \n                \nsaveInterface(interfaceInfo: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/storage/storage.interface.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    interfaceInfo\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface MyStorage {\n  getData(): any[];\n\n  saveData(data: any[]): void;\n\n  getChartInfo(): any;\n\n  saveChartInfo(chartInfo: any): void;\n\n  getInterface(): any;\n\n  saveInterface(interfaceInfo: any): void;\n\n  resetData(): void;\n\n  resetInterface(): void;\n\n  resetChartInfo(): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MyTable.html":{"url":"interfaces/MyTable.html","title":"interface - MyTable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MyTable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/shared/tables/table-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getData\n                                    \n                                \n                                \n                                    \n                                        getTable\n                                    \n                                \n                                \n                                    \n                                        renderTable\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/tables/table-interface.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTable\n                        \n                    \n                \n            \n            \n                \ngetTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/tables/table-interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Handsontable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderTable\n                        \n                    \n                \n            \n            \n                \nrenderTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/tables/table-interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import Handsontable from \"handsontable\";\n\nexport interface MyTable {\n  getTable(): Handsontable;\n\n  renderTable(): void;\n\n  getData(): any[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/page-not-found/page-not-found.component.ts\n\n\n\n    \n        Description\n    \n    \n        Page not found\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n\n\n            \n                styleUrls\n                ./page-not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component} from '@angular/core';\n\n/**\n * Page not found\n */\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent {\n\n}\n\n    \n\n    \n        page-not-found works!\n\n    \n\n    \n                \n                    ./page-not-found.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'page-not-found works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/settings/settings.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n\n\n            \n                styleUrls\n                ./settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/settings/settings.component.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/settings.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, NgModule, OnInit} from '@angular/core';\nimport {MatSidenavModule} from \"@angular/material/sidenav\";\nimport {MatLegacyButtonModule as MatButtonModule} from \"@angular/material/legacy-button\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatLegacyListModule as MatListModule} from \"@angular/material/legacy-list\";\nimport {RouterLink, RouterLinkActive, RouterOutlet} from \"@angular/router\";\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\n@NgModule({\n  imports: [\n    MatSidenavModule,\n    MatButtonModule,\n    MatIconModule,\n    MatListModule,\n    RouterOutlet,\n    RouterLink,\n    RouterLinkActive,\n  ],\n  declarations: [\n    SettingsComponent,\n  ],\n})\nexport class SettingsModule {\n\n}\n\n    \n\n    \n        \n  \n    \n      Appearance\n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./settings.component.scss\n                \n                \nmat-drawer-container {\n  height: 100%;\n}\n\n.setting-container {\n  padding: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Appearance              '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsModule.html":{"url":"modules/SettingsModule.html","title":"module - SettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_imports\n\n\n\ncluster_SettingsModule_declarations\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nRouterLink\n\nRouterLink\n\nSettingsModule -->\n\nRouterLink->SettingsModule\n\n\n\n\n\nRouterLinkActive\n\nRouterLinkActive\n\nSettingsModule -->\n\nRouterLinkActive->SettingsModule\n\n\n\n\n\nRouterOutlet\n\nRouterOutlet\n\nSettingsModule -->\n\nRouterOutlet->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/settings/settings.component.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SettingsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RouterLink\n                        \n                        \n                            RouterLinkActive\n                        \n                        \n                            RouterOutlet\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {Component, NgModule, OnInit} from '@angular/core';\nimport {MatSidenavModule} from \"@angular/material/sidenav\";\nimport {MatLegacyButtonModule as MatButtonModule} from \"@angular/material/legacy-button\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatLegacyListModule as MatListModule} from \"@angular/material/legacy-list\";\nimport {RouterLink, RouterLinkActive, RouterOutlet} from \"@angular/router\";\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\n@NgModule({\n  imports: [\n    MatSidenavModule,\n    MatButtonModule,\n    MatIconModule,\n    MatListModule,\n    RouterOutlet,\n    RouterLink,\n    RouterLinkActive,\n  ],\n  declarations: [\n    SettingsComponent,\n  ],\n})\nexport class SettingsModule {\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SimpleDataButtonComponent.html":{"url":"components/SimpleDataButtonComponent.html","title":"component - SimpleDataButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SimpleDataButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/shared/simple-data-button/simple-data-button.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-simple-data-button\n            \n\n\n\n            \n                styleUrls\n                ./simple-data-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./simple-data-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dataReset\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                tableAddRow\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                tableUserActionObs$\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/shared/simple-data-button/simple-data-button.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        tableUserActionObs$\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tools/shared/simple-data-button/simple-data-button.component.ts:11\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dataReset\n                        \n                    \n                \n            \n            \n                \ndataReset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/simple-data-button/simple-data-button.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/simple-data-button/simple-data-button.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tableAddRow\n                        \n                    \n                \n            \n            \n                \ntableAddRow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/simple-data-button/simple-data-button.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, NgModule, OnInit, Output} from '@angular/core';\nimport {TableAction} from \"../types/actions\";\nimport {MatLegacyButtonModule as MatButtonModule} from \"@angular/material/legacy-button\";\n\n@Component({\n  selector: 'app-simple-data-button',\n  templateUrl: './simple-data-button.component.html',\n  styleUrls: ['./simple-data-button.component.scss']\n})\nexport class SimpleDataButtonComponent implements OnInit {\n  @Output() tableUserActionObs$: EventEmitter;\n\n  constructor() {\n    this.tableUserActionObs$ = new EventEmitter();\n  }\n\n  ngOnInit(): void {\n  }\n\n  tableAddRow() {\n    this.tableUserActionObs$.emit([{action: \"addRow\"}]);\n  }\n\n  dataReset() {\n    this.tableUserActionObs$.emit([{action: \"resetData\"}]);\n  }\n\n}\n\n@NgModule({\n  imports: [MatButtonModule],\n  declarations: [SimpleDataButtonComponent],\n  exports: [\n    SimpleDataButtonComponent\n  ]\n})\nexport class SimpleDataButtonModule {\n}\n\n    \n\n    \n        \n  Add Row\n  Reset Data\n\n\n    \n\n    \n                \n                    ./simple-data-button.component.scss\n                \n                button {\n  margin-right: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Add Row  Reset Data'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SimpleDataButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SimpleDataButtonModule.html":{"url":"modules/SimpleDataButtonModule.html","title":"module - SimpleDataButtonModule","body":"\n                   \n\n\n\n\n    Modules\n    SimpleDataButtonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SimpleDataButtonModule\n\n\n\ncluster_SimpleDataButtonModule_declarations\n\n\n\ncluster_SimpleDataButtonModule_exports\n\n\n\n\nSimpleDataButtonComponent\n\nSimpleDataButtonComponent\n\n\n\nSimpleDataButtonModule\n\nSimpleDataButtonModule\n\nSimpleDataButtonModule -->\n\nSimpleDataButtonComponent->SimpleDataButtonModule\n\n\n\n\n\nSimpleDataButtonComponent \n\nSimpleDataButtonComponent \n\nSimpleDataButtonComponent  -->\n\nSimpleDataButtonModule->SimpleDataButtonComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tools/shared/simple-data-button/simple-data-button.component.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SimpleDataButtonComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SimpleDataButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {Component, EventEmitter, NgModule, OnInit, Output} from '@angular/core';\nimport {TableAction} from \"../types/actions\";\nimport {MatLegacyButtonModule as MatButtonModule} from \"@angular/material/legacy-button\";\n\n@Component({\n  selector: 'app-simple-data-button',\n  templateUrl: './simple-data-button.component.html',\n  styleUrls: ['./simple-data-button.component.scss']\n})\nexport class SimpleDataButtonComponent implements OnInit {\n  @Output() tableUserActionObs$: EventEmitter;\n\n  constructor() {\n    this.tableUserActionObs$ = new EventEmitter();\n  }\n\n  ngOnInit(): void {\n  }\n\n  tableAddRow() {\n    this.tableUserActionObs$.emit([{action: \"addRow\"}]);\n  }\n\n  dataReset() {\n    this.tableUserActionObs$.emit([{action: \"resetData\"}]);\n  }\n\n}\n\n@NgModule({\n  imports: [MatButtonModule],\n  declarations: [SimpleDataButtonComponent],\n  exports: [\n    SimpleDataButtonComponent\n  ]\n})\nexport class SimpleDataButtonModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SimpleGraphButtonComponent.html":{"url":"components/SimpleGraphButtonComponent.html","title":"component - SimpleGraphButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SimpleGraphButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/shared/simple-graph-button/simple-graph-button.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-simple-graph-button\n            \n\n\n\n            \n                styleUrls\n                ./simple-graph-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./simple-graph-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                saveGraphButton\n                            \n                            \n                                    \n                                saveGraphSpinner\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                resetGraphInfo\n                            \n                            \n                                saveGraph\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                chartUserActionObs$\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popupService: HonorCodePopupService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/shared/simple-graph-button/simple-graph-button.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popupService\n                                                  \n                                                        \n                                                                        HonorCodePopupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        chartUserActionObs$\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tools/shared/simple-graph-button/simple-graph-button.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/simple-graph-button/simple-graph-button.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetGraphInfo\n                        \n                    \n                \n            \n            \n                \nresetGraphInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/simple-graph-button/simple-graph-button.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveGraph\n                        \n                    \n                \n            \n            \n                \nsaveGraph()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/simple-graph-button/simple-graph-button.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        saveGraphButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatButton\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('saveGraphButton')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/tools/shared/simple-graph-button/simple-graph-button.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        saveGraphSpinner\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatProgressSpinner\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('saveGraphSpinner')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/tools/shared/simple-graph-button/simple-graph-button.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, EventEmitter, NgModule, Output, ViewChild} from '@angular/core';\nimport {ChartAction} from \"../types/actions\";\nimport {MatLegacyButtonModule as MatButtonModule} from \"@angular/material/legacy-button\";\nimport {MatProgressSpinner, MatProgressSpinnerModule} from \"@angular/material/progress-spinner\";\nimport {MatButton} from \"@angular/material/button\";\nimport {HonorCodePopupService} from \"../honor-code-popup/honor-code-popup.service\";\n\n@Component({\n  selector: 'app-simple-graph-button',\n  templateUrl: './simple-graph-button.component.html',\n  styleUrls: ['./simple-graph-button.component.scss']\n})\nexport class SimpleGraphButtonComponent implements AfterViewInit {\n  @ViewChild(\"saveGraphButton\") saveGraphButton!: MatButton;\n  @ViewChild(\"saveGraphSpinner\") saveGraphSpinner!: MatProgressSpinner;\n  @Output()\n  private chartUserActionObs$: EventEmitter;\n\n  constructor(private popupService: HonorCodePopupService) {\n    this.chartUserActionObs$ = new EventEmitter();\n\n  }\n\n  ngAfterViewInit(): void {\n    this.popupService.registerSaveGraphButton(this.saveGraphButton);\n    this.popupService.registerSaveGraphSpinner(this.saveGraphSpinner);\n  }\n\n\n  saveGraph() {\n    this.chartUserActionObs$.emit([{action: \"saveGraph\"}]);\n  }\n\n  resetGraphInfo() {\n    this.chartUserActionObs$.emit([{action: \"resetChartInfo\"}])\n  }\n\n}\n\n@NgModule({\n  imports: [MatButtonModule, MatProgressSpinnerModule],\n  exports: [\n    SimpleGraphButtonComponent\n  ],\n  declarations: [SimpleGraphButtonComponent]\n})\nexport class SimpleGraphButtonModule {\n}\n\n    \n\n    \n        \n  Save Graph\n  \n\nReset Graph Labels\n\n    \n\n    \n                \n                    ./simple-graph-button.component.scss\n                \n                button {\n  margin-right: 10px;\n}\n\nmat-spinner {\n  z-index: 10;\n  display: block;\n  position: absolute;\n  top: 10px;\n  left: 35%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Save Graph  Reset Graph Labels'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SimpleGraphButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SimpleGraphButtonModule.html":{"url":"modules/SimpleGraphButtonModule.html","title":"module - SimpleGraphButtonModule","body":"\n                   \n\n\n\n\n    Modules\n    SimpleGraphButtonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SimpleGraphButtonModule\n\n\n\ncluster_SimpleGraphButtonModule_declarations\n\n\n\ncluster_SimpleGraphButtonModule_exports\n\n\n\n\nSimpleGraphButtonComponent\n\nSimpleGraphButtonComponent\n\n\n\nSimpleGraphButtonModule\n\nSimpleGraphButtonModule\n\nSimpleGraphButtonModule -->\n\nSimpleGraphButtonComponent->SimpleGraphButtonModule\n\n\n\n\n\nSimpleGraphButtonComponent \n\nSimpleGraphButtonComponent \n\nSimpleGraphButtonComponent  -->\n\nSimpleGraphButtonModule->SimpleGraphButtonComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tools/shared/simple-graph-button/simple-graph-button.component.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SimpleGraphButtonComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SimpleGraphButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {AfterViewInit, Component, EventEmitter, NgModule, Output, ViewChild} from '@angular/core';\nimport {ChartAction} from \"../types/actions\";\nimport {MatLegacyButtonModule as MatButtonModule} from \"@angular/material/legacy-button\";\nimport {MatProgressSpinner, MatProgressSpinnerModule} from \"@angular/material/progress-spinner\";\nimport {MatButton} from \"@angular/material/button\";\nimport {HonorCodePopupService} from \"../honor-code-popup/honor-code-popup.service\";\n\n@Component({\n  selector: 'app-simple-graph-button',\n  templateUrl: './simple-graph-button.component.html',\n  styleUrls: ['./simple-graph-button.component.scss']\n})\nexport class SimpleGraphButtonComponent implements AfterViewInit {\n  @ViewChild(\"saveGraphButton\") saveGraphButton!: MatButton;\n  @ViewChild(\"saveGraphSpinner\") saveGraphSpinner!: MatProgressSpinner;\n  @Output()\n  private chartUserActionObs$: EventEmitter;\n\n  constructor(private popupService: HonorCodePopupService) {\n    this.chartUserActionObs$ = new EventEmitter();\n\n  }\n\n  ngAfterViewInit(): void {\n    this.popupService.registerSaveGraphButton(this.saveGraphButton);\n    this.popupService.registerSaveGraphSpinner(this.saveGraphSpinner);\n  }\n\n\n  saveGraph() {\n    this.chartUserActionObs$.emit([{action: \"saveGraph\"}]);\n  }\n\n  resetGraphInfo() {\n    this.chartUserActionObs$.emit([{action: \"resetChartInfo\"}])\n  }\n\n}\n\n@NgModule({\n  imports: [MatButtonModule, MatProgressSpinnerModule],\n  exports: [\n    SimpleGraphButtonComponent\n  ],\n  declarations: [SimpleGraphButtonComponent]\n})\nexport class SimpleGraphButtonModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolsNavbarComponent.html":{"url":"components/ToolsNavbarComponent.html","title":"component - ToolsNavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToolsNavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/tools-navbar/tools-navbar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Sidenav with custom escape and backdrop click behavior\nContains menubar and router outlet to plotting tools\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tools-navbar\n            \n\n\n\n            \n                styleUrls\n                tools-navbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                tools-navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                toolsnav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/tools-navbar/tools-navbar.component.ts:37\n                \n            \n\n\n            \n                \n                    open the navigation bar toolsnav\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open\n                        \n                    \n                \n            \n            \n                \nopen()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/tools-navbar/tools-navbar.component.ts:30\n                \n            \n\n\n            \n                \n                    open the navigation bar toolsnav\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        toolsnav\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSidenav\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('toolsnav')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/tools-navbar/tools-navbar.component.ts:25\n                        \n                    \n\n            \n                \n                    Navigation bar for selecting tools\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, NgModule, ViewChild} from '@angular/core';\nimport {MatSidenav, MatSidenavModule} from '@angular/material/sidenav';\nimport {MenubarModule} from \"../menubar/menubar.component\";\nimport {AppRoutingModule} from \"../../app-routing.module\";\nimport {MatLegacyButtonModule as MatButtonModule} from \"@angular/material/legacy-button\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {CurveModule} from \"../../tools/curve/curve.module\";\nimport {MatLegacyListModule as MatListModule} from \"@angular/material/legacy-list\";\n\n/**\n * Sidenav with custom escape and backdrop click behavior\n *\n * Contains menubar and router outlet to plotting tools\n *\n * */\n@Component({\n  selector: 'app-tools-navbar',\n  templateUrl: 'tools-navbar.component.html',\n  styleUrls: ['tools-navbar.component.scss'],\n})\nexport class ToolsNavbarComponent {\n  /**\n   * Navigation bar for selecting tools\n   */\n  @ViewChild('toolsnav') toolsnav!: MatSidenav;\n\n  /**\n   * open the navigation bar {@link toolsnav}\n   */\n  open() {\n    this.toolsnav.open();\n  }\n\n  /**\n   * open the navigation bar {@link toolsnav}\n   */\n  close() {\n    this.toolsnav.close();\n  }\n\n}\n\n/**\n * Encapsulate {@link ToolsNavbarComponent}\n */\n@NgModule({\n  imports: [\n    MenubarModule,\n    CurveModule,\n    AppRoutingModule,\n    MatSidenavModule,\n    MatButtonModule,\n    MatIconModule,\n    MatListModule,\n  ],\n  declarations: [\n    ToolsNavbarComponent,\n  ],\n  exports: [ToolsNavbarComponent]\n})\nexport class ToolsNavbarModule {\n}\n\n    \n\n    \n        \n  \n    Select a Tool\n    \n      Curve\n      Moon\n    \n  \n\n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    tools-navbar.component.scss\n                \n                .tool-sidenav-container {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n}\n\nmat-nav-list {\n  width: 200px;\n}\n\n.tool-container {\n  padding: 20px 100px 20px 100px;\n  height: 100%;\n  width: 100%;\n}\n\n.mat-list-item-content {\n  text-align: center;\n}\n\n\n.prompt {\n  font-size: large;\n  font-style: italic;\n  text-align: center;\n  margin-top: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Select a Tool          Curve      Moon                  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolsNavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ToolsNavbarModule.html":{"url":"modules/ToolsNavbarModule.html","title":"module - ToolsNavbarModule","body":"\n                   \n\n\n\n\n    Modules\n    ToolsNavbarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ToolsNavbarModule\n\n\n\ncluster_ToolsNavbarModule_declarations\n\n\n\ncluster_ToolsNavbarModule_exports\n\n\n\ncluster_ToolsNavbarModule_imports\n\n\n\n\nToolsNavbarComponent\n\nToolsNavbarComponent\n\n\n\nToolsNavbarModule\n\nToolsNavbarModule\n\nToolsNavbarModule -->\n\nToolsNavbarComponent->ToolsNavbarModule\n\n\n\n\n\nToolsNavbarComponent \n\nToolsNavbarComponent \n\nToolsNavbarComponent  -->\n\nToolsNavbarModule->ToolsNavbarComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nToolsNavbarModule -->\n\nAppRoutingModule->ToolsNavbarModule\n\n\n\n\n\nCurveModule\n\nCurveModule\n\nToolsNavbarModule -->\n\nCurveModule->ToolsNavbarModule\n\n\n\n\n\nMenubarModule\n\nMenubarModule\n\nToolsNavbarModule -->\n\nMenubarModule->ToolsNavbarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/tools-navbar/tools-navbar.component.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Encapsulate ToolsNavbarComponent\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ToolsNavbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CurveModule\n                        \n                        \n                            MenubarModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ToolsNavbarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {Component, NgModule, ViewChild} from '@angular/core';\nimport {MatSidenav, MatSidenavModule} from '@angular/material/sidenav';\nimport {MenubarModule} from \"../menubar/menubar.component\";\nimport {AppRoutingModule} from \"../../app-routing.module\";\nimport {MatLegacyButtonModule as MatButtonModule} from \"@angular/material/legacy-button\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {CurveModule} from \"../../tools/curve/curve.module\";\nimport {MatLegacyListModule as MatListModule} from \"@angular/material/legacy-list\";\n\n/**\n * Sidenav with custom escape and backdrop click behavior\n *\n * Contains menubar and router outlet to plotting tools\n *\n * */\n@Component({\n  selector: 'app-tools-navbar',\n  templateUrl: 'tools-navbar.component.html',\n  styleUrls: ['tools-navbar.component.scss'],\n})\nexport class ToolsNavbarComponent {\n  /**\n   * Navigation bar for selecting tools\n   */\n  @ViewChild('toolsnav') toolsnav!: MatSidenav;\n\n  /**\n   * open the navigation bar {@link toolsnav}\n   */\n  open() {\n    this.toolsnav.open();\n  }\n\n  /**\n   * open the navigation bar {@link toolsnav}\n   */\n  close() {\n    this.toolsnav.close();\n  }\n\n}\n\n/**\n * Encapsulate {@link ToolsNavbarComponent}\n */\n@NgModule({\n  imports: [\n    MenubarModule,\n    CurveModule,\n    AppRoutingModule,\n    MatSidenavModule,\n    MatButtonModule,\n    MatIconModule,\n    MatListModule,\n  ],\n  declarations: [\n    ToolsNavbarComponent,\n  ],\n  exports: [ToolsNavbarComponent]\n})\nexport class ToolsNavbarModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app-routing.module.ts\n            \n            function\n            getToolSiteName\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/shared/about/about.component.ts\n            \n            component\n            AboutComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/menubar/menubar.component.ts\n            \n            component\n            MenubarComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/settings/appearance/appearance.component.ts\n            \n            component\n            AppearanceComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/shared/settings/appearance/service/appearance-storage.service.ts\n            \n            injectable\n            AppearanceStorageService\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/shared/settings/appearance/service/appearance.service.ts\n            \n            injectable\n            AppearanceService\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/shared/settings/appearance/service/appearance.utils.ts\n            \n            class\n            ChartColor\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/settings/appearance/service/appearance.utils.ts\n            \n            class\n            ColorThemeSettings\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/settings/appearance/service/appearance.utils.ts\n            \n            class\n            DefaultAppearanceSettings\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/settings/appearance/service/appearance.utils.ts\n            \n            interface\n            MyColorTheme\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/settings/appearance/service/appearance.utils.ts\n            \n            interface\n            MyFontFamily\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/settings/appearance/service/appearance.utils.ts\n            \n            interface\n            MyFontSize\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/settings/appearance/service/appearance.utils.ts\n            \n            interface\n            MyFontStyle\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/tools-navbar/tools-navbar.component.ts\n            \n            component\n            ToolsNavbarComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve-chart-form/curve-chart-form.component.ts\n            \n            component\n            CurveChartFormComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve-chart/curve-chart.component.ts\n            \n            component\n            CurveChartComponent\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve-chart/curve-chart.component.ts\n            \n            class\n            CurveChart\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve-highchart/curve-high-chart.component.ts\n            \n            component\n            CurveHighChartComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve-table/curve-table.component.ts\n            \n            component\n            CurveTableComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve-table/curve-table.component.ts\n            \n            class\n            CurveTable\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve.component.ts\n            \n            component\n            CurveComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve.service.ts\n            \n            injectable\n            CurveService\n            \n                7 %\n                (3/42)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve.service.util.ts\n            \n            class\n            CurveChartInfo\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve.service.util.ts\n            \n            class\n            CurveData\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve.service.util.ts\n            \n            class\n            CurveImpl\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve.service.util.ts\n            \n            class\n            CurveStorage\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve.service.util.ts\n            \n            interface\n            CurveChartInfoStorageObject\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve.service.util.ts\n            \n            interface\n            CurveDataDict\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve.service.util.ts\n            \n            interface\n            CurveInterface\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve.service.util.ts\n            \n            interface\n            CurveInterfaceStorageObject\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/tools/curve/line-form/line-form.component.ts\n            \n            component\n            LineFormComponent\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/tools/shared/charts/chart.interface.ts\n            \n            interface\n            ChartInfo\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/tools/shared/charts/chart.interface.ts\n            \n            interface\n            MyChart\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/tools/shared/charts/utils.ts\n            \n            function\n            addEXIFToImage\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tools/shared/charts/utils.ts\n            \n            function\n            dataURLtoBlob\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tools/shared/charts/utils.ts\n            \n            function\n            dateAppendZero\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tools/shared/charts/utils.ts\n            \n            function\n            formatTime\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/tools/shared/charts/utils.ts\n            \n            function\n            getDateString\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tools/shared/charts/utils.ts\n            \n            function\n            updateLine\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tools/shared/data/data.interface.ts\n            \n            interface\n            MyData\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/tools/shared/honor-code-popup/honor-code-chart.service.ts\n            \n            injectable\n            HonorCodeChartService\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/tools/shared/honor-code-popup/honor-code-popup.component.ts\n            \n            component\n            HonorCodePopupComponent\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/tools/shared/honor-code-popup/honor-code-popup.service.ts\n            \n            injectable\n            HonorCodePopupService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/tools/shared/simple-data-button/simple-data-button.component.ts\n            \n            component\n            SimpleDataButtonComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/tools/shared/simple-graph-button/simple-graph-button.component.ts\n            \n            component\n            SimpleGraphButtonComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/tools/shared/storage/storage.interface.ts\n            \n            interface\n            MyStorage\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/tools/shared/tables/table-interface.ts\n            \n            interface\n            MyTable\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^15.2.9\n        \n            @angular/cdk : ^15.2.9\n        \n            @angular/common : ^15.2.9\n        \n            @angular/compiler : ^15.2.9\n        \n            @angular/core : ^15.2.9\n        \n            @angular/forms : ^15.2.9\n        \n            @angular/localize : ^15.2.9\n        \n            @angular/material : ^15.2.9\n        \n            @angular/platform-browser : ^15.2.9\n        \n            @angular/platform-browser-dynamic : ^15.2.9\n        \n            @angular/router : ^15.2.9\n        \n            @compodoc/compodoc : ^1.1.19\n        \n            @handsontable/angular : ^12.4.0\n        \n            @ng-bootstrap/ng-bootstrap : ^14.1.0\n        \n            @popperjs/core : ^2.10.2\n        \n            @types/file-saver : ^2.0.5\n        \n            bootstrap : ^5.3.0-alpha1\n        \n            bootstrap-icons : ^1.10.3\n        \n            chart.js : ^4.2.1\n        \n            file-saver : ^2.0.5\n        \n            handsontable : ^12.4.0\n        \n            highcharts : ^11.1.0\n        \n            highcharts-angular : ^3.1.2\n        \n            highcharts-exporting : ^0.1.7\n        \n            highcharts-offline-exporting : ^0.1.7\n        \n            ng2-charts : ^4.1.1\n        \n            ngx-webstorage-service : ^5.0.0\n        \n            node-sass : ^8.0.0\n        \n            piexif-ts : ^2.0.16\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ChartColorMode   (src/.../appearance.utils.ts)\n                        \n                        \n                            ColorThemes   (src/.../appearance.utils.ts)\n                        \n                        \n                            CurveCounts   (src/.../curve.service.util.ts)\n                        \n                        \n                            CurveParam   (src/.../curve.service.util.ts)\n                        \n                        \n                            FontFamily   (src/.../appearance.utils.ts)\n                        \n                        \n                            FontSizes   (src/.../appearance.utils.ts)\n                        \n                        \n                            FontStyles   (src/.../appearance.utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/settings/appearance/service/appearance.utils.ts\n    \n        \n            \n                \n                    \n                        \n                        ChartColorMode\n                    \n                \n                        \n                            \n                                 LIGHT\n                            \n                        \n                        \n                            \n                                Value : LIGHT\n                            \n                        \n                        \n                            \n                                 DARK\n                            \n                        \n                        \n                            \n                                Value : DARK\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ColorThemes\n                    \n                \n                        \n                            \n                                 LIGHT\n                            \n                        \n                        \n                            \n                                Value : LIGHT_THEME\n                            \n                        \n                        \n                            \n                                 DARK\n                            \n                        \n                        \n                            \n                                Value : DARK_THEME\n                            \n                        \n                        \n                            \n                                 HIGH_CONTRAST_DARK\n                            \n                        \n                        \n                            \n                                Value : HC_DARK_THEME\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        FontFamily\n                    \n                \n                        \n                            \n                                 ROBOTO\n                            \n                        \n                        \n                            \n                                Value : Roboto\n                            \n                        \n                        \n                            \n                                 COMIC_NEUE\n                            \n                        \n                        \n                            \n                                Value : Comic-Neue\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        FontSizes\n                    \n                \n                        \n                            \n                                 SMALL\n                            \n                        \n                        \n                            \n                                Value : small\n                            \n                        \n                        \n                            \n                                 DEFAULT\n                            \n                        \n                        \n                            \n                                Value : default\n                            \n                        \n                        \n                            \n                                 LARGE\n                            \n                        \n                        \n                            \n                                Value : large\n                            \n                        \n                        \n                            \n                                 LARGER\n                            \n                        \n                        \n                            \n                                Value : larger\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        FontStyles\n                    \n                \n                        \n                            \n                                 DEFAULT\n                            \n                        \n                        \n                            \n                                Value : normal\n                            \n                        \n                        \n                            \n                                 BOLD\n                            \n                        \n                        \n                            \n                                Value : bold\n                            \n                        \n                        \n                            \n                                 EXTRA_BOLD\n                            \n                        \n                        \n                            \n                                Value : bolder\n                            \n                        \n            \n        \n\n    src/app/tools/curve/curve.service.util.ts\n    \n        \n            \n                \n                    \n                        \n                        CurveCounts\n                    \n                \n                        \n                            \n                                 ONE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 TWO\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 THREE\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 FOUR\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        CurveParam\n                    \n                \n                        \n                            \n                                 X\n                            \n                        \n                        \n                            \n                                Value : x\n                            \n                        \n                        \n                            \n                                 Y1\n                            \n                        \n                        \n                            \n                                Value : y1\n                            \n                        \n                        \n                            \n                                 Y2\n                            \n                        \n                        \n                            \n                                Value : y2\n                            \n                        \n                        \n                            \n                                 Y3\n                            \n                        \n                        \n                            \n                                Value : y3\n                            \n                        \n                        \n                            \n                                 Y4\n                            \n                        \n                        \n                            \n                                Value : y4\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addEXIFToImage   (src/.../utils.ts)\n                        \n                        \n                            dataURLtoBlob   (src/.../utils.ts)\n                        \n                        \n                            dateAppendZero   (src/.../utils.ts)\n                        \n                        \n                            formatTime   (src/.../utils.ts)\n                        \n                        \n                            getDateString   (src/.../utils.ts)\n                        \n                        \n                            getToolSiteName   (src/.../app-routing.module.ts)\n                        \n                        \n                            updateLine   (src/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/tools/shared/charts/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        addEXIFToImage\n                        \n                    \n                \n            \n            \n                \naddEXIFToImage(jpegData: string, signature: string, time: string)\n                \n            \n\n\n\n\n            \n                \n                    Add EXIF information to image\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    jpegData\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        data of a jpeg file\n\n                                    \n                                \n                                \n                                    signature\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        signature of the user\n\n                                    \n                                \n                                \n                                    time\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        time of download initiation\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataURLtoBlob\n                        \n                    \n                \n            \n            \n                \ndataURLtoBlob(dataurl: string)\n                \n            \n\n\n\n\n            \n                \n                    Turn dataurl into a blob object\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dataurl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Blob\n\n                    \n                    \n                        Blob object\nCredits: https://stackoverflow.com/a/30407959/1154380\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateAppendZero\n                        \n                    \n                \n            \n            \n                \ndateAppendZero(num: number)\n                \n            \n\n\n\n\n            \n                \n                    Pre-fix a number with '0' if it is less then 10. Otherwise just convert it to string.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    num\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : A number between 1 and 99.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        two-character string containing the number and a leading 0 if necessary.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatTime\n                        \n                    \n                \n            \n            \n                \nformatTime(time: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A string in returned by getDateString()\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDateString\n                        \n                    \n                \n            \n            \n                \ngetDateString()\n                \n            \n\n\n\n\n            \n                \n                    Get the current date in the format of \"YYYY:MM:DD HH:MM:SS\"\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateLine\n                        \n                    \n                \n            \n            \n                \nupdateLine(tableData, myChart: Chart, dataSetIndex: number, xKey: string, yKey: string)\n                \n            \n\n\n\n\n            \n                \n                    This function takes the data in a dictionary object and updates a Chart object with the data. The\ndataset number for the Chart object and the keys for the x and y values are given in order to\ncorrectly update when there are multiple datasets in the Chart object or in the dictionary.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    tableData\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        :   The dictionary object that provides data\n\n                                    \n                                \n                                \n                                    myChart\n                                    \n                                            Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        :     The Chart object\n\n                                    \n                                \n                                \n                                    dataSetIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                    \n                                        :The index of the dataset to be updated in the Chart object.\n\n                                    \n                                \n                                \n                                    xKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'x'\n                                    \n\n                                    \n                                        :        The key for x values in the dictionary.\n\n                                    \n                                \n                                \n                                    yKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'y'\n                                    \n\n                                    \n                                        :        The key for y values in the dictionary.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/app-routing.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getToolSiteName\n                        \n                    \n                \n            \n            \n                \ngetToolSiteName(tool: string)\n                \n            \n\n\n\n\n            \n                \n                    Generate name of the site based on the graphing tool in use.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the graphing tool in use\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSkynet Plotting neo\nSkynet Plotting neo is a re-imagination of the original Skynet Plotting Tools, which was designed to make data anlysis easy for the students taking the intro level astronony lab course Our Place in Space and it's follow-up course Multi Wavelength Universe.\nThis project is based on the Angular 15 framework. Some of the key libaries are Handsontable, Chart.js, Angular Material, and Bootstrap.\nThe ultimate goal for this projector is to re-implement the functinoality of the existing graphing tools, but under a modern framework with good design pattern to make it maintainble in the long term, even not by its original authors.\nDocumentations have been set up as a Github Page through Github Actions. Check it out here.\n\nTo build for development, run\nnpm run startTo build for production, run\nnpm run buildTo generate documentations, run\nnpm run generate-docsTo view documentations in development environment, run\nnpm run serve-docsTo extract the source language file, run\nng extract-i18n --output-path src/locale\nContact author: Reed Fu\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                GNU GENERAL PUBLIC LICENSE\n                   Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n                        Preamble  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n                   TERMS AND CONDITIONS\nDefinitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n  The Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nUse with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\nRevised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\nCopyright (C)   \n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see .Also add information on how to contact you by electronic and paper mail.\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n  Copyright (C)   \nThis program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type `show c' for details.The hypothetical commands show w' and show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\nhttps://www.gnu.org/licenses/.\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\nhttps://www.gnu.org/licenses/why-not-lgpl.html.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CurveModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HonorCodePopupModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MenubarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SimpleDataButtonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SimpleGraphButtonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ToolsNavbarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CurveModule\n\n\n\ncluster_CurveModule_declarations\n\n\n\ncluster_CurveModule_imports\n\n\n\ncluster_CurveModule_exports\n\n\n\ncluster_CurveModule_providers\n\n\n\ncluster_HonorCodePopupModule\n\n\n\ncluster_HonorCodePopupModule_declarations\n\n\n\ncluster_MenubarModule\n\n\n\ncluster_MenubarModule_declarations\n\n\n\ncluster_MenubarModule_exports\n\n\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SettingsModule_imports\n\n\n\ncluster_SimpleDataButtonModule\n\n\n\ncluster_SimpleDataButtonModule_declarations\n\n\n\ncluster_SimpleDataButtonModule_exports\n\n\n\ncluster_SimpleGraphButtonModule\n\n\n\ncluster_SimpleGraphButtonModule_declarations\n\n\n\ncluster_SimpleGraphButtonModule_exports\n\n\n\ncluster_ToolsNavbarModule\n\n\n\ncluster_ToolsNavbarModule_declarations\n\n\n\ncluster_ToolsNavbarModule_exports\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppearanceComponent\n\nAppearanceComponent\n\nAppModule -->\n\nAppearanceComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nToolsNavbarModule\n\nToolsNavbarModule\n\nToolsNavbarModule -->\n\nAppRoutingModule->ToolsNavbarModule\n\n\n\n\n\nMenubarModule\n\nMenubarModule\n\nMenubarModule -->\n\nAppRoutingModule->MenubarModule\n\n\n\n\n\nHonorCodePopupModule\n\nHonorCodePopupModule\n\nAppModule -->\n\nHonorCodePopupModule->AppModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nAppModule -->\n\nSettingsModule->AppModule\n\n\n\nAppModule -->\n\nToolsNavbarModule->AppModule\n\n\n\n\n\nToolsNavbarComponent \n\nToolsNavbarComponent \n\nToolsNavbarComponent  -->\n\nToolsNavbarModule->ToolsNavbarComponent \n\n\n\n\n\nAppearanceService\n\nAppearanceService\n\nAppModule -->\n\nAppearanceService->AppModule\n\n\n\n\n\nAppearanceStorageService\n\nAppearanceStorageService\n\nAppModule -->\n\nAppearanceStorageService->AppModule\n\n\n\n\n\nCurveChartComponent\n\nCurveChartComponent\n\n\n\nCurveModule\n\nCurveModule\n\nCurveModule -->\n\nCurveChartComponent->CurveModule\n\n\n\n\n\nCurveChartFormComponent\n\nCurveChartFormComponent\n\nCurveModule -->\n\nCurveChartFormComponent->CurveModule\n\n\n\n\n\nCurveComponent\n\nCurveComponent\n\nCurveModule -->\n\nCurveComponent->CurveModule\n\n\n\n\n\nCurveHighChartComponent\n\nCurveHighChartComponent\n\nCurveModule -->\n\nCurveHighChartComponent->CurveModule\n\n\n\n\n\nCurveTableComponent\n\nCurveTableComponent\n\nCurveModule -->\n\nCurveTableComponent->CurveModule\n\n\n\n\n\nLineFormComponent\n\nLineFormComponent\n\nCurveModule -->\n\nLineFormComponent->CurveModule\n\n\n\nToolsNavbarModule -->\n\nCurveModule->ToolsNavbarModule\n\n\n\n\n\nCurveComponent \n\nCurveComponent \n\nCurveComponent  -->\n\nCurveModule->CurveComponent \n\n\n\n\n\nSimpleDataButtonModule\n\nSimpleDataButtonModule\n\nCurveModule -->\n\nSimpleDataButtonModule->CurveModule\n\n\n\n\n\nSimpleDataButtonComponent \n\nSimpleDataButtonComponent \n\nSimpleDataButtonComponent  -->\n\nSimpleDataButtonModule->SimpleDataButtonComponent \n\n\n\n\n\nSimpleGraphButtonModule\n\nSimpleGraphButtonModule\n\nCurveModule -->\n\nSimpleGraphButtonModule->CurveModule\n\n\n\n\n\nSimpleGraphButtonComponent \n\nSimpleGraphButtonComponent \n\nSimpleGraphButtonComponent  -->\n\nSimpleGraphButtonModule->SimpleGraphButtonComponent \n\n\n\n\n\nCurveService\n\nCurveService\n\nCurveModule -->\n\nCurveService->CurveModule\n\n\n\n\n\nHonorCodePopupComponent\n\nHonorCodePopupComponent\n\nHonorCodePopupModule -->\n\nHonorCodePopupComponent->HonorCodePopupModule\n\n\n\n\n\nMenubarComponent\n\nMenubarComponent\n\nMenubarModule -->\n\nMenubarComponent->MenubarModule\n\n\n\nToolsNavbarModule -->\n\nMenubarModule->ToolsNavbarModule\n\n\n\n\n\nMenubarComponent \n\nMenubarComponent \n\nMenubarComponent  -->\n\nMenubarModule->MenubarComponent \n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nRouterLink\n\nRouterLink\n\nSettingsModule -->\n\nRouterLink->SettingsModule\n\n\n\n\n\nRouterLinkActive\n\nRouterLinkActive\n\nSettingsModule -->\n\nRouterLinkActive->SettingsModule\n\n\n\n\n\nRouterOutlet\n\nRouterOutlet\n\nSettingsModule -->\n\nRouterOutlet->SettingsModule\n\n\n\n\n\nSimpleDataButtonComponent\n\nSimpleDataButtonComponent\n\nSimpleDataButtonModule -->\n\nSimpleDataButtonComponent->SimpleDataButtonModule\n\n\n\n\n\nSimpleGraphButtonComponent\n\nSimpleGraphButtonComponent\n\nSimpleGraphButtonModule -->\n\nSimpleGraphButtonComponent->SimpleGraphButtonModule\n\n\n\n\n\nToolsNavbarComponent\n\nToolsNavbarComponent\n\nToolsNavbarModule -->\n\nToolsNavbarComponent->ToolsNavbarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    17 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    13 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        8 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ChartAction   (src/.../actions.ts)\n                        \n                        \n                            MyAction   (src/.../actions.ts)\n                        \n                        \n                            TableAction   (src/.../actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/tools/shared/types/actions.ts\n    \n    \n        \n            \n                \n                    \n                    ChartAction\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MyAction\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TableAction\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
