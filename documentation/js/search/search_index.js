var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutComponent.html",[0,0.395,1,1.164]],["body/components/AboutComponent.html",[0,0.738,1,2.104,2,1.94,3,0.108,4,0.09,5,1.533,6,1.533,7,1.533,8,1.533,9,0.063,10,4.939,11,2.58,12,2.147,13,1.533,14,2.103,15,2.141,16,1.523,17,7.933,18,1.523,19,7.167,20,0.182,21,0.808,22,0.007,23,0.108,24,0.146,25,5.45,26,1.159,27,1.977,28,1.977,29,1.533,30,2.312,31,1.533,32,0.642,33,1.533,34,1.422,35,1.533,36,1.395,37,1.533,38,1.395,39,1.847,40,1.533,41,1.422,42,1.688,43,2.573,44,1.395,45,1.533,46,1.422,47,2.45,48,1.395,49,2.393,50,1.422,51,2.067,52,1.395,53,1.533,54,1.422,55,1.395,56,1.395,57,1.533,58,1.395,59,1.449,60,1.295,61,1.533,62,1.37,63,1.181,64,1.533,65,1.422,66,1.476,67,1.422,68,1.533,69,1.422,70,2.104,71,1.395,72,1.533,73,1.422,74,1.422,75,1.395,76,1.395,77,1.533,78,1.422,79,2.184,80,1.395,81,1.533,82,1.422,83,1.422,84,1.395,85,1.395,86,1.533,87,1.422,88,1.903,89,0.314,90,1.977,91,1.422,92,1.295,93,1.422,94,1.953,95,1.395,96,1.533,97,1.422,98,1.422,99,1.395,100,1.395,101,1.395,102,1.533,103,1.422,104,1.815,105,1.395,106,1.533,107,1.422,108,1.395,109,1.344,110,1.533,111,1.533,112,0.005,113,0.005]],["title/components/AppComponent.html",[0,0.395,34,1.186]],["body/components/AppComponent.html",[0,0.726,1,1.323,2,1.874,3,0.102,4,0.085,5,1.454,6,1.454,7,1.454,8,1.454,9,0.06,11,2.446,12,1.426,13,1.454,14,2.098,15,2.138,16,1.471,18,1.471,20,0.227,21,0.766,22,0.007,23,0.102,24,0.138,26,1.099,27,1.91,28,1.91,29,1.454,30,2.265,31,1.454,32,0.692,33,1.454,34,2.1,35,1.454,36,1.323,37,1.454,38,1.323,39,1.81,40,1.454,41,1.348,42,1.664,43,2.549,44,1.323,45,1.454,46,1.348,47,2.415,48,1.323,49,2.352,50,1.348,51,2.015,52,1.323,53,1.454,54,1.348,55,1.323,56,1.323,57,1.454,58,1.323,59,1.373,60,1.228,61,1.454,62,1.298,63,1.119,64,1.454,65,1.348,66,1.399,67,1.348,68,1.454,69,1.348,70,2.061,71,1.323,72,1.454,73,1.348,74,1.348,75,1.323,76,1.323,77,1.454,78,1.348,79,2.14,80,1.323,81,1.454,82,1.348,83,1.348,84,1.323,85,1.323,86,1.454,87,1.348,88,1.838,89,0.297,90,1.91,91,1.348,92,1.228,93,1.348,94,1.913,95,1.323,96,1.454,97,1.348,98,1.348,99,1.323,100,1.323,101,1.323,102,1.454,103,1.348,104,1.769,105,1.323,106,1.454,107,1.348,108,1.323,109,1.274,110,1.454,111,1.454,112,0.005,113,0.005,114,4.682,115,5.264,116,7.731,117,6.922,118,0.219,119,0.667,120,1.812,121,0.437,122,4.682,123,5.229,124,0.635,125,6.922,126,0.52,127,0.338,128,0.545,129,0.596,130,1.389,131,0.894,132,5.643,133,4.961,134,5.264,135,5.264,136,4.007,137,1.426,138,5.269]],["title/modules/AppModule.html",[139,1.59,140,3.525]],["body/modules/AppModule.html",[1,2.259,3,0.113,4,0.094,9,0.067,15,1.264,20,0.318,21,0.849,22,0.007,23,0.113,24,0.153,26,1.218,34,2.433,36,2.259,56,2.259,60,1.724,63,1.241,76,2.259,112,0.005,113,0.005,123,5.375,136,4.443,139,2.004,140,7.469,141,2.641,142,2.712,143,3.489,144,3.769,145,3.874,146,2.51,147,5.192,148,5.192,149,5.192,150,5.192,151,5.192,152,5.375,153,6.12,154,6.12,155,6.12,156,6.12,157,3.53,158,2.574,159,2.712,160,5.843,161,3.179,162,3.179,163,7.399,164,6.032,165,4.763,166,4.187,167,5.843,168,6.575,169,5.192,170,5.843,171,3.974,172,4.763,173,7.399,174,5.843,175,5.192,176,5.192,177,5.192,178,4.443,179,5.192,180,5.843,181,2.787,182,5.843,183,5.192,184,5.192,185,3.632,186,5.626,187,3.405,188,4.763,189,6.575,190,3.792,191,4.421,192,2.283,193,5.843,194,5.192,195,3.043,196,3.853,197,2.392]],["title/modules/AppRoutingModule.html",[139,1.59,152,2.769]],["body/modules/AppRoutingModule.html",[0,0.808,1,1.883,3,0.116,4,0.097,9,0.068,20,0.314,21,0.868,22,0.007,23,0.116,24,0.156,32,0.535,36,1.883,39,1.317,44,1.883,51,1.557,52,1.883,56,1.883,70,1.499,71,1.883,76,1.883,79,1.557,80,1.883,85,1.883,89,0.535,94,1.392,95,1.883,104,1.366,105,1.883,112,0.006,113,0.006,120,2.017,129,0.849,133,4.28,134,4.542,135,5.705,141,2.7,146,2.566,152,4.482,161,2.566,162,3.224,175,5.307,176,5.307,177,5.307,178,4.542,179,5.307,183,5.307,184,5.307,198,4.869,199,4.869,200,7.503,201,6.238,202,4.542,203,5.973,204,5.973,205,5.973,206,5.973,207,5.973,208,5.973,209,1.156,210,5.973,211,8.512,212,6.667,213,5.973,214,5.973,215,5.973,216,5.973,217,5.973,218,5.973,219,5.973,220,5.973,221,5.705,222,5.973,223,5.973,224,7.503,225,6.667,226,7.503,227,6.238,228,5.973,229,5.973,230,3.713,231,3.319,232,4.542,233,5.103,234,6.167,235,6.116,236,3.11,237,0.495,238,2.566,239,5.307,240,0.868,241,5.973,242,5.973,243,5.973]],["title/components/AppearanceComponent.html",[0,0.395,36,1.164]],["body/components/AppearanceComponent.html",[0,0.588,1,1.062,2,1.614,3,0.082,4,0.068,5,1.167,6,1.167,7,1.167,8,1.167,9,0.048,12,1.145,13,1.167,14,2.076,15,2.113,16,1.267,18,1.267,20,0.245,21,0.615,22,0.007,23,0.082,24,0.111,26,0.882,27,1.645,28,1.645,29,1.167,30,2.067,31,1.167,32,0.671,33,1.167,34,1.082,35,1.167,36,1.881,37,1.167,38,1.062,39,1.652,40,1.167,41,1.082,42,1.558,43,2.444,44,1.062,45,1.167,46,1.082,47,2.261,48,1.062,49,2.179,50,1.082,51,1.799,52,1.062,53,1.167,54,1.082,55,1.062,56,1.062,57,1.167,58,1.062,59,1.103,60,0.986,61,1.167,62,1.043,63,0.899,64,1.167,65,1.082,66,1.124,67,1.082,68,1.167,69,1.082,70,1.881,71,1.062,72,1.167,73,1.082,74,1.082,75,1.062,76,1.062,77,1.167,78,1.082,79,1.953,80,1.062,81,1.167,82,1.082,83,1.082,84,1.062,85,1.062,86,1.167,87,1.082,88,1.583,89,0.239,90,1.645,91,1.082,92,0.986,93,1.082,94,1.746,95,1.062,96,1.167,97,1.082,98,1.082,99,1.062,100,1.062,101,1.062,102,1.167,103,1.082,104,1.579,105,1.062,106,1.167,107,1.082,108,1.062,109,1.023,110,1.167,111,1.167,112,0.004,113,0.004,118,0.176,119,0.575,121,0.351,122,3.76,123,4.897,124,0.803,126,0.588,127,0.411,128,0.616,129,1.023,130,1.473,131,1.272,137,1.145,158,2.627,192,1.654,197,1.732,227,4.533,237,0.573,244,3.76,245,0.588,246,4.695,247,6.903,248,5.962,249,6.079,250,1.687,251,6.903,252,6.903,253,6.903,254,6.903,255,5.031,256,0.575,257,0.471,258,5.962,259,5.097,260,7.494,261,5.962,262,5.962,263,4.165,264,4.314,265,4.314,266,4.231,267,4.86,268,0.543,269,4.231,270,4.231,271,3.973,272,5.962,273,4.231,274,3.973,275,5.962,276,4.231,277,3.973,278,5.962,279,4.231,280,3.973,281,5.962,282,4.231,283,2.436,284,2.275,285,4.231,286,2.204,287,2.878,288,4.231,289,4.231,290,4.231,291,4.231,292,4.231,293,4.231,294,4.231,295,4.231,296,4.231,297,3.76,298,3.76,299,3.76,300,2.746,301,1.558,302,4.231,303,5.097,304,4.231,305,4.231,306,4.231,307,4.231,308,4.231,309,4.231,310,4.231,311,4.231,312,4.231,313,4.231,314,4.231,315,4.533,316,3.706,317,5.962,318,5.575,319,4.86,320,5.962,321,5.298,322,5.962,323,4.533,324,5.962,325,3.76,326,1.774,327,2.076,328,2.528,329,1.964,330,1.581,331,1.617,332,1.923,333,5.962]],["title/injectables/AppearanceService.html",[123,2.769,334,2.042]],["body/injectables/AppearanceService.html",[3,0.092,4,0.077,9,0.054,20,0.241,21,0.691,22,0.007,23,0.092,24,0.125,32,0.792,112,0.005,113,0.005,115,3.616,118,0.198,119,0.623,121,0.394,123,3.862,124,0.869,126,0.873,127,0.438,128,0.915,129,1.026,137,1.287,156,5.359,194,4.226,227,3.616,237,0.778,240,1.341,256,0.623,257,0.643,263,5.087,264,4.535,265,4.535,267,5.27,268,0.601,284,2.557,318,4.397,334,2.848,335,2.738,336,4.226,337,7.343,338,1.153,339,7.879,340,7.879,341,7.879,342,7.001,343,7.879,344,6.464,345,7.001,346,6.464,347,7.001,348,6.464,349,7.879,350,5.744,351,6.464,352,5.744,353,5.744,354,4.756,355,7.343,356,7.879,357,6.464,358,6.464,359,4.756,360,4.756,361,4.227,362,4.756,363,4.756,364,4.892,365,4.756,366,6.464,367,4.756,368,4.756,369,5.163,370,6.464,371,4.756,372,4.756,373,5.163,374,6.464,375,4.756,376,4.756,377,5.744,378,4.756,379,6.464,380,4.756,381,5.744,382,4.756,383,5.744,384,4.756,385,7.343,386,2.557,387,4.226,388,3.877,389,4.756,390,4.756,391,1.068,392,4.756,393,4.756,394,4.756,395,4.756,396,7.879,397,4.756,398,7.879,399,4.756,400,4.756,401,4.756,402,7.343,403,4.756,404,4.756,405,4.756,406,4.756,407,4.756,408,4.756,409,4.756,410,4.756,411,4.756,412,4.756,413,4.756,414,4.756,415,2.957,416,2.957,417,2.957,418,4.756,419,4.756]],["title/injectables/AppearanceStorageService.html",[156,3.153,334,2.042]],["body/injectables/AppearanceStorageService.html",[3,0.091,4,0.076,9,0.054,20,0.21,21,0.681,22,0.007,23,0.091,24,0.123,32,0.701,112,0.005,113,0.005,115,3.563,118,0.195,119,0.617,121,0.604,124,0.873,126,0.773,127,0.455,128,0.81,129,1.012,130,1.473,131,1.391,156,4.352,237,0.731,240,1.138,250,1.747,256,0.617,257,0.663,263,4.9,264,4.87,265,4.87,267,6.898,268,0.584,284,2.519,297,4.163,298,4.163,299,4.163,318,5.755,334,2.819,335,2.697,338,1.138,342,6.958,345,6.958,347,6.958,350,5.686,352,5.686,353,5.686,361,5.075,364,5.075,369,5.075,373,5.075,377,5.686,381,5.686,383,5.686,387,4.163,388,3.82,391,1.758,420,8.475,421,4.163,422,7.287,423,7.287,424,7.287,425,7.287,426,7.287,427,7.83,428,6.399,429,6.399,430,4.685,431,4.685,432,4.685,433,4.685,434,4.685,435,6.399,436,4.685,437,4.685,438,4.685,439,4.685,440,4.685,441,4.685,442,4.685,443,4.685,444,4.685,445,4.685,446,4.685,447,4.685,448,4.685,449,4.685,450,4.685,451,7.287,452,4.685,453,4.685,454,4.685,455,4.685,456,4.685,457,7.287,458,4.685,459,4.685,460,4.685,461,4.685,462,7.287,463,4.685,464,4.685,465,4.685,466,4.685,467,7.287,468,4.685]],["title/classes/ChartColor.html",[24,0.121,386,2.492]],["body/classes/ChartColor.html",[3,0.093,4,0.077,9,0.055,22,0.007,23,0.179,24,0.193,32,0.659,112,0.005,113,0.005,118,0.306,119,0.625,124,0.758,126,0.727,127,0.403,128,0.761,129,1.075,130,1.564,131,1.101,237,0.611,240,1.305,250,1.588,256,0.625,257,0.581,263,4.092,264,2.752,265,2.752,271,3.734,274,3.734,277,3.734,280,3.734,283,2.752,284,2.57,316,2.972,338,1.091,361,5.169,364,3.734,369,3.734,373,3.734,386,3.487,415,4.033,416,4.909,417,2.972,469,1.397,470,2.856,471,1.902,472,4.779,473,4.779,474,6.488,475,6.488,476,6.488,477,5.125,478,4.909,479,5.125,480,5.125,481,4.781,482,4.781,483,4.21,484,4.781,485,4.751,486,4.21,487,4.781,488,4.21,489,0.889,490,4.781,491,0.4,492,4.172,493,6.145,494,2.892,495,4.909,496,2.856,497,5.132,498,2.856,499,3.103,500,3.103,501,2.972,502,2.972,503,2.856,504,4.909,505,2.972,506,2.972,507,4.578,508,4.092,509,4.399,510,4.578,511,2.972,512,4.033,513,4.033,514,3.103,515,3.103,516,3.734,517,4.033,518,3.103,519,3.103,520,4.21,521,3.103,522,3.103,523,3.103,524,3.103,525,3.103,526,4.21,527,3.103,528,3.103,529,3.103,530,4.21,531,3.103,532,3.103,533,3.103,534,3.103,535,3.103,536,3.103,537,2.972,538,4.21,539,3.103]],["title/interfaces/ChartInfo.html",[491,0.235,540,0.967]],["body/interfaces/ChartInfo.html",[3,0.119,4,0.099,9,0.07,20,0.25,22,0.007,23,0.148,32,0.8,89,0.346,112,0.006,113,0.006,118,0.255,120,1.302,124,0.87,126,0.882,127,0.436,128,0.924,129,1.106,237,0.786,256,0.735,268,0.631,491,0.387,540,1.863,541,1.938,542,4.997,543,2.351,544,2.351,545,2.264,546,2.351,547,2.351,548,3.447,549,4.099,550,3.741,551,4.099,552,4.099,553,6.13,554,6.13,555,6.13,556,6.13,557,6.13,558,2.064,559,6.13,560,2.411,561,6.13,562,2.46,563,6.13,564,2.924,565,2.616,566,6.13,567,2.147,568,2.616,569,6.13,570,2.147,571,4.661,572,4.389,573,3.978,574,1.504,575,5.447,576,3.978,577,4.661,578,5.798,579,4.661,580,4.661,581,4.661]],["title/classes/ColorThemeSettings.html",[24,0.121,283,2.668]],["body/classes/ColorThemeSettings.html",[3,0.098,4,0.081,9,0.057,22,0.007,23,0.18,24,0.198,112,0.005,113,0.005,118,0.279,124,0.74,129,1.059,130,1.509,237,0.669,240,1.319,250,1.253,256,0.647,257,0.458,263,4.2,264,2.897,265,2.897,271,4.35,274,4.35,277,4.35,280,4.35,283,3.865,284,2.705,316,3.128,338,1.1,361,4.835,364,3.865,369,3.865,373,3.865,386,2.705,415,4.174,416,5.012,417,3.128,469,1.471,470,3.006,471,1.903,472,3.266,473,3.266,477,4.358,478,4.174,479,4.358,480,4.358,483,3.266,485,4.35,486,3.266,488,3.266,489,0.608,491,0.409,492,4.196,493,6.181,494,2.942,495,5.012,496,3.006,497,5.222,498,3.006,499,3.266,500,3.266,501,3.128,502,3.128,503,3.006,504,5.012,505,3.128,506,3.128,507,4.698,508,4.2,509,4.515,510,4.698,511,3.128,512,4.174,513,4.174,514,5.232,515,3.266,516,3.865,517,4.174,518,3.266,519,5.232,520,4.358,521,3.266,522,3.266,523,3.266,524,5.232,525,3.266,526,4.358,527,3.266,528,3.266,529,5.232,530,4.358,531,3.266,532,3.266,533,3.266,534,3.266,535,3.266,536,3.266,537,3.128,538,4.358,539,3.266,582,5.032,583,5.032,584,5.032,585,5.032]],["title/classes/CurveChart.html",[24,0.121,586,3.525]],["body/classes/CurveChart.html",[0,0.528,3,0.087,4,0.072,9,0.051,14,0.952,15,0.97,16,0.952,18,0.952,20,0.294,21,0.651,22,0.007,23,0.087,24,0.163,32,0.723,38,1.125,39,1.779,42,1.586,89,0.402,101,1.125,112,0.005,113,0.005,118,0.186,119,0.598,120,1.512,121,0.372,123,4.253,124,0.786,126,0.796,127,0.418,128,0.834,129,1.002,136,3.408,137,1.213,209,0.868,233,3.049,237,0.59,240,1.035,245,0.703,250,1.328,256,0.598,257,0.612,268,0.509,301,1.224,338,1.047,386,2.409,391,1.726,469,1.31,485,2.58,489,0.974,540,1.942,571,3.408,572,4.423,573,4.987,574,1.516,576,4.62,577,4.719,578,6.633,579,5.413,580,4.719,581,5.843,586,5.413,587,5.661,588,6.633,589,3.408,590,4.323,591,5.515,592,5.515,593,6.206,594,6.206,595,3.135,596,6.206,597,3.983,598,4.482,599,5.515,600,4.217,601,5.098,602,5.413,603,4.482,604,4.482,605,4.482,606,4.482,607,1.639,608,4.482,609,2.319,610,2.129,611,3.654,612,3.449,613,2.678,614,1.025,615,0.97,616,2.409,617,2.409,618,2.409,619,3.212,620,3.983,621,2.041,622,1.446,623,1.146,624,3.654,625,3.654,626,5.227,627,3.408,628,5.515,629,3.983,630,2.786,631,3.983,632,1.446,633,1.362,634,3.135,635,3.983,636,3.983,637,3.983,638,3.983,639,3.983,640,3.983,641,5.515,642,5.515,643,5.515,644,6.828,645,6.828,646,5.515,647,5.515,648,1.604,649,2.026,650,2.043,651,2.667,652,5.515,653,2.138,654,1.446,655,2.08,656,1.446,657,3.983,658,3.983,659,3.983,660,3.983,661,3.983,662,3.467,663,3.983,664,1.604,665,3.983,666,3.983,667,3.983,668,1.285,669,4.253,670,3.983,671,4.098,672,3.983,673,3.408,674,3.212,675,2.358,676,3.983,677,3.983,678,3.983,679,3.983,680,3.983,681,3.983,682,3.983,683,2.786,684,3.983,685,1.094,686,3.983,687,2.319,688,3.654,689,3.983,690,2.491,691,5.515,692,3.983,693,6.828,694,2.491,695,5.515,696,3.983,697,2.491,698,5.515,699,3.983,700,2.491,701,5.515,702,3.983]],["title/components/CurveChartComponent.html",[0,0.395,38,1.164]],["body/components/CurveChartComponent.html",[0,0.553,1,0.953,2,1.493,3,0.074,4,0.061,5,1.048,6,1.048,7,1.048,8,1.048,9,0.043,11,1.763,12,1.028,13,1.048,14,2.063,15,2.1,16,1.172,18,1.172,20,0.283,21,0.552,22,0.007,23,0.074,24,0.145,26,0.792,27,1.522,28,1.522,29,1.048,30,1.968,31,1.048,32,0.582,33,1.048,34,0.971,35,1.048,36,0.953,37,1.048,38,1.791,39,1.988,40,1.048,41,0.971,42,1.747,43,2.387,44,0.953,45,1.048,46,0.971,47,2.181,48,0.953,49,2.09,50,0.971,51,1.694,52,0.953,53,1.048,54,0.971,55,0.953,56,0.953,57,1.048,58,0.953,59,0.99,60,0.885,61,1.048,62,0.936,63,0.807,64,1.048,65,0.971,66,1.009,67,0.971,68,1.048,69,0.971,70,1.791,71,0.953,72,1.048,73,0.971,74,0.971,75,0.953,76,0.953,77,1.048,78,0.971,79,1.859,80,0.953,81,1.048,82,0.971,83,0.971,84,0.953,85,0.953,86,1.048,87,0.971,88,1.465,89,0.402,90,1.522,91,0.971,92,0.885,93,0.971,94,1.662,95,0.953,96,1.048,97,0.971,98,0.971,99,0.953,100,0.953,101,1.631,102,1.048,103,0.971,104,1.487,105,0.953,106,1.048,107,0.971,108,0.953,109,0.918,110,1.048,111,1.048,112,0.004,113,0.004,118,0.158,119,0.532,120,1.381,121,0.315,123,4.873,124,0.767,126,0.375,127,0.386,128,0.393,129,0.857,130,0.682,131,0.645,136,2.888,137,1.028,209,0.735,233,3.753,237,0.458,240,0.944,245,0.641,250,0.708,256,0.532,257,0.54,268,0.502,301,1.282,338,0.768,386,2.041,391,1.602,485,2.186,489,0.459,540,1.743,571,2.888,572,4.106,573,5.294,574,1.088,576,3.581,577,2.888,578,5.424,579,4.942,580,2.888,581,2.888,586,4.942,587,5.529,588,6.478,589,2.888,590,4.121,595,1.918,599,3.374,600,2.787,601,4.361,602,2.888,609,2.429,610,2.229,611,3.096,612,3.964,613,2.269,614,0.869,615,0.822,616,2.041,617,2.041,618,2.041,619,2.721,620,3.374,621,2.172,622,1.225,623,0.971,624,4.498,625,5.298,626,5.684,627,4.196,628,6.339,629,5.775,630,3.43,631,5.775,632,2.096,633,1.677,634,2.787,635,3.374,636,3.374,637,3.374,638,3.374,639,3.374,640,3.374,641,4.903,642,4.903,643,4.903,644,6.339,645,6.339,646,4.903,647,4.903,648,2.552,649,1.717,650,1.816,651,2.371,652,4.903,653,1.811,654,2.301,655,1.763,656,1.225,657,3.374,658,3.374,659,3.374,660,3.374,661,3.374,662,3.256,663,3.374,664,1.359,665,3.374,666,3.374,667,3.374,668,1.088,669,3.883,670,3.374,671,3.741,672,3.374,673,2.888,674,2.721,675,2.214,676,3.374,677,3.374,678,3.374,679,3.374,680,3.374,681,3.374,682,3.374,683,2.361,684,3.374,685,0.973,686,3.374,687,2.062,688,3.096,689,3.374,690,2.11,691,4.903,692,3.374,693,6.339,694,2.11,695,4.903,696,3.374,697,2.11,698,4.903,699,3.374,700,2.11,701,4.903,702,3.374,703,1.359,704,5.518,705,3.797,706,3.374,707,3.797,708,3.797,709,3.797,710,3.374]],["title/components/CurveChartFormComponent.html",[0,0.395,41,1.186]],["body/components/CurveChartFormComponent.html",[0,0.619,1,1.173,2,1.729,3,0.091,4,0.076,5,1.289,6,1.289,7,1.289,8,1.289,9,0.053,12,1.265,13,1.289,14,2.087,15,2.124,16,1.357,18,1.357,20,0.256,21,0.679,22,0.007,23,0.091,24,0.122,26,0.975,27,1.762,28,1.762,29,1.289,30,2.158,31,1.289,32,0.652,33,1.289,34,1.195,35,1.289,36,1.173,37,1.289,38,1.173,39,2.012,40,1.289,41,2.001,42,1.825,43,2.494,44,1.173,45,1.289,46,1.195,47,2.332,48,1.173,49,2.259,50,1.195,51,1.897,52,1.173,53,1.289,54,1.195,55,1.173,56,1.173,57,1.289,58,1.173,59,1.218,60,1.089,61,1.289,62,1.151,63,0.993,64,1.289,65,1.195,66,1.241,67,1.195,68,1.289,69,1.195,70,1.963,71,1.173,72,1.289,73,1.195,74,1.195,75,1.173,76,1.173,77,1.289,78,1.195,79,2.038,80,1.173,81,1.289,82,1.195,83,1.195,84,1.173,85,1.173,86,1.289,87,1.195,88,1.696,89,0.41,90,1.762,91,1.195,92,1.089,93,1.195,94,1.823,95,1.173,96,1.289,97,1.195,98,1.195,99,1.173,100,1.173,101,1.173,102,1.289,103,1.195,104,1.665,105,1.173,106,1.289,107,1.195,108,1.173,109,1.13,110,1.289,111,1.289,112,0.005,113,0.005,118,0.194,119,0.616,120,1.357,121,0.388,124,0.718,126,0.461,127,0.356,128,0.483,130,0.84,131,0.793,137,1.265,192,1.826,237,0.388,245,0.63,255,5.17,256,0.616,257,0.497,268,0.423,286,2.434,300,3.033,301,1.707,329,2.169,330,2.719,331,1.785,332,1.507,338,0.86,587,5.315,610,2.496,612,4.347,613,2.792,621,2.347,622,1.507,623,1.195,632,2.347,633,1.941,650,1.538,653,2.229,654,2.523,655,2.169,656,1.507,668,1.831,675,1.866,703,1.672,711,6.676,712,2.512,713,4.189,714,3.676,715,4.145,716,3.349,717,3.033,718,2.792,719,3.179,720,1.265,721,3.179,722,1.448,723,3.349,724,1.265,725,3.179,726,1.265,727,3.179,728,3.179,729,5.32,730,3.179,731,3.179,732,3.349,733,3.349,734,3.349,735,3.179,736,4.345,737,3.179,738,3.179,739,3.179,740,4.863,741,1.507]],["title/classes/CurveChartInfo.html",[24,0.121,616,2.492]],["body/classes/CurveChartInfo.html",[3,0.102,4,0.057,9,0.04,20,0.204,22,0.007,23,0.162,24,0.163,32,0.69,39,1.52,42,0.672,89,0.295,112,0.004,113,0.004,118,0.218,119,0.505,120,1.465,121,0.517,124,0.84,126,0.761,127,0.416,128,0.797,129,1.088,131,1.25,209,1.208,237,0.732,240,1.357,245,0.68,250,1.438,256,0.505,257,0.635,268,0.614,301,0.698,338,0.87,391,1.839,469,1.034,471,1.36,489,1.098,491,0.373,494,1.835,540,1.301,543,1.866,544,1.866,545,1.797,546,1.866,547,1.866,548,2.368,549,2.816,550,2.57,551,2.816,552,2.816,558,1.418,562,1.141,564,1.687,574,0.698,600,3.894,601,4.815,614,0.809,615,0.766,616,2.816,617,3.353,618,2.816,664,1.874,668,2.11,675,1.531,685,1.216,687,2.577,690,2.911,694,1.966,697,1.966,700,1.966,720,1.992,722,1.096,724,2.086,726,2.086,742,2.036,743,4.576,744,5.238,745,2.877,746,4.287,747,5.238,748,3.537,749,3.537,750,3.537,751,3.537,752,3.537,753,3.256,754,3.537,755,3.537,756,4.899,757,3.537,758,3.537,759,3.537,760,3.537,761,3.537,762,3.256,763,3.537,764,3.537,765,3.537,766,3.537,767,3.537,768,3.537,769,1.291,770,0.922,771,2.113,772,3.511,773,3.511,774,4.398,775,4.398,776,1.414,777,1.764,778,1.599,779,0.84,780,2.036,781,1.239,782,2.113,783,1.213,784,1.972,785,1.656,786,1.656,787,3.256,788,2.199,789,2.199,790,2.199,791,2.199,792,2.199,793,2.199,794,1.842,795,2.036,796,2.728,797,2.199,798,3.256,799,2.199,800,3.256,801,2.199,802,1.558,803,1.293,804,3.878,805,2.199,806,1.842,807,2.199,808,2.199,809,2.199,810,0.976,811,3.256,812,1.266,813,0.78,814,2.199,815,1.957,816,2.748,817,2.199,818,2.199,819,4.398,820,2.199,821,2.199,822,4.576,823,2.199,824,2.199,825,2.199,826,2.199,827,2.199,828,2.199,829,2.199,830,2.199,831,2.199,832,2.199,833,1.966,834,3.256,835,3.256,836,3.256,837,3.256,838,3.256,839,2.945,840,3.256,841,4.437,842,4.576,843,2.036,844,4.287,845,4.287,846,2.199,847,2.199,848,2.036,849,2.199,850,2.199,851,2.199,852,2.036,853,1.382,854,1.642,855,1.382,856,3.256,857,3.878,858,3.878,859,2.199,860,3.256,861,3.256,862,3.256,863,1.351,864,1.787,865,1.787,866,0.824,867,1.787,868,1.787,869,1.351,870,2.199,871,2.199,872,2.199,873,2.646,874,2.199,875,1.351,876,2.646,877,1.483,878,1.351,879,3.256,880,1.736,881,1.034,882,2.199,883,1.034,884,2.199,885,1.266,886,2.199]],["title/interfaces/CurveChartInfoStorageObject.html",[491,0.235,756,2.668]],["body/interfaces/CurveChartInfoStorageObject.html",[3,0.111,4,0.064,9,0.045,20,0.219,22,0.007,23,0.167,24,0.175,39,1.608,42,0.757,89,0.322,112,0.004,113,0.004,118,0.237,119,0.55,120,1.418,121,0.33,127,0.356,129,1.082,131,1.311,209,1.293,240,1.374,245,0.659,250,1.499,257,0.621,268,0.61,301,0.786,338,0.913,391,1.901,471,1.127,489,1.105,491,0.392,494,2.001,540,1.191,541,1.259,543,1.078,544,1.078,545,1.038,546,1.078,547,1.078,558,1.078,574,0.786,600,4.059,601,4.873,614,0.911,615,0.862,616,2.141,617,3.589,618,3.07,664,2.044,668,2.213,675,1.669,685,1.286,687,2.725,690,3.174,694,2.214,697,2.214,700,2.214,720,2.175,724,2.175,726,2.175,742,2.293,743,4.995,745,2.232,746,2.476,753,2.476,756,4.763,762,2.476,769,1.407,770,1.038,771,2.38,772,3.683,773,3.683,774,4.613,775,4.613,776,1.593,777,1.865,778,1.801,779,0.946,780,2.293,781,1.395,782,2.38,783,1.366,784,2.111,785,1.806,786,1.806,787,3.551,788,2.476,789,2.476,790,2.476,791,2.476,792,2.476,793,2.476,794,2.074,795,2.293,796,2.974,797,2.476,798,3.551,799,2.476,800,3.551,801,2.476,802,1.755,803,1.456,804,4.151,805,2.476,806,2.074,807,2.476,808,2.476,809,2.476,810,1.099,811,3.551,812,1.425,813,0.878,814,2.476,815,2.134,816,2.942,817,2.476,818,2.476,819,4.613,820,2.476,821,2.476,822,4.8,823,2.476,824,2.476,825,2.476,826,2.476,827,2.476,828,2.476,829,2.476,830,2.476,831,2.476,832,2.476,833,2.214,834,3.551,835,3.551,836,3.551,837,3.551,838,3.551,839,3.07,840,3.551,841,4.625,842,4.8,843,2.293,844,4.534,845,4.534,846,2.476,847,2.476,848,2.293,849,2.476,850,2.476,851,2.476,852,2.293,853,1.557,854,1.849,855,1.557,856,3.551,857,4.151,858,4.151,859,2.476,860,3.551,861,3.551,862,3.551,863,1.522,864,2.012,865,2.012,866,0.928,867,2.012,868,2.012,869,1.522,870,2.476,871,2.476,872,2.476,873,2.885,874,2.476,875,1.522,876,2.885,877,1.67,878,1.522,879,3.551,880,1.954,881,1.164,882,2.476,883,1.164,884,2.476,885,1.425,886,2.476]],["title/components/CurveComponent.html",[0,0.395,44,1.164]],["body/components/CurveComponent.html",[0,0.699,1,1.183,2,1.739,3,0.091,4,0.076,5,1.3,6,1.3,7,1.3,8,1.3,9,0.054,11,2.188,12,1.276,13,1.3,14,2.088,15,2.125,16,1.365,18,1.365,20,0.269,21,0.685,22,0.007,23,0.091,24,0.123,26,0.983,27,1.772,28,1.772,29,1.3,30,2.165,31,1.3,32,0.736,33,1.3,34,1.206,35,1.3,36,1.183,37,1.3,38,1.183,39,1.974,40,1.3,41,1.206,42,1.702,43,2.498,44,1.971,45,1.3,46,1.206,47,2.338,48,1.183,49,2.266,50,1.206,51,1.905,52,1.183,53,1.3,54,1.206,55,1.183,56,1.183,57,1.3,58,1.183,59,1.229,60,1.914,61,1.3,62,1.162,63,1.002,64,1.3,65,1.206,66,1.252,67,1.206,68,1.3,69,1.206,70,1.971,71,1.183,72,1.3,73,1.206,74,1.206,75,1.183,76,1.183,77,1.3,78,1.206,79,2.046,80,1.183,81,1.3,82,1.206,83,1.206,84,1.183,85,1.183,86,1.3,87,1.206,88,1.706,89,0.443,90,1.772,91,1.206,92,1.099,93,1.206,94,1.829,95,1.183,96,1.3,97,1.206,98,1.206,99,1.183,100,1.183,101,1.183,102,1.3,103,1.206,104,1.672,105,1.183,106,1.3,107,1.206,108,1.183,109,1.554,110,1.3,111,1.3,112,0.005,113,0.005,118,0.196,121,0.391,124,0.59,126,0.634,127,0.314,128,0.664,129,0.533,137,1.276,145,2.249,181,3.065,197,2.63,237,0.391,256,0.619,257,0.439,268,0.312,326,1.977,327,2.313,328,3.839,330,2.401,332,1.521,612,4.363,613,2.816,633,1.952,671,2.713,685,0.831,703,1.687,741,1.521,777,2.101,783,1.617,815,3.241,816,2.831,881,1.378,883,1.378,887,4.189,888,7.31,889,6.425,890,4.371,891,4.972,892,3.966,893,4.972,894,4.69,895,4.714,896,4.371,897,6.976,898,4.714,899,2.931,900,3.207,901,3.995,902,2.713,903,3.207,904,3.378,905,5.34,906,2.026,907,3.207,908,2.931,909,3.207,910,3.207,911,3.207,912,3.207,913,2.761,914,3.207,915,4.17,916,2.534,917,5.095,918,3.059,919,3.207,920,3.207,921,2.931,922,4.17]],["title/classes/CurveData.html",[24,0.121,923,3.779]],["body/classes/CurveData.html",[3,0.103,4,0.058,9,0.041,20,0.207,22,0.007,23,0.163,24,0.165,32,0.696,39,1.536,42,0.687,89,0.356,112,0.004,113,0.004,118,0.29,119,0.513,120,1.342,121,0.524,124,0.796,126,0.767,127,0.392,128,0.803,129,1.055,131,1.319,209,1.223,237,0.698,240,1.36,245,0.688,250,1.449,256,0.513,257,0.626,268,0.616,301,0.713,338,1.048,391,1.921,469,1.057,471,1.375,489,1.147,491,0.377,494,1.865,540,1.11,543,0.979,544,0.979,545,0.942,546,0.979,547,0.979,558,0.979,574,1.05,600,4.479,601,4.843,614,0.827,615,0.783,616,1.944,617,3.396,618,2.862,664,1.905,668,2.129,675,1.556,685,1.229,687,2.604,690,2.958,694,2.01,697,2.01,700,2.01,720,1.71,724,1.71,726,1.71,742,2.081,743,3.928,745,2.08,746,2.248,753,2.248,756,4.472,762,2.248,769,1.312,770,0.942,771,2.16,772,3.543,773,3.543,774,4.438,775,4.438,776,1.446,777,1.782,778,1.635,779,0.858,780,2.081,781,1.267,782,2.16,783,1.24,784,1.997,785,1.683,786,1.683,787,3.309,788,2.248,789,2.248,790,2.248,791,2.248,792,2.248,793,2.248,794,1.883,795,2.081,796,2.772,797,2.248,798,3.309,799,2.248,800,3.309,801,2.248,802,3.07,803,1.322,804,3.928,805,2.248,806,1.883,807,2.248,808,2.248,809,2.248,810,1.468,811,3.309,812,1.905,813,1.638,814,2.248,815,2.604,816,3.273,817,3.309,818,2.248,819,4.438,820,2.248,821,2.248,822,4.618,823,2.248,824,2.248,825,2.248,826,2.248,827,2.248,828,2.248,829,2.248,830,2.248,831,2.248,832,2.248,833,2.01,834,3.309,835,3.309,836,3.309,837,3.309,838,3.309,839,2.968,840,3.309,841,4.472,842,4.618,843,2.081,844,4.332,845,4.332,846,2.248,847,2.248,848,2.081,849,2.248,850,2.248,851,2.248,852,2.081,853,1.413,854,1.678,855,1.413,856,3.309,857,3.928,858,3.928,859,2.248,860,3.309,861,3.309,862,3.309,863,1.382,864,1.827,865,1.827,866,1.624,867,1.827,868,1.827,869,1.382,870,2.248,871,2.248,872,2.248,873,2.689,874,2.248,875,1.382,876,2.689,877,1.516,878,1.382,879,3.309,880,1.774,881,1.057,882,2.248,883,1.057,884,2.248,885,1.294,886,2.248,906,2.287,923,2.948,924,5.323,925,2.261,926,2.862,927,2.471,928,5.323,929,5.323,930,5.323,931,3.616,932,3.616,933,3.616,934,3.616,935,3.616,936,3.616,937,1.143,938,3.616,939,3.616,940,3.616,941,3.616,942,3.616,943,1.883]],["title/interfaces/CurveDataDict.html",[491,0.235,600,2.342]],["body/interfaces/CurveDataDict.html",[3,0.109,4,0.063,9,0.044,20,0.216,22,0.007,23,0.166,24,0.173,39,1.59,42,0.739,89,0.317,112,0.004,113,0.004,118,0.233,119,0.541,120,1.399,121,0.322,127,0.374,128,0.824,129,1.057,131,1.298,209,1.275,240,1.371,245,0.65,250,1.487,257,0.618,268,0.608,301,0.767,338,0.904,391,2.081,471,1.107,489,1.145,491,0.388,494,1.966,540,1.171,541,1.229,543,1.052,544,1.052,545,1.013,546,1.052,547,1.052,558,1.052,574,0.767,600,4.151,601,4.841,614,0.889,615,0.841,616,2.09,617,3.541,618,3.017,664,2.008,668,2.411,675,1.64,685,1.272,687,2.695,690,3.119,694,2.161,697,2.161,700,2.161,720,1.783,724,1.783,726,1.783,742,2.238,743,4.095,745,2.193,746,2.417,753,2.417,756,4.587,762,2.417,769,1.383,770,1.013,771,2.323,772,4.012,773,4.012,774,5.025,775,5.025,776,1.555,777,1.845,778,1.758,779,0.923,780,2.238,781,1.362,782,2.323,783,1.334,784,2.082,785,1.774,786,1.774,787,3.489,788,2.417,789,2.417,790,2.417,791,2.417,792,2.417,793,2.417,794,2.025,795,2.238,796,2.923,797,2.417,798,3.489,799,2.417,800,3.489,801,2.417,802,1.713,803,1.422,804,4.095,805,2.417,806,2.025,807,2.417,808,2.417,809,2.417,810,1.073,811,3.489,812,1.391,813,0.857,814,2.417,815,2.097,816,2.902,817,2.417,818,2.417,819,4.569,820,2.417,821,2.417,822,4.755,823,2.417,824,2.417,825,2.417,826,2.417,827,2.417,828,2.417,829,2.417,830,2.417,831,2.417,832,2.417,833,2.161,834,3.489,835,3.489,836,3.489,837,3.489,838,3.489,839,3.045,840,3.489,841,4.587,842,4.755,843,2.238,844,4.484,845,4.484,846,2.417,847,2.417,848,2.238,849,2.417,850,2.417,851,2.417,852,2.238,853,1.519,854,1.805,855,1.519,856,3.489,857,4.095,858,4.095,859,2.417,860,3.489,861,3.489,862,3.489,863,1.486,864,1.964,865,1.964,866,0.906,867,1.964,868,1.964,869,1.486,870,2.417,871,2.417,872,2.417,873,2.836,874,2.417,875,1.486,876,2.836,877,1.63,878,1.486,879,3.489,880,1.908,881,1.136,882,2.417,883,1.136,884,2.417,885,1.391,886,2.417]],["title/components/CurveHighChartComponent.html",[0,0.395,46,1.186]],["body/components/CurveHighChartComponent.html",[0,0.545,1,0.929,2,1.465,3,0.072,4,0.06,5,1.021,6,1.021,7,1.021,8,1.021,9,0.042,12,1.002,13,1.021,14,2.06,15,2.097,16,1.15,18,1.15,20,0.246,21,0.538,22,0.007,23,0.072,24,0.097,26,1.335,27,1.494,28,1.494,29,1.021,30,1.944,31,1.021,32,0.672,33,1.021,34,0.947,35,1.021,36,0.929,37,1.021,38,0.929,39,1.922,40,1.021,41,0.947,42,1.657,43,2.373,44,0.929,45,1.021,46,1.802,47,2.161,48,0.929,49,2.068,50,0.947,51,1.669,52,0.929,53,1.021,54,0.947,55,0.929,56,0.929,57,1.021,58,0.929,59,0.964,60,0.862,61,1.021,62,0.912,63,0.786,64,1.021,65,0.947,66,0.983,67,0.947,68,1.021,69,0.947,70,1.769,71,0.929,72,1.021,73,0.947,74,0.947,75,0.929,76,0.929,77,1.021,78,0.947,79,1.837,80,0.929,81,1.021,82,0.947,83,0.947,84,0.929,85,0.929,86,1.021,87,0.947,88,1.438,89,0.305,90,1.494,91,0.947,92,0.862,93,0.947,94,1.642,95,0.929,96,1.021,97,0.947,98,0.947,99,0.929,100,0.929,101,0.929,102,1.021,103,0.947,104,1.465,105,0.929,106,1.021,107,0.947,108,0.929,109,0.895,110,1.021,111,1.021,112,0.004,113,0.004,118,0.154,119,0.522,121,0.307,124,0.845,126,0.632,127,0.405,128,0.662,130,1.347,131,1.273,137,1.002,237,0.723,240,0.931,245,0.534,256,0.522,257,0.638,268,0.599,301,1.068,326,1.552,327,1.816,332,1.194,391,0.831,489,0.851,516,5.416,540,1.129,548,3.186,572,3.686,587,6.001,589,2.814,597,3.288,609,2.393,610,2.196,612,3.916,613,2.211,614,0.847,621,2.149,622,1.194,623,0.947,624,4.414,625,5.22,632,2.065,633,1.645,648,2.521,649,1.673,650,2.32,651,2.327,653,1.765,654,2.273,655,1.718,656,1.194,662,3.696,664,2.521,669,2.211,683,3.366,685,0.652,703,1.324,706,3.288,710,4.811,741,1.747,833,2.057,839,2.069,848,3.117,913,1.59,944,7.538,945,3.009,946,4.355,947,4.355,948,3.655,949,4.355,950,3.683,951,5.415,952,6.403,953,7.047,954,4.355,955,4.355,956,4.793,957,6.403,958,3.683,959,4.031,960,3.701,961,2.657,962,3.701,963,3.701,964,3.701,965,3.701,966,3.701,967,3.701,968,3.701,969,3.701,970,3.701,971,3.701,972,3.701,973,3.683,974,3.683,975,3.514,976,3.514,977,3.683,978,4.793,979,3.514,980,3.366,981,3.683,982,3.683,983,3.701,984,3.701,985,3.701,986,2.211,987,3.683,988,3.683,989,3.683,990,2.517,991,3.701,992,2.517,993,3.701,994,4.793,995,2.402,996,5.415,997,2.652,998,3.701,999,3.701,1000,2.652,1001,2.652,1002,2.652,1003,3.701,1004,3.288,1005,3.288,1006,3.288,1007,2.211]],["title/classes/CurveImpl.html",[24,0.121,843,2.668]],["body/classes/CurveImpl.html",[3,0.106,4,0.06,9,0.043,20,0.211,22,0.007,23,0.164,24,0.169,32,0.577,39,1.561,42,0.711,89,0.308,112,0.004,113,0.004,118,0.227,119,0.526,120,1.369,121,0.31,124,0.779,126,0.636,127,0.368,128,0.666,129,1.052,130,0.98,131,1.378,209,1.247,237,0.673,240,1.365,245,0.699,250,1.467,256,0.526,257,0.629,268,0.613,301,0.738,338,1.003,391,1.869,469,1.093,471,1.397,489,1.118,491,0.382,494,1.911,540,1.138,543,1.012,544,1.012,545,1.846,546,1.012,547,1.012,550,2.677,558,1.012,574,0.738,600,3.972,601,5.03,614,0.855,615,0.809,616,2.01,617,3.463,618,3.463,664,2.305,668,2.158,675,1.594,685,1.249,687,2.646,690,3.58,694,2.078,697,2.078,700,2.078,720,1.743,724,1.743,726,1.743,742,2.152,743,4.005,745,2.943,746,2.325,753,2.325,756,4.526,762,2.325,769,1.344,770,0.975,771,2.234,772,3.592,773,3.592,774,4.499,775,4.499,776,1.495,777,1.811,778,1.69,779,0.888,780,2.152,781,1.31,782,2.234,783,1.283,784,2.036,785,1.725,786,1.725,787,3.392,788,2.325,789,2.325,790,2.325,791,2.325,792,2.325,793,2.325,794,1.947,795,2.152,796,2.841,797,2.325,798,3.392,799,2.325,800,3.392,801,2.325,802,1.647,803,1.367,804,4.005,805,2.325,806,1.947,807,2.325,808,2.325,809,2.325,810,1.031,811,3.392,812,1.338,813,0.824,814,2.325,815,2.039,816,2.838,817,2.325,818,2.325,819,4.499,820,2.325,821,2.325,822,4.681,823,2.325,824,2.325,825,2.325,826,2.325,827,2.325,828,2.325,829,2.325,830,2.325,831,2.325,832,2.325,833,2.078,834,3.392,835,3.392,836,4.681,837,4.005,838,4.681,839,3.295,840,4.005,841,5.03,842,5.173,843,3.14,844,4.402,845,4.402,846,2.325,847,2.325,848,2.152,849,3.392,850,2.325,851,2.325,852,2.152,853,1.461,854,1.736,855,1.461,856,3.392,857,4.005,858,4.005,859,2.325,860,3.392,861,3.392,862,3.392,863,1.429,864,1.889,865,1.889,866,0.871,867,1.889,868,1.889,869,1.429,870,2.325,871,2.325,872,2.325,873,2.756,874,2.325,875,1.429,876,2.756,877,1.568,878,1.429,879,3.392,880,1.835,881,1.093,882,2.325,883,1.093,884,2.325,885,1.338,886,2.325,1008,4.848,1009,4.848,1010,3.739,1011,3.739,1012,3.739,1013,3.739,1014,3.739,1015,3.739,1016,3.739,1017,3.739,1018,3.739]],["title/interfaces/CurveInterface.html",[491,0.235,618,2.492]],["body/interfaces/CurveInterface.html",[3,0.11,4,0.063,9,0.045,20,0.217,22,0.007,23,0.166,24,0.173,32,0.506,39,1.597,42,0.746,89,0.319,112,0.004,113,0.004,118,0.235,120,1.407,121,0.326,124,0.665,126,0.558,127,0.276,128,0.584,129,1.058,131,1.303,209,1.282,237,0.601,240,1.372,245,0.653,250,1.491,256,0.545,257,0.619,268,0.615,301,0.774,338,0.907,391,1.894,471,1.115,489,1.12,491,0.389,494,1.98,540,1.179,541,1.241,543,1.062,544,1.062,545,1.023,546,1.062,547,1.062,558,1.062,574,0.774,600,4.039,601,4.944,614,0.898,615,0.849,616,2.11,617,3.56,618,3.56,664,2.022,668,2.2,675,1.651,685,1.277,687,2.707,690,3.141,694,2.181,697,2.181,700,2.181,720,1.792,724,1.792,726,1.792,742,2.259,743,4.117,745,2.208,746,2.44,753,2.44,756,4.602,762,2.44,769,1.392,770,1.023,771,2.345,772,3.662,773,3.662,774,4.586,775,4.586,776,1.57,777,1.853,778,1.774,779,0.932,780,2.259,781,1.375,782,2.345,783,1.346,784,2.093,785,1.787,786,1.787,787,3.513,788,2.44,789,2.44,790,2.44,791,2.44,792,2.44,793,2.44,794,2.044,795,2.259,796,2.943,797,2.44,798,3.513,799,2.44,800,3.513,801,2.44,802,1.729,803,1.435,804,4.117,805,2.44,806,2.044,807,2.44,808,2.44,809,2.44,810,1.083,811,3.513,812,1.404,813,0.865,814,2.44,815,2.112,816,2.917,817,2.44,818,2.44,819,4.586,820,2.44,821,2.44,822,4.772,823,2.44,824,2.44,825,2.44,826,2.44,827,2.44,828,2.44,829,2.44,830,2.44,831,2.44,832,2.44,833,2.181,834,3.513,835,3.513,836,4.772,837,4.117,838,4.772,839,3.281,840,4.117,841,4.602,842,4.97,843,2.259,844,4.503,845,4.503,846,2.44,847,2.44,848,2.259,849,2.44,850,2.44,851,2.44,852,2.259,853,1.534,854,1.822,855,1.534,856,3.513,857,4.117,858,4.117,859,2.44,860,3.513,861,3.513,862,3.513,863,1.5,864,1.983,865,1.983,866,0.915,867,1.983,868,1.983,869,1.5,870,2.44,871,2.44,872,2.44,873,2.855,874,2.44,875,1.5,876,2.855,877,1.646,878,1.5,879,3.513,880,1.926,881,1.147,882,2.44,883,1.147,884,2.44,885,1.404,886,2.44,1008,5.022,1009,5.022,1019,3.925,1020,3.925,1021,3.925,1022,3.925]],["title/interfaces/CurveInterfaceStorageObject.html",[491,0.235,841,2.668]],["body/interfaces/CurveInterfaceStorageObject.html",[3,0.112,4,0.065,9,0.046,20,0.22,22,0.007,23,0.167,24,0.176,39,1.615,42,0.765,89,0.325,112,0.004,113,0.004,118,0.239,119,0.555,120,1.427,121,0.334,127,0.281,129,1.061,131,1.316,209,1.3,240,1.376,245,0.663,250,1.504,257,0.622,268,0.611,301,0.794,338,0.916,391,1.906,471,1.135,489,1.107,491,0.393,494,2.016,540,1.2,541,1.272,543,1.089,544,1.089,545,1.049,546,1.089,547,1.089,558,1.089,574,0.794,600,4.073,601,5.107,614,0.921,615,0.871,616,2.164,617,4.167,618,3.093,664,2.059,668,2.222,675,1.681,685,1.292,687,2.738,690,3.198,694,2.237,697,2.237,700,2.237,720,1.818,724,1.818,726,1.818,742,2.317,743,4.175,745,2.249,746,2.502,753,2.502,756,4.641,762,2.502,769,1.418,770,1.049,771,2.405,772,3.698,773,3.698,774,4.631,775,4.631,776,1.61,777,1.874,778,1.82,779,0.956,780,2.317,781,1.41,782,2.405,783,1.381,784,2.123,785,1.819,786,1.819,787,3.577,788,2.502,789,2.502,790,2.502,791,2.502,792,2.502,793,2.502,794,2.096,795,2.317,796,2.997,797,2.502,798,3.577,799,2.502,800,3.577,801,2.502,802,1.773,803,1.472,804,4.175,805,2.502,806,2.096,807,2.502,808,2.502,809,2.502,810,1.11,811,3.577,812,1.44,813,0.887,814,2.502,815,2.15,816,2.959,817,2.502,818,2.502,819,4.631,820,2.502,821,2.502,822,4.819,823,2.502,824,2.502,825,2.502,826,2.502,827,2.502,828,2.502,829,2.502,830,2.502,831,2.502,832,2.502,833,2.237,834,3.577,835,3.577,836,3.577,837,3.577,838,3.577,839,3.243,840,3.577,841,4.778,842,5.277,843,2.317,844,4.556,845,4.556,846,2.502,847,2.502,848,2.317,849,2.502,850,2.502,851,2.502,852,2.317,853,1.573,854,1.868,855,1.573,856,3.577,857,4.175,858,4.175,859,2.502,860,3.577,861,3.577,862,3.577,863,1.538,864,2.033,865,2.033,866,0.938,867,2.033,868,2.033,869,1.538,870,2.502,871,2.502,872,2.502,873,2.907,874,2.502,875,1.538,876,2.907,877,1.688,878,1.538,879,3.577,880,1.975,881,1.176,882,2.502,883,1.176,884,2.502,885,1.44,886,2.502]],["title/modules/CurveModule.html",[139,1.59,1023,3.153]],["body/modules/CurveModule.html",[3,0.108,4,0.09,9,0.064,11,2.585,20,0.319,21,0.809,22,0.007,23,0.108,24,0.146,26,1.162,38,2.231,39,1.849,41,2.273,42,1.364,44,2.394,46,2.273,48,2.231,60,1.672,63,1.183,65,2.273,66,1.479,89,0.405,92,1.672,112,0.005,113,0.005,139,2.724,141,2.518,142,2.585,143,3.412,144,2.585,145,3.788,146,3.412,157,3.423,158,2.454,159,2.585,161,3.084,162,3.084,164,4.541,168,6.377,169,4.949,181,2.657,185,3.463,186,5.457,187,3.639,188,4.541,189,6.377,190,3.615,191,4.288,192,2.177,195,2.901,196,3.738,197,2.28,330,2.081,331,2.128,516,3.206,588,4.235,612,4.938,613,3.328,711,4.541,892,4.489,901,3.463,902,3.206,944,4.541,948,2.454,1023,6.645,1024,4.949,1025,4.949,1026,4.949,1027,4.949,1028,4.949,1029,4.938,1030,4.938,1031,5.57,1032,6.377,1033,5.57,1034,4.882,1035,3.989,1036,4.882,1037,4.541,1038,4.882,1039,7.177,1040,4.235,1041,5.851,1042,4.658,1043,3.789,1044,7.177,1045,4.235,1046,3.789,1047,4.882,1048,2.454,1049,7.177,1050,7.177,1051,4.949,1052,4.541,1053,4.462,1054,3.463,1055,4.949,1056,7.177,1057,4.541,1058,4.882,1059,2.518,1060,3.328]],["title/classes/CurveStorage.html",[24,0.121,852,2.668]],["body/classes/CurveStorage.html",[3,0.121,4,0.057,9,0.04,20,0.204,22,0.007,23,0.162,24,0.163,32,0.617,39,1.758,42,0.995,89,0.389,112,0.004,113,0.004,118,0.218,119,0.504,120,1.325,121,0.434,124,0.83,126,0.68,127,0.416,128,0.713,129,1.056,130,1.12,131,1.39,209,1.207,237,0.694,240,1.357,245,0.68,250,1.706,256,0.504,257,0.643,268,0.616,301,0.697,338,0.87,391,1.839,469,1.033,471,1.033,489,1.084,491,0.391,494,1.834,540,1.092,543,0.957,544,0.957,545,0.921,546,0.957,547,0.957,558,0.957,574,0.697,600,4.414,601,4.714,614,0.809,615,0.765,616,1.9,617,3.352,618,2.814,664,1.873,668,2.109,675,1.53,685,1.215,687,2.576,690,2.909,694,1.965,697,1.965,700,1.965,720,1.687,724,1.687,726,1.687,742,2.035,743,3.876,745,2.046,746,2.198,753,2.198,756,5.029,762,2.198,769,1.536,770,0.921,771,2.112,772,3.51,773,3.51,774,4.396,775,4.396,776,1.414,777,1.763,778,1.598,779,0.839,780,2.035,781,1.238,782,2.112,783,1.213,784,1.971,785,1.655,786,1.655,787,3.255,788,2.198,789,2.198,790,2.198,791,2.198,792,2.198,793,2.198,794,1.841,795,2.035,796,2.726,797,2.198,798,3.255,799,2.198,800,3.255,801,2.198,802,1.557,803,1.292,804,3.876,805,2.198,806,1.841,807,2.198,808,2.198,809,2.198,810,0.975,811,3.255,812,1.265,813,0.779,814,2.198,815,1.956,816,2.747,817,2.198,818,2.198,819,4.396,820,2.198,821,2.198,822,4.575,823,2.198,824,2.198,825,2.198,826,2.198,827,2.198,828,2.198,829,2.198,830,2.198,831,2.198,832,2.198,833,1.965,834,3.255,835,3.255,836,3.255,837,3.255,838,3.255,839,2.944,840,3.255,841,4.814,842,4.575,843,2.035,844,4.285,845,4.285,846,2.198,847,2.198,848,2.035,849,2.198,850,2.198,851,2.198,852,3.013,853,2.437,854,2.894,855,2.437,856,4.575,857,4.958,858,4.958,859,3.255,860,3.255,861,3.255,862,3.255,863,2.634,864,1.786,865,1.786,866,1.606,867,1.786,868,1.786,869,2.634,870,2.198,871,2.198,872,3.255,873,2.645,874,2.198,875,2,876,2.645,877,1.482,878,2,879,3.255,880,1.734,881,2.014,882,2.198,883,2.014,884,2.198,885,2.466,886,2.198,1061,3.398,1062,3.398,1063,3.398,1064,5.235,1065,3.535,1066,3.535,1067,3.535,1068,3.535,1069,3.535,1070,3.535,1071,3.535,1072,3.535,1073,3.535,1074,3.535,1075,3.535,1076,3.535,1077,3.535,1078,3.535,1079,3.535,1080,2.294]],["title/classes/CurveTable.html",[24,0.121,1081,3.525]],["body/classes/CurveTable.html",[0,0.61,3,0.108,4,0.116,9,0.064,14,1.182,15,1.204,16,1.182,18,1.182,20,0.296,21,0.809,22,0.007,23,0.108,24,0.188,32,0.498,39,1.848,48,1.397,89,0.314,109,1.919,112,0.005,113,0.005,118,0.33,119,0.691,121,0.461,124,0.815,126,0.549,127,0.35,128,0.575,129,1.023,130,1,131,0.945,137,1.506,237,0.658,240,1.042,245,0.783,250,1.48,256,0.691,257,0.617,268,0.555,301,1.654,338,0.938,469,1.626,489,1.012,491,0.282,587,5.865,590,4.488,595,3.623,600,3.623,609,2.68,610,2.46,612,3.986,613,3.324,619,3.987,621,2.275,622,1.795,623,1.423,632,1.795,634,2.811,648,1.991,650,2.361,651,3.082,654,1.795,655,2.583,656,1.795,813,1.848,866,1.954,943,3.735,1045,6.872,1048,2.451,1081,6.035,1082,2.898,1083,3.894,1084,4.266,1085,4.366,1086,4.366,1087,5.454,1088,4.266,1089,4.536,1090,4.536,1091,4.536,1092,4.113,1093,4.231,1094,2.991,1095,2.991,1096,2.991,1097,2.991,1098,2.391,1099,4.944,1100,4.944,1101,5.454,1102,4.944,1103,3.855,1104,6.373,1105,4.944,1106,3.855,1107,4.944,1108,5.454,1109,2.811,1110,4.944,1111,2.991,1112,4.944,1113,2.991,1114,4.944,1115,2.991,1116,2.991,1117,2.991]],["title/components/CurveTableComponent.html",[0,0.395,48,1.164]],["body/components/CurveTableComponent.html",[0,0.584,1,1.049,2,1.599,3,0.081,4,0.096,5,1.153,6,1.153,7,1.153,8,1.153,9,0.048,12,1.131,13,1.153,14,2.075,15,2.112,16,1.255,18,1.255,20,0.275,21,0.607,22,0.007,23,0.081,24,0.155,26,0.871,27,1.63,28,1.63,29,1.153,30,2.056,31,1.153,32,0.614,33,1.153,34,1.069,35,1.153,36,1.049,37,1.153,38,1.049,39,2.006,40,1.153,41,1.069,42,1.551,43,2.438,44,1.049,45,1.153,46,1.069,47,2.252,48,1.871,49,2.169,50,1.069,51,1.787,52,1.049,53,1.153,54,1.069,55,1.049,56,1.049,57,1.153,58,1.049,59,1.089,60,0.974,61,1.153,62,1.03,63,0.888,64,1.153,65,1.069,66,1.11,67,1.069,68,1.153,69,1.069,70,1.871,71,1.049,72,1.153,73,1.069,74,1.069,75,1.049,76,1.049,77,1.153,78,1.069,79,1.942,80,1.049,81,1.153,82,1.069,83,1.069,84,1.049,85,1.049,86,1.153,87,1.069,88,1.569,89,0.333,90,1.63,91,1.069,92,0.974,93,1.069,94,1.737,95,1.049,96,1.153,97,1.069,98,1.069,99,1.049,100,1.049,101,1.049,102,1.153,103,1.069,104,1.568,105,1.049,106,1.153,107,1.069,108,1.049,109,2.073,110,1.153,111,1.153,112,0.004,113,0.004,118,0.285,119,0.569,121,0.347,124,0.82,126,0.412,127,0.399,128,0.432,129,0.89,130,1.467,131,1.386,137,1.131,237,0.49,240,0.859,245,0.677,250,0.779,256,0.569,257,0.537,268,0.521,301,1.551,326,1.752,332,1.348,338,1.03,489,0.9,491,0.212,587,5.856,590,3.972,595,2.111,600,2.985,609,2.562,610,2.352,612,4.142,613,2.496,619,2.995,621,2.254,622,1.348,623,1.069,632,2.211,634,2.111,648,2.667,650,1.945,651,2.539,654,2.404,655,1.94,656,1.348,741,1.906,813,1.643,866,0.974,913,1.795,943,3.077,1045,6.862,1048,1.841,1081,5.213,1082,2.176,1083,2.899,1084,2.246,1085,2.176,1086,2.176,1088,3.177,1092,3.364,1094,2.246,1095,3.177,1096,3.685,1097,3.685,1098,2.946,1099,5.251,1100,5.251,1101,4.493,1102,3.713,1103,3.177,1104,5.251,1105,3.713,1106,3.177,1107,3.713,1108,4.493,1109,3.463,1110,3.713,1111,3.685,1112,3.713,1113,3.685,1114,3.713,1115,2.246,1116,2.246,1117,2.246,1118,4.179,1119,4.493,1120,3.406,1121,3.713,1122,2.995,1123,2.842,1124,2.842,1125,4.179,1126,4.179,1127,4.179,1128,2.842,1129,2.842,1130,2.842]],["title/classes/DefaultAppearanceSettings.html",[24,0.121,284,2.492]],["body/classes/DefaultAppearanceSettings.html",[3,0.095,4,0.079,9,0.056,22,0.007,23,0.18,24,0.196,112,0.005,113,0.005,118,0.275,119,0.637,124,0.765,127,0.407,129,1.056,130,1.64,131,1.415,240,1.313,250,1.233,257,0.451,263,4.77,264,4.299,265,4.299,271,3.805,274,3.805,277,3.805,280,3.805,283,2.83,284,3.554,316,4.643,338,1.096,361,5.132,364,4.299,369,4.299,373,4.299,386,2.643,415,4.643,416,5.181,417,3.057,469,1.437,470,2.938,471,1.906,472,3.191,473,3.191,477,4.291,478,4.11,479,4.291,480,4.291,483,3.191,485,4.299,486,3.191,488,3.191,489,0.594,491,0.405,492,4.185,493,6.165,494,2.919,495,4.966,496,2.938,497,5.181,498,2.938,499,3.191,500,3.191,501,3.057,502,3.057,503,2.938,504,4.966,505,3.057,506,3.057,507,4.643,508,4.151,509,4.462,510,4.643,511,3.057,512,4.11,513,4.11,514,3.191,515,3.191,516,3.805,517,4.11,518,3.191,519,3.191,520,4.847,521,3.191,522,3.191,523,3.191,524,3.191,525,3.191,526,4.847,527,3.191,528,3.191,529,3.191,530,4.847,531,3.191,532,3.191,533,3.191,534,3.191,535,3.191,536,3.191,537,3.057,538,4.291,539,3.191,1131,4.917,1132,4.917,1133,4.917,1134,4.917,1135,4.917]],["title/components/DualChartFormComponent.html",[0,0.395,50,1.186]],["body/components/DualChartFormComponent.html",[0,0.621,1,1.178,2,1.734,3,0.091,4,0.076,5,1.295,6,1.295,7,1.295,8,1.295,9,0.054,12,1.27,13,1.295,14,2.087,15,2.125,16,1.361,18,1.361,20,0.257,21,0.682,22,0.007,23,0.091,24,0.123,26,0.979,27,1.767,28,1.767,29,1.295,30,2.162,31,1.295,32,0.653,33,1.295,34,1.201,35,1.295,36,1.178,37,1.295,38,1.178,39,1.727,40,1.295,41,1.201,42,1.826,43,2.496,44,1.178,45,1.295,46,1.201,47,2.335,48,1.178,49,2.262,50,2.004,51,2.358,52,1.178,53,1.295,54,1.201,55,1.178,56,1.178,57,1.295,58,1.178,59,1.223,60,1.094,61,1.295,62,1.156,63,0.997,64,1.295,65,1.201,66,1.247,67,1.201,68,1.295,69,1.201,70,1.967,71,1.178,72,1.295,73,1.201,74,1.201,75,1.178,76,1.178,77,1.295,78,1.201,79,2.042,80,1.178,81,1.295,82,1.201,83,1.201,84,1.178,85,1.178,86,1.295,87,1.201,88,1.701,89,0.411,90,1.767,91,1.201,92,1.094,93,1.201,94,1.826,95,1.178,96,1.295,97,1.201,98,1.201,99,1.178,100,1.178,101,1.178,102,1.295,103,1.201,104,1.668,105,1.178,106,1.295,107,1.201,108,1.178,109,1.135,110,1.295,111,1.295,112,0.005,113,0.005,118,0.195,119,0.617,120,1.361,121,0.389,124,0.719,126,0.463,127,0.356,128,0.485,130,0.843,131,0.797,137,1.27,192,1.834,237,0.389,255,5.176,256,0.617,257,0.498,268,0.424,286,2.444,300,3.046,301,1.709,329,2.179,330,2.725,331,1.793,332,1.514,338,0.862,621,2.351,622,1.514,623,1.201,632,2.352,633,1.947,650,1.545,653,2.239,654,2.527,655,2.179,656,1.514,668,1.836,675,1.872,703,1.679,712,2.523,713,4.198,714,3.687,715,4.158,716,3.364,717,3.046,718,2.804,719,3.193,720,1.27,721,3.193,722,1.455,723,3.364,724,1.27,725,3.193,726,1.27,727,3.193,728,3.193,729,5.33,730,3.193,731,3.193,732,3.364,733,3.364,734,3.364,735,3.193,736,4.357,737,3.193,738,3.193,739,3.193,740,4.871,741,1.514,1136,5.878,1137,6.686,1138,4.51,1139,3.193]],["title/classes/DualChartInfo.html",[24,0.121,1140,2.882]],["body/classes/DualChartInfo.html",[3,0.083,4,0.069,9,0.049,20,0.227,22,0.007,23,0.146,24,0.157,32,0.71,89,0.339,112,0.004,113,0.004,118,0.25,119,0.579,120,1.475,121,0.624,124,0.857,126,0.783,127,0.428,128,0.82,129,1.093,209,0.828,237,0.751,240,1.336,245,0.685,256,0.579,257,0.623,268,0.588,338,0.71,391,1.936,469,1.249,471,1.485,489,1.072,491,0.305,540,1.448,543,2.038,544,2.038,545,1.962,546,2.038,547,2.038,548,2.715,549,3.228,550,2.946,551,3.228,552,3.228,558,1.625,560,1.898,562,1.379,564,2.039,565,1.466,567,1.498,568,1.466,570,1.498,574,1.185,607,1.563,614,0.978,615,0.925,668,1.225,675,1.249,685,1.224,720,2.226,722,2.549,724,2.226,726,2.226,769,1.053,770,1.114,772,2.864,773,2.864,777,1.093,779,1.015,781,1.498,783,1.466,784,2.38,785,2.194,786,2.194,794,2.226,796,3.127,803,2.195,806,3.127,810,1.179,812,1.53,813,1.53,916,2.298,925,1.53,937,1.352,1140,3.733,1141,2.908,1142,6.168,1143,4.047,1144,6.005,1145,4.275,1146,4.275,1147,4.275,1148,4.275,1149,4.275,1150,4.275,1151,4.275,1152,5.251,1153,4.275,1154,4.275,1155,4.275,1156,4.275,1157,4.275,1158,4.275,1159,4.275,1160,4.275,1161,4.862,1162,2.774,1163,6.086,1164,2.658,1165,2.594,1166,3.064,1167,3.064,1168,4.303,1169,3.064,1170,3.064,1171,4.303,1172,3.064,1173,3.064,1174,4.303,1175,3.064,1176,3.064,1177,4.303,1178,3.064,1179,3.064,1180,3.064,1181,2.039,1182,3.064,1183,3.064,1184,2.908,1185,3.064,1186,3.064,1187,2.774,1188,3.064,1189,3.064,1190,3.064,1191,3.064,1192,2.908,1193,3.064,1194,3.064,1195,3.064,1196,1.53,1197,3.064,1198,6.053,1199,6.053,1200,2.774,1201,3.064,1202,3.064,1203,3.064,1204,2.774,1205,3.064,1206,3.064,1207,3.064,1208,2.16,1209,3.064,1210,2.774,1211,3.064,1212,3.064,1213,3.064,1214,4.303,1215,2.646,1216,3.064,1217,4.303,1218,1.598,1219,1.598,1220,3.064,1221,2.594,1222,3.064,1223,3.064,1224,3.064,1225,3.064,1226,3.064,1227,3.064,1228,3.064,1229,3.064,1230,3.064]],["title/interfaces/DualChartInfoStorageObject.html",[491,0.235,1152,2.882]],["body/interfaces/DualChartInfoStorageObject.html",[3,0.094,4,0.079,9,0.056,20,0.244,22,0.007,23,0.154,24,0.172,89,0.275,112,0.005,113,0.005,118,0.273,119,0.633,120,1.396,121,0.545,127,0.389,129,1.091,209,0.943,240,1.362,245,0.648,257,0.567,268,0.55,338,0.777,391,1.998,471,1.296,489,1.1,491,0.333,540,1.37,541,1.54,543,1.319,544,1.319,545,1.27,546,1.319,547,1.319,558,1.319,560,1.54,574,1.296,607,1.781,614,1.115,615,1.054,668,1.397,675,1.424,685,1.311,720,2.368,722,2.711,724,2.368,726,2.368,769,1.201,770,1.27,772,3.134,773,3.134,777,1.246,779,1.157,781,1.707,783,1.671,784,2.516,785,2.35,786,2.35,794,2.537,796,3.422,803,2.402,806,3.422,810,1.344,812,1.743,813,1.639,916,2.619,925,1.743,937,1.54,1140,3.029,1141,3.314,1143,2.619,1152,4.947,1161,5.036,1162,3.162,1163,6.179,1164,3.029,1165,2.778,1166,3.492,1167,3.492,1168,4.709,1169,3.492,1170,3.492,1171,4.709,1172,3.492,1173,3.492,1174,4.709,1175,3.492,1176,3.492,1177,4.709,1178,3.492,1179,3.492,1180,3.492,1181,2.324,1182,3.492,1183,3.492,1184,3.314,1185,3.492,1186,3.492,1187,3.162,1188,3.492,1189,3.492,1190,3.492,1191,3.492,1192,3.314,1193,3.492,1194,3.492,1195,3.492,1196,1.743,1197,3.492,1198,6.27,1199,6.27,1200,3.162,1201,3.492,1202,3.492,1203,3.492,1204,3.162,1205,3.492,1206,3.492,1207,3.492,1208,2.462,1209,3.492,1210,3.162,1211,3.492,1212,3.492,1213,3.492,1214,4.709,1215,2.895,1216,3.492,1217,4.709,1218,1.821,1219,1.821,1220,3.492,1221,2.778,1222,3.492,1223,3.492,1224,3.492,1225,3.492,1226,3.492,1227,3.492,1228,3.492,1229,3.492,1230,3.492]],["title/components/DualComponent.html",[0,0.395,52,1.164]],["body/components/DualComponent.html",[0,0.626,1,1.196,2,1.752,3,0.092,4,0.077,5,1.314,6,1.314,7,1.314,8,1.314,9,0.054,12,1.29,13,1.314,14,2.089,15,2.126,16,1.375,18,1.375,20,0.27,21,0.692,22,0.007,23,0.092,24,0.125,26,0.994,27,1.785,28,1.785,29,1.314,30,2.175,31,1.314,32,0.738,33,1.314,34,1.219,35,1.314,36,1.196,37,1.314,38,1.196,39,1.738,40,1.314,41,1.219,42,1.705,43,2.503,44,1.196,45,1.314,46,1.219,47,2.346,48,1.196,49,2.274,50,1.219,51,2.216,52,1.979,53,1.314,54,1.219,55,1.196,56,1.196,57,1.314,58,1.196,59,1.242,60,1.921,61,1.314,62,1.174,63,1.012,64,1.314,65,1.219,66,1.265,67,1.219,68,1.314,69,1.219,70,1.979,71,1.196,72,1.314,73,1.219,74,1.219,75,1.196,76,1.196,77,1.314,78,1.219,79,2.055,80,1.196,81,1.314,82,1.219,83,1.219,84,1.196,85,1.196,86,1.314,87,1.219,88,1.719,89,0.445,90,1.785,91,1.219,92,1.11,93,1.219,94,1.837,95,1.196,96,1.314,97,1.219,98,1.219,99,1.196,100,1.196,101,1.196,102,1.314,103,1.219,104,1.681,105,1.196,106,1.314,107,1.219,108,1.196,109,1.565,110,1.314,111,1.314,112,0.005,113,0.005,118,0.198,121,0.395,124,0.594,126,0.639,127,0.316,128,0.669,129,0.539,137,1.29,181,3.087,197,2.649,237,0.395,256,0.624,257,0.442,268,0.316,326,1.998,327,2.338,328,3.866,330,2.418,332,1.537,633,1.966,671,2.742,685,0.84,703,1.705,741,1.537,777,2.109,783,1.634,815,3.25,816,2.851,881,1.392,883,1.392,890,4.402,891,4.999,892,3.983,893,4.999,894,4.711,896,4.402,899,2.962,900,3.241,901,4.023,902,2.742,903,3.241,904,3.414,905,5.363,906,2.047,907,3.241,908,2.962,909,3.241,910,3.241,911,3.241,912,3.241,913,2.781,914,3.241,915,4.2,916,2.561,917,5.117,918,3.092,919,3.241,920,3.241,921,2.962,922,4.2,1138,4.538,1139,3.241,1231,4.234,1232,7.35,1233,6.472,1234,4.764,1235,4.902,1236,4.764]],["title/classes/DualData.html",[24,0.121,1164,2.882]],["body/classes/DualData.html",[3,0.089,4,0.074,9,0.052,20,0.236,22,0.007,23,0.15,24,0.165,32,0.645,89,0.355,112,0.005,113,0.005,118,0.322,119,0.607,120,1.338,121,0.643,124,0.805,126,0.71,127,0.379,128,0.744,129,1.057,209,0.886,237,0.697,240,1.35,245,0.71,256,0.607,257,0.587,268,0.581,338,0.744,391,1.969,469,1.338,471,1.53,489,1.142,491,0.319,540,1.313,543,1.239,544,1.239,545,1.193,546,1.239,547,1.239,558,1.239,560,1.447,574,1.42,607,2.632,614,1.047,615,0.991,668,1.312,675,1.338,685,1.269,720,2.099,722,2.403,724,2.099,726,2.099,769,1.128,770,1.193,772,3.004,773,3.004,777,1.171,779,1.087,781,1.603,783,1.57,784,2.451,785,2.276,786,2.276,794,2.384,796,3.28,802,3.172,803,2.302,806,3.28,810,1.737,812,2.253,813,1.897,866,1.678,906,2.706,916,2.461,925,2.774,926,3.385,927,2.923,937,1.991,1140,2.846,1141,3.114,1143,2.461,1152,4.475,1161,5.277,1162,2.971,1163,6.136,1164,3.915,1165,2.69,1166,3.28,1167,3.28,1168,4.513,1169,3.28,1170,3.28,1171,4.513,1172,3.28,1173,3.28,1174,4.513,1175,3.28,1176,3.28,1177,4.513,1178,3.28,1179,3.28,1180,3.28,1181,2.184,1182,3.28,1183,3.28,1184,3.114,1185,3.28,1186,3.28,1187,2.971,1188,3.28,1189,3.28,1190,3.28,1191,3.28,1192,3.114,1193,3.28,1194,3.28,1195,3.28,1196,1.638,1197,3.28,1198,6.168,1199,6.168,1200,2.971,1201,3.28,1202,3.28,1203,3.28,1204,2.971,1205,3.28,1206,3.28,1207,3.28,1208,2.313,1209,3.28,1210,2.971,1211,3.28,1212,3.28,1213,3.28,1214,4.513,1215,2.774,1216,3.28,1217,4.513,1218,1.711,1219,1.711,1220,3.28,1221,2.69,1222,3.28,1223,3.28,1224,3.28,1225,3.28,1226,3.28,1227,3.28,1228,3.28,1229,3.28,1230,3.28,1237,6.297,1238,4.578,1239,4.578,1240,4.578,1241,4.578,1242,4.578,1243,4.578]],["title/interfaces/DualDataDict.html",[491,0.235,1161,2.668]],["body/interfaces/DualDataDict.html",[3,0.093,4,0.078,9,0.055,20,0.242,22,0.007,23,0.153,24,0.17,89,0.271,112,0.005,113,0.005,118,0.27,119,0.627,120,1.382,121,0.54,127,0.386,129,1.063,209,0.93,240,1.359,245,0.642,257,0.564,268,0.548,338,0.769,391,2.119,471,1.284,489,1.148,491,0.33,540,1.357,541,1.518,543,1.3,544,1.3,545,1.252,546,1.3,547,1.3,558,1.3,560,1.518,574,1.284,607,1.756,614,1.099,615,1.039,668,1.377,675,1.403,685,1.301,720,2.141,722,2.452,724,2.141,726,2.141,769,1.183,770,1.252,772,3.944,773,3.944,777,1.228,779,1.14,781,1.682,783,1.647,784,2.501,785,2.333,786,2.333,794,2.501,796,3.389,803,2.379,806,3.389,810,1.325,812,1.718,813,1.627,916,2.582,925,1.718,937,1.518,1140,2.986,1141,3.267,1143,2.582,1152,4.588,1161,5.104,1162,5.134,1163,6.22,1164,2.986,1165,2.758,1166,3.442,1167,3.442,1168,4.663,1169,3.442,1170,3.442,1171,4.663,1172,3.442,1173,3.442,1174,4.663,1175,3.442,1176,3.442,1177,4.663,1178,3.442,1179,3.442,1180,3.442,1181,2.291,1182,3.442,1183,3.442,1184,3.267,1185,3.442,1186,3.442,1187,3.117,1188,3.442,1189,3.442,1190,3.442,1191,3.442,1192,3.267,1193,3.442,1194,3.442,1195,3.442,1196,1.718,1197,3.442,1198,6.247,1199,6.247,1200,3.117,1201,3.442,1202,3.442,1203,3.442,1204,3.117,1205,3.442,1206,3.442,1207,3.442,1208,2.426,1209,3.442,1210,3.117,1211,3.442,1212,3.442,1213,3.442,1214,4.663,1215,2.867,1216,3.442,1217,4.663,1218,1.795,1219,1.795,1220,3.442,1221,2.758,1222,3.442,1223,3.442,1224,3.442,1225,3.442,1226,3.442,1227,3.442,1228,3.442,1229,3.442,1230,3.442]],["title/components/DualHighchartComponent.html",[0,0.395,54,1.186]],["body/components/DualHighchartComponent.html",[0,0.567,1,0.996,2,1.541,3,0.077,4,0.064,5,1.094,6,1.094,7,1.094,8,1.094,9,0.045,12,1.073,13,1.094,14,2.069,15,2.106,16,1.209,18,1.209,20,0.238,21,0.576,22,0.007,23,0.077,24,0.104,26,1.389,27,1.57,28,1.57,29,1.094,30,2.008,31,1.094,32,0.652,33,1.094,34,1.014,35,1.094,36,0.996,37,1.094,38,0.996,39,1.604,40,1.094,41,1.014,42,1.681,43,2.41,44,0.996,45,1.094,46,1.014,47,2.213,48,0.996,49,2.126,50,1.014,51,2.277,52,0.996,53,1.094,54,1.862,55,0.996,56,0.996,57,1.094,58,0.996,59,1.034,60,0.924,61,1.094,62,0.977,63,0.842,64,1.094,65,1.014,66,1.053,67,1.014,68,1.094,69,1.014,70,1.827,71,0.996,72,1.094,73,1.014,74,1.014,75,0.996,76,0.996,77,1.094,78,1.014,79,1.897,80,0.996,81,1.094,82,1.014,83,1.014,84,0.996,85,0.996,86,1.094,87,1.014,88,1.512,89,0.321,90,1.57,91,1.014,92,0.924,93,1.014,94,1.696,95,0.996,96,1.094,97,1.014,98,1.014,99,0.996,100,0.996,101,0.996,102,1.094,103,1.014,104,1.524,105,0.996,106,1.094,107,1.014,108,0.996,109,0.959,110,1.094,111,1.094,112,0.004,113,0.004,118,0.165,119,0.549,121,0.329,124,0.849,126,0.562,127,0.404,128,0.589,129,0.449,130,1.385,131,1.308,137,1.073,209,1.102,237,0.725,245,0.562,256,0.549,257,0.604,268,0.592,301,1.123,326,1.663,327,1.946,332,1.279,489,0.479,548,3.011,572,3.834,602,3.015,609,2.489,610,2.285,621,2.209,622,1.279,623,1.014,632,2.148,633,1.73,648,2.604,649,1.793,650,1.874,651,2.446,653,1.892,654,2.348,655,1.841,656,1.279,662,3.447,664,2.871,683,3.539,685,0.699,703,1.419,741,1.836,839,2.175,913,1.704,927,3.378,945,3.164,946,4.53,947,4.53,948,3.725,949,4.53,950,3.872,954,4.53,955,4.53,956,4.53,958,3.872,959,4.143,961,2.793,973,3.872,974,3.872,975,3.695,976,3.695,977,3.872,978,4.951,979,3.695,980,3.539,981,3.872,982,3.872,986,2.369,987,3.872,988,3.872,989,3.872,990,2.697,992,2.697,994,3.872,1007,2.369,1136,6.658,1138,4.189,1139,2.697,1244,7.573,1245,2.697,1246,4.773,1247,4.08,1248,5.534,1249,4.773,1250,4.329,1251,3.015,1252,3.966,1253,3.524,1254,3.966,1255,3.966,1256,3.524,1257,3.966,1258,3.966,1259,3.966,1260,3.966,1261,2.842,1262,2.842,1263,2.842,1264,3.015,1265,3.015,1266,3.015,1267,2.842,1268,2.842,1269,3.233,1270,3.015]],["title/modules/DualModule.html",[139,1.59,1271,3.153]],["body/modules/DualModule.html",[3,0.12,4,0.1,9,0.071,20,0.316,21,0.903,22,0.007,23,0.12,24,0.163,26,1.296,42,1.462,50,2.337,51,2.177,52,2.294,54,2.337,55,2.294,63,1.32,89,0.434,92,1.792,112,0.006,113,0.006,139,2.132,141,2.809,142,2.885,143,3.589,144,2.885,145,3.984,146,2.67,157,3.669,158,2.738,159,2.885,161,3.305,162,3.305,185,4.781,187,3.225,191,4.595,192,2.429,330,2.322,331,2.374,948,2.738,1029,5.078,1030,5.078,1034,5.231,1035,4.274,1036,5.231,1038,4.227,1042,4.991,1043,5.231,1046,4.227,1047,5.231,1048,2.738,1058,5.231,1059,2.809,1137,5.066,1138,5.26,1139,4.227,1244,5.066,1271,6.631,1272,5.522,1273,6.215,1274,5.522,1275,5.522,1276,6.215,1277,6.27,1278,4.033,1279,6.215,1280,4.726,1281,4.454]],["title/injectables/DualService.html",[334,2.042,1138,2.668]],["body/injectables/DualService.html",[3,0.08,4,0.067,9,0.047,20,0.267,21,0.603,22,0.007,23,0.08,24,0.109,32,0.779,89,0.442,112,0.004,113,0.004,118,0.284,119,0.566,120,0.881,121,0.566,124,0.882,126,0.859,127,0.454,128,0.9,129,1.072,130,1.504,131,1.421,237,0.781,240,1.265,245,0.409,256,0.566,257,0.638,268,0.621,301,1.74,334,2.589,335,2.387,338,0.962,489,1.097,491,0.377,540,1.746,543,2.01,544,2.01,545,1.936,546,2.01,547,2.01,548,2.657,549,3.159,550,2.883,551,3.159,552,3.159,558,1.591,560,1.858,562,1.896,564,1.978,565,2.016,567,1.452,568,2.016,570,1.452,574,1.465,614,0.949,615,0.897,623,1.061,802,3.272,810,1.621,812,2.103,813,1.886,866,1.731,881,2.17,883,2.17,906,2.525,926,3.159,927,2.728,937,1.858,945,4.357,948,2.589,959,4.501,1138,3.383,1140,5.318,1142,6.599,1152,5.062,1161,4.687,1164,5.318,1282,3.684,1283,4.892,1284,3.929,1285,6.505,1286,5.322,1287,4.212,1288,5.877,1289,4.146,1290,6.599,1291,4.146,1292,4.146,1293,4.146,1294,4.146,1295,4.146,1296,4.146,1297,4.146,1298,4.146,1299,4.146,1300,4.146,1301,4.146,1302,4.146,1303,4.146,1304,4.146,1305,4.146,1306,4.469,1307,4.146,1308,4.146,1309,4.146,1310,4.146,1311,6.391,1312,4.212,1313,4.146,1314,5.619,1315,5.877,1316,4.146,1317,3.383,1318,4.146,1319,5.877,1320,4.146,1321,4.146,1322,4.146,1323,4.146,1324,3.38,1325,4.146,1326,4.146,1327,4.146,1328,4.146,1329,4.146,1330,4.146,1331,4.146,1332,4.146,1333,4.146,1334,8.143,1335,8.143,1336,4.146,1337,7.84,1338,4.146,1339,4.146,1340,4.146,1341,4.146,1342,4.146,1343,7.427,1344,4.146,1345,4.146,1346,4.146,1347,4.146,1348,4.146,1349,4.469]],["title/classes/DualStorage.html",[24,0.121,1285,3.525]],["body/classes/DualStorage.html",[3,0.087,4,0.073,9,0.051,20,0.233,22,0.007,23,0.149,24,0.163,32,0.638,89,0.35,112,0.005,113,0.005,118,0.258,119,0.598,120,1.319,121,0.515,124,0.832,126,0.703,127,0.394,128,0.736,129,1.063,130,1.116,131,1.054,209,0.869,237,0.735,240,1.346,245,0.703,256,0.598,257,0.605,268,0.6,338,0.734,391,1.959,469,1.311,471,1.225,489,1.083,491,0.315,540,1.485,543,1.214,544,1.214,545,1.169,546,1.214,547,1.214,558,1.214,560,1.418,574,1.225,607,1.64,614,1.026,615,0.971,668,1.286,675,1.311,685,1.256,720,2.081,722,2.382,724,2.081,726,2.081,769,1.53,770,1.169,772,2.962,773,2.962,777,1.147,779,1.065,781,1.571,783,1.539,784,2.43,785,2.252,786,2.252,794,2.336,796,3.234,803,2.27,806,3.234,810,1.237,812,1.605,813,1.57,853,2.427,855,2.427,863,2.721,866,1.66,869,2.721,875,1.714,878,1.714,881,2.081,883,2.081,885,2.548,916,2.411,925,1.605,937,1.418,1061,4.03,1062,4.03,1063,4.03,1080,2.911,1140,3.861,1141,3.051,1143,2.411,1152,5.191,1161,5.161,1162,2.911,1163,6.122,1164,3.861,1165,2.661,1166,3.215,1167,3.215,1168,4.45,1169,3.215,1170,3.215,1171,4.45,1172,3.215,1173,3.215,1174,4.45,1175,3.215,1176,3.215,1177,4.45,1178,3.215,1179,3.215,1180,3.215,1181,2.14,1182,3.215,1183,3.215,1184,3.051,1185,3.215,1186,3.215,1187,2.911,1188,3.215,1189,3.215,1190,3.215,1191,3.215,1192,3.051,1193,3.215,1194,3.215,1195,3.215,1196,1.605,1197,3.215,1198,6.134,1199,6.134,1200,2.911,1201,3.215,1202,3.215,1203,3.215,1204,2.911,1205,3.215,1206,3.215,1207,3.215,1208,2.266,1209,3.215,1210,2.911,1211,3.215,1212,3.215,1213,3.215,1214,4.45,1215,2.736,1216,3.215,1217,4.45,1218,1.676,1219,1.676,1220,3.215,1221,2.661,1222,3.215,1223,3.215,1224,3.215,1225,3.215,1226,3.215,1227,3.215,1228,3.215,1229,3.215,1230,3.215,1285,3.411,1350,4.486,1351,4.486,1352,4.486,1353,4.486,1354,4.486,1355,4.486,1356,4.486,1357,4.486,1358,2.082,1359,4.486,1360,4.486,1361,4.486]],["title/classes/DualTable.html",[24,0.121,1362,3.525]],["body/classes/DualTable.html",[0,0.595,3,0.104,4,0.113,9,0.061,14,1.136,15,1.157,16,1.136,18,1.136,20,0.293,21,0.777,22,0.007,23,0.104,24,0.183,32,0.479,51,2.029,55,1.343,70,1.343,109,1.883,112,0.005,113,0.005,118,0.324,119,0.674,121,0.444,124,0.807,126,0.528,127,0.341,128,0.553,129,1.013,130,0.961,131,0.908,137,1.447,237,0.646,240,1.2,245,0.69,250,1.453,256,0.674,257,0.62,268,0.547,301,1.629,338,0.92,469,1.563,489,1.035,491,0.271,590,4.44,595,3.531,621,2.232,622,1.725,623,1.368,632,1.725,633,1.625,634,2.702,648,1.914,649,2.418,650,2.301,651,3.003,653,2.551,654,1.725,656,1.725,772,2.551,773,2.551,779,1.27,795,4.023,813,1.82,815,1.998,866,1.924,943,3.64,1048,2.356,1082,2.785,1083,3.821,1084,4.186,1085,4.3,1086,4.3,1088,4.186,1092,4.052,1093,5.315,1094,2.875,1095,2.875,1096,2.875,1097,2.875,1098,2.298,1101,4.067,1103,3.758,1106,3.758,1109,2.702,1111,2.875,1113,2.875,1115,2.875,1116,2.875,1117,2.875,1136,6.416,1138,4.023,1139,3.638,1161,4.932,1162,3.471,1163,3.471,1269,5.698,1280,6.808,1324,4.36,1362,5.921,1363,5.348,1364,5.348,1365,5.348,1366,5.348,1367,4.752,1368,3.325,1369,3.078,1370,2.551,1371,3.078,1372,3.078,1373,3.078,1374,3.078,1375,2.785,1376,3.078,1377,6.211,1378,4.752,1379,6.211,1380,4.752,1381,6.211,1382,4.752,1383,4.752]],["title/components/DualTableComponent.html",[0,0.395,55,1.164]],["body/components/DualTableComponent.html",[0,0.568,1,0.998,2,1.543,3,0.077,4,0.092,5,1.096,6,1.096,7,1.096,8,1.096,9,0.045,12,1.076,13,1.096,14,2.069,15,2.106,16,1.211,18,1.211,20,0.271,21,0.578,22,0.007,23,0.077,24,0.149,26,0.829,27,1.573,28,1.573,29,1.096,30,2.01,31,1.096,32,0.652,33,1.096,34,1.017,35,1.096,36,0.998,37,1.096,38,0.998,39,1.606,40,1.096,41,1.017,42,1.526,43,2.412,44,0.998,45,1.096,46,1.017,47,2.215,48,0.998,49,2.128,50,1.017,51,2.278,52,0.998,53,1.096,54,1.017,55,1.829,56,0.998,57,1.096,58,0.998,59,1.036,60,0.926,61,1.096,62,0.979,63,0.844,64,1.096,65,1.017,66,1.056,67,1.017,68,1.096,69,1.017,70,2.016,71,0.998,72,1.096,73,1.017,74,1.017,75,0.998,76,0.998,77,1.096,78,1.017,79,1.899,80,0.998,81,1.096,82,1.017,83,1.017,84,0.998,85,0.998,86,1.096,87,1.017,88,1.514,89,0.322,90,1.573,91,1.017,92,0.926,93,1.017,94,1.698,95,0.998,96,1.096,97,1.017,98,1.017,99,0.998,100,0.998,101,0.998,102,1.096,103,1.017,104,1.525,105,0.998,106,1.096,107,1.017,108,0.998,109,2.046,110,1.096,111,1.096,112,0.004,113,0.004,118,0.277,119,0.549,121,0.33,124,0.821,126,0.563,127,0.404,128,0.59,129,0.908,130,1.486,131,1.404,137,1.076,237,0.553,240,1.059,245,0.392,250,0.741,256,0.549,257,0.577,268,0.511,301,1.522,326,1.666,332,1.282,338,1.018,489,0.999,491,0.202,590,3.897,595,2.008,621,2.211,622,1.282,623,1.017,632,2.151,633,1.733,634,2.008,648,2.607,649,1.797,650,1.877,651,2.45,653,1.896,654,2.35,656,1.282,703,1.422,741,1.839,772,1.896,773,1.896,779,0.944,795,3.282,813,1.606,815,1.485,866,0.926,913,1.708,943,2.97,1048,1.751,1082,2.07,1083,2.798,1084,2.137,1085,2.07,1086,2.07,1088,3.065,1092,3.272,1094,2.137,1095,3.065,1096,3.585,1097,3.585,1098,2.865,1101,3.022,1103,3.065,1106,3.065,1109,3.369,1111,3.585,1113,3.585,1115,2.137,1116,2.137,1117,2.137,1122,2.848,1123,2.703,1124,2.703,1128,3.879,1129,2.703,1130,2.703,1136,6.464,1138,4.194,1139,2.703,1161,4.959,1162,2.579,1163,2.579,1269,5.436,1280,6.859,1324,3.24,1362,5.071,1367,5.067,1368,2.471,1369,2.288,1370,1.896,1371,2.288,1372,2.288,1373,2.288,1374,3.282,1375,3.473,1376,2.288,1377,5.067,1378,3.532,1379,5.067,1380,3.532,1381,5.067,1382,3.532,1383,3.532,1384,3.701,1385,3.975,1386,3.532,1387,3.975,1388,3.24,1389,3.532,1390,3.975,1391,3.24]],["title/interfaces/HeaderRequirement.html",[491,0.235,1392,3.008]],["body/interfaces/HeaderRequirement.html",[3,0.066,4,0.055,9,0.108,20,0.112,22,0.007,23,0.141,24,0.16,89,0.499,94,0.795,112,0.004,113,0.004,118,0.142,119,0.492,127,0.249,128,0.527,129,1.103,131,1.291,209,1.771,230,4.212,236,4.785,240,1.329,245,0.503,250,1.139,257,0.519,268,0.48,301,1.555,331,1.949,338,0.899,489,0.952,491,0.259,492,3.651,494,1.787,541,1.079,621,2.576,623,0.873,630,2.122,662,3.116,664,2.821,685,0.602,776,2.04,777,1.305,816,1.504,839,3.013,1284,4.379,1317,1.965,1392,5.558,1393,2.215,1394,2.322,1395,4.73,1396,4.154,1397,4.154,1398,4.397,1399,3.655,1400,4.609,1401,3.31,1402,4.855,1403,6.284,1404,4.154,1405,5.197,1406,6.216,1407,5.92,1408,4.377,1409,3.655,1410,5.809,1411,5.197,1412,4.609,1413,3.47,1414,6.284,1415,4.377,1416,3.797,1417,5.65,1418,4.377,1419,3.47,1420,5.197,1421,5.452,1422,4.855,1423,2.122,1424,2.446,1425,2.446,1426,2.446,1427,3.963,1428,2.446,1429,3.655,1430,3.31,1431,3.31,1432,4.377,1433,3.655,1434,2.446,1435,3.655,1436,4.377,1437,2.446,1438,3.655,1439,4.855,1440,3.655,1441,3.655,1442,2.446,1443,2.446,1444,2.446,1445,3.655,1446,2.446,1447,2.322,1448,4.377,1449,4.377,1450,2.446,1451,2.446,1452,2.446,1453,2.446,1454,2.322,1455,2.322,1456,2.322,1457,3.558,1458,3.655,1459,2.446,1460,3.655,1461,2.446,1462,4.377,1463,2.446,1464,2.215,1465,2.446,1466,2.446,1467,2.446,1468,2.446,1469,2.446,1470,2.446,1471,2.446,1472,2.446,1473,3.655,1474,3.655,1475,2.446,1476,3.655,1477,2.446,1478,2.446,1479,2.446,1480,2.446,1481,2.446,1482,2.446,1483,3.655,1484,4.377,1485,2.446,1486,3.655,1487,2.446,1488,2.446,1489,2.446,1490,2.446,1491,2.446,1492,2.446,1493,2.446,1494,2.446,1495,2.446,1496,4.377,1497,2.446,1498,2.446,1499,3.655,1500,2.446,1501,2.446,1502,2.446,1503,2.446,1504,2.446,1505,2.446,1506,2.446,1507,2.446,1508,2.446,1509,2.446,1510,2.446,1511,2.446,1512,2.446]],["title/components/HomeComponent.html",[0,0.395,56,1.164]],["body/components/HomeComponent.html",[0,0.673,1,1.387,2,1.932,3,0.107,4,0.089,5,1.524,6,1.524,7,1.524,8,1.524,9,0.063,11,2.564,12,2.141,13,1.524,14,2.103,15,2.141,16,1.517,18,1.517,20,0.181,21,0.803,22,0.007,23,0.107,24,0.145,25,5.428,26,1.152,27,1.969,28,1.969,29,1.524,30,2.306,31,1.524,32,0.639,33,1.524,34,1.413,35,1.524,36,1.387,37,1.524,38,1.387,39,1.843,40,1.524,41,1.413,42,1.685,43,2.57,44,1.387,45,1.524,46,1.413,47,2.446,48,1.387,49,2.388,50,1.413,51,2.061,52,1.387,53,1.524,54,1.413,55,1.387,56,2.099,57,1.524,58,1.387,59,1.44,60,1.287,61,1.524,62,1.361,63,1.174,64,1.524,65,1.413,66,1.467,67,1.413,68,1.524,69,1.413,70,2.099,71,1.387,72,1.524,73,1.413,74,1.413,75,1.387,76,1.387,77,1.524,78,1.413,79,2.179,80,1.387,81,1.524,82,1.413,83,1.413,84,1.387,85,1.387,86,1.524,87,1.413,88,1.896,89,0.312,90,1.969,91,1.413,92,1.287,93,1.413,94,1.948,95,1.387,96,1.524,97,1.413,98,1.413,99,1.387,100,1.387,101,1.387,102,1.524,103,1.413,104,1.809,105,1.387,106,1.524,107,1.413,108,1.387,109,1.336,110,1.524,111,1.524,112,0.005,113,0.005,135,5.428,212,7.879,1513,4.909,1514,7.909,1515,7.139]],["title/injectables/HonorCodeChartService.html",[334,2.042,894,2.769]],["body/injectables/HonorCodeChartService.html",[3,0.097,4,0.081,9,0.076,11,3.101,20,0.288,21,0.726,22,0.007,23,0.097,24,0.131,32,0.75,42,1.722,60,2.191,112,0.005,113,0.005,115,3.798,118,0.208,121,0.624,124,0.791,126,0.827,127,0.43,128,0.866,129,1.101,181,4.2,209,1.622,236,3.479,237,0.695,240,1.094,256,0.644,257,0.588,268,0.571,334,2.944,335,2.875,338,1.019,388,4.072,573,4.336,611,4.072,669,3.992,685,1.327,894,3.992,948,2.944,959,4.635,980,3.105,1052,5.447,1516,6.31,1517,4.438,1518,6.681,1519,6.681,1520,6.681,1521,6.681,1522,6.681,1523,6.681,1524,6.681,1525,4.995,1526,6.681,1527,7.874,1528,4.995,1529,9.154,1530,6.681,1531,4.995,1532,6.681,1533,4.995,1534,5.937,1535,6.69,1536,8.038,1537,6.681,1538,7.529,1539,6.681,1540,6.681,1541,6.681,1542,4.995,1543,6.681,1544,4.995,1545,4.072,1546,4.072,1547,4.072,1548,5.447,1549,4.995,1550,4.995,1551,4.438,1552,4.995,1553,4.995,1554,4.995,1555,4.995,1556,4.995,1557,4.995,1558,4.995,1559,4.995,1560,4.995,1561,4.995,1562,6.681,1563,4.995,1564,6.681,1565,4.995,1566,6.681,1567,4.995,1568,4.995,1569,4.995,1570,4.995,1571,4.995,1572,5.447,1573,4.995,1574,4.995,1575,4.995,1576,4.995,1577,4.995,1578,4.438,1579,4.995,1580,6.681,1581,6.681,1582,6.681,1583,5.937,1584,6.681,1585,4.995,1586,4.995,1587,4.995,1588,4.995]],["title/components/HonorCodePopupComponent.html",[0,0.395,58,1.164]],["body/components/HonorCodePopupComponent.html",[0,0.611,1,1.143,2,1.698,3,0.088,4,0.074,5,1.256,6,1.256,7,1.256,8,1.256,9,0.052,11,2.114,12,1.233,13,1.256,14,2.084,15,2.122,16,1.333,18,1.333,20,0.235,21,0.662,22,0.007,23,0.088,24,0.119,26,0.95,27,1.731,28,1.731,29,1.256,30,2.134,31,1.256,32,0.727,33,1.256,34,1.165,35,1.256,36,1.143,37,1.256,38,1.143,39,1.706,40,1.256,41,1.165,42,1.594,43,2.481,44,1.143,45,1.256,46,1.165,47,2.314,48,1.143,49,2.239,50,1.165,51,1.871,52,1.143,53,1.256,54,1.165,55,1.143,56,1.143,57,1.256,58,1.942,59,2.344,60,2.228,61,1.256,62,1.122,63,0.968,64,1.256,65,1.165,66,1.21,67,1.165,68,1.256,69,1.165,70,1.942,71,1.143,72,1.256,73,1.165,74,1.165,75,1.143,76,1.143,77,1.256,78,1.165,79,2.016,80,1.143,81,1.256,82,1.165,83,1.165,84,1.143,85,1.143,86,1.256,87,1.165,88,1.667,89,0.257,90,1.731,91,1.165,92,1.891,93,1.165,94,1.803,95,1.143,96,1.256,97,1.165,98,1.165,99,1.143,100,1.143,101,1.143,102,1.256,103,1.165,104,1.642,105,1.143,106,1.256,107,1.165,108,1.143,109,1.101,110,1.256,111,1.256,112,0.005,113,0.005,118,0.189,119,0.605,121,0.378,124,0.745,126,0.449,127,0.307,128,0.471,137,1.233,153,4.268,181,4.001,187,1.91,192,1.78,237,0.595,245,0.619,246,4.883,255,4.289,256,0.605,257,0.311,259,5.263,268,0.512,287,3.098,303,3.098,329,2.114,330,2.891,331,1.74,332,1.469,338,0.991,674,3.264,685,0.803,741,1.469,1060,2.721,1516,6.011,1527,5.853,1589,4.047,1590,7.737,1591,5.576,1592,5.576,1593,6.275,1594,6.275,1595,6.275,1596,6.275,1597,7.18,1598,6.275,1599,7.737,1600,8.389,1601,4.554,1602,8.389,1603,8.595,1604,6.275,1605,4.554,1606,4.554,1607,4.554,1608,4.554,1609,3.713,1610,4.554,1611,4.554,1612,4.554,1613,4.554,1614,4.554,1615,6.275,1616,5.116,1617,5.576,1618,5.576,1619,6.275,1620,5.576,1621,6.275,1622,6.275,1623,5.576,1624,5.576,1625,4.772,1626,3.901,1627,6.275,1628,4.554,1629,3.264]],["title/modules/HonorCodePopupModule.html",[139,1.59,153,3.153]],["body/modules/HonorCodePopupModule.html",[3,0.131,4,0.109,9,0.077,11,3.131,20,0.311,21,0.98,22,0.007,23,0.131,24,0.177,26,1.407,58,2.385,59,1.758,60,2.017,63,1.433,112,0.006,113,0.006,139,2.97,141,3.049,142,3.131,143,3.72,144,3.753,145,3.218,146,2.898,153,6.338,157,3.856,158,2.972,159,3.131,161,2.898,162,3.474,181,3.218,185,4.194,186,6.147,187,3.63,191,4.83,192,2.636,195,3.513,196,4.21,197,2.761,1032,7.184,1042,5.247,1053,5.026,1054,4.194,1060,4.03,1516,4.834,1609,5.499,1630,5.994,1631,5.994,1632,6.745,1633,5.994,1634,8.085,1635,4.588,1636,5.994,1637,6.745,1638,8.085]],["title/injectables/HonorCodePopupService.html",[334,2.042,892,2.342]],["body/injectables/HonorCodePopupService.html",[3,0.112,4,0.094,9,0.066,20,0.294,21,0.841,22,0.007,23,0.112,24,0.152,32,0.724,58,1.452,59,1.508,60,2.262,112,0.005,113,0.005,118,0.24,119,0.709,121,0.48,124,0.847,126,0.798,127,0.429,128,0.836,137,1.566,181,4.444,187,2.426,197,3.01,209,1.12,237,0.728,240,0.841,256,0.709,257,0.613,268,0.611,332,1.866,334,3.24,335,3.33,338,1.136,623,1.48,662,2.486,664,2.07,892,3.715,1040,4.4,1311,6.59,1516,6.677,1609,6.59,1633,5.141,1639,5.141,1640,6.59,1641,6.59,1642,8.506,1643,8.506,1644,8.506,1645,7.354,1646,7.354,1647,5.786,1648,8.506,1649,7.354,1650,5.786,1651,5.786,1652,5.786,1653,7.354,1654,7.316,1655,5.786,1656,7.354,1657,7.316,1658,5.786,1659,6.59,1660,5.786,1661,5.786,1662,4.717,1663,5.786,1664,5.786,1665,7.354,1666,5.786,1667,5.786,1668,5.786,1669,5.786]],["title/components/InputSliderComponent.html",[0,0.395,62,1.142]],["body/components/InputSliderComponent.html",[0,0.511,1,0.832,2,1.35,3,0.064,4,0.054,5,0.914,6,0.914,7,0.914,8,0.914,9,0.038,12,0.897,13,0.914,14,2.046,15,2.077,16,1.06,18,1.06,20,0.219,21,0.481,22,0.007,23,0.097,24,0.131,26,0.691,27,1.376,28,1.376,29,0.914,30,1.841,31,0.914,32,0.674,33,0.914,34,0.847,35,0.914,36,0.832,37,0.914,38,0.832,39,1.471,40,0.914,41,0.847,42,1.43,43,2.31,44,0.832,45,0.914,46,0.847,47,2.075,48,0.832,49,1.975,50,0.847,51,1.563,52,0.832,53,0.914,54,0.847,55,0.832,56,0.832,57,0.914,58,0.832,59,0.863,60,0.772,61,0.914,62,1.645,63,1.953,64,0.914,65,0.847,66,0.88,67,0.847,68,0.914,69,0.847,70,1.676,71,0.832,72,0.914,73,0.847,74,0.847,75,0.832,76,0.832,77,0.914,78,0.847,79,1.74,80,0.832,81,0.914,82,0.847,83,0.847,84,0.832,85,0.832,86,0.914,87,0.847,88,1.325,89,0.187,90,1.376,91,0.847,92,0.772,93,0.847,94,1.555,95,0.832,96,0.914,97,0.847,98,0.847,99,0.832,100,0.832,101,0.832,102,0.914,103,0.847,104,1.372,105,0.832,106,0.914,107,0.847,108,0.832,109,0.801,110,0.914,111,0.914,112,0.004,113,0.004,118,0.138,119,0.481,121,0.497,124,0.844,126,0.327,127,0.434,128,0.343,129,0.962,130,1.403,131,1.567,192,1.295,209,1.555,237,0.497,240,1.194,245,0.492,249,5.334,250,1.119,256,0.481,257,0.533,268,0.474,286,4.184,287,2.253,301,1.54,303,2.253,329,2.315,330,1.238,331,1.266,332,1.609,338,0.846,471,1.484,489,1.126,491,0.168,492,1.459,609,2.241,610,2.057,621,2.356,622,1.068,623,0.847,632,1.935,648,2.388,650,2.197,651,2.868,654,2.153,656,1.068,662,2.143,664,2.692,718,1.979,741,1.068,779,1.184,839,3.14,961,1.625,986,4.494,1370,1.58,1375,2.597,1407,3.1,1416,2.059,1670,7.018,1671,5.989,1672,2.519,1673,5.594,1674,4.89,1675,4.066,1676,4.89,1677,4.89,1678,5.391,1679,4.987,1680,4.066,1681,4.89,1682,7.105,1683,5.836,1684,5.836,1685,5.836,1686,4.89,1687,3.492,1688,4.89,1689,4.066,1690,4.987,1691,3.313,1692,3.313,1693,3.313,1694,3.313,1695,3.313,1696,3.313,1697,3.313,1698,3.313,1699,4.066,1700,3.313,1701,3.313,1702,4.332,1703,3.313,1704,3.313,1705,3.313,1706,4.066,1707,3.313,1708,3.313,1709,4.89,1710,2.519,1711,3.313,1712,3.313,1713,4.066,1714,3.313,1715,3.313,1716,3.313,1717,2.979,1718,2.059,1719,2.7,1720,2.519,1721,2.7,1722,4.066,1723,4.066,1724,4.066,1725,4.066,1726,2.7,1727,2.7,1728,3.792,1729,2.7,1730,4.066,1731,2.7,1732,2.7,1733,2.7,1734,2.7,1735,4.066,1736,3.792,1737,4.066,1738,2.7,1739,2.7,1740,4.066,1741,2.7,1742,2.7,1743,2.7,1744,2.7,1745,2.15,1746,2.7,1747,2.7,1748,2.7,1749,2.7,1750,2.7,1751,2.7,1752,2.7,1753,2.7,1754,2.7,1755,4.89,1756,5.441,1757,4.066,1758,2.7,1759,2.7,1760,4.89,1761,4.277,1762,4.066,1763,2.7,1764,2.7,1765,4.89,1766,2.7,1767,2.7,1768,2.7,1769,2.7,1770,4.89,1771,2.7,1772,2.7,1773,4.987,1774,2.7]],["title/interfaces/InputSliderValue.html",[491,0.235,1745,3.008]],["body/interfaces/InputSliderValue.html",[0,0.55,3,0.092,4,0.077,9,0.054,14,1.009,16,1.009,18,1.009,20,0.258,21,0.691,22,0.007,23,0.125,24,0.169,32,0.426,62,1.171,63,2.002,112,0.005,113,0.005,118,0.197,119,0.623,121,0.394,127,0.316,129,1.036,131,1.576,192,1.857,209,1.713,240,1.303,245,0.469,249,4.763,250,0.886,257,0.501,268,0.428,286,4.29,287,3.232,301,1.625,303,3.232,338,0.974,471,1.676,489,1.153,491,0.241,492,3.47,541,1.502,609,2.414,610,2.216,621,2.361,622,1.533,623,1.215,632,1.533,648,1.7,650,2.593,651,3.384,654,1.533,656,1.533,662,2.776,664,2.818,718,2.839,779,1.534,839,3.321,961,2.331,986,5.076,1370,2.267,1375,3.364,1407,4.016,1416,2.954,1670,3.613,1671,3.084,1672,3.613,1673,5.26,1674,3.874,1675,3.874,1676,3.874,1677,3.874,1678,5.26,1681,3.874,1682,7.461,1683,3.874,1684,3.874,1685,3.874,1686,3.874,1687,3.656,1688,3.874,1699,3.874,1702,4.763,1706,3.874,1709,5.266,1713,3.874,1717,3.859,1718,2.954,1719,3.874,1720,3.613,1721,3.874,1722,5.266,1723,5.266,1724,5.266,1725,5.266,1726,3.874,1727,3.874,1728,4.912,1729,3.874,1730,5.266,1731,3.874,1732,3.874,1733,3.874,1734,3.874,1735,5.266,1736,4.912,1737,5.266,1738,3.874,1739,3.874,1740,5.266,1741,3.874,1742,3.874,1743,3.874,1744,3.874,1745,4.193,1746,3.874,1747,3.874,1748,3.874,1749,3.874,1750,3.874,1751,3.874,1752,3.874,1753,3.874,1754,3.874,1755,5.984,1756,6.421,1757,5.266,1758,3.874,1759,3.874,1760,5.984,1761,4.921,1762,5.266,1763,3.874,1764,3.874,1765,5.984,1766,3.874,1767,3.874,1768,3.874,1769,3.874,1770,5.984,1771,3.874,1772,3.874]],["title/modules/InterfaceUtilModule.html",[139,1.59,1775,3.153]],["body/modules/InterfaceUtilModule.html",[3,0.134,4,0.112,9,0.079,20,0.303,21,1.008,22,0.007,23,0.134,24,0.182,26,1.447,62,2.395,63,1.474,112,0.006,113,0.006,139,2.38,141,3.136,142,3.22,143,3.764,144,3.22,145,3.309,146,3.764,157,3.921,158,3.056,159,3.22,161,2.981,162,3.532,186,6.251,191,4.911,192,2.711,1042,5.335,1671,4.502,1720,5.275,1775,6.443,1776,6.164,1777,6.164,1778,6.164,1779,6.937,1780,5.655,1781,7.305,1782,6.164]],["title/components/LineFormComponent.html",[0,0.395,65,1.186]],["body/components/LineFormComponent.html",[0,0.579,1,1.035,2,1.585,3,0.08,4,0.067,5,1.138,6,1.138,7,1.138,8,1.138,9,0.047,11,1.914,12,1.116,13,1.138,14,2.076,15,2.11,16,1.244,18,1.244,20,0.266,21,0.599,22,0.007,23,0.08,24,0.108,26,0.86,27,1.615,28,1.615,29,1.138,30,2.044,31,1.138,32,0.663,33,1.138,34,1.055,35,1.138,36,1.035,37,1.138,38,1.035,39,1.725,40,1.138,41,1.055,42,1.545,43,2.431,44,1.709,45,1.138,46,1.055,47,2.242,48,1.035,49,2.158,50,1.055,51,1.774,52,1.035,53,1.138,54,1.055,55,1.035,56,1.035,57,1.138,58,1.035,59,1.075,60,0.961,61,1.138,62,1.016,63,0.876,64,1.138,65,2.001,66,2.269,67,1.055,68,1.138,69,1.055,70,1.86,71,1.035,72,1.138,73,1.055,74,1.055,75,1.035,76,1.035,77,1.138,78,1.055,79,1.931,80,1.035,81,1.138,82,1.055,83,1.055,84,1.035,85,1.035,86,1.138,87,1.055,88,1.555,89,0.384,90,1.615,91,1.055,92,0.961,93,1.055,94,1.727,95,1.035,96,1.138,97,1.055,98,1.055,99,1.035,100,1.035,101,1.035,102,1.138,103,1.055,104,1.557,105,1.035,106,1.138,107,1.055,108,1.035,109,0.997,110,1.138,111,1.138,112,0.004,113,0.004,118,0.171,119,0.564,121,0.342,124,0.818,126,0.578,127,0.408,128,0.605,130,1.406,131,1.38,137,1.116,187,1.729,192,1.612,197,2.397,237,0.614,245,0.578,256,0.564,257,0.465,268,0.538,286,2.148,301,1.462,318,3.982,323,4.452,329,2.718,330,3.192,331,1.576,332,1.33,489,0.945,508,2.292,609,2.543,610,2.335,612,4.117,613,2.464,617,3.983,619,2.955,621,2.243,622,1.33,623,1.055,626,2.805,632,2.195,633,1.779,648,2.651,654,2.39,655,1.914,656,1.33,675,1.711,690,4.117,694,4.117,697,4.117,700,4.117,703,1.476,712,2.217,713,3.918,714,3.37,740,3.64,741,1.33,776,2.341,839,2.989,848,3.37,1007,2.464,1037,7.339,1041,6.04,1057,4.773,1060,2.464,1457,2.023,1629,4.878,1710,3.136,1718,2.564,1783,7.999,1784,4.452,1785,7.409,1786,8.36,1787,5.855,1788,6.807,1789,6.807,1790,7.409,1791,5.855,1792,5.855,1793,4.124,1794,4.124,1795,3.665,1796,5.855,1797,4.124,1798,3.665,1799,5.855,1800,4.124,1801,5.855,1802,4.124,1803,6.807,1804,4.124,1805,6.807,1806,4.124,1807,4.124,1808,4.124,1809,4.124,1810,4.124,1811,4.124,1812,4.124,1813,4.124,1814,3.665,1815,4.124,1816,4.124,1817,4.124,1818,4.124,1819,4.124,1820,4.124,1821,4.124,1822,4.124,1823,3.362,1824,4.773,1825,5.202,1826,3.665]],["title/components/MenubarComponent.html",[0,0.395,67,1.186]],["body/components/MenubarComponent.html",[0,0.705,1,1.212,2,1.768,3,0.143,4,0.078,5,1.332,6,1.332,7,1.332,8,1.332,9,0.055,11,2.241,12,1.307,13,1.332,14,2.09,15,2.131,16,1.387,18,1.387,20,0.28,21,0.702,22,0.007,23,0.127,24,0.171,26,1.007,27,1.802,28,1.802,29,1.332,30,2.187,31,1.332,32,0.585,33,1.332,34,1.235,35,1.332,36,1.212,37,1.332,38,1.212,39,1.748,40,1.332,41,1.235,42,1.623,43,2.509,44,1.212,45,1.332,46,1.235,47,2.355,48,1.212,49,2.285,50,1.235,51,1.929,52,1.212,53,1.332,54,1.235,55,1.212,56,1.212,57,1.332,58,1.212,59,1.258,60,1.125,61,1.332,62,1.19,63,1.572,64,1.332,65,1.235,66,1.282,67,2.233,68,1.332,69,1.235,70,1.99,71,1.212,72,1.332,73,1.235,74,1.235,75,1.212,76,1.212,77,1.332,78,1.235,79,2.066,80,1.212,81,1.332,82,1.235,83,1.235,84,1.212,85,1.212,86,1.332,87,1.235,88,1.734,89,0.272,90,1.802,91,1.235,92,1.125,93,1.235,94,1.848,95,1.212,96,1.332,97,1.235,98,1.235,99,1.212,100,1.99,101,1.639,102,1.332,103,1.235,104,1.693,105,1.212,106,1.332,107,1.235,108,1.212,109,1.168,110,1.332,111,1.332,112,0.005,113,0.005,118,0.201,124,0.6,127,0.236,132,5.324,134,4.966,143,2.075,146,2.075,152,3.902,161,2.075,162,2.806,166,3.46,171,3.284,172,3.936,187,2.025,190,4.238,195,2.515,196,3.401,197,2.674,221,4.966,233,4.442,234,5.682,237,0.4,238,2.806,256,0.629,268,0.32,318,4.442,319,3.936,323,3.672,329,2.241,491,0.331,508,2.684,777,1.67,917,3.134,922,3.134,1053,4.06,1054,3.002,1060,2.885,1680,5.324,1827,3.936,1828,6.463,1829,6.029,1830,5.324,1831,4.966,1832,6.576,1833,5.803,1834,7.045,1835,5.627,1836,4.829,1837,5.803,1838,3.902,1839,4.829,1840,5.803,1841,4.966,1842,5.803,1843,4.291,1844,4.291,1845,4.291,1846,3.134,1847,4.829,1848,4.829,1849,4.829,1850,4.829,1851,4.829,1852,4.829,1853,4.829,1854,4.829]],["title/modules/MenubarModule.html",[139,1.59,1846,3.008]],["body/modules/MenubarModule.html",[0,0.719,3,0.123,4,0.103,9,0.073,11,2.957,14,1.353,15,1.827,16,1.353,18,1.353,20,0.301,21,0.926,22,0.007,23,0.151,24,0.205,26,1.328,63,1.659,67,2.477,100,1.96,101,1.599,112,0.006,113,0.006,139,2.185,141,2.879,142,2.957,143,3.628,144,2.957,145,3.038,146,3.628,152,5.492,157,3.725,158,2.806,159,2.957,161,3.355,162,3.355,166,4.564,171,4.332,172,5.192,187,2.671,190,4.134,195,3.317,196,4.066,197,2.607,234,4.564,238,2.737,491,0.323,1053,4.854,1054,3.96,1060,3.805,1827,5.192,1828,5.192,1829,5.937,1830,5.192,1831,4.843,1832,5.66,1833,5.66,1834,5.66,1835,4.843,1837,5.66,1838,3.805,1840,5.66,1841,4.843,1842,6.938,1843,5.66,1844,5.66,1845,6.938,1846,6.148,1855,5.66,1856,5.66,1857,6.369,1858,5.66]],["title/components/MoonChartFormComponent.html",[0,0.395,69,1.186]],["body/components/MoonChartFormComponent.html",[0,0.62,1,1.176,2,1.732,3,0.091,4,0.076,5,1.292,6,1.292,7,1.292,8,1.292,9,0.054,12,1.268,13,1.292,14,2.087,15,2.125,16,1.359,18,1.359,20,0.256,21,0.681,22,0.007,23,0.091,24,0.123,26,0.977,27,1.765,28,1.765,29,1.292,30,2.16,31,1.292,32,0.653,33,1.292,34,1.198,35,1.292,36,1.176,37,1.292,38,1.176,39,1.726,40,1.292,41,1.198,42,1.826,43,2.495,44,1.176,45,1.292,46,1.198,47,2.334,48,1.176,49,2.261,50,1.198,51,1.899,52,1.176,53,1.292,54,1.198,55,1.176,56,1.176,57,1.292,58,1.176,59,1.221,60,1.092,61,1.292,62,1.154,63,0.995,64,1.292,65,1.198,66,1.244,67,1.198,68,1.292,69,2.003,70,2.292,71,1.176,72,1.292,73,1.198,74,1.198,75,1.176,76,1.176,77,1.292,78,1.198,79,2.041,80,1.176,81,1.292,82,1.198,83,1.198,84,1.176,85,1.176,86,1.292,87,1.198,88,1.699,89,0.411,90,1.765,91,1.198,92,1.092,93,1.198,94,1.825,95,1.176,96,1.292,97,1.198,98,1.198,99,1.176,100,1.176,101,1.176,102,1.292,103,1.198,104,1.667,105,1.176,106,1.292,107,1.198,108,1.176,109,1.133,110,1.292,111,1.292,112,0.005,113,0.005,118,0.195,119,0.617,120,1.359,121,0.389,124,0.719,126,0.462,127,0.356,128,0.484,130,0.842,131,0.795,137,1.268,192,1.831,237,0.389,245,0.631,255,5.174,256,0.617,257,0.497,268,0.424,286,2.44,300,3.041,301,1.708,329,2.175,330,2.723,331,1.79,332,1.511,610,2.499,621,2.349,622,1.511,623,1.198,632,2.35,633,1.944,650,1.542,653,2.235,654,2.526,655,2.175,656,1.511,668,1.834,675,1.87,703,1.676,712,2.519,713,4.194,714,3.683,715,4.153,716,3.358,717,3.041,718,2.799,719,3.187,720,1.268,721,3.187,722,1.452,723,3.358,724,1.268,725,3.187,726,1.268,727,3.187,728,3.187,729,5.326,730,3.187,731,3.187,732,3.358,733,3.358,734,3.358,735,3.187,736,4.352,737,3.187,738,3.187,739,3.187,740,4.868,741,1.511,1859,5.32,1860,5.874,1861,4.352,1862,3.041]],["title/classes/MoonChartInfo.html",[24,0.121,1863,3.322]],["body/classes/MoonChartInfo.html",[3,0.104,4,0.087,9,0.062,20,0.271,22,0.007,23,0.136,24,0.141,32,0.769,89,0.441,112,0.005,113,0.005,118,0.224,119,0.677,120,1.145,121,0.648,124,0.878,126,0.869,127,0.449,128,0.888,129,1.082,209,1.663,237,0.784,238,3.019,245,0.693,256,0.677,257,0.628,268,0.569,338,0.637,391,1.578,469,1.575,471,1.542,489,0.849,491,0.273,540,1.465,543,2.116,544,2.116,545,2.037,546,2.116,547,2.116,548,3.176,549,3.777,550,3.448,551,3.777,552,3.777,558,1.459,560,1.704,562,1.739,564,2.572,565,1.849,567,1.888,568,1.849,570,1.888,574,1.386,614,1.233,615,1.167,685,1.46,720,1.902,722,2.178,724,1.902,726,1.902,769,1.328,770,1.405,783,1.849,925,1.929,1143,4.202,1181,3.352,1196,1.929,1457,2.645,1863,3.863,1864,2.996,1865,7.027,1866,5.391,1867,5.391,1868,5.391,1869,5.391,1870,5.391,1871,5.391,1872,5.936,1873,5.391,1874,5.391,1875,5.391,1876,5.391,1877,5.391,1878,5.391,1879,5.391,1880,5.391,1881,2.437,1882,2.572,1883,4.098,1884,2.996,1885,2.996,1886,2.898,1887,3.221,1888,3.448,1889,3.352,1890,3.103,1891,3.221,1892,3.221,1893,3.221,1894,2.645,1895,3.221,1896,3.221,1897,3.221,1898,3.221,1899,3.221,1900,3.221,1901,3.221,1902,4.67,1903,2.316,1904,3.221,1905,2.898,1906,2.645,1907,3.221]],["title/interfaces/MoonChartInfoStorageObject.html",[491,0.235,1872,3.322]],["body/interfaces/MoonChartInfoStorageObject.html",[3,0.122,4,0.102,9,0.072,20,0.288,22,0.007,23,0.151,24,0.165,89,0.438,112,0.006,113,0.006,118,0.262,119,0.749,121,0.524,126,0.623,127,0.429,129,1.062,209,1.745,237,0.644,238,3.338,245,0.623,257,0.431,338,0.747,391,1.745,471,1.246,489,0.938,491,0.32,540,1.317,541,1.997,574,1.533,614,1.445,615,1.367,685,1.548,720,2.277,722,2.607,724,2.277,726,2.277,769,1.556,770,1.646,783,2.167,925,2.26,1181,3.706,1196,2.26,1457,3.099,1864,3.511,1872,4.527,1881,2.856,1882,3.013,1883,4.298,1884,3.511,1885,3.511,1886,3.396,1887,3.774,1888,3.812,1889,3.706,1890,3.636,1891,3.774,1892,3.774,1893,3.774,1894,3.099,1895,3.774,1896,3.774,1897,3.774,1898,3.774,1899,3.774,1900,3.774,1901,3.774,1902,5.026,1903,2.714,1904,3.774,1905,3.396,1906,3.099,1907,3.774]],["title/components/MoonComponent.html",[0,0.395,71,1.164]],["body/components/MoonComponent.html",[0,0.624,1,1.19,2,1.745,3,0.092,4,0.077,5,1.307,6,1.307,7,1.307,8,1.307,9,0.054,12,1.283,13,1.307,14,2.088,15,2.126,16,1.37,18,1.37,20,0.27,21,0.689,22,0.007,23,0.092,24,0.124,26,0.988,27,1.779,28,1.779,29,1.307,30,2.17,31,1.307,32,0.737,33,1.307,34,1.212,35,1.307,36,1.19,37,1.307,38,1.19,39,1.734,40,1.307,41,1.212,42,1.703,43,2.5,44,1.19,45,1.307,46,1.212,47,2.342,48,1.19,49,2.27,50,1.212,51,1.91,52,1.19,53,1.307,54,1.212,55,1.19,56,1.19,57,1.307,58,1.19,59,1.235,60,1.918,61,1.307,62,1.168,63,1.007,64,1.307,65,1.212,66,1.259,67,1.212,68,1.307,69,1.212,70,2.181,71,1.975,72,1.307,73,1.212,74,1.212,75,1.19,76,1.19,77,1.307,78,1.212,79,2.05,80,1.19,81,1.307,82,1.212,83,1.212,84,1.19,85,1.19,86,1.307,87,1.212,88,1.713,89,0.444,90,1.779,91,1.212,92,1.104,93,1.212,94,1.833,95,1.19,96,1.307,97,1.212,98,1.212,99,1.19,100,1.19,101,1.19,102,1.307,103,1.212,104,1.677,105,1.19,106,1.307,107,1.212,108,1.19,109,1.56,110,1.307,111,1.307,112,0.005,113,0.005,118,0.197,121,0.393,124,0.592,126,0.636,127,0.315,128,0.667,129,0.536,137,1.283,181,3.076,197,2.64,237,0.393,256,0.621,257,0.44,268,0.314,326,1.987,327,2.325,328,3.853,330,2.41,332,1.529,633,1.959,671,2.728,685,0.836,703,1.696,741,1.529,777,2.105,783,1.626,815,3.246,816,2.841,881,1.385,883,1.385,890,4.386,891,4.986,892,3.975,893,4.986,894,4.7,896,4.386,899,2.946,900,3.224,901,4.009,902,2.728,903,3.224,904,3.396,905,5.598,906,2.036,907,3.224,908,2.946,909,3.224,910,3.224,911,3.224,912,3.224,913,2.771,914,3.224,915,4.185,916,2.548,917,5.106,918,3.076,919,3.224,920,3.224,921,2.946,922,4.185,1235,4.891,1861,4.372,1862,3.076,1908,4.211,1909,7.33,1910,6.449,1911,4.739,1912,4.739,1913,3.396,1914,4.739]],["title/classes/MoonData.html",[24,0.121,1886,2.492]],["body/classes/MoonData.html",[3,0.111,4,0.092,9,0.065,20,0.277,22,0.007,23,0.141,24,0.15,32,0.72,89,0.494,112,0.005,113,0.005,118,0.334,119,0.703,121,0.667,124,0.845,126,0.863,127,0.414,128,0.831,209,1.694,237,0.777,238,3.639,245,0.72,256,0.703,257,0.549,268,0.532,338,0.676,391,1.639,469,1.671,471,1.586,489,1.132,491,0.29,540,1.193,574,1.586,614,1.308,615,1.237,685,1.493,769,1.409,770,1.49,783,1.961,802,3.542,810,1.577,812,2.046,813,1.867,866,1.874,906,3.136,925,3.03,926,3.924,927,3.388,937,1.808,1181,3.835,1196,2.046,1457,2.806,1864,3.178,1881,2.585,1882,2.728,1883,4.524,1884,3.178,1885,3.178,1886,3.924,1887,3.416,1888,4.155,1889,4.04,1890,4.201,1891,4.36,1892,4.36,1893,4.36,1894,3.581,1895,4.36,1896,4.36,1897,3.416,1898,3.416,1899,3.416,1900,3.416,1901,3.416,1902,4.803,1903,2.457,1904,3.416,1905,3.074,1906,2.806,1907,3.416,1915,7.299,1916,5.718,1917,5.718,1918,5.718,1919,5.718,1920,5.718,1921,5.718]],["title/interfaces/MoonDataDict.html",[491,0.235,1883,2.211]],["body/interfaces/MoonDataDict.html",[3,0.123,4,0.103,9,0.073,20,0.288,22,0.007,23,0.151,24,0.167,89,0.44,112,0.006,113,0.006,118,0.264,119,0.752,121,0.528,126,0.628,127,0.381,209,1.748,237,0.647,238,3.353,245,0.628,257,0.434,338,0.752,391,2.064,471,1.255,489,1.11,491,0.323,540,1.327,541,2.011,574,1.539,614,1.455,615,1.377,685,1.551,769,1.568,770,1.658,783,2.182,925,2.276,1181,3.722,1196,2.276,1457,3.121,1864,3.536,1881,2.876,1882,3.035,1883,4.384,1884,4.89,1885,4.89,1886,3.42,1887,3.801,1888,3.828,1889,3.722,1890,3.662,1891,3.801,1892,3.801,1893,3.801,1894,3.121,1895,3.801,1896,3.801,1897,3.801,1898,3.801,1899,3.801,1900,3.801,1901,3.801,1902,5.042,1903,2.733,1904,3.801,1905,3.42,1906,3.121,1907,3.801]],["title/components/MoonFormComponent.html",[0,0.395,73,1.186]],["body/components/MoonFormComponent.html",[0,0.584,1,1.049,2,1.599,3,0.081,4,0.111,5,1.153,6,1.153,7,1.153,8,1.153,9,0.048,12,1.131,13,1.153,14,2.075,15,2.112,16,1.255,18,1.255,20,0.267,21,0.607,22,0.007,23,0.081,24,0.109,26,0.871,27,1.63,28,1.63,29,1.153,30,2.056,31,1.153,32,0.667,33,1.153,34,1.069,35,1.153,36,1.049,37,1.153,38,1.049,39,1.643,40,1.153,41,1.069,42,1.551,43,2.438,44,1.049,45,1.153,46,1.069,47,2.252,48,1.049,49,2.169,50,1.069,51,1.787,52,1.049,53,1.153,54,1.069,55,1.049,56,1.049,57,1.153,58,1.049,59,1.089,60,0.974,61,1.153,62,1.03,63,0.888,64,1.153,65,1.069,66,1.11,67,1.069,68,1.153,69,1.069,70,2.244,71,1.049,72,1.153,73,1.906,74,1.069,75,1.049,76,1.049,77,1.153,78,1.069,79,1.942,80,1.049,81,1.153,82,1.069,83,1.069,84,1.049,85,1.049,86,1.153,87,1.069,88,1.569,89,0.236,90,1.63,91,1.069,92,0.974,93,1.069,94,1.737,95,1.049,96,1.153,97,1.069,98,1.069,99,1.049,100,1.049,101,1.049,102,1.153,103,1.069,104,1.568,105,1.049,106,1.153,107,1.069,108,1.049,109,1.011,110,1.153,111,1.153,112,0.004,113,0.004,118,0.174,119,0.569,121,0.347,124,0.811,126,0.583,127,0.399,128,0.611,130,1.467,131,1.386,137,1.131,192,1.633,237,0.569,245,0.583,249,5.856,255,4.877,256,0.569,257,0.468,268,0.521,286,2.176,287,2.842,301,1.807,303,4.019,329,2.743,330,2.562,331,1.597,332,1.906,494,1.464,609,2.562,610,2.352,621,2.691,622,1.348,623,1.069,632,2.211,633,1.796,648,2.667,650,1.375,651,1.795,654,2.404,656,1.348,703,1.495,712,2.246,713,3.946,714,3.401,741,1.348,961,2.05,997,2.995,1109,2.985,1370,1.993,1671,2.712,1673,2.995,1745,4.837,1774,3.406,1780,3.406,1795,3.713,1798,5.251,1859,5.801,1860,6.405,1861,4.142,1862,2.712,1903,2.539,1905,3.177,1922,6.856,1923,6.856,1924,6.856,1925,6.856,1926,4.179,1927,5.251,1928,4.179,1929,4.179,1930,5.069,1931,5.909,1932,5.909,1933,5.909,1934,4.179,1935,4.179,1936,3.713,1937,3.713,1938,3.713,1939,4.235,1940,3.177,1941,6.622,1942,4.179,1943,4.179,1944,4.179,1945,4.179,1946,4.179,1947,4.179,1948,4.179,1949,4.179,1950,5.909,1951,5.909,1952,5.909,1953,5.909,1954,3.713,1955,3.713,1956,4.019]],["title/components/MoonHighchartComponent.html",[0,0.395,74,1.186]],["body/components/MoonHighchartComponent.html",[0,0.544,1,0.926,2,1.463,3,0.072,4,0.06,5,1.018,6,1.018,7,1.018,8,1.018,9,0.042,12,0.999,13,1.018,14,2.06,15,2.096,16,1.148,18,1.148,20,0.231,21,0.536,22,0.007,23,0.072,24,0.097,26,1.333,27,1.491,28,1.491,29,1.018,30,1.941,31,1.018,32,0.742,33,1.018,34,0.944,35,1.018,36,0.926,37,1.018,38,0.926,39,1.551,40,1.018,41,0.944,42,1.656,43,2.371,44,0.926,45,1.018,46,0.944,47,2.159,48,0.926,49,2.066,50,0.944,51,1.666,52,0.926,53,1.018,54,0.944,55,0.926,56,0.926,57,1.018,58,0.926,59,0.962,60,0.86,61,1.018,62,0.909,63,0.784,64,1.018,65,0.944,66,1.698,67,0.944,68,1.018,69,0.944,70,2.187,71,0.926,72,1.018,73,0.944,74,1.8,75,0.926,76,0.926,77,1.018,78,0.944,79,2.04,80,0.926,81,1.018,82,0.944,83,0.944,84,0.926,85,0.926,86,1.018,87,0.944,88,1.435,89,0.423,90,1.491,91,0.944,92,0.86,93,0.944,94,1.64,95,0.926,96,1.018,97,0.944,98,0.944,99,0.926,100,0.926,101,0.926,102,1.018,103,0.944,104,1.463,105,0.926,106,1.018,107,0.944,108,0.926,109,0.893,110,1.018,111,1.018,112,0.004,113,0.004,118,0.153,119,0.521,120,1.148,121,0.306,124,0.849,126,0.533,127,0.426,128,0.559,130,1.346,131,1.272,137,0.999,237,0.731,245,0.533,256,0.521,257,0.617,268,0.609,301,1.066,326,1.547,327,1.811,332,1.19,548,3.181,572,3.68,609,2.389,610,2.193,621,2.147,622,1.19,623,0.944,632,2.062,633,1.642,648,2.518,649,1.668,650,2.104,651,2.747,653,1.76,654,2.27,655,1.713,656,1.19,662,3.474,664,2.8,669,3.819,683,3.359,703,1.32,741,1.743,839,2.065,913,1.586,927,3.267,945,3.003,946,4.349,947,4.349,948,3.653,949,4.349,950,3.676,954,4.787,955,4.787,956,4.787,958,3.676,959,4.027,961,2.651,973,3.676,974,3.676,975,3.507,976,3.507,977,3.676,978,4.787,979,3.507,980,3.359,981,3.676,982,3.676,986,2.205,987,3.676,988,3.676,989,3.676,990,2.51,992,2.51,994,2.51,997,2.645,1000,2.645,1001,2.645,1002,2.645,1007,2.205,1245,2.51,1246,4.582,1247,3.872,1248,5.351,1249,5.043,1250,4.109,1251,2.806,1253,3.279,1261,2.645,1262,2.645,1263,2.645,1264,2.806,1265,2.806,1266,2.806,1267,2.645,1268,2.645,1270,4.109,1859,6.024,1861,3.911,1862,2.395,1957,7.567,1958,6.253,1959,6.253,1960,3.69,1961,3.69,1962,3.69,1963,3.69,1964,3.279,1965,3.69,1966,3.279,1967,3.69,1968,3.69,1969,3.279,1970,3.279,1971,3.279,1972,4.109,1973,4.109,1974,3.008,1975,3.11,1976,5.404,1977,3.008,1978,2.806,1979,2.806,1980,2.806,1981,2.806]],["title/interfaces/MoonInterface.html",[491,0.235,1982,3.153]],["body/interfaces/MoonInterface.html",[3,0.11,4,0.091,9,0.065,20,0.276,22,0.007,23,0.14,24,0.148,32,0.781,89,0.409,112,0.005,113,0.005,118,0.235,121,0.469,124,0.864,126,0.88,127,0.426,128,0.902,209,1.688,237,0.789,238,3.113,245,0.558,256,0.698,257,0.386,268,0.591,338,0.668,391,1.627,471,1.115,489,1.153,491,0.287,540,1.179,541,1.787,545,2.084,550,3.555,562,1.823,564,2.696,574,1.429,614,1.293,615,1.223,685,1.487,769,1.393,770,1.473,783,1.939,885,2.861,925,2.022,1181,3.456,1196,2.022,1457,2.773,1864,3.141,1881,2.555,1882,2.696,1883,4.159,1884,3.141,1885,3.141,1886,3.038,1887,3.377,1888,3.555,1889,3.456,1890,3.253,1891,3.377,1892,3.377,1893,3.377,1894,2.773,1895,3.377,1896,3.377,1897,3.377,1898,3.377,1899,3.377,1900,3.377,1901,3.377,1902,4.777,1903,3.113,1904,3.377,1905,3.894,1906,2.773,1907,3.377,1930,3.844,1956,3.844,1982,3.844,1983,6.518,1984,6.518,1985,6.518,1986,6.518,1987,5.906,1988,5.906,1989,5.906,1990,5.906,1991,5.652,1992,5.652,1993,5.652,1994,5.652,1995,5.439,1996,5.652,1997,5.652,1998,4.608,1999,5.652,2000,4.608,2001,5.652,2002,4.608,2003,5.652,2004,5.652,2005,4.608,2006,5.652]],["title/classes/MoonInterfaceImpl.html",[24,0.121,2007,3.525]],["body/classes/MoonInterfaceImpl.html",[3,0.104,4,0.087,9,0.061,20,0.271,22,0.007,23,0.136,24,0.141,32,0.769,89,0.396,112,0.005,113,0.005,118,0.224,119,0.676,121,0.446,124,0.878,126,0.869,127,0.449,128,0.888,209,1.662,237,0.787,238,3.015,245,0.693,256,0.676,257,0.627,268,0.583,338,0.636,391,1.576,469,1.572,471,1.061,489,1.162,491,0.273,540,1.122,545,2.035,550,3.443,562,1.735,564,2.566,574,1.384,614,1.231,615,1.164,685,1.459,745,3.052,769,1.326,770,1.402,783,1.845,885,2.794,925,1.925,1181,3.347,1196,1.925,1457,2.64,1864,2.99,1881,2.432,1882,2.566,1883,4.095,1884,2.99,1885,2.99,1886,2.892,1887,3.214,1888,3.443,1889,3.347,1890,3.097,1891,3.214,1892,3.214,1893,3.214,1894,2.64,1895,3.214,1896,3.214,1897,3.214,1898,3.214,1899,3.214,1900,3.214,1901,3.214,1902,4.666,1903,3.556,1904,3.214,1905,4.449,1906,2.64,1907,3.214,1930,5.312,1956,5.312,1982,3.66,1983,6.366,1984,6.366,1985,6.366,1986,6.366,1987,5.721,1988,5.721,1989,5.721,1990,5.721,1995,5.63,1998,4.386,2000,4.386,2002,4.386,2005,4.386,2007,4.091,2008,5.38,2009,5.38,2010,5.38,2011,5.38,2012,5.38,2013,5.38,2014,5.38,2015,5.38,2016,5.38,2017,5.38,2018,5.38,2019,5.38,2020,5.38,2021,5.38,2022,5.38,2023,5.38]],["title/interfaces/MoonInterfaceStorageObject.html",[491,0.235,1995,3.153]],["body/interfaces/MoonInterfaceStorageObject.html",[3,0.122,4,0.102,9,0.072,20,0.288,22,0.007,23,0.151,24,0.165,89,0.438,112,0.006,113,0.006,118,0.262,119,0.749,121,0.524,126,0.623,127,0.429,209,1.745,237,0.644,238,3.338,245,0.623,257,0.431,338,0.747,391,1.745,471,1.246,489,1.149,491,0.32,540,1.317,541,1.997,574,1.533,614,1.445,615,1.367,685,1.548,769,1.556,770,1.646,783,2.167,925,2.26,1181,3.706,1196,2.26,1457,3.099,1864,3.511,1881,2.856,1882,3.013,1883,4.298,1884,3.511,1885,3.511,1886,3.396,1887,3.774,1888,3.812,1889,3.706,1890,3.636,1891,3.774,1892,3.774,1893,3.774,1894,3.099,1895,3.774,1896,3.774,1897,3.774,1898,3.774,1899,3.774,1900,3.774,1901,3.774,1902,5.026,1903,3.771,1904,3.774,1905,4.718,1906,3.099,1907,3.774,1930,5.723,1956,5.723,1995,4.297]],["title/interfaces/MoonModel.html",[491,0.235,2024,3.525]],["body/interfaces/MoonModel.html",[3,0.125,4,0.105,9,0.074,20,0.29,22,0.007,23,0.153,24,0.169,89,0.445,112,0.006,113,0.006,118,0.269,121,0.537,124,0.594,126,0.638,209,1.757,237,0.705,238,3.387,245,0.638,256,0.76,257,0.442,338,0.765,391,1.77,471,1.276,489,0.952,491,0.328,540,1.349,541,2.045,574,1.555,614,1.48,615,1.4,685,1.56,769,1.594,770,1.686,783,2.219,925,2.315,1181,3.76,1196,2.315,1457,3.174,1864,3.595,1881,2.924,1882,3.086,1883,4.328,1884,3.595,1885,3.595,1886,3.478,1887,3.865,1888,3.868,1889,3.76,1890,3.724,1891,3.865,1892,3.865,1893,3.865,1894,3.174,1895,3.865,1896,3.865,1897,3.865,1898,3.865,1899,3.865,1900,3.865,1901,3.865,1902,5.079,1903,2.78,1904,3.865,1905,3.478,1906,3.174,1907,3.865,2024,4.919,2025,7.555,2026,6.469]],["title/modules/MoonModule.html",[139,1.59,2027,3.153]],["body/modules/MoonModule.html",[3,0.114,4,0.095,9,0.067,20,0.318,21,0.854,22,0.007,23,0.114,24,0.154,26,1.225,42,1.411,60,1.73,63,1.248,69,2.305,70,2.147,71,2.262,73,2.305,74,2.305,75,2.262,89,0.419,92,1.73,112,0.006,113,0.006,139,2.015,141,2.656,142,2.727,143,3.498,144,2.727,145,3.883,146,2.524,157,3.542,158,2.588,159,2.727,161,3.19,162,3.19,181,2.802,185,4.616,187,3.113,191,4.436,192,2.296,330,2.195,331,2.245,892,4.552,901,3.652,902,3.381,948,2.588,1029,5.007,1030,5.007,1034,5.05,1035,4.126,1036,5.05,1038,5.05,1042,4.819,1043,5.05,1046,3.996,1047,5.05,1048,2.588,1058,5.05,1059,2.656,1278,3.813,1281,4.21,1775,6.129,1781,6.598,1782,5.22,1860,5.321,1861,5.007,1862,3.813,1957,4.789,2027,6.677,2028,5.22,2029,5.22,2030,5.22,2031,5.22,2032,6.851,2033,5.875,2034,5.875,2035,4.467,2036,5.22]],["title/injectables/MoonService.html",[334,2.042,1861,2.576]],["body/injectables/MoonService.html",[3,0.075,4,0.062,9,0.044,20,0.269,21,0.561,22,0.007,23,0.075,24,0.101,32,0.81,89,0.43,112,0.004,113,0.004,118,0.273,119,0.538,120,0.82,121,0.544,124,0.892,126,0.893,127,0.456,128,0.935,129,1.006,130,1.581,131,1.523,209,0.747,237,0.794,240,1.045,245,0.381,256,0.79,257,0.652,268,0.607,301,1.784,334,2.46,335,2.222,338,1.061,391,1.254,471,1.294,489,1.16,491,0.333,540,1.751,543,1.775,544,1.775,545,1.71,546,1.775,547,1.775,548,2.524,549,3.002,550,2.74,551,3.002,552,3.002,558,1.045,560,1.22,562,1.245,564,1.841,565,1.324,567,1.352,568,1.324,570,1.352,574,1.504,614,0.883,615,0.835,623,0.987,781,1.956,802,2.89,810,1.065,812,1.381,813,1.585,833,2.145,866,1.529,881,1.917,883,1.917,885,2.347,906,2.399,926,3.002,927,2.592,937,1.22,945,3.995,948,2.46,959,4.1,1004,3.43,1005,3.43,1006,3.43,1283,4.701,1284,3.776,1286,4.701,1287,4.001,1306,2.935,1312,4.001,1314,2.766,1317,3.214,1375,2.908,1384,3.624,1861,3.103,1863,5.697,1881,1.745,1882,1.841,1883,3.429,1886,4.273,1903,1.659,1905,2.075,1930,2.626,1939,2.766,1940,2.935,1956,2.626,1982,5.71,1983,5.348,1984,5.348,1985,5.348,1986,5.348,1987,4.552,1988,4.552,1989,4.552,1990,4.552,1998,3.147,2000,3.147,2002,3.147,2005,3.147,2007,4.988,2024,5.466,2025,6.387,2037,3.43,2038,6.56,2039,5.348,2040,6.383,2041,5.584,2042,3.86,2043,3.86,2044,3.86,2045,3.86,2046,3.86,2047,3.86,2048,3.86,2049,3.86,2050,3.86,2051,3.86,2052,3.86,2053,3.86,2054,3.86,2055,3.86,2056,3.43,2057,3.86,2058,3.43,2059,3.86,2060,3.86,2061,3.86,2062,3.86,2063,3.86,2064,3.86,2065,3.86,2066,3.86,2067,3.86,2068,3.86,2069,3.86,2070,3.86,2071,3.86,2072,3.86,2073,3.86,2074,3.86,2075,5.584,2076,3.86,2077,3.86,2078,5.584,2079,3.86,2080,3.86,2081,4.552,2082,3.86,2083,4.962,2084,3.86,2085,3.86,2086,3.86,2087,3.86,2088,3.86,2089,3.86,2090,3.86,2091,3.86,2092,3.86,2093,3.86,2094,3.86,2095,3.86,2096,3.86,2097,3.86,2098,3.86,2099,3.43,2100,3.43]],["title/classes/MoonStorage.html",[24,0.121,2040,3.525]],["body/classes/MoonStorage.html",[3,0.108,4,0.09,9,0.063,20,0.274,22,0.007,23,0.139,24,0.145,32,0.71,89,0.447,112,0.005,113,0.005,118,0.231,119,0.69,121,0.461,124,0.867,126,0.827,127,0.434,128,0.82,129,0.897,130,1.425,131,1.346,209,1.679,237,0.779,238,3.078,245,0.707,250,1.656,256,0.69,257,0.617,268,0.588,338,0.656,391,1.608,469,1.623,471,1.095,489,0.865,491,0.282,540,1.494,574,1.413,614,1.27,615,1.202,685,1.477,769,1.765,770,1.447,783,1.905,853,2.799,854,3.325,855,2.799,863,3.029,866,1.848,869,3.029,875,2.121,878,2.121,881,2.317,883,2.317,885,2.837,925,1.987,1061,4.648,1062,4.648,1063,4.648,1080,3.604,1181,3.417,1196,1.987,1358,2.577,1457,2.724,1863,3.979,1864,3.086,1872,5.682,1881,2.51,1882,2.649,1883,4.366,1884,3.086,1885,3.086,1886,3.85,1887,3.317,1888,3.514,1889,3.417,1890,3.196,1891,3.317,1892,3.317,1893,3.317,1894,2.724,1895,3.317,1896,3.317,1897,3.317,1898,3.317,1899,3.317,1900,3.317,1901,3.317,1902,4.737,1903,2.386,1904,3.317,1905,2.985,1906,2.724,1907,3.317,1982,3.777,1995,5.393,2040,4.222,2101,5.553,2102,5.553,2103,5.553,2104,5.553,2105,5.553,2106,5.553,2107,5.553,2108,5.553,2109,5.553,2110,5.553,2111,5.553,2112,5.553]],["title/classes/MoonTable.html",[24,0.121,2113,3.525]],["body/classes/MoonTable.html",[0,0.6,3,0.105,4,0.114,9,0.062,14,1.151,15,1.173,16,1.151,18,1.151,20,0.294,21,0.787,22,0.007,23,0.105,24,0.185,32,0.485,70,2.083,75,1.36,109,1.895,112,0.005,113,0.005,118,0.326,119,0.679,121,0.449,124,0.81,126,0.535,127,0.344,128,0.56,129,1.016,130,0.973,131,0.92,137,1.466,237,0.65,240,1.206,245,0.773,250,1.462,256,0.679,257,0.622,268,0.519,301,1.637,338,0.926,469,1.583,471,1.069,489,1.065,491,0.275,590,4.456,595,3.561,609,2.634,610,2.418,621,2.246,622,1.748,623,1.386,632,1.748,633,1.646,634,2.737,648,1.939,649,2.449,650,1.783,654,1.748,655,2.515,656,1.748,779,1.286,813,1.83,815,2.025,866,1.934,943,3.671,995,3.516,1048,2.387,1059,2.449,1082,2.822,1083,3.845,1084,4.212,1085,4.322,1086,4.322,1087,5.361,1088,4.212,1089,4.417,1090,4.417,1091,4.417,1092,4.072,1093,4.12,1094,2.913,1095,2.913,1096,2.913,1097,2.913,1098,2.328,1103,3.79,1106,2.913,1109,2.737,1111,2.913,1113,2.913,1115,2.913,1116,2.913,1117,2.913,1369,4.058,1371,3.119,1372,3.119,1373,3.119,1374,3.119,1375,2.822,1376,3.119,1859,5.829,1861,3.918,1862,3.516,1883,4.104,1884,3.011,1885,3.011,1940,4.12,2035,6.829,2113,5.959,2114,2.913,2115,4.815,2116,4.815,2117,4.12,2118,3.368,2119,6.264,2120,6.264,2121,4.815,2122,6.264,2123,4.815]],["title/components/MoonTableComponent.html",[0,0.395,75,1.164]],["body/components/MoonTableComponent.html",[0,0.566,1,0.993,2,1.538,3,0.077,4,0.092,5,1.091,6,1.091,7,1.091,8,1.091,9,0.045,12,1.07,13,1.091,14,2.068,15,2.105,16,1.207,18,1.207,20,0.27,21,0.575,22,0.007,23,0.077,24,0.149,26,0.825,27,1.567,28,1.567,29,1.091,30,2.005,31,1.091,32,0.651,33,1.091,34,1.011,35,1.091,36,0.993,37,1.091,38,0.993,39,1.602,40,1.091,41,1.011,42,1.523,43,2.409,44,0.993,45,1.091,46,1.011,47,2.211,48,0.993,49,2.124,50,1.011,51,1.733,52,0.993,53,1.091,54,1.011,55,0.993,56,0.993,57,1.091,58,0.993,59,1.031,60,0.921,61,1.091,62,0.974,63,0.84,64,1.091,65,1.011,66,1.05,67,1.011,68,1.091,69,1.011,70,2.262,71,0.993,72,1.091,73,1.011,74,1.011,75,1.825,76,0.993,77,1.091,78,1.011,79,1.894,80,0.993,81,1.091,82,1.011,83,1.011,84,0.993,85,0.993,86,1.091,87,1.011,88,1.509,89,0.32,90,1.567,91,1.011,92,0.921,93,1.011,94,1.694,95,0.993,96,1.091,97,1.011,98,1.011,99,0.993,100,0.993,101,0.993,102,1.091,103,1.011,104,1.521,105,0.993,106,1.091,107,1.011,108,0.993,109,2.043,110,1.091,111,1.091,112,0.004,113,0.004,118,0.276,119,0.547,121,0.328,124,0.827,126,0.561,127,0.413,128,0.587,129,0.907,130,1.518,131,1.434,137,1.07,237,0.551,240,1.056,245,0.656,250,0.738,256,0.547,257,0.577,268,0.481,301,1.519,326,1.658,332,1.275,338,1.017,471,1.312,489,1.039,491,0.201,590,3.889,595,1.998,609,2.485,610,2.281,621,2.207,622,1.275,623,1.011,632,2.145,633,1.726,634,1.998,648,2.601,649,1.787,650,1.302,654,2.344,655,1.835,656,1.275,703,1.415,741,1.832,779,1.349,813,1.602,815,1.478,866,0.921,913,1.699,943,2.959,995,2.566,1048,1.742,1059,2.568,1082,2.059,1083,2.787,1084,2.126,1085,2.059,1086,2.059,1088,3.054,1092,3.262,1094,2.126,1095,3.054,1096,3.574,1097,3.574,1098,2.857,1103,3.054,1106,2.126,1109,3.359,1111,3.574,1113,3.574,1115,2.126,1116,2.126,1117,2.126,1119,4.32,1120,3.223,1122,2.834,1123,2.689,1124,2.689,1128,2.689,1129,2.689,1130,2.689,1369,3.27,1371,2.276,1372,2.276,1373,2.276,1374,3.27,1375,3.463,1376,2.276,1384,3.687,1388,3.223,1391,3.223,1859,5.893,1861,4.039,1862,2.566,1883,4.03,1884,2.197,1885,2.197,1940,3.007,2035,6.905,2113,5.056,2114,3.574,2115,5.048,2116,5.048,2117,4.32,2118,3.532,2119,5.048,2120,5.048,2121,3.513,2122,5.048,2123,3.513,2124,3.513,2125,3.513,2126,3.513,2127,3.513]],["title/interfaces/MyChart.html",[491,0.235,576,3.008]],["body/interfaces/MyChart.html",[3,0.129,4,0.108,9,0.076,20,0.263,22,0.007,23,0.156,32,0.72,89,0.377,112,0.006,113,0.006,118,0.278,124,0.791,126,0.793,127,0.393,128,0.831,129,1.073,237,0.667,256,0.774,268,0.623,491,0.408,540,2.01,541,2.111,542,5.444,543,1.808,544,1.808,545,1.741,546,1.808,547,1.808,558,1.808,560,2.111,562,2.154,565,2.291,568,2.291,571,5.078,572,4.962,573,4.334,574,1.765,575,5.934,576,5.215,577,6.111,578,7.069,579,5.078,580,6.111,581,6.802,591,7.141,592,7.141,2128,6.678,2129,6.678,2130,6.678]],["title/interfaces/MyColorTheme.html",[271,2.668,491,0.235]],["body/interfaces/MyColorTheme.html",[3,0.1,4,0.083,9,0.059,22,0.007,23,0.181,24,0.2,112,0.005,113,0.005,118,0.284,119,0.658,127,0.333,129,1.081,130,1.522,240,1.325,250,1.273,257,0.466,263,4.252,264,2.969,265,2.969,271,4.403,274,3.929,277,3.929,280,3.929,283,2.969,284,2.773,316,3.207,338,1.104,361,4.874,364,3.929,369,3.929,373,3.929,386,2.773,415,4.243,416,5.062,417,3.207,470,3.081,471,1.863,472,3.347,473,3.347,477,4.43,478,4.243,479,4.43,480,4.43,483,3.347,485,4.403,486,3.347,488,3.347,489,0.623,491,0.413,492,4.241,493,6.248,494,2.966,495,5.062,496,3.081,497,5.265,498,3.081,499,3.347,500,3.347,501,3.207,502,3.207,503,3.081,504,5.062,505,3.207,506,3.207,507,4.756,508,4.252,509,4.57,510,4.756,511,3.207,512,4.243,513,4.243,514,3.347,515,3.347,516,3.929,517,4.243,518,3.347,519,3.347,520,4.43,521,3.347,522,3.347,523,3.347,524,3.347,525,3.347,526,4.43,527,3.347,528,3.347,529,3.347,530,4.43,531,3.347,532,3.347,533,3.347,534,3.347,535,3.347,536,3.347,537,3.207,538,4.43,539,3.347,541,1.631]],["title/interfaces/MyData.html",[491,0.235,574,0.914]],["body/interfaces/MyData.html",[3,0.131,4,0.109,9,0.077,22,0.007,23,0.131,32,0.776,89,0.381,112,0.006,113,0.006,118,0.36,124,0.843,126,0.855,127,0.423,128,0.896,237,0.762,256,0.78,268,0.618,489,1.17,491,0.343,541,2.138,574,1.597,802,3.958,810,2.233,812,2.897,813,2.055,866,2.093,906,3.479,926,4.352,927,3.758,937,2.56,2131,6.009,2132,6.762,2133,6.762,2134,6.762,2135,6.762,2136,6.762]],["title/classes/MyFileParser.html",[24,0.121,1423,2.882]],["body/classes/MyFileParser.html",[3,0.059,4,0.049,9,0.109,20,0.099,22,0.007,23,0.133,24,0.149,32,0.57,89,0.5,94,0.705,112,0.003,113,0.003,118,0.126,119,0.449,121,0.251,124,0.785,126,0.629,127,0.4,128,0.659,129,1.095,130,1.359,131,1.388,209,1.739,230,4.275,236,4.704,237,0.47,240,1.305,245,0.459,250,1.494,256,0.449,257,0.609,268,0.501,301,1.613,331,1.778,338,1.055,469,0.884,489,0.913,491,0.236,492,3.199,494,1.63,621,2.614,623,0.774,630,2.894,662,3.25,664,2.866,685,0.533,776,1.861,777,1.19,816,1.333,839,3.226,1284,4.494,1317,2.679,1392,5.55,1393,1.963,1394,2.058,1395,4.854,1396,4.677,1397,4.677,1398,4.463,1399,4.065,1400,4.677,1401,3.682,1402,4.928,1403,6.356,1404,4.333,1405,4.928,1406,6.308,1407,5.857,1408,4.065,1409,3.335,1410,5.596,1411,4.928,1412,4.939,1413,3.166,1414,6.356,1415,4.065,1416,3.527,1417,5.421,1418,4.065,1419,3.859,1420,5.421,1421,5.596,1422,4.928,1423,2.894,1424,3.335,1425,3.335,1426,3.335,1427,4.713,1428,2.168,1429,3.335,1430,3.021,1431,3.021,1432,4.065,1433,3.335,1434,2.168,1435,4.565,1436,4.928,1437,3.335,1438,3.335,1439,4.565,1440,3.335,1441,3.335,1442,2.168,1443,2.168,1444,2.168,1445,3.335,1446,3.335,1447,3.166,1448,4.928,1449,4.928,1450,2.168,1451,2.168,1452,2.168,1453,2.168,1454,2.058,1455,2.058,1456,2.058,1457,3.374,1458,3.335,1459,2.168,1460,3.335,1461,2.168,1462,4.065,1463,2.168,1464,1.963,1465,2.168,1466,2.168,1467,2.168,1468,2.168,1469,2.168,1470,2.168,1471,2.168,1472,2.168,1473,3.335,1474,3.335,1475,2.168,1476,3.335,1477,2.168,1478,2.168,1479,2.168,1480,2.168,1481,2.168,1482,2.168,1483,3.335,1484,4.065,1485,2.168,1486,3.335,1487,2.168,1488,2.168,1489,2.168,1490,2.168,1491,2.168,1492,2.168,1493,2.168,1494,2.168,1495,2.168,1496,4.065,1497,2.168,1498,2.168,1499,3.335,1500,2.168,1501,2.168,1502,2.168,1503,2.168,1504,2.168,1505,2.168,1506,2.168,1507,2.168,1508,2.168,1509,2.168,1510,2.168,1511,2.168,1512,2.168,2137,3.539,2138,3.539,2139,3.539,2140,4.654,2141,3.025,2142,3.025,2143,3.025,2144,3.025,2145,3.025,2146,3.025,2147,3.025,2148,3.025,2149,3.025,2150,3.025,2151,3.025]],["title/classes/MyFileParserDefault.html",[24,0.121,1431,3.008]],["body/classes/MyFileParserDefault.html",[3,0.061,4,0.051,9,0.108,20,0.104,22,0.007,23,0.136,24,0.153,32,0.629,89,0.492,94,0.739,112,0.004,113,0.004,118,0.132,124,0.645,126,0.693,127,0.397,128,0.726,129,1.104,131,0.992,209,1.752,230,4.059,236,4.737,237,0.583,240,1.315,245,0.576,250,1.09,256,0.465,257,0.505,268,0.49,301,1.517,331,1.844,338,0.874,469,0.927,489,0.929,491,0.245,492,3.26,494,1.69,621,2.63,623,0.811,630,1.972,662,3.018,664,2.752,685,0.559,776,1.93,777,1.234,816,1.397,839,3.028,866,1.125,1284,4.562,1317,1.826,1392,5.664,1393,2.058,1394,2.157,1395,4.599,1396,3.973,1397,3.973,1398,4.558,1399,3.458,1400,4.441,1401,3.132,1402,5.034,1403,6.19,1404,3.973,1405,5.68,1406,6.362,1407,5.947,1408,4.678,1409,3.458,1410,5.935,1411,5.034,1412,4.441,1413,3.283,1414,6.407,1415,4.678,1416,3.632,1417,5.819,1418,4.678,1419,3.283,1420,5.512,1421,5.68,1422,5.034,1423,1.972,1424,2.273,1425,2.273,1426,2.273,1427,3.791,1428,2.273,1429,3.458,1430,3.132,1431,3.791,1432,4.186,1433,3.458,1434,2.273,1435,3.458,1436,4.186,1437,2.273,1438,3.458,1439,4.678,1440,3.458,1441,3.458,1442,2.273,1443,2.273,1444,2.273,1445,3.458,1446,2.273,1447,2.157,1448,4.186,1449,4.186,1450,2.273,1451,2.273,1452,2.273,1453,2.273,1454,2.157,1455,2.157,1456,2.157,1457,3.446,1458,3.458,1459,2.273,1460,3.458,1461,2.273,1462,4.186,1463,2.273,1464,2.058,1465,2.273,1466,2.273,1467,2.273,1468,2.273,1469,2.273,1470,2.273,1471,2.273,1472,2.273,1473,3.458,1474,3.458,1475,2.273,1476,3.458,1477,2.273,1478,2.273,1479,2.273,1480,2.273,1481,2.273,1482,2.273,1483,3.458,1484,4.186,1485,2.273,1486,3.458,1487,2.273,1488,2.273,1489,2.273,1490,2.273,1491,2.273,1492,2.273,1493,2.273,1494,2.273,1495,2.273,1496,4.186,1497,2.273,1498,2.273,1499,3.458,1500,2.273,1501,2.273,1502,2.273,1503,2.273,1504,2.273,1505,2.273,1506,2.273,1507,2.273,1508,2.273,1509,2.273,1510,2.273,1511,2.273,1512,2.273,2137,3.67,2138,3.67,2139,3.67,2152,3.934,2153,4.964,2154,3.172,2155,3.172,2156,3.172,2157,3.172,2158,3.172]],["title/interfaces/MyFileParserStrategy.html",[491,0.235,1398,3.008]],["body/interfaces/MyFileParserStrategy.html",[3,0.059,4,0.05,9,0.11,20,0.101,22,0.007,23,0.134,24,0.15,32,0.62,89,0.513,94,0.715,112,0.003,113,0.003,118,0.127,124,0.635,126,0.683,127,0.393,128,0.716,129,1.102,131,0.972,209,1.743,230,4.726,236,4.714,237,0.574,240,1.308,245,0.464,250,1.068,256,0.453,257,0.498,268,0.484,301,1.5,331,1.798,338,0.863,489,0.918,491,0.239,492,3.217,494,1.648,541,0.97,621,2.619,623,0.785,630,1.908,662,3.138,664,2.807,685,0.541,776,2.566,777,1.204,816,1.352,839,2.997,866,1.097,1284,4.515,1317,1.766,1392,5.627,1393,1.991,1394,2.087,1395,4.876,1396,3.893,1397,3.893,1398,4.491,1399,4.101,1400,5.171,1401,3.714,1402,4.96,1403,6.324,1404,4.707,1405,5.621,1406,6.324,1407,5.954,1408,4.599,1409,4.599,1410,6.213,1411,5.883,1412,5.171,1413,4.365,1414,6.371,1415,4.599,1416,4.54,1417,5.764,1418,4.599,1419,3.893,1420,5.448,1421,5.621,1422,4.96,1423,1.908,1424,2.199,1425,2.199,1426,2.199,1427,3.714,1428,2.199,1429,3.372,1430,3.054,1431,3.054,1432,4.101,1433,3.372,1434,2.199,1435,3.372,1436,4.101,1437,2.199,1438,3.372,1439,4.599,1440,3.372,1441,3.372,1442,2.199,1443,2.199,1444,2.199,1445,3.372,1446,2.199,1447,2.087,1448,4.101,1449,4.101,1450,2.199,1451,2.199,1452,2.199,1453,2.199,1454,2.087,1455,2.087,1456,2.087,1457,3.396,1458,3.372,1459,2.199,1460,3.372,1461,2.199,1462,4.101,1463,2.199,1464,1.991,1465,2.199,1466,2.199,1467,2.199,1468,2.199,1469,2.199,1470,2.199,1471,2.199,1472,2.199,1473,3.372,1474,3.372,1475,2.199,1476,3.372,1477,2.199,1478,2.199,1479,2.199,1480,2.199,1481,2.199,1482,2.199,1483,3.372,1484,4.101,1485,2.199,1486,3.372,1487,2.199,1488,2.199,1489,2.199,1490,2.199,1491,2.199,1492,2.199,1493,2.199,1494,2.199,1495,2.199,1496,4.101,1497,2.199,1498,2.199,1499,3.372,1500,2.199,1501,2.199,1502,2.199,1503,2.199,1504,2.199,1505,2.199,1506,2.199,1507,2.199,1508,2.199,1509,2.199,1510,2.199,1511,2.199,1512,2.199,2137,3.578,2138,3.578,2139,3.578,2152,3.836,2153,4.88,2159,3.068,2160,3.068,2161,3.068,2162,3.068,2163,3.068]],["title/classes/MyFileParserTXT.html",[24,0.121,1430,3.008]],["body/classes/MyFileParserTXT.html",[3,0.061,4,0.051,9,0.108,20,0.104,22,0.007,23,0.136,24,0.153,32,0.629,89,0.492,94,0.739,112,0.004,113,0.004,118,0.132,124,0.645,126,0.693,127,0.397,128,0.726,129,1.104,131,0.992,209,1.752,230,4.059,236,4.737,237,0.583,240,1.315,245,0.576,250,1.09,256,0.465,257,0.505,268,0.49,301,1.517,331,1.844,338,0.874,469,0.927,489,0.929,491,0.245,492,3.26,494,1.69,621,2.63,623,0.811,630,1.972,662,3.018,664,2.752,685,0.559,776,1.93,777,1.234,816,1.397,839,3.028,866,1.125,1284,4.562,1317,1.826,1392,5.664,1393,2.058,1394,2.157,1395,4.599,1396,3.973,1397,3.973,1398,4.558,1399,3.458,1400,4.441,1401,3.132,1402,5.034,1403,6.19,1404,3.973,1405,5.68,1406,6.362,1407,5.947,1408,4.678,1409,3.458,1410,5.935,1411,5.034,1412,4.441,1413,3.283,1414,6.407,1415,4.678,1416,3.632,1417,5.819,1418,4.678,1419,3.283,1420,5.512,1421,5.68,1422,5.034,1423,1.972,1424,2.273,1425,2.273,1426,2.273,1427,3.791,1428,2.273,1429,3.458,1430,3.791,1431,3.132,1432,4.186,1433,3.458,1434,2.273,1435,3.458,1436,4.186,1437,2.273,1438,3.458,1439,4.678,1440,3.458,1441,3.458,1442,2.273,1443,2.273,1444,2.273,1445,3.458,1446,2.273,1447,2.157,1448,4.186,1449,4.186,1450,2.273,1451,2.273,1452,2.273,1453,2.273,1454,2.157,1455,2.157,1456,2.157,1457,3.446,1458,3.458,1459,2.273,1460,3.458,1461,2.273,1462,4.186,1463,2.273,1464,2.058,1465,2.273,1466,2.273,1467,2.273,1468,2.273,1469,2.273,1470,2.273,1471,2.273,1472,2.273,1473,3.458,1474,3.458,1475,2.273,1476,3.458,1477,2.273,1478,2.273,1479,2.273,1480,2.273,1481,2.273,1482,2.273,1483,3.458,1484,4.186,1485,2.273,1486,3.458,1487,2.273,1488,2.273,1489,2.273,1490,2.273,1491,2.273,1492,2.273,1493,2.273,1494,2.273,1495,2.273,1496,4.186,1497,2.273,1498,2.273,1499,3.458,1500,2.273,1501,2.273,1502,2.273,1503,2.273,1504,2.273,1505,2.273,1506,2.273,1507,2.273,1508,2.273,1509,2.273,1510,2.273,1511,2.273,1512,2.273,2137,3.67,2138,3.67,2139,3.67,2152,3.934,2153,4.964,2164,3.172,2165,3.172,2166,3.172,2167,3.172,2168,3.172]],["title/interfaces/MyFontFamily.html",[274,2.668,491,0.235]],["body/interfaces/MyFontFamily.html",[3,0.1,4,0.083,9,0.059,22,0.007,23,0.181,24,0.2,112,0.005,113,0.005,118,0.284,119,0.658,127,0.333,129,1.081,130,1.522,240,1.325,250,1.273,257,0.466,263,4.252,264,2.969,265,2.969,271,3.929,274,4.403,277,3.929,280,3.929,283,2.969,284,2.773,316,3.207,338,1.104,361,4.874,364,3.929,369,3.929,373,3.929,386,2.773,415,4.243,416,5.062,417,3.207,470,3.081,471,1.863,472,3.347,473,3.347,477,4.43,478,4.243,479,4.43,480,4.43,483,3.347,485,4.403,486,3.347,488,3.347,489,0.623,491,0.413,492,4.241,493,6.248,494,2.966,495,5.062,496,3.081,497,5.265,498,3.081,499,3.347,500,3.347,501,3.207,502,3.207,503,3.081,504,5.062,505,3.207,506,3.207,507,4.756,508,4.252,509,4.57,510,4.756,511,3.207,512,4.243,513,4.243,514,3.347,515,3.347,516,3.929,517,4.243,518,3.347,519,3.347,520,4.43,521,3.347,522,3.347,523,3.347,524,3.347,525,3.347,526,4.43,527,3.347,528,3.347,529,3.347,530,4.43,531,3.347,532,3.347,533,3.347,534,3.347,535,3.347,536,3.347,537,3.207,538,4.43,539,3.347,541,1.631]],["title/interfaces/MyFontSize.html",[277,2.668,491,0.235]],["body/interfaces/MyFontSize.html",[3,0.1,4,0.083,9,0.059,22,0.007,23,0.181,24,0.2,112,0.005,113,0.005,118,0.284,119,0.658,127,0.333,129,1.081,130,1.522,240,1.325,250,1.273,257,0.466,263,4.252,264,2.969,265,2.969,271,3.929,274,3.929,277,4.403,280,3.929,283,2.969,284,2.773,316,3.207,338,1.104,361,4.874,364,3.929,369,3.929,373,3.929,386,2.773,415,4.243,416,5.062,417,3.207,470,3.081,471,1.863,472,3.347,473,3.347,477,4.43,478,4.243,479,4.43,480,4.43,483,3.347,485,4.403,486,3.347,488,3.347,489,0.623,491,0.413,492,4.241,493,6.248,494,2.966,495,5.062,496,3.081,497,5.265,498,3.081,499,3.347,500,3.347,501,3.207,502,3.207,503,3.081,504,5.062,505,3.207,506,3.207,507,4.756,508,4.252,509,4.57,510,4.756,511,3.207,512,4.243,513,4.243,514,3.347,515,3.347,516,3.929,517,4.243,518,3.347,519,3.347,520,4.43,521,3.347,522,3.347,523,3.347,524,3.347,525,3.347,526,4.43,527,3.347,528,3.347,529,3.347,530,4.43,531,3.347,532,3.347,533,3.347,534,3.347,535,3.347,536,3.347,537,3.207,538,4.43,539,3.347,541,1.631]],["title/interfaces/MyFontStyle.html",[280,2.668,491,0.235]],["body/interfaces/MyFontStyle.html",[3,0.1,4,0.083,9,0.059,22,0.007,23,0.181,24,0.2,112,0.005,113,0.005,118,0.284,119,0.658,127,0.333,129,1.081,130,1.522,240,1.325,250,1.273,257,0.466,263,4.252,264,2.969,265,2.969,271,3.929,274,3.929,277,3.929,280,4.403,283,2.969,284,2.773,316,3.207,338,1.104,361,4.874,364,3.929,369,3.929,373,3.929,386,2.773,415,4.243,416,5.062,417,3.207,470,3.081,471,1.863,472,3.347,473,3.347,477,4.43,478,4.243,479,4.43,480,4.43,483,3.347,485,4.403,486,3.347,488,3.347,489,0.623,491,0.413,492,4.241,493,6.248,494,2.966,495,5.062,496,3.081,497,5.265,498,3.081,499,3.347,500,3.347,501,3.207,502,3.207,503,3.081,504,5.062,505,3.207,506,3.207,507,4.756,508,4.252,509,4.57,510,4.756,511,3.207,512,4.243,513,4.243,514,3.347,515,3.347,516,3.929,517,4.243,518,3.347,519,3.347,520,4.43,521,3.347,522,3.347,523,3.347,524,3.347,525,3.347,526,4.43,527,3.347,528,3.347,529,3.347,530,4.43,531,3.347,532,3.347,533,3.347,534,3.347,535,3.347,536,3.347,537,3.207,538,4.43,539,3.347,541,1.631]],["title/interfaces/MyStorage.html",[491,0.235,769,1.142]],["body/interfaces/MyStorage.html",[3,0.128,4,0.107,9,0.075,22,0.007,23,0.128,32,0.768,89,0.372,112,0.006,113,0.006,118,0.274,124,0.875,126,0.846,127,0.419,128,0.887,237,0.79,256,0.769,268,0.64,491,0.335,540,1.376,541,2.085,769,1.965,863,3.404,866,2.076,869,3.404,875,3.048,878,3.048,881,2.603,883,2.603,885,3.187,1061,5.177,1062,5.177,1063,5.177,1080,4.281,1358,3.702,2169,5.861,2170,6.596,2171,6.596,2172,6.596,2173,6.596,2174,6.596,2175,6.596,2176,6.596,2177,6.596,2178,6.596]],["title/interfaces/MyTable.html",[491,0.235,1083,2.274]],["body/interfaces/MyTable.html",[3,0.139,4,0.116,9,0.082,20,0.235,22,0.007,23,0.139,112,0.006,113,0.006,118,0.299,124,0.816,237,0.737,256,0.809,268,0.556,491,0.365,541,2.272,866,2.135,1083,4.119,1085,4.772,1086,4.772,1092,4.496,2179,8.142,2180,6.387,2181,7.188,2182,7.188,2183,7.188]],["title/components/PageNotFoundComponent.html",[0,0.395,76,1.164]],["body/components/PageNotFoundComponent.html",[0,0.67,1,1.374,2,1.921,3,0.106,4,0.088,5,1.51,6,1.51,7,1.51,8,1.51,9,0.063,11,2.541,12,2.551,13,1.51,14,2.102,15,2.14,16,1.508,18,1.508,20,0.179,21,0.795,22,0.007,23,0.106,24,0.143,25,5.396,26,1.141,27,1.957,28,1.957,29,1.51,30,2.298,31,1.51,32,0.635,33,1.51,34,1.4,35,1.51,36,1.374,37,1.51,38,1.374,39,1.837,40,1.51,41,1.4,42,1.681,43,2.566,44,1.374,45,1.51,46,1.4,47,2.44,48,1.374,49,2.381,50,1.4,51,2.052,52,1.374,53,1.51,54,1.4,55,1.374,56,1.374,57,1.51,58,1.374,59,1.427,60,1.276,61,1.51,62,1.349,63,1.163,64,1.51,65,1.4,66,1.454,67,1.4,68,1.51,69,1.4,70,2.091,71,1.374,72,1.51,73,1.4,74,1.4,75,1.374,76,2.091,77,1.51,78,1.4,79,2.171,80,1.374,81,1.51,82,1.4,83,1.4,84,1.374,85,1.374,86,1.51,87,1.4,88,1.885,89,0.309,90,1.957,91,1.4,92,1.276,93,1.4,94,1.942,95,1.374,96,1.51,97,1.4,98,1.4,99,1.374,100,1.374,101,1.374,102,1.51,103,1.4,104,1.801,105,1.374,106,1.51,107,1.4,108,1.374,109,1.324,110,1.51,111,1.51,112,0.005,113,0.005,178,4.162,230,5.498,2184,4.864,2185,4.864,2186,7.875,2187,7.096]],["title/components/ScatterChartFormComponent.html",[0,0.395,78,1.186]],["body/components/ScatterChartFormComponent.html",[0,0.62,1,1.176,2,1.732,3,0.091,4,0.076,5,1.292,6,1.292,7,1.292,8,1.292,9,0.054,12,1.268,13,1.292,14,2.087,15,2.125,16,1.359,18,1.359,20,0.256,21,0.681,22,0.007,23,0.091,24,0.123,26,0.977,27,1.765,28,1.765,29,1.292,30,2.16,31,1.292,32,0.653,33,1.292,34,1.198,35,1.292,36,1.176,37,1.292,38,1.176,39,1.726,40,1.292,41,1.198,42,1.826,43,2.495,44,1.176,45,1.292,46,1.198,47,2.334,48,1.176,49,2.261,50,1.198,51,1.899,52,1.176,53,1.292,54,1.198,55,1.176,56,1.176,57,1.292,58,1.176,59,1.221,60,1.092,61,1.292,62,1.154,63,0.995,64,1.292,65,1.198,66,1.244,67,1.198,68,1.292,69,1.198,70,1.966,71,1.176,72,1.292,73,1.198,74,1.198,75,1.176,76,1.176,77,1.292,78,2.003,79,2.379,80,1.176,81,1.292,82,1.198,83,1.198,84,1.176,85,1.176,86,1.292,87,1.198,88,1.699,89,0.411,90,1.765,91,1.198,92,1.092,93,1.198,94,1.825,95,1.176,96,1.292,97,1.198,98,1.198,99,1.176,100,1.176,101,1.176,102,1.292,103,1.198,104,1.667,105,1.176,106,1.292,107,1.198,108,1.176,109,1.133,110,1.292,111,1.292,112,0.005,113,0.005,118,0.195,119,0.617,120,1.359,121,0.389,124,0.719,126,0.462,127,0.356,128,0.484,130,0.842,131,0.795,137,1.268,192,1.831,237,0.389,245,0.631,255,5.174,256,0.617,257,0.497,268,0.424,286,2.44,300,3.041,301,1.708,329,2.175,330,2.723,331,1.79,332,1.511,610,2.499,621,2.349,622,1.511,623,1.198,632,2.35,633,1.944,650,1.542,653,2.235,654,2.526,655,2.175,656,1.511,668,1.834,675,1.87,703,1.676,712,2.519,713,4.194,714,3.683,715,4.153,716,3.358,717,3.041,718,2.799,719,3.187,720,1.268,721,3.187,722,1.452,723,3.358,724,1.268,725,3.187,726,1.268,727,3.187,728,3.187,729,5.326,730,3.187,731,3.187,732,3.358,733,3.358,734,3.358,735,3.187,736,4.352,737,3.187,738,3.187,739,3.187,740,4.868,741,1.511,2188,5.32,2189,5.874,2190,4.352,2191,3.041]],["title/classes/ScatterChartInfo.html",[24,0.121,2192,2.576]],["body/classes/ScatterChartInfo.html",[3,0.081,4,0.067,9,0.048,20,0.224,22,0.007,23,0.163,24,0.179,32,0.704,89,0.42,112,0.004,113,0.004,118,0.173,119,0.569,120,1.455,121,0.652,124,0.85,126,0.775,127,0.426,128,0.812,129,1.093,209,1.521,237,0.741,240,1.298,245,0.735,250,0.778,256,0.569,257,0.632,268,0.61,338,0.809,391,1.832,469,1.218,471,1.609,489,1.129,491,0.378,540,1.428,543,2.015,544,2.015,545,1.94,546,2.015,547,2.015,548,2.667,549,3.171,550,2.895,551,3.171,552,3.171,558,1.597,560,1.865,562,1.903,564,1.989,565,2.024,567,2.067,568,2.024,570,2.067,574,1.164,607,1.524,614,0.954,615,0.902,668,1.962,675,2.001,685,1.479,687,1.558,720,2.208,722,2.528,724,2.208,726,2.208,745,3.07,769,1.027,770,1.087,779,0.99,781,1.46,784,2.484,785,2.484,786,2.484,803,1.524,810,1.15,813,1.301,937,1.318,1165,2.559,1196,1.492,1215,1.837,1218,1.558,1219,1.558,1221,2.936,1687,1.935,2114,2.241,2192,3.279,2193,2.491,2194,5.9,2195,4.169,2196,4.169,2197,4.169,2198,4.169,2199,4.169,2200,4.169,2201,4.761,2202,4.169,2203,4.169,2204,4.169,2205,4.169,2206,4.169,2207,4.169,2208,4.169,2209,4.169,2210,4.248,2211,2.4,2212,2.4,2213,3.28,2214,2.317,2215,2.592,2216,2.592,2217,2.592,2218,2.592,2219,2.592,2220,3.668,2221,4.628,2222,4.257,2223,3.668,2224,2.592,2225,3.668,2226,2.592,2227,2.592,2228,2.592,2229,2.592,2230,2.592,2231,2.106,2232,2.106,2233,2.106,2234,2.106,2235,4.137,2236,3.461,2237,3.279,2238,3.524,2239,3.524,2240,2.491,2241,2.491,2242,2.491,2243,2.491,2244,3.524,2245,2.317,2246,4.257,2247,2.592,2248,4.257,2249,2.592,2250,2.4,2251,2.592,2252,2.592,2253,2.592,2254,2.895,2255,2.106]],["title/interfaces/ScatterChartInfoStorageObject.html",[491,0.235,2201,2.576]],["body/interfaces/ScatterChartInfoStorageObject.html",[3,0.091,4,0.076,9,0.054,20,0.239,22,0.007,23,0.168,24,0.191,89,0.412,112,0.005,113,0.005,118,0.195,119,0.618,120,1.363,121,0.605,127,0.383,129,1.089,209,1.589,240,1.328,245,0.72,250,0.877,257,0.602,268,0.599,338,0.863,391,1.902,471,1.547,489,1.145,491,0.398,540,1.338,541,1.486,543,1.273,544,1.273,545,1.225,546,1.273,547,1.273,558,1.273,560,1.486,562,1.517,565,1.613,567,1.647,568,1.613,570,1.647,574,1.265,607,1.719,614,1.076,615,1.018,668,2.092,675,2.133,685,1.528,687,1.757,720,2.346,722,2.686,724,2.346,726,2.346,745,2.507,769,1.159,770,1.225,779,1.116,781,1.647,784,2.595,785,2.595,786,2.595,803,1.719,810,1.297,813,1.414,937,1.486,1165,2.728,1196,1.682,1215,2.072,1218,1.757,1219,1.757,1221,3.067,1687,2.182,2114,2.528,2192,2.613,2193,2.809,2201,4.561,2210,4.411,2211,2.706,2212,2.706,2213,3.455,2214,2.613,2215,2.923,2216,2.923,2217,2.923,2218,2.923,2219,2.923,2220,3.987,2221,4.875,2222,4.538,2223,3.987,2224,2.923,2225,3.987,2226,2.923,2227,2.923,2228,2.923,2229,2.923,2230,2.923,2231,2.375,2232,2.375,2233,2.375,2234,2.375,2235,4.358,2236,3.616,2237,3.565,2238,3.832,2239,3.832,2240,2.809,2241,2.809,2242,2.809,2243,2.809,2244,3.832,2245,2.613,2246,4.538,2247,2.923,2248,4.538,2249,2.923,2250,2.706,2251,2.923,2252,2.923,2253,2.923,2254,3.147,2255,2.375]],["title/components/ScatterComponent.html",[0,0.395,80,1.164]],["body/components/ScatterComponent.html",[0,0.624,1,1.19,2,1.745,3,0.092,4,0.077,5,1.307,6,1.307,7,1.307,8,1.307,9,0.054,12,1.283,13,1.307,14,2.088,15,2.126,16,1.37,18,1.37,20,0.27,21,0.689,22,0.007,23,0.092,24,0.124,26,0.988,27,1.779,28,1.779,29,1.307,30,2.17,31,1.307,32,0.737,33,1.307,34,1.212,35,1.307,36,1.19,37,1.307,38,1.19,39,1.734,40,1.307,41,1.212,42,1.703,43,2.5,44,1.19,45,1.307,46,1.212,47,2.342,48,1.19,49,2.27,50,1.212,51,1.91,52,1.19,53,1.307,54,1.212,55,1.19,56,1.19,57,1.307,58,1.19,59,1.235,60,1.918,61,1.307,62,1.168,63,1.007,64,1.307,65,1.212,66,1.259,67,1.212,68,1.307,69,1.212,70,1.975,71,1.19,72,1.307,73,1.212,74,1.212,75,1.19,76,1.19,77,1.307,78,1.212,79,2.264,80,1.975,81,1.307,82,1.212,83,1.212,84,1.19,85,1.19,86,1.307,87,1.212,88,1.713,89,0.444,90,1.779,91,1.212,92,1.104,93,1.212,94,1.833,95,1.19,96,1.307,97,1.212,98,1.212,99,1.19,100,1.19,101,1.19,102,1.307,103,1.212,104,1.677,105,1.19,106,1.307,107,1.212,108,1.19,109,1.56,110,1.307,111,1.307,112,0.005,113,0.005,118,0.197,121,0.393,124,0.592,126,0.636,127,0.315,128,0.667,129,0.536,137,1.283,181,3.076,197,2.64,237,0.393,256,0.621,257,0.44,268,0.314,326,1.987,327,2.325,328,3.853,330,2.41,332,1.529,633,1.959,671,2.728,685,0.836,703,1.696,741,1.529,777,2.105,783,1.626,815,3.246,816,2.841,881,1.385,883,1.385,890,4.386,891,4.986,892,3.975,893,4.986,894,4.7,896,4.386,899,2.946,900,3.224,901,4.009,902,2.728,903,3.224,904,3.396,905,5.598,906,2.036,907,3.224,908,2.946,909,3.224,910,3.224,911,3.224,912,3.224,913,2.771,914,3.224,915,4.185,916,2.548,917,5.106,918,3.076,919,3.224,920,3.224,921,2.946,922,4.185,1235,4.891,1913,3.396,2190,4.372,2191,3.076,2256,4.211,2257,7.33,2258,6.449,2259,4.739,2260,4.739,2261,4.739]],["title/classes/ScatterData.html",[24,0.121,2214,2.576]],["body/classes/ScatterData.html",[3,0.084,4,0.07,9,0.05,20,0.229,22,0.007,23,0.164,24,0.183,32,0.626,42,0.824,89,0.427,112,0.005,113,0.005,118,0.291,119,0.585,120,1.289,121,0.661,124,0.807,126,0.69,127,0.39,128,0.723,129,1.054,130,0.779,131,0.736,209,1.544,237,0.685,240,1.308,245,0.748,250,1.305,256,0.585,257,0.62,268,0.606,338,0.827,391,1.855,469,1.267,471,1.707,489,1.161,491,0.384,540,1.265,543,1.174,544,1.174,545,1.13,546,1.174,547,1.174,558,1.174,560,1.371,562,1.399,565,1.488,567,1.519,568,1.488,570,1.519,574,1.38,607,2.558,614,0.992,615,0.939,668,2.171,675,2.214,685,1.495,687,1.621,720,2.05,722,2.348,724,2.05,726,2.05,745,2.371,769,1.069,770,1.13,779,1.03,781,2.125,784,2.521,785,2.521,786,2.521,802,3.082,803,1.586,810,1.673,812,1.552,813,1.821,866,1.63,906,2.606,926,3.261,927,2.816,937,1.918,1165,2.614,1196,1.552,1215,1.911,1218,1.621,1219,1.621,1221,2.979,1687,2.013,2114,3.761,2192,2.41,2193,2.591,2201,4.21,2210,4.638,2211,3.492,2212,3.492,2213,3.513,2214,3.371,2215,2.696,2216,4.71,2217,2.696,2218,2.696,2219,2.696,2220,3.771,2221,4.71,2222,4.349,2223,3.771,2224,2.696,2225,3.771,2226,2.696,2227,2.696,2228,2.696,2229,2.696,2230,2.696,2231,2.191,2232,2.191,2233,2.191,2234,2.191,2235,4.21,2236,3.513,2237,3.371,2238,3.624,2239,3.624,2240,2.591,2241,2.591,2242,2.591,2243,2.591,2244,3.624,2245,2.41,2246,4.349,2247,2.696,2248,4.349,2249,2.696,2250,2.496,2251,2.696,2252,2.696,2253,2.696,2254,2.976,2255,2.191,2262,6.066,2263,4.337,2264,4.337,2265,4.337,2266,4.337,2267,4.337,2268,4.337,2269,3.854,2270,4.337,2271,4.337,2272,4.337]],["title/interfaces/ScatterDataDict.html",[491,0.235,2210,2.414]],["body/interfaces/ScatterDataDict.html",[3,0.091,4,0.076,9,0.053,20,0.239,22,0.007,23,0.168,24,0.191,89,0.411,112,0.005,113,0.005,118,0.195,119,0.616,120,1.359,121,0.604,127,0.356,129,1.065,209,1.587,240,1.327,245,0.719,250,0.873,257,0.602,268,0.599,338,0.861,391,2.066,471,1.544,489,1.162,491,0.397,540,1.334,541,1.48,543,1.267,544,1.267,545,1.22,546,1.267,547,1.267,558,1.267,560,1.48,562,1.51,565,1.606,567,1.64,568,1.606,570,1.64,574,1.261,607,1.711,614,1.071,615,1.013,668,2.088,675,2.128,685,1.527,687,1.749,720,2.118,722,2.426,724,2.118,726,2.118,745,2.499,769,1.153,770,1.22,779,1.111,781,1.64,784,2.591,785,2.591,786,2.591,803,1.711,810,1.291,813,1.41,937,1.48,1165,2.722,1196,1.675,1215,2.062,1218,1.749,1219,1.749,1221,3.062,1687,2.173,2114,2.517,2192,2.602,2193,2.797,2201,4.35,2210,4.509,2211,4.505,2212,4.505,2213,3.815,2214,2.602,2215,2.91,2216,2.91,2217,2.91,2218,2.91,2219,2.91,2220,3.976,2221,4.866,2222,4.528,2223,3.976,2224,2.91,2225,3.976,2226,2.91,2227,2.91,2228,2.91,2229,2.91,2230,2.91,2231,2.365,2232,2.365,2233,2.365,2234,2.365,2235,4.35,2236,3.61,2237,3.554,2238,3.82,2239,3.82,2240,2.797,2241,2.797,2242,2.797,2243,2.797,2244,3.82,2245,2.602,2246,4.528,2247,2.91,2248,4.528,2249,2.91,2250,2.695,2251,2.91,2252,2.91,2253,2.91,2254,3.138,2255,2.365]],["title/components/ScatterFormComponent.html",[0,0.395,82,1.186]],["body/components/ScatterFormComponent.html",[0,0.61,1,1.139,2,1.694,3,0.088,4,0.116,5,1.252,6,1.252,7,1.252,8,1.252,9,0.052,12,1.228,13,1.252,14,2.084,15,2.121,16,1.33,18,1.33,20,0.266,21,0.66,22,0.007,23,0.088,24,0.119,26,0.947,27,1.727,28,1.727,29,1.252,30,2.131,31,1.252,32,0.692,33,1.252,34,1.161,35,1.252,36,1.139,37,1.252,38,1.139,39,1.703,40,1.252,41,1.161,42,1.593,43,2.479,44,1.139,45,1.252,46,1.161,47,2.312,48,1.139,49,2.236,50,1.161,51,1.868,52,1.139,53,1.252,54,1.161,55,1.139,56,1.139,57,1.252,58,1.139,59,1.183,60,1.058,61,1.252,62,1.118,63,0.964,64,1.252,65,1.161,66,1.205,67,1.161,68,1.252,69,1.161,70,1.939,71,1.139,72,1.252,73,1.161,74,1.161,75,1.139,76,1.139,77,1.252,78,1.161,79,2.366,80,1.139,81,1.252,82,1.976,83,1.161,84,1.139,85,1.139,86,1.252,87,1.161,88,1.663,89,0.256,90,1.727,91,1.161,92,1.058,93,1.161,94,1.8,95,1.139,96,1.252,97,1.161,98,1.161,99,1.139,100,1.139,101,1.139,102,1.252,103,1.161,104,1.639,105,1.139,106,1.252,107,1.161,108,1.139,109,1.098,110,1.252,111,1.252,112,0.005,113,0.005,118,0.189,119,0.603,121,0.376,124,0.788,126,0.618,127,0.377,128,0.647,130,1.288,131,1.217,137,1.228,237,0.594,245,0.618,249,5.763,256,0.603,257,0.489,268,0.475,301,1.653,329,2.906,330,2.678,331,1.734,332,2.019,494,1.59,609,2.678,610,2.458,621,2.602,622,1.464,623,1.161,632,2.312,633,1.902,648,2.764,650,1.494,651,1.95,654,2.492,656,1.464,703,1.624,712,2.44,713,4.125,714,3.604,715,2.946,741,1.464,961,2.227,997,3.253,1109,3.163,1370,2.165,1671,2.946,1673,3.253,1745,5.014,1774,3.7,1780,3.7,1927,5.563,1936,4.033,1938,4.033,1939,4.487,1941,5.563,1954,4.033,2188,5.679,2189,6.27,2190,4.294,2191,2.946,2213,2.758,2236,2.758,2273,7.167,2274,7.167,2275,5.563,2276,4.539,2277,4.539,2278,4.539,2279,3.451,2280,6.261,2281,6.261,2282,4.539,2283,4.539,2284,4.539,2285,4.539,2286,4.033]],["title/components/ScatterHighchartComponent.html",[0,0.395,83,1.186]],["body/components/ScatterHighchartComponent.html",[0,0.487,1,0.77,2,1.274,3,0.059,4,0.05,5,0.846,6,0.846,7,0.846,8,0.846,9,0.035,12,0.83,13,0.846,14,2.035,15,2.07,16,1,18,1,20,0.21,21,0.446,22,0.007,23,0.059,24,0.08,26,1.194,27,1.298,28,1.298,29,0.846,30,1.77,31,0.846,32,0.72,33,0.846,34,0.785,35,0.846,36,0.77,37,0.846,38,0.77,39,1.415,40,0.846,41,0.785,42,1.587,43,2.264,44,0.77,45,0.846,46,0.785,47,2.014,48,0.77,49,1.909,50,0.785,51,1.492,52,0.77,53,0.846,54,0.785,55,0.77,56,0.77,57,0.846,58,0.77,59,0.8,60,0.715,61,0.846,62,0.756,63,0.652,64,0.846,65,0.785,66,0.815,67,0.785,68,0.846,69,0.785,70,1.611,71,0.77,72,0.846,73,0.785,74,0.785,75,0.77,76,0.77,77,0.846,78,0.785,79,2.3,80,0.77,81,0.846,82,0.785,83,1.641,84,0.77,85,0.77,86,0.846,87,0.785,88,1.25,89,0.442,90,1.298,91,0.785,92,0.715,93,0.785,94,1.495,95,0.77,96,0.846,97,0.785,98,0.785,99,0.77,100,0.77,101,0.77,102,0.846,103,0.785,104,1.309,105,0.77,106,0.846,107,0.785,108,0.77,109,0.742,110,0.846,111,0.846,112,0.003,113,0.003,118,0.127,119,0.453,120,1,121,0.254,124,0.842,126,0.464,127,0.414,128,0.487,130,1.243,131,1.175,137,0.83,209,0.911,237,0.732,245,0.464,256,0.453,257,0.653,268,0.616,301,0.928,315,5.553,326,1.286,327,1.505,332,0.99,391,1.285,478,2.925,489,0.836,496,1.833,498,1.833,537,2.925,548,2.901,572,3.294,609,2.139,610,1.963,621,1.984,622,0.99,623,0.785,632,1.846,633,1.43,648,2.296,649,1.387,650,1.884,651,2.459,653,1.464,654,2.07,656,0.99,662,3.267,664,2.807,668,0.879,669,3.419,675,0.897,683,2.925,685,1.288,703,1.098,740,2.925,741,1.518,779,1.117,781,2.558,839,1.798,913,1.318,927,2.979,945,2.615,946,3.893,947,3.893,948,3.82,949,3.893,950,3.201,954,4.365,955,4.365,956,4.365,958,3.201,959,3.72,961,2.309,973,3.201,974,3.201,975,3.054,976,3.054,977,3.201,978,4.365,979,3.054,980,2.925,981,3.201,982,3.201,986,1.833,987,3.201,988,3.201,989,3.201,990,2.087,992,3.201,994,2.087,997,2.199,1000,2.199,1001,2.199,1002,2.199,1007,1.833,1181,1.464,1196,1.098,1245,2.087,1246,4.101,1247,3.372,1248,4.88,1249,4.599,1250,3.578,1251,2.333,1256,2.726,1261,2.199,1262,2.199,1263,2.199,1264,2.333,1265,2.333,1266,2.333,1267,2.199,1268,2.199,1270,3.578,1370,1.464,1464,1.991,1635,4.967,1889,1.464,1958,5.702,1959,5.702,1970,2.726,1971,2.726,1972,4.88,1973,3.578,1975,1.766,1977,2.501,1978,2.333,1979,2.333,1980,2.333,1981,2.333,2188,5.977,2190,3.566,2191,1.991,2250,3.294,2287,7.507,2288,6.417,2289,6.417,2290,6.417,2291,6.417,2292,3.068,2293,3.068,2294,3.068,2295,3.068,2296,3.068,2297,3.068,2298,3.068,2299,3.068,2300,3.068,2301,3.068,2302,2.726,2303,3.068,2304,3.068,2305,3.068,2306,4.705,2307,3.068,2308,3.068,2309,3.068,2310,1.991,2311,6.15,2312,5.086,2313,5.702,2314,3.068,2315,1.991,2316,3.068,2317,2.726,2318,3.068,2319,3.068,2320,3.068,2321,2.501,2322,3.068,2323,3.068,2324,5.723,2325,5.723,2326,5.723,2327,4.705,2328,5.723,2329,4.705,2330,5.723,2331,5.723,2332,3.068,2333,3.068,2334,2.726,2335,2.726,2336,3.068,2337,3.068,2338,1.991,2339,4.705,2340,3.068,2341,3.068,2342,3.068,2343,3.068,2344,4.705,2345,5.953,2346,5.953,2347,6.489,2348,5.953,2349,4.705,2350,4.705,2351,4.705,2352,4.705]],["title/interfaces/ScatterInterfaceStorageObject.html",[491,0.235,2235,2.576]],["body/interfaces/ScatterInterfaceStorageObject.html",[3,0.092,4,0.077,9,0.054,20,0.241,22,0.007,23,0.169,24,0.192,89,0.414,112,0.005,113,0.005,118,0.198,119,0.623,120,1.374,121,0.609,127,0.316,129,1.067,209,1.596,240,1.331,245,0.725,250,0.888,257,0.604,268,0.601,338,0.868,391,1.909,471,1.555,489,1.159,491,0.4,540,1.349,541,1.505,543,1.288,544,1.288,545,1.241,546,1.288,547,1.288,558,1.288,560,1.505,562,1.535,565,1.633,567,1.667,568,1.633,570,1.667,574,1.276,607,1.74,614,1.089,615,1.03,668,2.106,675,2.147,685,1.533,687,1.779,720,2.133,722,2.443,724,2.133,726,2.133,745,2.528,769,1.173,770,1.241,779,1.13,781,1.667,784,2.606,785,2.606,786,2.606,803,1.74,810,1.313,813,1.426,937,1.505,1165,2.745,1196,1.703,1215,2.097,1218,1.779,1219,1.779,1221,3.08,1687,2.21,2114,2.559,2192,2.645,2193,2.844,2201,4.38,2210,4.427,2211,2.74,2212,2.74,2213,3.832,2214,2.645,2215,2.959,2216,2.959,2217,2.959,2218,2.959,2219,2.959,2220,4.021,2221,4.9,2222,4.567,2223,4.021,2224,2.959,2225,4.021,2226,2.959,2227,2.959,2228,2.959,2229,2.959,2230,2.959,2231,2.405,2232,2.405,2233,2.405,2234,2.405,2235,4.581,2236,3.899,2237,3.595,2238,3.864,2239,3.864,2240,2.844,2241,2.844,2242,2.844,2243,2.844,2244,3.864,2245,2.645,2246,4.567,2247,2.959,2248,4.567,2249,2.959,2250,2.74,2251,2.959,2252,2.959,2253,2.959,2254,3.174,2255,2.405]],["title/interfaces/ScatterModel.html",[491,0.235,2237,2.576]],["body/interfaces/ScatterModel.html",[3,0.087,4,0.073,9,0.051,20,0.234,22,0.007,23,0.166,24,0.187,32,0.639,89,0.402,112,0.005,113,0.005,118,0.187,120,1.322,121,0.592,124,0.786,126,0.704,127,0.348,128,0.737,129,1.059,209,1.564,237,0.71,240,1.317,245,0.704,250,0.839,256,0.599,257,0.596,268,0.61,338,0.843,391,1.876,471,1.518,489,1.158,491,0.39,540,1.297,541,1.422,543,1.217,544,1.217,545,1.172,546,1.217,547,1.217,558,1.217,560,1.422,562,1.451,564,2.145,565,1.543,567,1.575,568,1.543,570,1.575,574,1.227,607,1.644,614,1.029,615,0.973,668,2.044,675,2.084,685,1.51,687,1.68,720,2.083,722,2.385,724,2.083,726,2.083,745,2.431,769,1.108,770,1.172,779,1.068,781,1.575,784,2.554,785,2.554,786,2.554,803,1.644,810,1.241,813,1.371,937,1.422,1165,2.665,1196,1.609,1215,1.981,1218,1.68,1219,1.68,1221,3.019,1687,2.087,2114,2.417,2192,2.499,2193,2.687,2201,4.277,2210,4.352,2211,2.588,2212,2.588,2213,3.559,2214,2.499,2215,2.796,2216,2.796,2217,2.796,2218,2.796,2219,2.796,2220,3.867,2221,4.784,2222,4.434,2223,3.867,2224,2.796,2225,3.867,2226,2.796,2227,2.796,2228,2.796,2229,2.796,2230,2.796,2231,2.272,2232,2.272,2233,2.272,2234,2.272,2235,4.76,2236,3.681,2237,3.964,2238,4.826,2239,4.826,2240,3.716,2241,3.716,2242,4.597,2243,3.716,2244,4.826,2245,2.499,2246,4.434,2247,2.796,2248,4.434,2249,2.796,2250,2.588,2251,2.796,2252,2.796,2253,2.796,2254,3.052,2255,2.272,2353,5.071,2354,5.071,2355,5.071,2356,4.497,2357,4.497,2358,4.497,2359,4.497,2360,4.497,2361,4.497,2362,4.497]],["title/classes/ScatterModelInterface.html",[24,0.121,2245,2.576]],["body/classes/ScatterModelInterface.html",[3,0.083,4,0.069,9,0.049,20,0.227,22,0.007,23,0.164,24,0.182,32,0.674,63,0.909,89,0.392,112,0.004,113,0.004,118,0.178,119,0.579,120,1.276,121,0.658,124,0.832,126,0.743,127,0.402,128,0.779,129,1.052,209,1.536,237,0.727,240,1.305,245,0.743,250,0.798,256,0.579,257,0.628,268,0.605,338,0.821,391,1.847,469,1.25,471,1.623,489,1.164,491,0.382,540,1.253,543,1.158,544,1.158,545,1.115,546,1.158,547,1.158,558,1.158,560,1.353,562,1.38,564,2.041,565,1.468,567,1.499,568,1.468,570,1.499,574,1.185,607,1.564,614,0.979,615,0.926,668,2.159,675,2.201,685,1.52,687,1.599,720,2.038,722,2.334,724,2.038,726,2.038,745,3.1,769,1.054,770,1.115,779,1.016,781,1.499,784,2.508,785,2.508,786,2.508,803,1.564,810,1.18,813,1.325,937,1.353,1165,2.595,1196,1.531,1215,1.885,1218,1.599,1219,1.599,1221,2.964,1687,1.986,2114,2.3,2192,2.378,2193,2.556,2201,4.185,2210,4.284,2211,2.463,2212,2.463,2213,3.722,2214,2.378,2215,2.66,2216,2.66,2217,2.66,2218,2.66,2219,2.66,2220,3.735,2221,4.682,2222,4.317,2223,3.735,2224,2.66,2225,3.735,2226,2.66,2227,2.66,2228,2.66,2229,2.66,2230,2.66,2231,2.161,2232,2.161,2233,2.161,2234,2.161,2235,4.793,2236,3.862,2237,3.859,2238,4.739,2239,4.739,2240,3.59,2241,3.59,2242,4.499,2243,3.59,2244,4.739,2245,3.339,2246,4.682,2247,2.66,2248,4.682,2249,2.66,2250,3.458,2251,2.66,2252,2.66,2253,2.66,2254,2.948,2255,2.161,2353,4.898,2354,4.898,2355,4.898,2363,6.008,2364,6.008,2365,4.279,2366,4.279,2367,4.279,2368,4.279,2369,4.279,2370,4.279,2371,4.279,2372,4.279,2373,4.279,2374,4.279,2375,4.279]],["title/modules/ScatterModule.html",[139,1.59,2376,3.153]],["body/modules/ScatterModule.html",[3,0.117,4,0.098,9,0.069,20,0.317,21,0.881,22,0.007,23,0.117,24,0.159,26,1.264,42,1.439,63,1.287,78,2.323,79,2.254,80,2.28,82,2.323,83,2.323,84,2.28,89,0.427,92,1.764,112,0.006,113,0.006,139,2.079,141,2.74,142,2.813,143,3.548,144,2.813,145,3.939,146,2.604,157,3.612,158,2.67,159,2.813,161,3.253,162,3.253,185,4.707,187,3.175,191,4.523,192,2.368,330,2.265,331,2.315,948,2.67,1029,5.047,1030,5.047,1034,5.15,1035,4.208,1036,5.15,1038,5.15,1043,5.15,1046,4.122,1047,5.15,1048,2.67,1058,5.15,1059,2.74,1277,6.172,1278,3.933,1281,4.343,1775,6.177,2036,5.385,2189,5.426,2190,5.047,2191,3.933,2287,4.94,2376,6.66,2377,5.385,2378,5.385,2379,6.06,2380,5.385,2381,6.06,2382,6.06,2383,4.608]],["title/injectables/ScatterService.html",[334,2.042,2190,2.576]],["body/injectables/ScatterService.html",[3,0.07,4,0.058,9,0.041,20,0.263,21,0.526,22,0.007,23,0.07,24,0.095,32,0.786,89,0.419,112,0.004,113,0.004,118,0.263,119,0.513,120,0.769,121,0.524,124,0.885,126,0.866,127,0.452,128,0.908,129,1.048,130,1.537,131,1.453,237,0.785,240,1.276,245,0.357,256,0.794,257,0.641,268,0.631,301,1.764,334,2.347,335,2.083,338,0.995,391,0.813,489,1.134,491,0.321,540,1.676,543,1.887,544,1.887,545,1.817,546,1.887,547,1.887,548,2.408,549,2.863,550,2.613,551,2.863,552,2.863,558,1.442,560,1.684,562,1.718,564,2.541,565,1.827,567,1.267,568,1.827,570,1.267,574,1.375,614,0.828,615,0.783,623,0.925,802,3.071,810,1.469,812,1.906,813,1.818,866,1.625,881,2.037,883,2.037,906,2.288,926,2.863,927,2.472,937,1.684,945,4.129,948,2.347,959,4.319,1283,4.529,1284,3.638,1286,4.996,1287,3.817,1306,4.05,1312,3.817,1314,5.758,1317,3.066,1349,4.05,1913,4.996,1939,2.593,2039,5.152,2081,4.342,2083,4.733,2190,2.96,2192,4.582,2201,3.874,2210,4.047,2213,1.594,2214,4.582,2235,4.319,2236,1.594,2237,3.874,2238,4.165,2239,4.165,2240,3.182,2241,3.182,2242,4.165,2243,3.182,2244,4.165,2245,4.129,2279,2.751,2353,4.342,2354,4.342,2355,4.342,2384,3.215,2385,5.616,2386,6.269,2387,5.326,2388,3.618,2389,3.618,2390,3.618,2391,3.618,2392,3.618,2393,3.618,2394,3.618,2395,3.618,2396,3.618,2397,3.618,2398,3.618,2399,3.618,2400,3.618,2401,3.618,2402,3.618,2403,3.618,2404,3.618,2405,3.618,2406,3.618,2407,3.618,2408,3.618,2409,3.618,2410,3.618,2411,3.618,2412,3.618,2413,3.618,2414,3.618,2415,3.618,2416,5.326,2417,3.618,2418,3.618,2419,5.326,2420,3.618,2421,3.618,2422,3.618,2423,3.618,2424,3.618,2425,3.618,2426,3.618,2427,2.95,2428,5.326,2429,3.618,2430,3.618,2431,3.618,2432,3.618,2433,3.618,2434,3.618,2435,3.618,2436,6.32,2437,6.32,2438,3.618,2439,3.618,2440,3.618,2441,3.618,2442,3.618,2443,3.618,2444,3.618,2445,3.618,2446,3.618,2447,3.618,2448,7.771,2449,7.771,2450,3.618,2451,3.618,2452,3.618,2453,7.43,2454,3.618,2455,3.618,2456,3.618,2457,6.32,2458,3.618,2459,3.618,2460,3.618,2461,3.618,2462,3.618]],["title/classes/ScatterStorage.html",[24,0.121,2386,3.525]],["body/classes/ScatterStorage.html",[3,0.082,4,0.069,9,0.048,20,0.227,22,0.007,23,0.163,24,0.181,32,0.619,89,0.423,112,0.004,113,0.004,118,0.176,119,0.576,120,1.269,121,0.573,124,0.831,126,0.682,127,0.401,128,0.715,129,1.064,130,1.242,131,1.174,209,1.532,237,0.726,240,1.303,245,0.741,250,1.572,256,0.576,257,0.627,268,0.615,338,0.817,391,1.843,469,1.24,471,1.749,489,1.132,491,0.381,540,1.442,543,1.149,544,1.149,545,1.106,546,1.149,547,1.149,558,1.149,560,1.342,562,1.369,565,1.456,567,1.487,568,1.456,570,1.487,574,1.179,607,1.552,614,0.971,615,0.919,668,1.982,675,2.021,685,1.486,687,1.586,720,2.031,722,2.326,724,2.031,726,2.031,745,2.335,769,1.472,770,1.106,779,1.008,781,1.487,784,2.501,785,2.501,786,2.501,803,1.552,810,1.171,813,1.317,853,2.335,854,2.773,855,2.335,863,2.642,866,1.611,869,2.642,875,1.622,878,1.622,881,2.021,883,2.021,885,2.474,937,1.342,1061,3.878,1062,3.878,1063,3.878,1080,2.755,1165,2.584,1196,1.519,1215,1.87,1218,1.586,1219,1.586,1221,2.956,1358,1.97,1687,1.97,2114,2.282,2192,3.321,2193,2.536,2201,4.685,2210,4.556,2211,2.443,2212,2.443,2213,3.306,2214,3.321,2215,2.639,2216,2.639,2217,2.639,2218,2.639,2219,2.639,2220,3.715,2221,4.665,2222,4.299,2223,3.715,2224,2.639,2225,3.715,2226,2.639,2227,2.639,2228,2.639,2229,2.639,2230,2.639,2231,2.144,2232,2.144,2233,2.144,2234,2.144,2235,4.685,2236,3.485,2237,3.321,2238,3.57,2239,3.57,2240,2.536,2241,2.536,2242,2.536,2243,2.536,2244,3.57,2245,2.359,2246,4.299,2247,2.639,2248,4.299,2249,2.639,2250,2.443,2251,2.639,2252,2.639,2253,2.639,2254,2.932,2255,2.144,2385,3.772,2386,3.228,2463,4.245,2464,4.245,2465,4.245,2466,4.245,2467,4.245,2468,4.245,2469,4.245,2470,4.245,2471,4.245,2472,4.245,2473,4.245,2474,4.245]],["title/classes/ScatterTable.html",[24,0.121,2475,3.525]],["body/classes/ScatterTable.html",[0,0.596,3,0.104,4,0.113,9,0.061,14,1.138,15,1.16,16,1.138,18,1.138,20,0.301,21,0.779,22,0.007,23,0.104,24,0.183,32,0.48,79,2.154,84,1.345,109,1.885,112,0.005,113,0.005,118,0.324,119,0.674,121,0.444,124,0.807,126,0.529,127,0.342,128,0.554,129,1.014,130,0.963,131,0.91,137,1.45,237,0.646,240,1.201,245,0.769,250,1.454,256,0.674,257,0.62,268,0.547,301,1.63,338,0.921,469,1.566,471,1.057,489,1.062,491,0.272,574,1.381,590,4.443,595,3.536,609,2.615,610,2.401,615,1.16,621,2.234,622,1.728,623,1.371,632,1.728,633,1.628,634,2.707,648,1.917,649,2.422,650,1.764,654,1.728,656,1.728,779,1.272,813,1.822,815,2.002,866,1.926,943,3.645,995,3.478,1048,2.361,1082,2.791,1083,4.055,1084,4.19,1085,4.304,1086,4.304,1087,5.322,1088,4.19,1089,4.368,1090,4.368,1091,4.368,1092,4.055,1093,4.075,1094,2.881,1095,2.881,1096,2.881,1097,2.881,1098,2.302,1103,3.762,1106,2.881,1109,2.707,1111,2.881,1113,2.881,1115,2.881,1116,2.881,1117,2.881,1368,3.331,1369,3.084,1370,2.556,1371,3.084,1372,3.084,1373,3.084,1374,3.084,1375,2.791,1376,3.084,1883,2.556,2114,2.881,2188,5.813,2190,3.89,2191,3.478,2210,4.465,2211,4.029,2212,4.029,2213,3.084,2279,4.075,2383,6.811,2427,4.368,2475,5.322,2476,4.762,2477,4.762,2478,6.219,2479,4.762,2480,6.219,2481,4.762,2482,6.219,2483,4.762]],["title/components/ScatterTableComponent.html",[0,0.395,84,1.164]],["body/components/ScatterTableComponent.html",[0,0.563,1,0.985,2,1.529,3,0.076,4,0.091,5,1.082,6,1.082,7,1.082,8,1.082,9,0.045,12,1.062,13,1.082,14,2.067,15,2.104,16,1.2,18,1.2,20,0.281,21,0.57,22,0.007,23,0.076,24,0.148,26,0.818,27,1.558,28,1.558,29,1.082,30,1.998,31,1.082,32,0.648,33,1.082,34,1.003,35,1.082,36,0.985,37,1.082,38,0.985,39,1.596,40,1.082,41,1.003,42,1.519,43,2.405,44,0.985,45,1.082,46,1.003,47,2.205,48,0.985,49,2.117,50,1.003,51,1.725,52,0.985,53,1.082,54,1.003,55,0.985,56,0.985,57,1.082,58,0.985,59,1.022,60,0.914,61,1.082,62,0.966,63,0.833,64,1.082,65,1.003,66,1.042,67,1.003,68,1.082,69,1.003,70,1.818,71,0.985,72,1.082,73,1.003,74,1.003,75,0.985,76,0.985,77,1.082,78,1.003,79,2.345,80,0.985,81,1.082,82,1.003,83,1.003,84,1.818,85,0.985,86,1.082,87,1.003,88,1.5,89,0.319,90,1.558,91,1.003,92,0.914,93,1.003,94,1.688,95,0.985,96,1.082,97,1.003,98,1.003,99,0.985,100,0.985,101,0.985,102,1.082,103,1.003,104,1.514,105,0.985,106,1.082,107,1.003,108,0.985,109,2.039,110,1.082,111,1.082,112,0.004,113,0.004,118,0.275,119,0.544,121,0.325,124,0.826,126,0.557,127,0.412,128,0.584,129,0.904,130,1.515,131,1.431,137,1.062,237,0.549,240,1.052,245,0.653,250,0.732,256,0.544,257,0.575,268,0.508,301,1.514,326,1.645,332,1.265,338,1.015,471,1.306,489,1.037,491,0.199,574,1.114,590,3.877,595,1.981,609,2.473,610,2.27,615,0.849,621,2.2,622,1.265,623,1.003,632,2.135,633,1.716,634,1.981,648,2.591,649,1.773,650,1.291,654,2.336,656,1.265,703,1.403,741,1.822,779,1.341,813,1.596,815,1.466,866,0.914,913,1.685,943,2.941,995,2.545,1048,1.728,1082,2.043,1083,3.553,1084,2.108,1085,2.043,1086,2.043,1088,3.036,1092,3.248,1094,2.108,1095,3.036,1096,3.558,1097,3.558,1098,2.844,1103,3.036,1106,2.108,1109,3.344,1111,3.558,1113,3.558,1115,2.108,1116,2.108,1117,2.108,1119,2.982,1120,3.197,1123,2.668,1124,2.668,1128,2.668,1129,2.668,1130,2.668,1368,2.438,1369,2.258,1370,1.871,1371,2.258,1372,2.258,1373,2.258,1374,3.251,1375,3.447,1376,2.258,1384,3.666,1391,3.197,1883,1.871,2114,3.558,2124,3.485,2125,3.485,2126,3.485,2127,3.485,2188,5.885,2190,4.024,2191,2.545,2210,4.472,2211,3.81,2212,3.81,2213,2.916,2279,2.982,2383,6.896,2427,3.197,2475,2.982,2476,5.019,2477,3.485,2478,5.019,2479,3.485,2480,5.019,2481,3.485,2482,5.019,2483,3.485,2484,5.648,2485,3.922]],["title/components/SettingsComponent.html",[0,0.395,85,1.164]],["body/components/SettingsComponent.html",[0,0.65,1,1.29,2,1.843,3,0.1,4,0.083,5,1.417,6,1.417,7,1.417,8,1.417,9,0.059,12,1.391,13,1.417,14,2.096,15,2.134,16,1.446,18,1.446,20,0.285,21,0.747,22,0.007,23,0.132,24,0.178,26,1.072,27,1.878,28,1.878,29,1.417,30,2.242,31,1.417,32,0.61,33,1.417,34,1.314,35,1.417,36,1.29,37,1.417,38,1.29,39,1.792,40,1.417,41,1.314,42,1.652,43,2.538,44,1.29,45,1.417,46,1.314,47,2.398,48,1.29,49,2.333,50,1.314,51,1.99,52,1.29,53,1.417,54,1.314,55,1.29,56,1.29,57,1.417,58,1.29,59,1.339,60,1.197,61,1.417,62,1.266,63,1.092,64,1.417,65,1.314,66,1.365,67,1.314,68,1.417,69,1.314,70,2.041,71,1.29,72,1.417,73,1.314,74,1.314,75,1.29,76,1.29,77,1.417,78,1.314,79,2.119,80,1.29,81,1.417,82,1.314,83,1.314,84,1.29,85,2.123,86,1.417,87,1.314,88,1.808,89,0.29,90,1.878,91,1.314,92,1.197,93,1.314,94,1.894,95,1.29,96,1.417,97,1.314,98,1.314,99,1.29,100,1.29,101,1.29,102,1.417,103,1.314,104,1.747,105,1.29,106,1.417,107,1.314,108,1.29,109,1.243,110,1.417,111,1.417,112,0.005,113,0.005,118,0.214,121,0.633,124,0.625,143,2.208,154,3.495,161,2.208,162,2.925,187,2.855,195,2.676,196,3.546,197,2.103,202,3.907,221,5.177,227,5.177,237,0.426,245,0.672,246,5.194,256,0.656,259,5.53,268,0.451,325,4.566,326,2.855,327,2.521,328,3.07,329,2.385,741,1.657,913,2.208,1053,4.233,1054,3.194,2486,4.189,2487,6.785,2488,6.05,2489,5.138,2490,5.138,2491,5.177,2492,3.907,2493,3.907,2494,5.177,2495,3.682,2496,5.55,2497,5.55,2498,5.55,2499,5.138]],["title/modules/SettingsModule.html",[139,1.59,154,3.153]],["body/modules/SettingsModule.html",[0,0.676,3,0.127,4,0.106,9,0.075,14,1.391,15,1.417,16,1.391,18,1.391,20,0.303,21,0.952,22,0.007,23,0.154,24,0.208,26,1.366,85,2.323,112,0.006,113,0.006,121,0.543,139,2.246,141,2.96,142,3.039,143,3.672,144,3.039,145,3.123,146,2.813,154,6.565,157,3.788,158,2.885,159,3.039,161,3.412,162,3.412,187,3.33,195,3.41,196,4.136,197,2.681,202,4.979,221,4.979,245,0.646,246,5.401,259,4.454,268,0.434,1053,4.937,1054,4.071,2486,5.338,2487,5.819,2488,5.819,2491,6.038,2492,4.979,2493,4.979,2494,6.038,2495,4.692,2496,7.543,2497,7.543,2498,7.543,2500,5.819,2501,5.819,2502,5.819]],["title/components/SimpleDataButtonComponent.html",[0,0.395,87,1.186]],["body/components/SimpleDataButtonComponent.html",[0,0.589,1,1.066,2,1.618,3,0.082,4,0.069,5,1.172,6,1.172,7,1.172,8,1.172,9,0.079,12,1.15,13,1.172,14,2.077,15,2.114,16,1.27,18,1.27,20,0.246,21,0.617,22,0.007,23,0.116,24,0.157,26,0.886,27,1.649,28,1.649,29,1.172,30,2.071,31,1.172,32,0.619,33,1.172,34,1.087,35,1.172,36,1.066,37,1.172,38,1.066,39,1.655,40,1.172,41,1.087,42,1.56,43,2.446,44,1.066,45,1.172,46,1.087,47,2.264,48,1.066,49,2.182,50,1.087,51,1.803,52,1.066,53,1.172,54,1.087,55,1.066,56,1.066,57,1.172,58,1.066,59,1.107,60,0.99,61,1.172,62,1.047,63,1.681,64,1.172,65,1.087,66,1.128,67,1.087,68,1.172,69,1.087,70,1.885,71,1.066,72,1.172,73,1.087,74,1.087,75,1.066,76,1.066,77,1.172,78,1.087,79,1.957,80,1.066,81,1.172,82,1.087,83,1.087,84,1.066,85,1.066,86,1.172,87,2.099,88,2.324,89,0.55,90,1.649,91,1.087,92,0.99,93,1.087,94,1.749,95,1.066,96,1.172,97,1.087,98,1.087,99,1.066,100,1.066,101,1.066,102,1.172,103,1.087,104,1.582,105,1.066,106,1.172,107,1.087,108,1.066,109,1.027,110,1.172,111,1.172,112,0.004,113,0.004,118,0.177,121,0.574,124,0.831,126,0.419,127,0.401,128,0.439,130,1.243,131,1.174,143,1.825,146,1.825,158,3.308,161,1.825,162,2.569,187,1.781,195,2.212,196,3.113,197,3.073,237,0.681,245,0.59,246,4.705,256,0.576,259,5.106,268,0.558,301,1.179,664,2.936,815,2.234,839,3.136,883,1.241,906,1.825,961,3.683,1007,2.538,1029,2.361,1035,5.07,1278,2.757,1629,3.044,1680,4.874,1689,4.874,1702,5.472,1717,4.133,1913,3.044,1975,3.441,2032,4.546,2503,6.537,2504,3.044,2505,5.26,2506,4.546,2507,6.671,2508,5.978,2509,6.671,2510,6.671,2511,7.03,2512,6.147,2513,6.147,2514,6.147,2515,6.147,2516,6.147,2517,5.978,2518,4.248,2519,3.775,2520,4.248,2521,3.775,2522,3.775,2523,5.312,2524,4.248,2525,3.775,2526,4.248,2527,4.248,2528,4.248,2529,3.463,2530,3.23,2531,3.775,2532,6.671,2533,3.775,2534,3.775,2535,5.978,2536,4.874,2537,3.717,2538,3.23]],["title/modules/SimpleDataButtonModule.html",[139,1.59,1029,2.576]],["body/modules/SimpleDataButtonModule.html",[0,0.653,3,0.12,4,0.1,9,0.071,14,1.316,15,1.34,16,1.316,18,1.316,20,0.286,21,0.9,22,0.007,23,0.149,24,0.201,26,1.292,63,1.852,87,2.452,88,2.215,89,0.505,112,0.006,113,0.006,121,0.514,139,2.124,141,2.8,142,2.875,143,3.583,144,2.875,145,2.954,146,3.583,157,3.661,158,2.729,159,2.875,161,3.297,162,3.297,187,2.597,195,3.225,196,3.997,197,3.142,245,0.611,246,5.22,259,4.212,268,0.41,301,1.514,664,2.984,839,3.186,883,1.81,906,2.661,961,3.039,1029,5.24,1035,3.442,1278,4.019,1702,5.815,1717,4.982,1913,4.438,2032,6.942,2503,4.438,2504,4.438,2505,4.709,2506,4.709,2507,5.503,2509,5.503,2510,5.503,2511,6.819,2512,5.503,2513,5.503,2514,5.503,2515,5.503,2516,5.503,2523,5.503,2529,5.049,2530,4.709,2531,5.503,2532,7.746,2533,5.503,2534,5.503,2539,5.503,2540,5.503,2541,6.193,2542,5.503]],["title/components/SimpleGraphButtonComponent.html",[0,0.395,91,1.186]],["body/components/SimpleGraphButtonComponent.html",[0,0.608,1,1.134,2,1.689,3,0.088,4,0.073,5,1.246,6,1.246,7,1.246,8,1.246,9,0.052,12,1.222,13,1.246,14,2.083,15,2.121,16,1.325,18,1.325,20,0.274,21,0.656,22,0.007,23,0.121,24,0.163,26,0.942,27,1.721,28,1.721,29,1.246,30,2.127,31,1.246,32,0.64,33,1.246,34,1.155,35,1.246,36,1.134,37,1.246,38,1.134,39,1.7,40,1.246,41,1.155,42,1.59,43,2.477,44,1.134,45,1.246,46,1.155,47,2.308,48,1.134,49,2.232,50,1.155,51,1.863,52,1.134,53,1.246,54,1.155,55,1.134,56,1.134,57,1.246,58,1.134,59,1.626,60,1.666,61,1.246,62,1.113,63,0.959,64,1.246,65,1.155,66,1.199,67,1.155,68,1.246,69,1.155,70,1.935,71,1.134,72,1.246,73,1.155,74,1.155,75,1.134,76,1.134,77,1.246,78,1.155,79,2.009,80,1.134,81,1.246,82,1.155,83,1.155,84,1.134,85,1.134,86,1.246,87,1.155,88,2.356,89,0.255,90,1.721,91,2.14,92,2.251,93,1.155,94,1.797,95,1.134,96,1.246,97,1.155,98,1.155,99,1.134,100,1.134,101,1.134,102,1.246,103,1.155,104,1.635,105,1.134,106,1.246,107,1.155,108,1.134,109,1.092,110,1.246,111,1.246,112,0.005,113,0.005,118,0.259,119,0.601,121,0.375,124,0.787,126,0.446,127,0.377,128,0.467,137,1.222,143,1.94,146,1.94,158,2.749,161,1.94,162,2.681,181,2.154,187,1.893,195,2.352,196,3.249,197,3.156,237,0.593,245,0.616,256,0.601,257,0.308,268,0.511,301,0.891,329,2.096,602,4.744,609,2.671,648,2.758,671,2.599,673,3.434,881,1.32,892,3.895,902,2.599,908,5.03,1007,3.727,1030,2.51,1035,4.857,1040,3.434,1196,1.616,1235,2.807,1534,5.544,1629,3.236,1640,5.827,1641,5.827,1654,5.827,1657,5.827,1659,5.086,1662,3.681,1689,5.086,1702,5.003,1710,4.744,1717,3.727,1718,2.807,1823,3.681,1824,3.681,2503,6.263,2504,3.236,2505,5.435,2506,4.744,2519,4.013,2521,4.013,2522,4.013,2525,4.013,2530,3.434,2538,3.434,2543,6.85,2544,6.351,2545,4.516,2546,6.239,2547,5.544,2548,4.516,2549,4.516,2550,4.516,2551,5.544,2552,4.013,2553,4.013,2554,4.013,2555,4.013,2556,4.013,2557,5.544,2558,4.516,2559,4.516,2560,3.681,2561,4.516]],["title/modules/SimpleGraphButtonModule.html",[139,1.59,1030,2.576]],["body/modules/SimpleGraphButtonModule.html",[0,0.664,3,0.123,4,0.103,9,0.073,14,1.352,15,1.377,16,1.352,18,1.352,20,0.301,21,0.925,22,0.007,23,0.151,24,0.204,26,1.327,59,1.658,60,1.818,88,2.241,91,2.46,92,2.104,112,0.006,113,0.006,137,1.722,139,2.182,141,2.876,142,2.953,143,3.626,144,2.953,145,3.035,146,3.626,157,3.722,158,2.803,159,2.953,161,2.733,162,3.353,181,3.035,187,2.667,195,3.313,196,4.063,197,3.194,245,0.628,257,0.434,268,0.421,301,1.255,609,2.916,648,2.276,881,1.859,892,3.942,902,3.662,908,4.851,1030,5.173,1035,3.536,1040,4.838,1235,3.955,1640,5.186,1641,5.186,1654,6.361,1657,6.361,1659,5.186,1662,5.186,1702,5.477,1717,4.661,1718,3.955,2503,4.559,2504,4.559,2505,4.838,2506,4.838,2530,4.838,2543,5.653,2544,5.653,2547,5.653,2551,6.933,2552,5.653,2553,5.653,2554,5.653,2555,5.653,2556,5.653,2557,6.933,2562,5.653,2563,5.653,2564,5.653]],["title/classes/SliderUtil.html",[24,0.121,1678,3.322]],["body/classes/SliderUtil.html",[0,0.501,3,0.081,4,0.067,9,0.047,14,0.883,16,0.883,18,0.883,20,0.244,21,0.604,22,0.007,23,0.114,24,0.154,32,0.75,62,1.024,63,1.977,112,0.004,113,0.004,118,0.173,121,0.345,124,0.748,126,0.804,127,0.398,128,0.843,129,1.069,131,1.516,192,1.624,209,1.657,237,0.676,240,1.265,245,0.41,249,4.436,250,0.775,256,0.567,257,0.536,268,0.39,286,4.087,287,2.827,301,1.548,303,2.827,338,0.927,469,1.214,471,1.844,489,1.174,491,0.211,492,1.831,609,2.2,610,2.019,621,2.249,622,1.341,623,1.063,632,1.341,648,1.487,650,2.447,651,3.194,654,1.341,656,1.341,662,2.529,664,2.66,718,2.483,779,1.397,839,3.555,961,3.648,986,4.868,1370,1.982,1375,3.872,1407,3.66,1416,2.584,1670,6.371,1671,5.438,1672,3.16,1673,4.898,1674,3.388,1675,3.388,1676,3.388,1677,3.388,1678,5.328,1681,3.388,1682,7.7,1683,3.388,1684,3.388,1685,3.388,1686,3.388,1687,3.782,1688,3.388,1699,3.388,1702,4.436,1706,3.388,1709,4.799,1713,3.388,1717,3.517,1718,2.584,1719,3.388,1720,3.16,1721,3.388,1722,4.799,1723,4.799,1724,4.799,1725,4.799,1726,3.388,1727,3.388,1728,4.476,1729,3.388,1730,4.799,1731,3.388,1732,3.388,1733,3.388,1734,3.388,1735,4.799,1736,4.476,1737,4.799,1738,3.388,1739,3.388,1740,4.799,1741,3.388,1742,3.388,1743,3.388,1744,3.388,1745,2.697,1746,4.799,1747,3.388,1748,3.388,1749,4.799,1750,3.388,1751,3.388,1752,3.388,1753,3.388,1754,4.799,1755,5.572,1756,6.643,1757,4.799,1758,3.388,1759,4.799,1760,5.572,1761,5.114,1762,4.799,1763,3.388,1764,4.799,1765,5.572,1766,3.388,1767,3.388,1768,3.388,1769,4.799,1770,5.572,1771,3.388,1772,3.388,2565,5.887,2566,5.887,2567,5.887,2568,5.887,2569,5.887,2570,5.887,2571,4.156,2572,4.156,2573,4.156,2574,4.156,2575,4.156,2576,4.156]],["title/components/SpectrumChartFormComponent.html",[0,0.395,93,1.186]],["body/components/SpectrumChartFormComponent.html",[0,0.621,1,1.18,2,1.736,3,0.091,4,0.076,5,1.297,6,1.297,7,1.297,8,1.297,9,0.054,12,1.273,13,1.297,14,2.087,15,2.125,16,1.363,18,1.363,20,0.257,21,0.683,22,0.007,23,0.091,24,0.123,26,0.981,27,1.769,28,1.769,29,1.297,30,2.163,31,1.297,32,0.654,33,1.297,34,1.203,35,1.297,36,1.18,37,1.297,38,1.18,39,1.729,40,1.297,41,1.203,42,1.826,43,2.497,44,1.18,45,1.297,46,1.203,47,2.336,48,1.18,49,2.264,50,1.203,51,1.903,52,1.18,53,1.297,54,1.203,55,1.18,56,1.18,57,1.297,58,1.18,59,1.225,60,1.096,61,1.297,62,1.159,63,0.999,64,1.297,65,1.203,66,1.249,67,1.203,68,1.297,69,1.203,70,1.969,71,1.18,72,1.297,73,1.203,74,1.203,75,1.18,76,1.18,77,1.297,78,1.203,79,2.044,80,1.18,81,1.297,82,1.203,83,1.203,84,1.18,85,1.18,86,1.297,87,1.203,88,1.703,89,0.412,90,1.769,91,1.203,92,1.096,93,2.006,94,2.129,95,1.18,96,1.297,97,1.203,98,1.203,99,1.18,100,1.18,101,1.18,102,1.297,103,1.203,104,1.67,105,1.18,106,1.297,107,1.203,108,1.18,109,1.137,110,1.297,111,1.297,112,0.005,113,0.005,118,0.195,119,0.618,120,1.363,121,0.39,124,0.72,126,0.464,127,0.357,128,0.486,130,0.845,131,0.798,137,1.273,192,1.837,237,0.39,245,0.633,255,5.179,256,0.618,257,0.498,268,0.425,286,2.449,300,3.051,301,1.71,329,2.182,330,2.728,331,1.796,332,1.517,610,2.504,621,2.352,622,1.517,623,1.203,632,2.355,633,1.949,650,1.548,653,2.243,654,2.529,655,2.182,656,1.517,662,2.02,668,1.838,675,1.874,703,1.682,712,2.528,713,4.202,714,3.692,715,4.162,717,3.051,718,2.809,719,3.198,720,1.273,721,3.198,722,1.457,724,1.273,725,3.198,726,1.273,727,3.198,728,3.198,729,4.965,730,3.198,731,3.198,735,3.198,736,4.363,737,3.198,738,3.198,739,3.198,740,4.875,741,1.517,1973,3.575,2577,5.582,2578,6.241,2579,4.358,2580,4.702,2581,3.369,2582,4.702,2583,4.702]],["title/classes/SpectrumChartInfo.html",[24,0.121,2584,2.668]],["body/classes/SpectrumChartInfo.html",[3,0.078,4,0.065,9,0.046,20,0.22,22,0.007,23,0.165,24,0.192,32,0.695,89,0.469,112,0.004,113,0.004,118,0.168,119,0.556,120,1.715,121,0.644,124,0.847,126,0.766,127,0.423,128,0.803,129,1.095,209,0.782,231,2.245,237,0.736,240,1.34,245,0.766,250,1.255,256,0.556,257,0.633,268,0.622,338,0.795,391,1.866,469,1.181,471,1.676,489,1.004,491,0.341,494,1.415,540,1.403,543,1.987,544,1.987,545,1.913,546,1.987,547,1.987,548,2.608,549,3.102,550,2.831,551,3.102,552,3.102,558,1.562,560,1.824,562,1.861,564,1.927,565,1.979,567,2.719,568,1.979,570,2.719,574,1.138,607,1.477,614,0.924,615,0.874,685,1.187,687,1.51,720,1.821,722,2.086,724,1.821,726,1.821,745,2.869,769,1.422,770,1.053,776,1.616,777,1.476,778,1.826,779,0.959,784,2.454,785,2.454,786,2.454,810,1.114,813,1.272,853,1.579,854,1.875,855,1.579,863,1.544,866,0.942,869,1.544,875,1.544,877,1.694,878,1.544,880,1.982,881,1.181,883,1.181,885,1.446,925,1.446,937,1.277,1098,1.736,1165,2.515,1218,1.51,1219,1.51,1221,2.901,1358,1.875,2537,2.512,2584,3.874,2585,2.414,2586,5.77,2587,4.04,2588,4.04,2589,4.04,2590,4.04,2591,4.04,2592,4.04,2593,5.111,2594,4.04,2595,4.04,2596,4.04,2597,4.04,2598,4.04,2599,4.04,2600,4.04,2601,4.04,2602,4.671,2603,2.326,2604,2.326,2605,2.326,2606,3.321,2607,3.744,2608,2.622,2609,3.744,2610,2.622,2611,3.744,2612,3.744,2613,2.622,2614,2.622,2615,2.622,2616,2.622,2617,4.876,2618,4.173,2619,3.874,2620,3.587,2621,3.587,2622,2.326,2623,4.367,2624,3.447,2625,2.622,2626,2.622,2627,2.622,2628,2.622,2629,2.622,2630,2.622,2631,2.622,2632,2.622,2633,2.622,2634,2.326,2635,2.622,2636,2.622,2637,2.622,2638,2.622,2639,2.622,2640,2.622,2641,2.622,2642,2.622,2643,3.744,2644,2.622,2645,3.744,2646,2.622,2647,3.744,2648,2.622,2649,2.104]],["title/interfaces/SpectrumChartInfoStorageObject.html",[491,0.235,2593,2.668]],["body/interfaces/SpectrumChartInfoStorageObject.html",[3,0.088,4,0.073,9,0.052,20,0.235,22,0.007,23,0.17,24,0.202,89,0.501,112,0.005,113,0.005,118,0.189,119,0.603,120,1.859,121,0.594,127,0.377,129,1.092,209,0.879,231,2.522,240,1.362,245,0.762,250,1.337,257,0.606,268,0.618,338,0.847,391,1.928,471,1.653,489,1.037,491,0.363,494,1.59,540,1.306,541,1.435,543,1.228,544,1.228,545,1.183,546,1.228,547,1.228,558,1.228,560,1.435,562,1.464,565,1.557,567,3.008,568,1.557,570,3.008,574,1.235,607,1.659,614,1.038,615,0.982,685,1.264,687,1.696,720,1.228,722,1.407,724,1.228,726,1.228,745,1.774,769,1.543,770,1.183,776,1.815,777,1.601,778,2.052,779,1.078,784,2.562,785,2.562,786,2.562,810,1.252,813,1.38,853,1.774,854,2.107,855,1.774,863,1.734,866,1.058,869,1.734,875,1.734,877,1.903,878,1.734,880,2.227,881,1.326,883,1.326,885,1.624,925,1.624,937,1.435,1098,1.95,1165,2.678,1218,1.696,1219,1.696,1221,3.029,1358,2.107,2537,2.822,2584,3.604,2585,2.712,2593,5.036,2602,4.767,2603,2.613,2604,2.613,2605,2.613,2606,3.604,2607,4.063,2608,2.946,2609,4.063,2610,2.946,2611,4.063,2612,4.063,2613,2.946,2614,2.946,2615,2.946,2616,2.946,2617,4.995,2618,4.357,2619,4.125,2620,3.892,2621,3.892,2622,2.613,2623,4.651,2624,3.74,2625,2.946,2626,2.946,2627,2.946,2628,2.946,2629,2.946,2630,2.946,2631,2.946,2632,2.946,2633,2.946,2634,2.613,2635,2.946,2636,2.946,2637,2.946,2638,2.946,2639,2.946,2640,2.946,2641,2.946,2642,2.946,2643,4.063,2644,2.946,2645,4.063,2646,2.946,2647,4.063,2648,2.946,2649,2.364]],["title/components/SpectrumComponent.html",[0,0.395,95,1.164]],["body/components/SpectrumComponent.html",[0,0.572,1,1.013,2,1.56,3,0.078,4,0.065,5,1.113,6,1.113,7,1.113,8,1.113,9,0.084,12,1.092,13,1.113,14,2.071,15,2.108,16,1.224,18,1.224,20,0.278,21,0.586,22,0.007,23,0.078,24,0.106,26,0.841,27,1.59,28,1.59,29,1.113,30,2.023,31,1.113,32,0.723,33,1.113,34,1.032,35,1.113,36,1.013,37,1.113,38,1.013,39,1.617,40,1.113,41,1.032,42,1.643,43,2.419,44,1.013,45,1.113,46,1.032,47,2.226,48,1.013,49,2.14,50,1.032,51,1.752,52,1.013,53,1.113,54,1.032,55,1.013,56,1.013,57,1.113,58,1.013,59,1.051,60,1.808,61,1.113,62,0.994,63,0.857,64,1.113,65,1.032,66,1.071,67,1.032,68,1.113,69,1.032,70,1.841,71,1.013,72,1.113,73,1.032,74,1.032,75,1.013,76,1.013,77,1.113,78,1.032,79,1.912,80,1.013,81,1.113,82,1.032,83,1.032,84,1.013,85,1.013,86,1.113,87,1.032,88,1.531,89,0.455,90,1.59,91,1.032,92,0.94,93,1.032,94,1.936,95,1.841,96,1.113,97,1.032,98,1.032,99,1.013,100,1.013,101,1.013,102,1.113,103,1.032,104,1.538,105,1.013,106,1.113,107,1.032,108,1.013,109,1.626,110,1.113,111,1.113,112,0.004,113,0.004,118,0.168,119,0.555,121,0.478,124,0.763,126,0.664,127,0.394,128,0.695,129,0.761,130,1.208,131,1.141,157,2.749,181,2.749,197,2.359,209,1.502,237,0.558,245,0.569,250,1.254,256,0.555,257,0.612,268,0.486,301,1.447,326,1.691,327,2.828,328,3.443,330,2.154,332,1.301,471,1.326,492,3.232,610,2.306,621,2.224,622,1.301,623,1.032,632,2.169,633,1.751,650,1.897,651,2.476,654,2.366,656,1.301,662,1.733,671,2.322,674,2.891,685,0.711,703,1.443,741,1.301,777,1.985,783,1.384,815,3.174,816,2.539,881,1.179,883,1.179,890,3.92,891,4.574,892,3.706,893,4.574,894,4.382,896,2.744,899,2.508,900,2.744,901,3.583,902,2.322,903,2.744,905,4.99,906,1.733,907,2.744,908,2.508,909,2.744,910,2.744,911,2.744,912,2.744,913,2.476,914,2.744,915,3.74,916,2.169,917,4.761,918,2.618,919,2.744,920,2.744,921,2.508,922,3.74,961,1.979,1235,4.18,1370,1.924,1412,3.92,1423,4.18,1427,2.618,1625,4.382,1825,3.585,2579,4.077,2581,2.891,2602,3.001,2604,2.322,2605,2.322,2650,3.585,2651,6.724,2652,5.763,2653,6.724,2654,6.724,2655,5.763,2656,5.763,2657,4.034,2658,4.034,2659,5.763,2660,4.034,2661,5.763,2662,5.763,2663,5.763,2664,4.034,2665,5.763,2666,5.763,2667,5.763,2668,4.034,2669,4.034,2670,3.068,2671,4.034,2672,4.034,2673,4.034,2674,4.034,2675,4.034,2676,5.763,2677,4.034,2678,4.034,2679,4.034,2680,4.034,2681,4.034,2682,6.724,2683,4.034,2684,4.034,2685,4.034,2686,4.034,2687,7.336,2688,5.763,2689,5.763,2690,5.121,2691,5.763]],["title/classes/SpectrumData.html",[24,0.121,2606,2.668]],["body/classes/SpectrumData.html",[3,0.083,4,0.069,9,0.049,20,0.227,22,0.007,23,0.167,24,0.197,32,0.621,89,0.486,112,0.004,113,0.004,118,0.288,119,0.578,120,1.683,121,0.657,124,0.791,126,0.684,127,0.367,128,0.717,129,1.065,209,0.826,231,3.332,237,0.682,240,1.351,245,0.782,250,1.293,256,0.578,257,0.612,268,0.621,338,0.819,391,1.896,469,1.246,471,1.7,489,1.116,491,0.352,494,1.494,540,1.25,543,1.154,544,1.154,545,1.112,546,1.154,547,1.154,558,1.154,560,1.348,562,1.376,565,1.463,567,2.634,568,1.463,570,2.634,574,1.368,607,2.534,614,0.976,615,0.923,685,1.222,687,1.594,720,1.154,722,1.322,724,1.154,726,1.154,745,1.667,769,1.477,770,1.112,776,1.705,777,1.533,778,1.928,779,1.012,784,2.505,785,2.505,786,2.505,802,3.054,810,1.654,812,1.526,813,1.812,853,1.667,854,1.98,855,1.667,863,1.629,866,1.753,869,1.629,875,1.629,877,1.788,878,1.629,880,2.093,881,1.246,883,1.246,885,1.526,906,2.576,925,2.691,926,3.223,927,2.783,937,1.895,1098,2.576,1165,2.59,1218,1.594,1219,1.594,1221,2.961,1358,1.98,2537,3.727,2584,3.451,2585,2.548,2593,4.858,2602,4.863,2603,2.455,2604,2.455,2605,2.455,2606,3.99,2607,3.891,2608,3.891,2609,3.891,2610,2.768,2611,3.891,2612,3.891,2613,2.768,2614,2.768,2615,2.768,2616,2.768,2617,4.932,2618,4.259,2619,3.99,2620,3.727,2621,3.727,2622,2.455,2623,4.499,2624,3.582,2625,2.768,2626,2.768,2627,2.768,2628,2.768,2629,2.768,2630,2.768,2631,2.768,2632,2.768,2633,2.768,2634,2.455,2635,2.768,2636,2.768,2637,2.768,2638,2.768,2639,2.768,2640,2.768,2641,2.768,2642,2.768,2643,3.891,2644,2.768,2645,3.891,2646,2.768,2647,3.891,2648,2.768,2649,2.221,2692,5.995,2693,4.265,2694,4.265,2695,4.265,2696,4.265,2697,4.265,2698,4.265]],["title/interfaces/SpectrumDataDict.html",[491,0.235,2602,2.414]],["body/interfaces/SpectrumDataDict.html",[3,0.088,4,0.073,9,0.052,20,0.234,22,0.007,23,0.169,24,0.202,89,0.472,112,0.005,113,0.005,118,0.188,119,0.602,120,1.719,121,0.593,127,0.349,129,1.072,209,0.875,231,2.512,240,1.361,245,0.761,250,1.334,257,0.606,268,0.617,338,0.845,391,2.069,471,1.651,489,1.113,491,0.363,494,1.583,540,1.302,541,1.429,543,1.223,544,1.223,545,1.178,546,1.223,547,1.223,558,1.223,560,1.429,562,1.458,565,1.55,567,2.701,568,1.55,570,2.701,574,1.231,607,1.652,614,1.034,615,0.978,685,1.261,687,1.689,720,1.223,722,1.401,724,1.223,726,1.223,745,1.766,769,1.538,770,1.178,776,1.807,777,1.597,778,2.043,779,1.073,784,2.559,785,2.559,786,2.559,810,1.247,813,1.376,853,1.766,854,2.098,855,1.766,863,1.727,866,1.053,869,1.727,875,1.727,877,1.895,878,1.727,880,2.218,881,1.321,883,1.321,885,1.617,925,1.617,937,1.429,1098,1.942,1165,2.672,1218,1.689,1219,1.689,1221,3.024,1358,2.098,2537,2.81,2584,3.593,2585,2.7,2593,4.937,2602,4.798,2603,4.439,2604,4.439,2605,4.439,2606,3.593,2607,4.051,2608,2.933,2609,4.051,2610,2.933,2611,4.051,2612,4.051,2613,2.933,2614,2.933,2615,2.933,2616,2.933,2617,4.991,2618,4.351,2619,4.116,2620,3.881,2621,3.881,2622,2.602,2623,4.641,2624,3.729,2625,2.933,2626,2.933,2627,2.933,2628,2.933,2629,2.933,2630,2.933,2631,2.933,2632,2.933,2633,2.933,2634,2.602,2635,2.933,2636,2.933,2637,2.933,2638,2.933,2639,2.933,2640,2.933,2641,2.933,2642,2.933,2643,4.051,2644,2.933,2645,4.051,2646,2.933,2647,4.051,2648,2.933,2649,2.354]],["title/components/SpectrumFormComponent.html",[0,0.395,97,1.186]],["body/components/SpectrumFormComponent.html",[0,0.641,1,1.255,2,1.809,3,0.097,4,0.081,5,1.379,6,1.379,7,1.379,8,1.379,9,0.057,12,1.353,13,1.379,14,2.093,15,2.131,16,1.42,18,1.42,20,0.263,21,0.727,22,0.007,23,0.097,24,0.131,26,1.043,27,1.844,28,1.844,29,1.379,30,2.218,31,1.379,32,0.674,33,1.379,34,1.279,35,1.379,36,1.255,37,1.379,38,1.255,39,1.773,40,1.379,41,1.279,42,1.639,43,2.525,44,1.255,45,1.379,46,1.279,47,2.379,48,1.255,49,2.312,50,1.279,51,1.963,52,1.255,53,1.379,54,1.279,55,1.255,56,1.255,57,1.379,58,1.255,59,1.303,60,1.165,61,1.379,62,1.232,63,1.062,64,1.379,65,1.279,66,1.328,67,1.279,68,1.379,69,1.279,70,2.019,71,1.255,72,1.379,73,1.279,74,1.279,75,1.255,76,1.255,77,1.379,78,1.279,79,2.096,80,1.255,81,1.379,82,1.279,83,1.279,84,1.255,85,1.255,86,1.379,87,1.279,88,1.776,89,0.282,90,1.844,91,1.279,92,1.165,93,1.279,94,2.152,95,1.255,96,1.379,97,2.057,98,1.279,99,1.255,100,1.255,101,1.255,102,1.379,103,1.279,104,1.723,105,1.255,106,1.379,107,1.279,108,1.255,109,1.209,110,1.379,111,1.379,112,0.005,113,0.005,118,0.208,119,0.644,121,0.415,124,0.738,126,0.493,127,0.368,128,0.517,130,1.201,131,1.135,137,1.353,190,4.339,192,1.954,237,0.415,249,4.888,256,0.644,268,0.331,286,4.365,301,1.319,329,2.321,330,3.223,331,1.91,332,1.613,633,2.031,703,1.789,712,2.688,713,4.335,714,3.848,717,3.245,741,1.613,1937,4.443,2275,5.941,2577,5.701,2578,6.373,2579,4.469,2581,3.583,2617,2.778,2618,4.323,2624,3.994,2670,3.802,2699,7.532,2700,8.041,2701,5.941,2702,5,2703,5]],["title/components/SpectrumHighchartComponent.html",[0,0.395,98,1.186]],["body/components/SpectrumHighchartComponent.html",[0,0.529,1,0.883,2,1.411,3,0.068,4,0.057,5,0.97,6,0.97,7,0.97,8,0.97,9,0.04,12,0.952,13,0.97,14,2.054,15,2.09,16,1.108,18,1.108,20,0.241,21,0.511,22,0.007,23,0.068,24,0.092,26,1.296,27,1.438,28,1.438,29,0.97,30,2.122,31,0.97,32,0.732,33,0.97,34,0.899,35,0.97,36,0.883,37,0.97,38,0.883,39,1.516,40,0.97,41,0.899,42,1.639,43,2.344,44,0.883,45,0.97,46,0.899,47,2.122,48,0.883,49,2.025,50,0.899,51,1.62,52,0.883,53,0.97,54,0.899,55,0.883,56,0.883,57,0.97,58,0.883,59,0.916,60,0.819,61,0.97,62,0.866,63,0.747,64,0.97,65,0.899,66,1.95,67,0.899,68,0.97,69,0.899,70,1.726,71,0.883,72,0.97,73,0.899,74,0.899,75,0.883,76,0.883,77,0.97,78,0.899,79,1.792,80,0.883,81,0.97,82,0.899,83,0.899,84,0.883,85,0.883,86,0.97,87,0.899,88,1.385,89,0.414,90,1.438,91,0.899,92,0.819,93,0.899,94,2.009,95,0.883,96,0.97,97,0.899,98,1.759,99,0.883,100,0.883,101,0.883,102,0.97,103,0.899,104,1.422,105,0.883,106,0.97,107,0.899,108,0.883,109,0.85,110,0.97,111,0.97,112,0.004,113,0.004,118,0.146,119,0.503,120,1.108,121,0.292,124,0.834,126,0.515,127,0.438,128,0.539,130,1.319,131,1.246,137,0.952,237,0.705,245,0.515,256,0.503,257,0.612,268,0.598,301,1.029,315,5.228,326,1.474,327,1.725,332,1.134,548,3.108,572,3.578,609,2.323,610,2.132,621,2.105,622,1.134,623,0.899,632,2.005,633,1.585,648,2.46,649,1.59,650,1.717,651,2.241,653,1.677,654,2.218,655,1.632,656,1.134,662,3.705,664,2.752,668,1.971,669,3.713,683,3.242,685,0.62,703,1.258,741,1.682,777,0.899,781,1.827,839,1.992,913,1.511,927,3.191,945,2.898,946,4.228,947,4.228,948,3.845,949,4.228,950,3.547,954,4.676,955,4.676,956,4.676,958,3.547,959,3.947,961,2.559,973,3.547,974,3.547,975,3.384,976,3.384,977,3.547,978,5.562,979,3.384,980,3.242,981,3.547,982,3.547,986,2.101,987,3.547,988,3.547,989,3.547,990,2.392,992,2.392,994,3.547,1000,2.52,1001,2.52,1002,2.52,1007,2.101,1245,2.392,1246,4.454,1247,3.737,1248,5.228,1249,4.927,1261,2.52,1262,2.52,1263,2.52,1266,2.674,1267,2.52,1268,2.52,1635,3.547,1964,3.125,1972,3.965,1974,2.867,1977,2.867,1978,2.674,1979,2.674,1980,2.674,1981,2.674,2250,3.002,2302,3.125,2311,4.634,2312,4.634,2313,4.634,2321,5.605,2345,4.251,2346,4.251,2348,4.251,2577,6.216,2579,3.821,2581,2.52,2617,1.954,2624,4.595,2670,2.674,2690,4.634,2701,6.835,2704,7.45,2705,5.215,2706,3.516,2707,3.516,2708,3.516,2709,3.516,2710,3.516,2711,3.516,2712,3.516,2713,3.516,2714,3.516,2715,5.215,2716,5.215,2717,5.215,2718,3.516,2719,5.215,2720,6.109,2721,8.177,2722,5.215,2723,4.634]],["title/interfaces/SpectrumInterface.html",[491,0.235,2619,2.668]],["body/interfaces/SpectrumInterface.html",[3,0.088,4,0.074,9,0.052,20,0.235,22,0.007,23,0.17,24,0.203,32,0.408,89,0.473,112,0.005,113,0.005,118,0.189,120,1.724,121,0.595,124,0.576,126,0.449,127,0.222,128,0.471,129,1.073,209,0.882,231,2.531,237,0.52,240,1.362,245,0.764,250,1.339,256,0.605,257,0.607,268,0.621,338,0.849,391,1.93,471,1.655,489,1.038,491,0.364,494,1.595,540,1.309,541,1.44,543,1.233,544,1.233,545,1.187,546,1.233,547,1.233,558,1.233,560,1.44,562,1.469,565,1.562,567,2.71,568,1.562,570,2.71,574,1.238,607,1.665,614,1.042,615,0.986,685,1.266,687,1.702,720,1.233,722,1.411,724,1.233,726,1.233,745,1.78,769,1.546,770,1.187,776,1.821,777,1.605,778,2.059,779,1.081,784,2.566,785,2.566,786,2.566,810,1.256,813,1.383,853,1.78,854,2.114,855,1.78,863,1.74,866,1.061,869,1.74,875,1.74,877,1.91,878,1.74,880,2.235,881,1.331,883,1.331,885,1.63,925,1.63,937,1.44,1098,1.957,1165,2.683,1218,1.702,1219,1.702,1221,3.032,1358,2.114,2537,2.831,2584,3.612,2585,2.721,2593,4.947,2602,4.77,2603,2.621,2604,2.621,2605,2.621,2606,3.612,2607,4.073,2608,2.956,2609,4.073,2610,2.956,2611,4.073,2612,4.073,2613,2.956,2614,2.956,2615,2.956,2616,2.956,2617,5.127,2618,4.509,2619,4.453,2620,5.045,2621,4.463,2622,2.621,2623,4.659,2624,3.749,2625,2.956,2626,2.956,2627,2.956,2628,2.956,2629,2.956,2630,2.956,2631,2.956,2632,2.956,2633,2.956,2634,2.621,2635,2.956,2636,2.956,2637,2.956,2638,2.956,2639,2.956,2640,2.956,2641,2.956,2642,2.956,2643,4.073,2644,2.956,2645,4.073,2646,2.956,2647,4.073,2648,2.956,2649,2.372,2724,5.116,2725,4.554,2726,4.554]],["title/classes/SpectrumInterfaceImpl.html",[24,0.121,2622,2.668]],["body/classes/SpectrumInterfaceImpl.html",[3,0.086,4,0.072,9,0.051,20,0.232,22,0.007,23,0.169,24,0.201,32,0.399,89,0.47,112,0.005,113,0.005,118,0.185,119,0.595,120,1.71,121,0.668,124,0.739,126,0.439,127,0.302,128,0.46,129,1.07,209,0.862,231,2.474,237,0.588,240,1.358,245,0.794,250,1.323,256,0.595,257,0.617,268,0.619,338,0.839,391,1.918,469,1.301,471,1.718,489,1.032,491,0.36,494,1.56,540,1.288,543,1.205,544,1.205,545,1.16,546,1.205,547,1.205,558,1.205,560,1.408,562,1.436,565,1.527,567,2.684,568,1.527,570,2.684,574,1.219,607,1.628,614,1.019,615,0.964,685,1.251,687,1.664,720,1.205,722,1.38,724,1.205,726,1.205,745,1.74,769,1.522,770,1.16,776,1.78,777,1.58,778,2.013,779,1.057,784,2.545,785,2.545,786,2.545,810,1.228,813,1.362,853,1.74,854,2.067,855,1.74,863,1.701,866,1.038,869,1.701,875,1.701,877,1.867,878,1.701,880,2.185,881,1.301,883,1.301,885,1.593,925,1.593,937,1.408,1098,1.913,1165,2.651,1218,1.664,1219,1.664,1221,3.008,1358,2.067,2537,2.768,2584,3.556,2585,2.66,2593,4.917,2602,4.752,2603,2.563,2604,2.563,2605,2.563,2606,3.556,2607,4.009,2608,2.889,2609,4.009,2610,2.889,2611,4.009,2612,4.009,2613,2.889,2614,2.889,2615,2.889,2616,2.889,2617,5.17,2618,4.682,2619,4.411,2620,5.004,2621,4.41,2622,3.556,2623,4.604,2624,3.691,2625,4.973,2626,2.889,2627,2.889,2628,2.889,2629,2.889,2630,2.889,2631,2.889,2632,2.889,2633,2.889,2634,2.563,2635,2.889,2636,2.889,2637,2.889,2638,2.889,2639,2.889,2640,2.889,2641,2.889,2642,2.889,2643,4.009,2644,2.889,2645,4.009,2646,2.889,2647,4.009,2648,2.889,2649,2.319,2724,5.036,2727,6.178,2728,4.452,2729,4.452,2730,4.452]],["title/modules/SpectrumModule.html",[139,1.59,2731,3.153]],["body/modules/SpectrumModule.html",[3,0.117,4,0.097,9,0.069,20,0.318,21,0.874,22,0.007,23,0.117,24,0.157,26,1.254,42,1.432,63,1.277,89,0.425,92,1.756,93,2.318,94,2.01,95,2.275,97,2.318,98,2.318,99,2.275,112,0.006,113,0.006,139,2.062,141,2.718,142,2.791,143,3.536,144,2.791,145,3.925,146,2.584,157,3.594,158,2.649,159,2.791,161,3.237,162,3.237,185,4.684,187,3.725,188,6.142,190,3.902,191,4.501,192,2.35,330,2.247,331,2.297,948,2.649,1029,5.037,1030,5.037,1034,5.125,1035,4.187,1036,5.125,1038,5.125,1041,4.902,1042,4.89,1043,5.125,1046,4.09,1047,5.125,1048,2.649,1055,6.695,1057,4.902,1058,5.125,1059,2.718,1277,6.142,1278,3.902,1281,4.309,2578,5.729,2579,5.037,2581,4.309,2704,4.902,2731,6.636,2732,5.343,2733,5.343,2734,6.013,2735,5.343,2736,6.013,2737,6.013,2738,4.572,2739,7.534,2740,6.013]],["title/injectables/SpectrumService.html",[334,2.042,2579,2.576]],["body/injectables/SpectrumService.html",[3,0.075,4,0.063,9,0.044,20,0.261,21,0.566,22,0.007,23,0.075,24,0.102,32,0.779,42,1.068,89,0.432,112,0.004,113,0.004,118,0.274,119,0.541,120,0.827,121,0.547,124,0.883,126,0.859,127,0.453,128,0.9,129,1.057,130,1.564,131,1.477,237,0.778,240,1.246,245,0.384,256,0.811,257,0.646,268,0.627,301,1.787,334,2.475,335,2.241,338,1.013,489,1.085,491,0.334,540,1.714,543,1.953,544,1.953,545,1.881,546,1.953,547,1.953,548,2.54,549,3.02,550,2.757,551,3.02,552,3.02,558,1.521,560,1.776,562,1.812,564,1.857,565,1.927,567,1.364,568,1.927,570,1.364,574,1.424,614,0.891,615,0.843,623,0.996,802,3.18,810,1.55,812,2.01,813,1.855,866,1.682,881,2.109,883,2.109,906,2.414,926,3.02,927,2.608,937,1.776,945,3.664,948,2.475,959,4.418,1283,4.724,1284,3.794,1286,5.172,1287,4.026,1312,4.026,1314,5.89,1317,3.234,1349,4.272,2039,5.374,2081,4.58,2579,3.123,2584,4.843,2593,4.154,2602,4.152,2606,4.843,2617,4.431,2618,2.093,2619,4.731,2620,4.487,2621,3.493,2622,4.405,2634,4.843,2670,2.961,2724,4.58,2741,3.46,2742,5.619,2743,3.894,2744,3.894,2745,3.894,2746,3.894,2747,3.894,2748,3.894,2749,3.894,2750,3.894,2751,3.894,2752,3.894,2753,3.894,2754,3.894,2755,3.894,2756,3.894,2757,3.894,2758,3.894,2759,3.894,2760,5.619,2761,3.894,2762,3.894,2763,3.894,2764,3.894,2765,3.894,2766,5.619,2767,3.894,2768,3.894,2769,5.619,2770,3.894,2771,3.894,2772,5.619,2773,3.894,2774,3.894,2775,3.894,2776,3.894,2777,3.894,2778,3.894,2779,3.894,2780,3.894,2781,3.894,2782,3.894,2783,3.894,2784,3.894,2785,3.894,2786,3.894,2787,7.973,2788,7.973,2789,3.894,2790,7.653,2791,3.894,2792,3.894,2793,3.894,2794,3.894,2795,3.894,2796,3.894,2797,3.894,2798,3.894,2799,3.894,2800,3.894,2801,3.894,2802,7.217,2803,3.894,2804,3.894,2805,3.894,2806,3.894,2807,3.894]],["title/classes/SpectrumStorage.html",[24,0.121,2634,2.668]],["body/classes/SpectrumStorage.html",[3,0.08,4,0.066,9,0.047,20,0.223,22,0.007,23,0.165,24,0.194,32,0.608,89,0.471,112,0.004,113,0.004,118,0.171,119,0.563,120,1.66,121,0.564,124,0.826,126,0.671,127,0.397,128,0.703,129,1.071,130,1.221,131,1.153,209,0.796,231,2.285,237,0.72,240,1.344,245,0.771,250,1.62,256,0.563,257,0.628,268,0.625,338,0.803,391,1.876,469,1.201,471,1.775,489,1.009,491,0.345,494,1.44,540,1.417,543,1.113,544,1.113,545,1.072,546,1.113,547,1.113,558,1.113,560,1.3,562,1.326,565,1.41,567,2.592,568,1.41,570,2.592,574,1.152,607,1.503,614,0.941,615,0.89,685,1.198,687,1.536,720,1.113,722,1.274,724,1.113,726,1.113,745,1.607,769,1.674,770,1.072,776,1.644,777,1.494,778,1.859,779,0.976,784,2.471,785,2.471,786,2.471,810,1.134,813,1.288,853,2.655,854,3.154,855,2.655,863,2.827,866,1.724,869,2.827,875,2.232,877,1.724,878,2.232,880,2.017,881,2.162,883,2.162,885,2.647,925,1.471,937,1.3,1061,3.791,1062,3.791,1063,3.791,1080,2.668,1098,1.767,1165,2.539,1218,1.536,1219,1.536,1221,2.92,1358,2.712,2537,2.556,2584,3.911,2585,2.456,2593,5.069,2602,4.789,2603,2.367,2604,2.367,2605,2.367,2606,3.911,2607,3.791,2608,2.668,2609,3.791,2610,2.668,2611,3.791,2612,3.791,2613,2.668,2614,2.668,2615,2.668,2616,2.668,2617,5.042,2618,4.201,2619,4.259,2620,3.632,2621,3.632,2622,2.367,2623,4.41,2624,3.49,2625,2.668,2626,2.668,2627,2.668,2628,2.668,2629,2.668,2630,2.668,2631,2.668,2632,2.668,2633,2.668,2634,3.362,2635,2.668,2636,2.668,2637,2.668,2638,2.668,2639,2.668,2640,2.668,2641,2.668,2642,2.668,2643,3.791,2644,2.668,2645,3.791,2646,2.668,2647,3.791,2648,2.668,2649,2.141,2808,4.111,2809,4.111,2810,4.111,2811,4.111,2812,4.111,2813,4.111,2814,4.111,2815,4.111,2816,4.111,2817,4.111,2818,4.111,2819,4.111]],["title/classes/SpectrumTable.html",[24,0.121,2820,3.525]],["body/classes/SpectrumTable.html",[0,0.599,3,0.105,4,0.114,9,0.062,14,1.149,15,1.17,16,1.149,18,1.149,20,0.298,21,0.786,22,0.007,23,0.105,24,0.184,32,0.484,94,1.933,99,1.357,109,1.893,112,0.005,113,0.005,118,0.325,119,0.678,121,0.448,124,0.809,126,0.534,127,0.344,128,0.559,129,1.016,130,0.972,131,0.918,137,1.464,237,0.649,240,1.205,245,0.773,250,1.46,256,0.678,257,0.621,268,0.549,301,1.636,338,0.925,469,1.58,489,1.001,491,0.274,574,1.389,590,4.453,595,3.557,609,2.631,610,2.415,615,1.17,621,2.244,622,1.744,623,1.383,632,1.744,633,1.643,634,2.732,648,1.935,649,2.444,650,1.78,654,1.744,656,1.744,777,1.383,779,1.284,813,1.828,815,2.021,866,1.933,943,3.667,995,3.509,1048,2.382,1082,2.816,1083,4.069,1084,4.208,1085,4.319,1086,4.319,1088,4.208,1092,4.069,1094,2.907,1095,2.907,1096,2.907,1097,2.907,1098,2.323,1103,3.785,1106,2.907,1109,2.732,1111,2.907,1113,2.907,1115,2.907,1116,2.907,1117,2.907,1368,3.362,1369,3.112,1370,2.579,1371,3.112,1372,3.112,1373,3.112,1374,3.112,1376,3.112,2577,6.106,2579,3.913,2602,4.478,2603,4.052,2604,3.112,2605,3.112,2618,3.785,2738,6.826,2820,5.353,2821,7.04,2822,5.407,2823,5.407,2824,5.407,2825,5.407,2826,4.805,2827,4.805,2828,4.805,2829,6.256,2830,4.805,2831,6.256,2832,4.805,2833,6.256,2834,4.805]],["title/components/SpectrumTableComponent.html",[0,0.395,99,1.164]],["body/components/SpectrumTableComponent.html",[0,0.57,1,1.004,2,1.55,3,0.077,4,0.093,5,1.103,6,1.103,7,1.103,8,1.103,9,0.046,12,1.082,13,1.103,14,2.07,15,2.107,16,1.217,18,1.217,20,0.278,21,0.581,22,0.007,23,0.077,24,0.15,26,0.834,27,1.58,28,1.58,29,1.103,30,2.015,31,1.103,32,0.654,33,1.103,34,1.023,35,1.103,36,1.004,37,1.103,38,1.004,39,1.611,40,1.103,41,1.023,42,1.529,43,2.415,44,1.004,45,1.103,46,1.023,47,2.219,48,1.004,49,2.133,50,1.023,51,1.744,52,1.004,53,1.103,54,1.023,55,1.004,56,1.004,57,1.103,58,1.004,59,1.042,60,0.932,61,1.103,62,0.985,63,0.849,64,1.103,65,1.023,66,1.062,67,1.023,68,1.103,69,1.023,70,1.834,71,1.004,72,1.103,73,1.023,74,1.023,75,1.004,76,1.004,77,1.103,78,1.023,79,1.904,80,1.004,81,1.103,82,1.023,83,1.023,84,1.004,85,1.004,86,1.103,87,1.023,88,1.521,89,0.323,90,1.58,91,1.023,92,0.932,93,1.023,94,2.104,95,1.004,96,1.103,97,1.023,98,1.023,99,1.834,100,1.004,101,1.004,102,1.103,103,1.023,104,1.531,105,1.004,106,1.103,107,1.023,108,1.004,109,2.049,110,1.103,111,1.103,112,0.004,113,0.004,118,0.278,119,0.552,121,0.332,124,0.822,126,0.565,127,0.405,128,0.592,129,0.91,130,1.488,131,1.406,137,1.082,237,0.555,240,1.062,245,0.66,250,0.746,256,0.552,257,0.578,268,0.512,301,1.525,326,1.676,332,1.29,338,1.02,489,0.882,491,0.203,574,1.13,590,3.906,595,2.02,609,2.5,610,2.295,615,0.865,621,2.216,622,1.29,623,1.023,632,2.158,633,1.74,634,2.02,648,2.614,649,1.807,650,1.316,654,2.356,656,1.29,703,1.431,741,1.847,777,1.465,779,1.359,813,1.611,815,1.494,866,0.932,913,1.718,943,2.982,995,2.595,1048,1.761,1082,2.082,1083,3.584,1084,2.149,1085,2.082,1086,2.082,1088,3.078,1092,3.283,1094,2.149,1095,3.078,1096,3.597,1097,3.597,1098,2.875,1103,3.078,1106,2.149,1109,3.38,1111,3.597,1113,3.597,1115,2.149,1116,2.149,1117,2.149,1119,4.354,1121,3.553,1122,2.865,1123,2.72,1124,2.72,1128,2.72,1129,2.72,1130,2.72,1368,2.486,1369,2.301,1370,1.907,1371,2.301,1372,2.301,1373,2.301,1374,3.296,1376,2.301,1384,3.716,1386,3.553,1389,3.553,2577,6.142,2579,4.06,2602,4.493,2603,3.851,2604,2.301,2605,2.301,2618,3.927,2738,6.866,2820,3.04,2826,3.553,2827,3.553,2828,5.089,2829,5.089,2830,3.553,2831,5.089,2832,3.553,2833,5.089,2834,3.553,2835,3.553,2836,3.998,2837,3.998]],["title/components/ToolsNavbarComponent.html",[0,0.395,100,1.164]],["body/components/ToolsNavbarComponent.html",[0,0.592,1,1.076,2,1.628,3,0.083,4,0.069,5,1.182,6,1.182,7,1.182,8,1.182,9,0.049,11,1.989,12,1.16,13,1.182,14,2.078,15,2.116,16,1.278,18,1.278,20,0.299,21,0.623,22,0.007,23,0.117,24,0.158,26,0.894,27,1.659,28,1.659,29,1.182,30,2.079,31,1.182,32,0.539,33,1.182,34,1.096,35,1.182,36,1.076,37,1.182,38,1.076,39,1.814,40,1.182,41,1.096,42,1.564,43,2.451,44,1.076,45,1.182,46,1.096,47,2.27,48,1.076,49,2.19,50,1.096,51,2.069,52,1.076,53,1.182,54,1.096,55,1.076,56,1.076,57,1.182,58,1.076,59,1.117,60,0.999,61,1.182,62,1.056,63,0.91,64,1.182,65,1.096,66,1.138,67,1.096,68,1.182,69,1.096,70,2.066,71,1.076,72,1.182,73,1.096,74,1.096,75,1.076,76,1.076,77,1.182,78,1.096,79,2.145,80,1.076,81,1.182,82,1.096,83,1.096,84,1.076,85,1.076,86,1.182,87,1.096,88,1.598,89,0.242,90,1.659,91,1.096,92,0.999,93,1.096,94,1.918,95,1.076,96,1.182,97,1.096,98,1.096,99,1.076,100,2.122,101,2.275,102,1.182,103,1.096,104,1.816,105,1.076,106,1.182,107,1.096,108,1.076,109,1.036,110,1.182,111,1.182,112,0.004,113,0.004,118,0.178,119,0.58,124,0.638,127,0.209,133,4.311,143,1.841,146,1.841,152,3.594,155,2.915,161,1.841,162,2.585,166,3.071,171,5.126,187,2.522,190,3.904,195,2.232,196,3.133,197,1.754,234,5.401,237,0.499,256,0.58,268,0.398,318,4.091,321,3.808,323,3.259,326,2.522,327,2.103,328,4.152,329,2.792,332,1.94,508,2.382,627,4.574,669,3.594,673,3.259,674,3.071,685,1.329,741,1.94,913,1.841,915,3.904,921,2.664,975,3.904,976,3.904,1023,4.091,1053,3.74,1054,2.664,1060,4.152,1271,4.091,1616,6.144,1625,4.574,1629,3.071,1710,3.259,1718,2.664,1784,4.574,1823,3.493,1824,4.904,1829,6.258,1831,4.574,1835,4.574,1841,6.258,1846,3.904,2027,4.091,2376,4.091,2491,4.574,2492,3.259,2493,3.259,2494,4.574,2495,4.981,2538,3.259,2560,3.493,2731,4.091,2838,6.144,2839,3.493,2840,6.176,2841,5.345,2842,5.345,2843,5.345,2844,5.345,2845,5.345,2846,6.176,2847,5.345,2848,7.511,2849,7.666,2850,4.285,2851,4.285,2852,6.176,2853,5.345,2854,4.285,2855,5.345,2856,3.808,2857,3.808,2858,3.808,2859,4.091,2860,3.808,2861,3.808,2862,3.808,2863,3.808,2864,3.808,2865,3.808,2866,3.808,2867,5.345,2868,6.015,2869,6.015,2870,6.015,2871,6.015,2872,5.345,2873,6.015,2874,6.015,2875,4.285,2876,4.285,2877,3.808,2878,4.285,2879,4.285]],["title/modules/ToolsNavbarModule.html",[139,1.59,155,3.153]],["body/modules/ToolsNavbarModule.html",[0,0.617,3,0.11,4,0.091,9,0.065,11,2.624,14,1.201,15,1.568,16,1.201,18,1.201,20,0.312,21,0.821,22,0.007,23,0.14,24,0.19,26,1.179,100,2.398,101,2.189,112,0.005,113,0.005,133,4.05,139,1.939,141,2.555,142,2.624,143,3.435,144,2.624,145,2.696,146,3.435,152,5.329,155,6.635,157,3.456,158,2.49,159,2.624,161,3.113,162,3.113,166,4.05,171,3.844,187,3.038,195,2.943,196,3.773,197,2.314,627,4.298,1023,6.068,1053,4.504,1054,3.514,1060,4.777,1271,6.068,1616,4.608,1625,4.298,1718,3.514,1784,4.298,1829,6.08,1831,4.298,1835,4.298,1841,6.08,1846,5.789,2027,6.068,2376,6.068,2491,5.509,2492,4.298,2493,4.298,2494,5.509,2495,4.05,2731,6.068,2838,4.608,2839,4.608,2840,5.022,2841,5.022,2842,5.022,2843,5.022,2844,5.022,2845,5.022,2846,5.022,2847,5.022,2848,7.105,2849,7.105,2852,6.438,2853,5.022,2855,5.022,2856,5.022,2857,5.022,2858,5.022,2859,6.068,2860,5.022,2861,5.022,2862,5.022,2863,5.022,2864,5.022,2865,5.022,2866,6.438,2880,5.022,2881,5.022,2882,5.022,2883,5.022]],["title/components/VenusChartFormComponent.html",[0,0.395,103,1.186]],["body/components/VenusChartFormComponent.html",[0,0.62,1,1.176,2,1.732,3,0.091,4,0.076,5,1.292,6,1.292,7,1.292,8,1.292,9,0.054,12,1.268,13,1.292,14,2.087,15,2.125,16,1.359,18,1.359,20,0.256,21,0.681,22,0.007,23,0.091,24,0.123,26,0.977,27,1.765,28,1.765,29,1.292,30,2.16,31,1.292,32,0.653,33,1.292,34,1.198,35,1.292,36,1.176,37,1.292,38,1.176,39,1.726,40,1.292,41,1.198,42,1.826,43,2.495,44,1.176,45,1.292,46,1.198,47,2.334,48,1.176,49,2.261,50,1.198,51,1.899,52,1.176,53,1.292,54,1.198,55,1.176,56,1.176,57,1.292,58,1.176,59,1.221,60,1.092,61,1.292,62,1.154,63,0.995,64,1.292,65,1.198,66,1.244,67,1.198,68,1.292,69,1.198,70,1.966,71,1.176,72,1.292,73,1.198,74,1.198,75,1.176,76,1.176,77,1.292,78,1.198,79,2.041,80,1.176,81,1.292,82,1.198,83,1.198,84,1.176,85,1.176,86,1.292,87,1.198,88,1.699,89,0.411,90,1.765,91,1.198,92,1.092,93,1.198,94,1.825,95,1.176,96,1.292,97,1.198,98,1.198,99,1.176,100,1.176,101,1.176,102,1.292,103,2.003,104,2.069,105,1.176,106,1.292,107,1.198,108,1.176,109,1.133,110,1.292,111,1.292,112,0.005,113,0.005,118,0.195,119,0.617,120,1.359,121,0.389,124,0.719,126,0.462,127,0.356,128,0.484,130,0.842,131,0.795,137,1.268,192,1.831,237,0.389,245,0.631,255,5.174,256,0.617,257,0.497,268,0.424,286,2.44,300,3.041,301,1.708,329,2.175,330,2.723,331,1.79,332,1.511,610,2.499,621,2.349,622,1.511,623,1.198,632,2.35,633,1.944,650,1.542,653,2.235,654,2.526,655,2.175,656,1.511,668,1.834,675,1.87,703,1.676,712,2.519,713,4.194,714,3.683,715,4.153,716,3.358,717,3.041,718,2.799,719,3.187,720,1.268,721,3.187,722,1.452,723,3.358,724,1.268,725,3.187,726,1.268,727,3.187,728,3.187,729,5.326,730,3.187,731,3.187,732,3.358,733,3.358,734,3.358,735,3.187,736,4.352,737,3.187,738,3.187,739,3.187,740,4.868,741,1.511,2884,5.874,2885,6.682,2886,4.507,2887,4.685]],["title/classes/VenusChartInfo.html",[24,0.121,2888,2.769]],["body/classes/VenusChartInfo.html",[3,0.069,4,0.058,9,0.041,20,0.227,22,0.007,23,0.15,24,0.182,32,0.662,89,0.507,104,1.691,112,0.004,113,0.004,118,0.219,119,0.509,120,1.333,121,0.575,124,0.831,126,0.73,127,0.41,128,0.764,129,1.092,130,0.948,209,1.342,236,4.168,237,0.734,238,2.268,240,1.297,245,0.684,250,0.985,256,0.509,257,0.631,268,0.61,338,0.819,391,2.034,469,1.045,471,1.707,489,1.112,491,0.268,540,1.309,543,1.876,544,1.876,545,1.806,546,1.876,547,1.876,548,2.386,549,2.838,550,2.59,551,2.838,552,2.838,558,1.429,560,1.669,562,1.703,564,1.705,565,1.811,567,1.849,568,1.811,570,1.849,574,1.041,607,1.307,614,0.818,615,0.774,668,1.986,675,1.543,685,1.449,720,2.166,722,2.481,724,2.166,726,2.166,769,1.301,770,0.932,777,0.914,779,1.253,784,2.337,785,2.337,786,2.337,803,1.307,810,0.986,812,1.279,813,1.384,853,1.397,855,1.397,863,1.366,864,1.806,865,1.806,866,0.833,867,1.806,868,1.806,869,1.366,873,1.806,875,1.366,876,1.806,877,1.499,878,1.366,881,1.045,883,1.045,885,1.279,925,1.279,937,1.13,1059,2.386,1143,3.726,1165,2.345,1208,1.806,1215,1.575,1218,1.336,1219,1.336,1221,2.763,1358,1.659,1626,5.108,1687,2.913,1761,2.136,1838,2.136,1881,1.616,1882,1.705,1888,2.59,1889,3.919,1894,2.59,1903,3.718,1906,1.754,1975,3.039,2118,2.222,2213,3.054,2231,1.806,2232,1.806,2233,1.806,2234,1.806,2236,3.898,2254,3.797,2255,3.501,2310,4.798,2315,2.32,2338,2.32,2649,1.862,2888,3.749,2889,2.32,2890,5.279,2891,3.575,2892,3.575,2893,3.575,2894,3.575,2895,3.575,2896,3.575,2897,3.575,2898,4.908,2899,3.575,2900,3.575,2901,3.575,2902,3.575,2903,3.575,2904,3.575,2905,3.575,2906,4.448,2907,3.154,2908,3.591,2909,3.591,2910,3.591,2911,2.32,2912,2.432,2913,2.432,2914,3.282,2915,2.432,2916,2.432,2917,2.432,2918,2.432,2919,2.136,2920,3.591,2921,2.432,2922,3.591,2923,2.136,2924,2.432,2925,2.432,2926,2.432,2927,2.432,2928,2.222,2929,2.32,2930,2.432,2931,2.432,2932,4.269,2933,3.591,2934,2.432,2935,3.591,2936,2.432,2937,2.432,2938,2.432,2939,3.591,2940,2.32,2941,4.714,2942,5.332,2943,2.432,2944,2.432,2945,2.432,2946,2.432,2947,3.591,2948,2.32,2949,2.32,2950,2.432,2951,2.432,2952,2.32,2953,2.432,2954,2.432,2955,2.32,2956,2.432]],["title/interfaces/VenusChartInfoStorageObject.html",[491,0.235,2898,2.769]],["body/interfaces/VenusChartInfoStorageObject.html",[3,0.077,4,0.064,9,0.046,20,0.239,22,0.007,23,0.156,24,0.191,89,0.513,104,1.767,112,0.004,113,0.004,118,0.237,119,0.551,120,1.214,121,0.474,127,0.356,129,1.082,130,1.027,209,1.413,236,4.311,237,0.474,238,2.455,240,1.321,245,0.659,250,1.066,257,0.611,268,0.602,338,0.862,391,2.067,471,1.701,489,1.127,491,0.29,540,1.192,541,1.26,543,1.079,544,1.079,545,1.039,546,1.079,547,1.079,558,1.079,560,1.26,562,1.286,565,1.367,567,1.396,568,1.367,570,1.396,574,1.127,607,1.457,614,0.912,615,0.863,668,2.091,675,1.67,685,1.493,720,2.24,722,2.565,724,2.24,726,2.24,769,1.408,770,1.039,777,1.02,779,1.357,784,2.442,785,2.442,786,2.442,803,1.457,810,1.1,812,1.426,813,1.472,853,1.558,855,1.558,863,1.523,864,2.014,865,2.014,866,0.929,867,2.014,868,2.014,869,1.523,873,2.014,875,1.523,876,2.014,877,1.671,878,1.523,881,1.165,883,1.165,885,1.426,925,1.426,937,1.26,1059,2.583,1143,2.143,1165,2.496,1208,2.014,1215,1.756,1218,1.49,1219,1.49,1221,2.886,1358,1.85,1626,5.264,1687,3.1,1761,2.381,1838,2.381,1881,1.802,1882,1.902,1888,2.804,1889,4.039,1894,2.804,1903,3.805,1906,1.956,1975,3.289,2118,2.478,2213,3.214,2231,2.014,2232,2.014,2233,2.014,2234,2.014,2236,3.976,2254,3.943,2255,3.686,2310,5.012,2315,2.587,2338,2.587,2649,2.076,2888,3.414,2889,2.587,2898,4.801,2906,4.6,2907,3.414,2908,3.887,2909,3.887,2910,3.887,2911,2.587,2912,2.711,2913,2.711,2914,3.552,2915,2.711,2916,2.711,2917,2.711,2918,2.711,2919,2.381,2920,3.887,2921,2.711,2922,3.887,2923,2.381,2924,2.711,2925,2.711,2926,2.711,2927,2.711,2928,2.478,2929,2.587,2930,2.711,2931,2.711,2932,4.543,2933,3.887,2934,2.711,2935,3.887,2936,2.711,2937,2.711,2938,2.711,2939,3.887,2940,2.587,2941,4.962,2942,5.495,2943,2.711,2944,2.711,2945,2.711,2946,2.711,2947,3.887,2948,2.587,2949,2.587,2950,2.711,2951,2.711,2952,2.587,2953,2.711,2954,2.711,2955,2.587,2956,2.711]],["title/components/VenusComponent.html",[0,0.395,105,1.164]],["body/components/VenusComponent.html",[0,0.626,1,1.196,2,1.752,3,0.092,4,0.077,5,1.314,6,1.314,7,1.314,8,1.314,9,0.054,12,1.29,13,1.314,14,2.089,15,2.126,16,1.375,18,1.375,20,0.27,21,0.692,22,0.007,23,0.092,24,0.125,26,0.994,27,1.785,28,1.785,29,1.314,30,2.175,31,1.314,32,0.738,33,1.314,34,1.219,35,1.314,36,1.196,37,1.314,38,1.196,39,1.738,40,1.314,41,1.219,42,1.705,43,2.503,44,1.196,45,1.314,46,1.219,47,2.346,48,1.196,49,2.274,50,1.219,51,1.916,52,1.196,53,1.314,54,1.219,55,1.196,56,1.196,57,1.314,58,1.196,59,1.242,60,1.921,61,1.314,62,1.174,63,1.012,64,1.314,65,1.219,66,1.265,67,1.219,68,1.314,69,1.219,70,1.979,71,1.196,72,1.314,73,1.219,74,1.219,75,1.196,76,1.196,77,1.314,78,1.219,79,2.055,80,1.196,81,1.314,82,1.219,83,1.219,84,1.196,85,1.196,86,1.314,87,1.219,88,1.719,89,0.445,90,1.785,91,1.219,92,1.11,93,1.219,94,1.837,95,1.196,96,1.314,97,1.219,98,1.219,99,1.196,100,1.196,101,1.196,102,1.314,103,1.219,104,1.945,105,1.979,106,1.314,107,1.219,108,1.196,109,1.565,110,1.314,111,1.314,112,0.005,113,0.005,118,0.198,121,0.395,124,0.594,126,0.639,127,0.316,128,0.669,129,0.539,137,1.29,181,3.087,197,2.649,237,0.395,256,0.624,257,0.442,268,0.316,326,1.998,327,2.338,328,3.866,330,2.418,332,1.537,633,1.966,671,2.742,685,0.84,703,1.705,741,1.537,777,2.109,783,1.634,815,3.25,816,2.851,881,1.392,883,1.392,890,4.402,891,4.999,892,3.983,893,4.999,894,4.711,896,4.402,899,2.962,900,3.241,901,4.023,902,2.742,903,3.241,904,3.414,905,5.363,906,2.047,907,3.241,908,2.962,909,3.241,910,3.241,911,3.241,912,3.241,913,2.781,914,3.241,915,4.2,916,2.561,917,5.117,918,3.092,919,3.241,920,3.241,921,2.962,922,4.2,1235,4.902,2886,4.538,2957,4.234,2958,7.35,2959,6.472,2960,4.764,2961,4.764,2962,3.414]],["title/classes/VenusData.html",[24,0.121,2907,2.769]],["body/classes/VenusData.html",[3,0.073,4,0.061,9,0.043,20,0.233,22,0.007,23,0.153,24,0.187,32,0.581,89,0.512,104,1.731,112,0.004,113,0.004,118,0.296,119,0.531,120,1.17,121,0.591,124,0.767,126,0.64,127,0.348,128,0.671,129,1.054,130,0.989,209,1.379,236,4.244,237,0.693,238,2.366,240,1.31,245,0.703,250,1.027,256,0.531,257,0.615,268,0.609,338,0.842,391,2.052,469,1.107,471,1.728,489,1.147,491,0.279,540,1.148,543,1.025,544,1.025,545,0.987,546,1.025,547,1.025,558,1.025,560,1.197,562,1.221,565,1.299,567,1.326,568,1.299,570,1.326,574,1.28,607,2.372,614,0.866,615,0.819,668,2.042,675,1.609,685,1.472,720,1.928,722,2.208,724,1.928,726,1.928,769,1.357,770,0.987,777,0.969,779,1.307,784,2.393,785,2.393,786,2.393,802,2.859,803,1.384,810,1.519,812,1.97,813,1.797,853,1.48,855,1.48,863,1.447,864,1.913,865,1.913,866,1.66,867,1.913,868,1.913,869,1.447,873,1.913,875,1.447,876,1.913,877,1.588,878,1.447,881,1.107,883,1.107,885,1.355,906,2.366,925,2.549,926,2.96,927,2.556,937,1.741,1059,2.489,1143,2.036,1165,2.425,1208,1.913,1215,1.668,1218,1.415,1219,1.415,1221,2.828,1358,1.758,1626,5.191,1687,3.012,1761,2.262,1838,2.262,1881,1.712,1882,1.806,1888,2.702,1889,3.983,1894,2.702,1903,3.765,1906,1.858,1975,3.169,2118,2.354,2213,3.139,2231,1.913,2232,1.913,2233,1.913,2234,1.913,2236,3.94,2254,3.875,2255,3.599,2310,4.912,2315,2.457,2338,2.457,2649,1.972,2888,3.29,2889,2.457,2898,4.522,2906,4.923,2907,3.876,2908,3.745,2909,3.745,2910,3.745,2911,2.457,2912,2.576,2913,2.576,2914,3.423,2915,2.576,2916,2.576,2917,2.576,2918,2.576,2919,2.262,2920,3.745,2921,2.576,2922,3.745,2923,2.262,2924,2.576,2925,2.576,2926,2.576,2927,2.576,2928,2.354,2929,2.457,2930,2.576,2931,2.576,2932,4.413,2933,3.745,2934,2.576,2935,3.745,2936,2.576,2937,2.576,2938,2.576,2939,3.745,2940,2.457,2941,4.846,2942,5.419,2943,2.576,2944,2.576,2945,2.576,2946,2.576,2947,3.745,2948,2.457,2949,2.457,2950,2.576,2951,2.576,2952,2.457,2953,2.576,2954,2.576,2955,2.457,2956,2.576,2963,5.506,2964,3.787,2965,3.787,2966,3.787,2967,3.787,2968,3.787,2969,3.787]],["title/interfaces/VenusDataDict.html",[491,0.235,2906,2.576]],["body/interfaces/VenusDataDict.html",[3,0.078,4,0.065,9,0.046,20,0.239,22,0.007,23,0.156,24,0.191,89,0.513,104,1.77,112,0.004,113,0.004,118,0.238,119,0.552,120,1.218,121,0.475,127,0.28,129,1.061,130,1.03,209,1.416,236,4.316,237,0.475,238,2.463,240,1.322,245,0.661,250,1.069,257,0.611,268,0.603,338,0.864,391,2.105,471,1.702,489,1.143,491,0.291,540,1.196,541,1.266,543,1.084,544,1.084,545,1.044,546,1.084,547,1.084,558,1.084,560,1.266,562,1.292,565,1.373,567,1.403,568,1.373,570,1.403,574,1.131,607,1.464,614,0.916,615,0.867,668,2.095,675,1.675,685,1.495,720,1.979,722,2.266,724,1.979,726,1.979,769,1.412,770,1.044,777,1.024,779,1.361,784,2.446,785,2.446,786,2.446,803,1.464,810,1.105,812,1.433,813,1.476,853,1.565,855,1.565,863,1.53,864,2.023,865,2.023,866,0.933,867,2.023,868,2.023,869,1.53,873,2.023,875,1.53,876,2.023,877,1.679,878,1.53,881,1.17,883,1.17,885,1.433,925,1.433,937,1.266,1059,2.591,1143,2.152,1165,2.502,1208,2.023,1215,1.764,1218,1.496,1219,1.496,1221,2.891,1358,1.859,1626,5.27,1687,3.108,1761,2.392,1838,2.392,1881,1.81,1882,1.91,1888,2.813,1889,4.044,1894,2.813,1903,3.91,1906,1.965,1975,3.3,2118,2.489,2213,3.221,2231,2.023,2232,2.023,2233,2.023,2234,2.023,2236,4.059,2254,3.949,2255,3.693,2310,5.021,2315,2.599,2338,2.599,2649,2.085,2888,3.425,2889,2.599,2898,4.622,2906,4.711,2907,3.425,2908,3.899,2909,3.899,2910,3.899,2911,2.599,2912,2.724,2913,2.724,2914,3.564,2915,2.724,2916,2.724,2917,2.724,2918,2.724,2919,2.392,2920,3.899,2921,2.724,2922,3.899,2923,2.392,2924,2.724,2925,2.724,2926,2.724,2927,2.724,2928,2.489,2929,2.599,2930,2.724,2931,2.724,2932,4.555,2933,3.899,2934,2.724,2935,3.899,2936,2.724,2937,2.724,2938,2.724,2939,3.899,2940,2.599,2941,4.973,2942,5.501,2943,2.724,2944,2.724,2945,2.724,2946,2.724,2947,3.899,2948,2.599,2949,2.599,2950,2.724,2951,2.724,2952,2.599,2953,2.724,2954,2.724,2955,2.599,2956,2.724]],["title/components/VenusHighchartComponent.html",[0,0.395,107,1.186]],["body/components/VenusHighchartComponent.html",[0,0.542,1,0.919,2,1.454,3,0.071,4,0.059,5,1.01,6,1.01,7,1.01,8,1.01,9,0.042,12,0.991,13,1.01,14,2.059,15,2.095,16,1.141,18,1.141,20,0.245,21,0.532,22,0.007,23,0.071,24,0.096,26,1.327,27,1.482,28,1.482,29,1.01,30,2.153,31,1.01,32,0.756,33,1.01,34,0.936,35,1.01,36,0.919,37,1.01,38,0.919,39,1.545,40,1.01,41,0.936,42,1.653,43,2.367,44,0.919,45,1.01,46,0.936,47,2.153,48,0.919,49,2.059,50,0.936,51,1.658,52,0.919,53,1.01,54,0.936,55,0.919,56,0.919,57,1.01,58,0.919,59,0.954,60,0.853,61,1.01,62,0.902,63,0.778,64,1.01,65,0.936,66,1.427,67,0.936,68,1.01,69,0.936,70,1.76,71,0.919,72,1.01,73,0.936,74,0.936,75,0.919,76,0.919,77,1.01,78,0.936,79,2.034,80,0.919,81,1.01,82,0.936,83,0.936,84,0.919,85,0.919,86,1.01,87,0.936,88,1.427,89,0.44,90,1.482,91,0.936,92,0.853,93,0.936,94,1.634,95,0.919,96,1.01,97,0.936,98,0.936,99,0.919,100,0.919,101,0.919,102,1.01,103,0.936,104,1.963,105,0.919,106,1.01,107,1.793,108,0.919,109,0.885,110,1.01,111,1.01,112,0.004,113,0.004,118,0.152,119,0.518,120,1.141,121,0.304,124,0.834,126,0.53,127,0.43,128,0.555,130,1.341,131,1.267,137,0.991,237,0.7,245,0.53,256,0.518,257,0.635,268,0.594,301,1.06,315,4.838,326,1.535,327,1.796,332,1.181,548,3.169,572,3.662,609,2.378,610,2.183,621,2.14,622,1.181,623,0.936,632,2.052,633,1.632,648,2.508,649,1.655,650,1.768,651,2.308,653,1.746,654,2.261,656,1.181,662,3.465,664,2.885,669,3.801,683,3.339,703,1.31,741,1.733,777,1.627,779,0.869,839,2.052,913,1.573,927,3.254,945,2.985,946,4.328,947,4.328,948,3.915,949,4.328,950,3.654,954,4.768,955,4.768,956,4.768,958,3.654,959,4.013,961,2.635,973,3.654,974,3.654,975,3.486,976,3.486,977,3.654,978,4.768,979,3.486,980,3.339,981,3.654,982,3.654,986,2.187,987,3.654,988,3.654,989,3.654,990,2.49,992,3.654,994,2.49,1000,2.623,1001,2.623,1002,2.623,1007,2.187,1245,2.49,1246,4.56,1247,3.849,1249,5.023,1250,4.084,1251,2.783,1261,2.623,1262,2.623,1263,2.623,1264,2.783,1265,2.783,1267,2.623,1268,2.623,1270,4.084,1370,1.746,1635,4.328,1966,3.252,1969,3.252,1972,5.33,1973,4.084,1974,2.984,1978,2.783,1979,2.783,1980,2.783,1981,2.783,2321,2.984,2345,5.187,2346,5.187,2347,3.252,2348,4.379,2723,3.252,2884,6.552,2886,4.035,2940,3.486,2955,2.375,2962,2.623,2970,7.453,2971,3.66,2972,3.66,2973,3.66,2974,3.66,2975,3.66,2976,3.66,2977,3.66,2978,5.654,2979,3.66,2980,3.66,2981,3.66,2982,5.371,2983,3.66,2984,3.66,2985,3.66]],["title/classes/VenusModels.html",[24,0.121,2923,2.769]],["body/classes/VenusModels.html",[3,0.065,4,0.055,9,0.039,11,2.347,20,0.221,22,0.007,23,0.147,24,0.176,32,0.543,89,0.531,104,1.797,112,0.004,113,0.004,118,0.21,119,0.487,120,1.074,121,0.419,124,0.741,126,0.598,127,0.384,128,0.627,129,1.038,130,1.572,131,1.333,209,1.304,236,4.599,237,0.651,238,2.894,240,1.283,245,0.598,250,0.943,256,0.487,257,0.636,268,0.585,338,0.796,391,2.015,469,0.986,471,1.843,489,1.165,491,0.256,540,1.054,543,0.913,544,0.913,545,0.879,546,0.913,547,0.913,558,0.913,560,1.066,562,1.088,565,1.157,567,1.181,568,1.157,570,1.181,574,0.997,607,1.233,614,0.772,615,0.73,668,2.411,675,1.477,685,1.424,720,1.823,722,2.087,724,1.823,726,1.823,769,1.246,770,0.879,777,0.863,779,1.2,784,2.281,785,2.281,786,2.281,803,1.233,810,0.93,812,1.207,813,1.337,853,1.318,855,1.318,863,1.289,864,1.704,865,1.704,866,0.786,867,1.704,868,1.704,869,1.289,873,1.704,875,1.289,876,1.704,877,1.414,878,1.289,881,0.986,883,0.986,885,1.207,925,1.207,937,1.066,1059,2.285,1143,1.813,1165,2.266,1208,1.704,1215,1.486,1218,1.26,1219,1.26,1221,2.696,1358,1.566,1626,5.577,1687,2.815,1761,2.015,1838,2.015,1881,1.525,1882,1.609,1888,3.305,1889,4.412,1894,3.716,1903,3.67,1906,1.655,1975,3.877,2118,2.097,2213,3.559,2231,1.704,2232,1.704,2233,1.704,2234,1.704,2236,3.854,2254,4.245,2255,4.25,2310,5.361,2315,2.189,2338,3.935,2649,1.757,2888,3.02,2889,2.189,2898,4.31,2906,4.365,2907,3.02,2908,3.439,2909,3.439,2910,3.439,2911,2.189,2912,2.294,2913,2.294,2914,3.77,2915,2.294,2916,2.294,2917,2.294,2918,2.294,2919,2.015,2920,3.439,2921,2.294,2922,3.439,2923,3.02,2924,2.294,2925,2.294,2926,2.294,2927,4.124,2928,2.097,2929,2.189,2930,4.124,2931,3.439,2932,4.124,2933,5.152,2934,3.439,2935,4.581,2936,4.124,2937,3.439,2938,3.439,2939,4.581,2940,4.371,2941,5.885,2942,5.894,2943,4.124,2944,4.124,2945,4.124,2946,3.439,2947,3.439,2948,2.189,2949,2.189,2950,2.294,2951,2.294,2952,2.189,2953,2.294,2954,2.294,2955,4.371,2956,3.439,2986,5.055,2987,3.373,2988,3.373,2989,3.373,2990,3.373,2991,3.373,2992,3.373,2993,3.373,2994,3.373,2995,3.373]],["title/modules/VenusModule.html",[139,1.59,2859,3.153]],["body/modules/VenusModule.html",[3,0.121,4,0.101,9,0.071,20,0.315,21,0.907,22,0.007,23,0.121,24,0.164,26,1.302,42,1.466,63,1.326,89,0.435,92,1.797,103,2.34,104,1.915,105,2.297,107,2.34,108,2.297,112,0.006,113,0.006,139,2.142,141,2.822,142,2.898,143,3.596,144,2.898,145,3.992,146,2.683,157,3.679,158,2.751,159,2.898,161,3.314,162,3.314,185,4.795,187,3.234,191,4.608,192,2.44,330,2.333,331,2.385,948,2.751,1029,5.084,1030,5.084,1034,5.246,1035,4.286,1036,5.246,1038,4.247,1042,5.006,1043,5.246,1046,4.247,1047,5.246,1048,2.751,1058,5.246,1059,2.822,1281,4.474,2859,6.634,2885,5.09,2886,5.266,2962,4.474,2970,5.09,2996,5.548,2997,5.548,2998,6.244,2999,5.548,3000,6.244,3001,6.244,3002,4.748]],["title/injectables/VenusService.html",[334,2.042,2886,2.668]],["body/injectables/VenusService.html",[3,0.074,4,0.062,9,0.044,20,0.268,21,0.558,22,0.007,23,0.074,24,0.101,32,0.777,89,0.429,104,1.273,112,0.004,113,0.004,118,0.272,119,0.536,120,0.816,121,0.543,124,0.881,126,0.856,127,0.452,128,0.897,129,1.056,130,1.471,131,1.45,237,0.781,240,1.313,245,0.379,256,0.765,257,0.639,268,0.622,301,1.711,334,2.451,335,2.211,338,1.076,391,0.863,489,1.144,540,1.782,543,1.941,544,1.941,545,1.869,546,1.941,547,1.941,548,2.515,549,2.991,550,2.73,551,2.991,552,2.991,558,1.506,560,1.759,562,1.794,564,1.832,565,1.908,567,1.345,568,1.908,570,1.345,574,1.566,614,0.879,615,0.831,623,0.982,769,1.612,770,1.001,781,2.291,802,3.16,810,1.535,812,1.991,813,1.848,815,1.435,866,1.671,881,2.096,883,2.096,906,2.39,926,2.991,927,2.582,937,1.759,945,4.23,948,2.451,959,4.4,1283,4.688,1284,3.765,1286,5.139,1287,3.987,1306,4.23,1311,6.205,1312,3.987,1314,5.454,1317,3.202,1349,4.23,1375,3.406,1384,3.61,2056,4.944,2058,3.413,2099,3.413,2100,3.413,2886,3.202,2888,4.741,2898,3.908,2906,3.635,2907,4.741,2914,4.067,2919,4.741,2923,2.295,3003,3.413,3004,7.171,3005,7.171,3006,7.171,3007,5.563,3008,3.841,3009,3.841,3010,3.841,3011,3.841,3012,3.841,3013,3.841,3014,3.841,3015,5.563,3016,3.841,3017,3.841,3018,3.841,3019,3.841,3020,3.841,3021,3.841,3022,3.841,3023,3.841,3024,3.841,3025,3.841,3026,3.841,3027,3.841,3028,3.841,3029,3.841,3030,3.841,3031,3.841,3032,3.841,3033,5.563,3034,3.841,3035,3.841,3036,5.563,3037,3.841,3038,3.841,3039,3.841,3040,3.841,3041,3.131,3042,3.841,3043,3.841,3044,5.563,3045,3.841,3046,3.841,3047,3.841,3048,3.841,3049,3.841,3050,3.841,3051,3.841,3052,3.841,3053,3.841,3054,7.936,3055,7.936,3056,3.841,3057,3.841,3058,3.841,3059,5.563,3060,3.841,3061,3.841,3062,3.841,3063,5.563,3064,6.541,3065,3.841,3066,3.841,3067,3.841,3068,3.841,3069,3.841,3070,3.841,3071,3.841]],["title/classes/VenusStorage.html",[24,0.121,2919,2.769]],["body/classes/VenusStorage.html",[3,0.072,4,0.06,9,0.042,20,0.231,22,0.007,23,0.152,24,0.185,32,0.575,89,0.511,104,1.718,112,0.004,113,0.004,118,0.226,119,0.523,120,1.153,121,0.45,124,0.801,126,0.633,127,0.367,128,0.663,129,1.059,130,1.268,131,0.921,209,1.367,236,4.219,237,0.724,238,2.332,240,1.306,245,0.697,250,1.463,256,0.523,257,0.622,268,0.615,338,0.834,391,2.046,469,1.085,471,1.671,489,1.117,491,0.275,540,1.338,543,1.005,544,1.005,545,0.968,546,1.005,547,1.005,558,1.005,560,1.174,562,1.198,565,1.274,567,1.301,568,1.274,570,1.301,574,1.071,607,1.358,614,0.849,615,0.804,668,2.023,675,1.586,685,1.464,720,1.91,722,2.187,724,1.91,726,1.91,769,1.581,770,0.968,777,0.95,779,1.289,784,2.374,785,2.374,786,2.374,803,1.358,810,1.024,812,1.329,813,1.414,853,2.507,855,2.507,863,2.697,864,1.876,865,1.876,866,1.645,867,1.876,868,1.876,869,2.697,873,1.876,875,2.074,876,1.876,877,1.557,878,2.074,881,2.063,883,2.063,885,2.525,925,1.329,937,1.174,1059,2.454,1061,3.523,1062,3.523,1063,3.523,1080,2.41,1143,1.996,1165,2.398,1208,1.876,1215,1.636,1218,1.388,1219,1.388,1221,2.806,1358,2.52,1626,5.163,1687,2.978,1761,2.218,1838,2.218,1881,1.679,1882,1.771,1888,2.663,1889,3.962,1894,2.663,1903,3.749,1906,1.822,1975,3.125,2118,2.309,2213,3.11,2231,1.876,2232,1.876,2233,1.876,2234,1.876,2236,3.926,2254,3.848,2255,3.566,2310,4.873,2315,2.41,2338,2.41,2649,1.934,2888,3.833,2889,2.41,2898,4.962,2906,4.785,2907,3.833,2908,3.692,2909,3.692,2910,3.692,2911,2.41,2912,2.526,2913,2.526,2914,3.375,2915,2.526,2916,2.526,2917,2.526,2918,2.526,2919,3.243,2920,3.692,2921,2.526,2922,3.692,2923,2.218,2924,2.526,2925,2.526,2926,2.526,2927,2.526,2928,2.309,2929,2.41,2930,2.526,2931,2.526,2932,4.364,2933,3.692,2934,2.526,2935,3.692,2936,2.526,2937,2.526,2938,2.526,2939,3.692,2940,2.41,2941,4.801,2942,5.39,2943,2.526,2944,2.526,2945,2.526,2946,2.526,2947,3.692,2948,2.41,2949,2.41,2950,2.526,2951,2.526,2952,2.41,2953,2.526,2954,2.526,2955,2.41,2956,2.526,3072,3.713,3073,3.713,3074,3.713,3075,3.713,3076,3.713,3077,3.713,3078,3.713,3079,3.713,3080,3.713,3081,3.713,3082,3.713]],["title/classes/VenusTable.html",[24,0.121,3083,3.525]],["body/classes/VenusTable.html",[0,0.6,3,0.105,4,0.114,9,0.062,14,1.152,15,1.174,16,1.152,18,1.152,20,0.294,21,0.788,22,0.007,23,0.105,24,0.185,32,0.486,70,1.362,104,1.899,108,1.362,109,1.896,112,0.005,113,0.005,118,0.326,119,0.68,121,0.45,124,0.81,126,0.535,127,0.345,128,0.561,129,1.016,130,0.974,131,0.921,137,1.468,237,0.65,240,1.207,245,0.774,250,1.462,256,0.68,257,0.622,268,0.55,301,1.638,338,0.927,469,1.585,489,1.039,491,0.275,590,4.457,595,3.564,609,2.636,610,2.42,621,2.247,622,1.749,623,1.387,632,1.749,633,1.648,634,2.74,648,1.941,649,2.452,650,1.785,651,2.33,654,1.749,656,1.749,781,1.9,813,1.83,815,2.027,866,1.935,943,3.674,1048,2.39,1059,2.452,1082,2.825,1083,3.847,1084,4.215,1085,4.324,1086,4.324,1087,4.124,1088,4.215,1092,4.074,1094,2.916,1095,2.916,1096,2.916,1097,2.916,1098,2.33,1103,3.792,1106,2.916,1109,2.74,1111,2.916,1113,2.916,1115,2.916,1116,2.916,1117,2.916,1368,3.372,1369,3.122,1370,2.587,1371,4.06,1372,3.122,1373,3.122,1374,3.122,1375,2.825,1376,3.122,1903,3.031,2236,3.108,2884,6.438,2886,4.06,2906,4.783,2962,3.887,3002,6.831,3041,4.421,3083,5.961,3084,7.054,3085,5.424,3086,5.424,3087,5.424,3088,4.819,3089,6.268,3090,4.819,3091,6.268,3092,4.819]],["title/components/VenusTableComponent.html",[0,0.395,108,1.164]],["body/components/VenusTableComponent.html",[0,0.57,1,1.004,2,1.55,3,0.077,4,0.093,5,1.103,6,1.103,7,1.103,8,1.103,9,0.046,12,1.082,13,1.103,14,2.07,15,2.107,16,1.217,18,1.217,20,0.271,21,0.581,22,0.007,23,0.077,24,0.15,26,0.834,27,1.58,28,1.58,29,1.103,30,2.015,31,1.103,32,0.654,33,1.103,34,1.023,35,1.103,36,1.004,37,1.103,38,1.004,39,1.611,40,1.103,41,1.023,42,1.529,43,2.415,44,1.004,45,1.103,46,1.023,47,2.219,48,1.004,49,2.133,50,1.023,51,1.744,52,1.004,53,1.103,54,1.023,55,1.004,56,1.004,57,1.103,58,1.004,59,1.042,60,0.932,61,1.103,62,0.985,63,0.849,64,1.103,65,1.023,66,1.062,67,1.023,68,1.103,69,1.023,70,2.02,71,1.004,72,1.103,73,1.023,74,1.023,75,1.004,76,1.004,77,1.103,78,1.023,79,1.904,80,1.004,81,1.103,82,1.023,83,1.023,84,1.004,85,1.004,86,1.103,87,1.023,88,1.521,89,0.323,90,1.58,91,1.023,92,0.932,93,1.023,94,1.702,95,1.004,96,1.103,97,1.023,98,1.023,99,1.004,100,1.004,101,1.004,102,1.103,103,1.023,104,2.048,105,1.004,106,1.103,107,1.023,108,1.834,109,2.049,110,1.103,111,1.103,112,0.004,113,0.004,118,0.278,119,0.552,121,0.332,124,0.822,126,0.565,127,0.405,128,0.592,129,0.91,130,1.488,131,1.406,137,1.082,237,0.555,240,1.062,245,0.66,250,0.746,256,0.552,257,0.578,268,0.512,301,1.525,326,1.676,332,1.29,338,1.02,489,1,491,0.203,590,3.906,595,2.02,609,2.5,610,2.295,621,2.216,622,1.29,623,1.023,632,2.158,633,1.74,634,2.02,648,2.614,649,1.807,650,1.316,651,1.718,654,2.356,656,1.29,703,1.431,741,1.847,781,1.401,813,1.611,815,1.494,866,0.932,913,1.718,943,2.982,1048,1.761,1059,2.589,1082,2.082,1083,2.81,1084,2.149,1085,2.082,1086,2.082,1088,3.078,1092,3.283,1094,2.149,1095,3.078,1096,3.597,1097,3.597,1098,2.875,1103,3.078,1106,2.149,1109,3.38,1111,3.597,1113,3.597,1115,2.149,1116,2.149,1117,2.149,1122,2.865,1123,2.72,1124,2.72,1128,3.895,1129,2.72,1130,2.72,1368,2.486,1369,2.301,1370,1.907,1371,3.296,1372,2.301,1373,2.301,1374,3.296,1375,3.484,1376,2.301,1384,3.716,1388,3.259,1903,2.875,2236,2.948,2835,3.553,2884,6.471,2886,4.205,2906,4.795,2962,2.865,3002,6.866,3041,3.259,3083,5.087,3088,5.089,3089,5.089,3090,3.553,3091,5.089,3092,3.553,3093,3.998,3094,3.998,3095,3.998,3096,3.998,3097,3.998]],["title/coverage.html",[3098,5.178]],["body/coverage.html",[0,0.819,1,0.846,9,0.038,10,2.995,22,0.007,24,0.251,34,0.862,36,0.846,38,0.846,41,0.862,42,1.644,44,0.846,46,0.862,48,0.846,50,0.862,52,0.846,54,0.862,55,0.846,56,0.846,58,0.846,60,1.765,62,0.831,65,0.862,67,0.862,69,0.862,71,0.846,73,0.862,74,0.862,75,0.846,76,0.846,78,0.862,80,0.846,82,0.862,83,0.862,84,0.846,85,0.846,87,0.862,89,0.285,91,0.862,92,1.178,93,0.862,95,0.846,97,0.862,98,0.862,99,0.846,100,0.846,103,0.862,105,0.846,107,0.862,108,0.846,109,0.815,112,0.004,113,0.004,114,2.995,123,2.014,127,0.165,156,2.293,171,2.293,178,2.563,181,2.891,198,2.748,199,2.748,238,3.47,244,2.995,271,1.94,274,1.94,277,1.94,280,1.94,283,1.94,284,1.812,301,0.665,334,3.706,336,2.995,386,1.812,420,2.995,421,2.995,470,4.691,491,0.482,516,1.94,540,0.703,542,4.119,574,0.665,576,2.188,586,2.563,587,4.914,588,3.842,589,4.609,600,1.703,612,1.873,616,1.812,618,1.812,685,1.743,711,2.748,712,4.521,741,2.79,742,4.648,756,1.94,769,0.831,841,1.94,843,1.94,852,1.94,887,2.995,892,1.703,894,2.014,916,2.716,923,2.748,944,2.748,1035,2.808,1037,2.748,1045,3.842,1081,2.563,1082,4.505,1083,1.654,1136,4.825,1137,2.748,1138,1.94,1140,2.096,1141,4.906,1152,2.096,1161,1.94,1164,2.096,1184,3.437,1187,3.279,1192,3.437,1196,1.206,1200,3.279,1210,2.188,1231,2.995,1244,2.748,1245,4.906,1280,3.842,1282,2.995,1285,2.563,1362,2.563,1392,2.188,1393,4.681,1398,2.188,1423,2.096,1430,2.188,1431,2.188,1513,2.995,1516,4.344,1517,2.995,1545,2.748,1546,2.748,1547,2.748,1548,2.748,1589,2.995,1639,2.995,1670,4.609,1671,3.934,1672,4.609,1678,2.416,1745,2.188,1783,2.995,1827,2.748,1859,4.681,1860,3.621,1861,1.873,1863,2.416,1864,4.59,1872,2.416,1881,1.524,1883,1.608,1886,1.812,1908,2.995,1957,2.748,1982,2.293,1995,2.293,2007,2.563,2024,2.563,2035,3.842,2037,2.995,2040,2.563,2113,2.563,2131,2.995,2169,2.995,2179,2.995,2180,2.995,2184,2.995,2185,2.995,2188,4.681,2189,3.621,2190,1.873,2192,1.873,2193,4.825,2201,1.873,2210,1.755,2214,1.873,2235,1.873,2237,1.873,2245,1.873,2256,2.995,2287,2.748,2383,3.842,2384,2.995,2386,2.563,2475,2.563,2486,2.748,2503,3.621,2504,3.621,2577,4.906,2578,3.842,2579,1.873,2584,1.94,2585,4.691,2593,1.94,2602,1.755,2606,1.94,2619,1.94,2622,1.94,2634,1.94,2650,2.995,2704,2.748,2738,3.842,2741,2.995,2820,2.563,2838,2.748,2839,2.748,2867,4.49,2884,4.825,2885,2.748,2886,1.94,2888,2.014,2889,4.914,2898,2.014,2906,1.873,2907,2.014,2919,2.014,2923,2.014,2957,2.995,2970,2.748,3002,3.842,3003,2.995,3083,2.563,3098,2.748,3099,3.371,3100,3.371,3101,3.371,3102,2.995,3103,8.411,3104,3.371,3105,3.371,3106,3.371,3107,6.061,3108,5.053,3109,6.733,3110,7.852,3111,9.029,3112,8.97,3113,3.371,3114,3.371,3115,3.371,3116,7.213,3117,5.053,3118,7.213,3119,7.852,3120,3.371,3121,3.371,3122,3.371,3123,3.371,3124,7.852,3125,3.371,3126,7.852,3127,3.371,3128,6.061,3129,5.053,3130,5.053,3131,3.371,3132,5.053,3133,3.371,3134,3.371,3135,3.371,3136,3.371,3137,3.371,3138,6.733,3139,6.729,3140,2.995,3141,6.061,3142,2.995,3143,3.371,3144,3.371,3145,3.371,3146,3.371,3147,2.995,3148,2.995,3149,3.371,3150,3.371,3151,3.371,3152,3.371,3153,3.371,3154,3.371,3155,3.371,3156,2.995,3157,4.119,3158,2.995,3159,3.371]],["title/dependencies.html",[142,2.591,3160,3.429]],["body/dependencies.html",[9,0.075,21,0.96,22,0.007,112,0.006,113,0.006,142,3.066,144,3.982,164,6.507,165,6.507,192,2.581,202,5.022,573,4.286,623,1.689,633,2.007,948,3.926,980,4.962,1048,2.91,1051,5.869,1052,5.384,1059,2.986,1092,3.24,1278,4.286,1551,7.093,1635,4.492,1636,5.869,1814,5.869,3161,6.604,3162,9.626,3163,6.604,3164,6.604,3165,6.604,3166,6.604,3167,6.604,3168,6.604,3169,6.604,3170,7.982,3171,6.604,3172,6.604,3173,6.604,3174,6.604,3175,7.982,3176,6.604,3177,6.604,3178,6.604,3179,6.604,3180,6.604,3181,6.604,3182,6.604,3183,7.982,3184,6.604,3185,6.604,3186,6.604,3187,6.604,3188,6.604,3189,6.604,3190,6.604,3191,6.604,3192,6.604,3193,6.604,3194,6.604,3195,6.604,3196,6.604,3197,6.604,3198,6.604]],["title/miscellaneous/enumerations.html",[3199,2.399,3200,4.96]],["body/miscellaneous/enumerations.html",[22,0.007,89,0.418,94,1.363,112,0.006,113,0.006,118,0.243,130,1.46,131,1.682,158,3.262,263,4.115,331,2.829,361,4.262,364,4.262,369,4.262,373,4.262,470,3.494,491,0.376,495,5.051,496,3.494,497,5.051,498,3.494,501,3.636,502,3.636,503,3.494,504,4.603,505,3.636,506,3.636,507,4.603,508,4.115,509,4.424,510,4.603,511,3.636,512,3.636,513,3.636,617,3.98,668,2.122,712,4.591,742,3.367,771,4.424,772,3.532,773,3.532,774,4.424,775,4.424,776,2.961,777,1.894,778,3.347,779,1.758,780,3.367,781,2.049,782,3.494,783,2.006,1393,3.796,1394,5.036,1395,4.603,1396,5.036,1397,5.036,1427,4.805,1454,3.978,1455,3.978,1456,3.978,1859,3.796,1860,4.192,1864,3.251,1903,3.181,1905,3.98,1930,5.036,1939,5.306,1955,6.58,1956,5.036,2188,3.796,2189,4.192,2213,3.262,2236,3.262,2286,6.58,2585,3.494,2617,4.115,2618,3.98,3199,3.636,3200,5.197,3201,8.81,3202,7.405,3203,7.405,3204,5.849,3205,5.849,3206,5.849,3207,5.849,3208,7.405]],["title/miscellaneous/functions.html",[3199,2.399,3209,4.96]],["body/miscellaneous/functions.html",[9,0.064,11,4.129,22,0.007,32,0.821,42,1.72,89,0.474,112,0.005,113,0.005,118,0.299,126,0.893,127,0.442,128,0.936,129,1.101,130,1.005,131,0.949,135,4.253,198,4.56,199,5.866,231,3.108,232,4.253,233,4.895,234,5.702,235,5.866,237,0.738,238,3.092,239,4.97,489,1.135,492,3.17,576,4.67,626,6.299,668,2.28,675,2.325,685,1.403,688,4.56,777,1.431,778,2.528,1098,3.092,1108,4.253,1196,2.001,1395,3.477,1401,3.63,1404,5.911,1464,5.163,1527,6.486,1535,4.97,1545,5.866,1546,5.866,1547,5.866,1548,6.848,1572,6.848,1578,4.97,1583,4.97,1736,4.253,1881,3.253,2117,4.253,2536,4.56,2928,3.477,2929,3.63,3102,6.394,3139,4.97,3140,6.394,3142,6.394,3147,4.97,3199,3.477,3209,4.97,3210,9.048,3211,5.593,3212,5.593,3213,5.593,3214,4.97,3215,5.593,3216,5.593,3217,4.97,3218,5.593,3219,5.593,3220,5.593,3221,5.593,3222,7.196,3223,7.956,3224,5.593,3225,5.593,3226,5.593,3227,5.593,3228,5.593,3229,5.593,3230,5.593,3231,5.593,3232,5.593,3233,4.97,3234,4.97,3235,5.593,3236,5.593,3237,5.593,3238,5.593,3239,5.593,3240,7.196,3241,7.196,3242,7.196,3243,7.196,3244,4.97,3245,4.97,3246,4.97,3247,5.593,3248,5.593,3249,5.593,3250,5.593,3251,5.593,3252,5.593,3253,5.593,3254,7.196,3255,7.196,3256,5.593]],["title/index.html",[118,0.16,3257,3.429,3258,3.429]],["body/index.html",[4,0.106,9,0.075,12,1.774,22,0.006,89,0.37,101,1.995,112,0.006,113,0.006,132,6.971,133,6.128,134,6.043,144,3.043,159,3.043,211,5.826,231,4.417,232,4.985,233,4.459,492,2.888,573,4.255,899,4.076,1059,3.592,1092,3.217,1208,3.312,1635,4.459,1717,3.917,2603,3.774,3157,5.345,3259,7.947,3260,6.556,3261,7.062,3262,5.826,3263,7.062,3264,6.556,3265,6.556,3266,6.556,3267,6.556,3268,6.556,3269,6.556,3270,6.556,3271,6.556,3272,7.062,3273,5.826,3274,6.556,3275,6.556,3276,5.826,3277,7.947,3278,6.556,3279,6.556,3280,6.556,3281,7.947,3282,6.556,3283,5.826,3284,6.556,3285,6.556,3286,6.556,3287,5.826,3288,6.556,3289,6.556,3290,5.826,3291,6.556,3292,6.556,3293,6.556,3294,5.826,3295,6.556,3296,5.826,3297,5.826,3298,5.826,3299,5.826,3300,8.552,3301,6.556,3302,7.947,3303,5.826,3304,6.556,3305,6.556,3306,7.947,3307,7.062,3308,8.457,3309,8.89,3310,6.556,3311,5.826,3312,6.556,3313,7.947,3314,5.826,3315,6.556,3316,7.947,3317,5.826,3318,6.556,3319,6.556,3320,5.826,3321,5.826,3322,6.556,3323,6.556]],["title/license.html",[3257,3.429,3258,3.429,3324,3.429]],["body/license.html",[0,0.394,4,0.143,9,0.029,20,0.048,22,0.002,24,0.038,25,5.141,60,2.003,66,0.388,89,0.192,101,0.367,112,0.003,113,0.002,124,0.134,127,0.125,159,0.678,225,1.299,230,0.909,231,0.812,232,3.867,235,6.6,240,0.212,256,0.141,257,0.1,268,0.097,301,1.08,319,1.191,330,2.453,338,0.965,485,1.47,489,0.308,491,0.278,492,0.644,503,0.873,509,0.873,517,0.909,541,1.075,621,0.419,626,5.356,630,0.909,633,0.776,671,1.47,687,0.546,776,2.033,777,1.183,778,0.661,779,1.098,780,1.47,781,1.621,783,1.166,819,1.525,833,2.826,899,0.909,918,0.949,921,0.909,961,0.717,979,0.949,1060,0.873,1108,1.111,1181,0.697,1187,2.206,1196,1.216,1200,1.657,1204,0.949,1208,1.29,1210,1.657,1290,2.269,1395,0.909,1400,2.772,1401,3.3,1413,3.723,1419,0.994,1447,3.147,1572,3.322,1591,1.299,1592,1.299,1617,3.621,1618,1.299,1620,1.299,1623,2.269,1624,1.299,1626,0.909,1717,2.031,1728,1.111,1784,1.941,1826,4.519,1828,1.191,1830,3.322,1838,2.434,1890,0.841,1975,0.841,2117,1.111,2254,0.717,2269,1.299,2317,1.299,2334,1.299,2335,2.269,2495,1.83,2536,3.322,2538,2.585,2560,1.191,2720,1.299,2872,1.299,2877,1.299,2911,0.949,2914,0.909,2928,0.909,2942,0.949,2948,0.949,2949,2.206,2952,6.163,2978,1.299,3098,2.081,3148,1.299,3214,5.158,3217,6.432,3233,1.299,3234,2.269,3244,1.299,3245,3.021,3246,2.269,3261,2.269,3262,4.519,3263,6.305,3272,1.299,3273,4.111,3276,3.021,3283,6.165,3287,1.299,3290,7.903,3294,1.299,3296,3.021,3297,3.621,3298,2.269,3299,4.863,3303,3.621,3307,1.299,3308,5.158,3314,1.299,3317,2.269,3320,1.299,3321,2.269,3324,8.473,3325,7.696,3326,8.027,3327,7.251,3328,1.462,3329,1.462,3330,3.399,3331,8.429,3332,5.805,3333,7.789,3334,8.278,3335,5.085,3336,1.462,3337,1.462,3338,2.553,3339,4.626,3340,8.161,3341,4.626,3342,3.399,3343,7.096,3344,3.399,3345,1.462,3346,3.399,3347,1.462,3348,1.462,3349,2.553,3350,5.085,3351,1.462,3352,1.462,3353,1.462,3354,5.805,3355,2.553,3356,4.626,3357,1.462,3358,1.462,3359,7.096,3360,8.983,3361,3.399,3362,3.399,3363,6.092,3364,2.553,3365,2.553,3366,5.473,3367,7.096,3368,5.085,3369,1.462,3370,1.462,3371,4.075,3372,5.805,3373,2.553,3374,5.805,3375,3.399,3376,1.462,3377,2.553,3378,1.462,3379,3.399,3380,7.696,3381,4.626,3382,2.553,3383,4.075,3384,1.462,3385,1.462,3386,2.553,3387,4.075,3388,4.075,3389,2.553,3390,6.762,3391,2.553,3392,4.626,3393,7.874,3394,4.626,3395,2.553,3396,4.075,3397,1.462,3398,5.473,3399,4.626,3400,1.462,3401,5.805,3402,5.085,3403,8.516,3404,3.399,3405,5.473,3406,1.462,3407,5.805,3408,2.553,3409,6.565,3410,6.343,3411,2.553,3412,1.462,3413,1.462,3414,7.239,3415,2.553,3416,1.462,3417,1.462,3418,6.938,3419,2.553,3420,1.462,3421,3.399,3422,1.462,3423,1.462,3424,2.553,3425,1.462,3426,1.462,3427,5.085,3428,4.075,3429,1.462,3430,1.462,3431,1.462,3432,1.462,3433,1.462,3434,1.462,3435,2.553,3436,1.462,3437,1.462,3438,2.553,3439,3.399,3440,2.553,3441,1.462,3442,1.462,3443,2.553,3444,2.553,3445,7.096,3446,1.462,3447,2.553,3448,2.553,3449,1.462,3450,1.462,3451,2.553,3452,3.399,3453,2.553,3454,3.399,3455,2.553,3456,1.462,3457,1.462,3458,5.085,3459,1.462,3460,1.462,3461,1.462,3462,4.626,3463,1.462,3464,4.075,3465,1.462,3466,1.462,3467,2.553,3468,3.399,3469,1.462,3470,6.762,3471,1.462,3472,6.092,3473,1.462,3474,7.096,3475,4.075,3476,4.626,3477,5.085,3478,1.462,3479,3.399,3480,7.596,3481,2.553,3482,1.462,3483,1.462,3484,1.462,3485,3.399,3486,6.343,3487,1.462,3488,1.462,3489,2.553,3490,2.553,3491,1.462,3492,6.343,3493,1.462,3494,4.075,3495,5.805,3496,1.462,3497,3.399,3498,3.399,3499,2.553,3500,8.818,3501,3.399,3502,6.092,3503,4.075,3504,5.473,3505,2.553,3506,1.462,3507,2.553,3508,3.399,3509,6.092,3510,6.343,3511,4.075,3512,1.462,3513,2.553,3514,2.553,3515,4.075,3516,4.075,3517,5.413,3518,1.462,3519,3.399,3520,1.462,3521,8.221,3522,2.553,3523,1.462,3524,5.805,3525,1.462,3526,3.399,3527,5.805,3528,1.462,3529,7.239,3530,4.075,3531,2.553,3532,5.805,3533,6.565,3534,5.085,3535,1.462,3536,1.462,3537,1.462,3538,5.805,3539,1.462,3540,2.553,3541,6.938,3542,1.462,3543,3.399,3544,3.399,3545,1.462,3546,1.462,3547,1.462,3548,3.399,3549,3.399,3550,1.462,3551,1.462,3552,1.462,3553,1.462,3554,2.553,3555,6.343,3556,1.462,3557,1.462,3558,1.462,3559,4.626,3560,3.399,3561,3.399,3562,5.085,3563,3.399,3564,3.399,3565,1.462,3566,4.626,3567,1.462,3568,1.462,3569,1.462,3570,3.399,3571,1.462,3572,3.399,3573,1.462,3574,1.462,3575,1.462,3576,2.553,3577,1.462,3578,8.027,3579,5.805,3580,1.462,3581,5.085,3582,2.553,3583,1.462,3584,2.553,3585,2.553,3586,4.075,3587,1.462,3588,1.462,3589,1.462,3590,2.553,3591,3.399,3592,4.626,3593,1.462,3594,2.553,3595,5.085,3596,1.462,3597,4.075,3598,1.462,3599,6.343,3600,5.473,3601,1.462,3602,4.626,3603,1.462,3604,2.553,3605,1.462,3606,1.462,3607,3.399,3608,1.462,3609,1.462,3610,1.462,3611,3.399,3612,1.462,3613,1.462,3614,2.553,3615,4.626,3616,2.553,3617,1.462,3618,2.553,3619,1.462,3620,1.462,3621,1.462,3622,1.462,3623,1.462,3624,1.462,3625,3.399,3626,1.462,3627,7.239,3628,1.462,3629,1.462,3630,1.462,3631,4.626,3632,4.626,3633,1.462,3634,1.462,3635,3.399,3636,1.462,3637,1.462,3638,4.075,3639,1.462,3640,1.462,3641,1.462,3642,1.462,3643,1.462,3644,1.462,3645,1.462,3646,2.553,3647,2.553,3648,1.462,3649,3.399,3650,1.462,3651,1.462,3652,2.553,3653,1.462,3654,1.462,3655,1.462,3656,1.462,3657,2.553,3658,2.553,3659,2.553,3660,2.553,3661,6.092,3662,2.553,3663,1.462,3664,1.462,3665,2.553,3666,3.399,3667,3.399,3668,4.075,3669,4.075,3670,3.399,3671,4.075,3672,1.462,3673,4.626,3674,4.626,3675,3.021,3676,1.462,3677,2.553,3678,2.553,3679,4.626,3680,2.553,3681,4.075,3682,2.553,3683,3.399,3684,7.096,3685,4.626,3686,1.462,3687,1.462,3688,1.462,3689,3.399,3690,3.399,3691,2.553,3692,1.462,3693,1.462,3694,1.462,3695,1.462,3696,2.553,3697,1.462,3698,1.462,3699,3.399,3700,1.462,3701,1.462,3702,2.553,3703,3.399,3704,1.462,3705,2.553,3706,1.462,3707,3.399,3708,1.462,3709,1.462,3710,2.553,3711,2.553,3712,5.085,3713,7.874,3714,3.399,3715,2.553,3716,2.553,3717,2.553,3718,2.553,3719,4.075,3720,1.462,3721,1.462,3722,1.462,3723,1.462,3724,5.085,3725,2.553,3726,1.462,3727,4.626,3728,1.462,3729,1.462,3730,1.462,3731,2.553,3732,1.462,3733,2.553,3734,1.462,3735,5.805,3736,1.462,3737,6.565,3738,1.462,3739,1.462,3740,1.462,3741,1.462,3742,1.462,3743,1.462,3744,2.553,3745,1.462,3746,1.462,3747,1.462,3748,2.553,3749,3.399,3750,4.626,3751,2.553,3752,4.075,3753,4.075,3754,2.553,3755,1.462,3756,1.462,3757,2.553,3758,1.462,3759,1.462,3760,1.462,3761,2.553,3762,1.462,3763,1.462,3764,3.399,3765,4.075,3766,1.462,3767,2.553,3768,1.462,3769,2.553,3770,1.462,3771,3.399,3772,1.462,3773,1.462,3774,1.462,3775,1.462,3776,1.462,3777,2.553,3778,1.462,3779,1.462,3780,1.462,3781,1.462,3782,1.462,3783,3.399,3784,1.462,3785,1.462,3786,1.462,3787,1.462,3788,1.462,3789,4.626,3790,1.462,3791,4.075,3792,1.462,3793,1.462,3794,1.462,3795,1.462,3796,1.462,3797,1.462,3798,1.462,3799,1.462,3800,5.473,3801,1.462,3802,4.075,3803,1.462,3804,1.462,3805,3.399,3806,1.462,3807,1.462,3808,3.399,3809,1.462,3810,2.553,3811,1.462,3812,1.462,3813,1.462,3814,1.462,3815,1.462,3816,1.462,3817,1.462,3818,1.462,3819,2.553,3820,1.462,3821,1.462,3822,1.462,3823,1.462,3824,2.553,3825,2.553,3826,1.462,3827,1.462,3828,3.399,3829,1.462,3830,3.399,3831,2.553,3832,1.462,3833,2.553,3834,1.462,3835,2.553,3836,1.462,3837,3.399,3838,5.473,3839,1.462,3840,1.462,3841,1.462,3842,1.462,3843,1.462,3844,1.462,3845,1.462,3846,2.553,3847,4.075,3848,1.462,3849,4.626,3850,1.462,3851,1.462,3852,1.462,3853,1.462,3854,1.462,3855,1.462,3856,2.553,3857,2.553,3858,2.553,3859,3.399,3860,1.462,3861,2.553,3862,2.553,3863,1.462,3864,3.399,3865,1.462,3866,2.553,3867,1.462,3868,2.553,3869,1.462,3870,2.553,3871,1.462,3872,1.462,3873,2.553,3874,8.027,3875,2.553,3876,1.462,3877,4.626,3878,6.343,3879,3.399,3880,1.462,3881,1.462,3882,1.462,3883,4.075,3884,1.462,3885,1.462,3886,3.399,3887,2.553,3888,1.462,3889,1.462,3890,1.462,3891,2.553,3892,1.462,3893,1.462,3894,1.462,3895,1.462,3896,4.075,3897,2.553,3898,1.462,3899,1.462,3900,3.399,3901,1.462,3902,2.553,3903,3.399,3904,2.553,3905,1.462,3906,1.462,3907,1.462,3908,1.462,3909,2.553,3910,3.399,3911,1.462,3912,1.462,3913,2.553,3914,1.462,3915,2.553,3916,1.462,3917,1.462,3918,1.462,3919,1.462,3920,1.462,3921,3.399,3922,2.553,3923,1.462,3924,4.075,3925,1.462,3926,3.399,3927,1.462,3928,1.462,3929,2.553,3930,1.462,3931,1.462,3932,1.462,3933,3.399,3934,2.553,3935,2.553,3936,1.462,3937,5.473,3938,2.553,3939,3.399,3940,4.075,3941,1.462,3942,1.462,3943,1.462,3944,2.553,3945,1.462,3946,3.399,3947,1.462,3948,2.553,3949,1.462,3950,1.462,3951,1.462,3952,1.462,3953,3.399,3954,1.462,3955,2.553,3956,3.399,3957,2.553,3958,1.462,3959,2.553,3960,1.462,3961,1.462,3962,2.553,3963,2.553,3964,1.462,3965,1.462,3966,2.553,3967,1.462,3968,1.462,3969,1.462,3970,1.462,3971,3.399,3972,1.462,3973,1.462,3974,1.462,3975,1.462,3976,1.462,3977,4.075,3978,2.553,3979,3.399,3980,1.462,3981,1.462,3982,1.462,3983,1.462,3984,2.553,3985,1.462,3986,1.462,3987,1.462,3988,1.462,3989,1.462,3990,1.462,3991,1.462,3992,1.462,3993,1.462,3994,1.462,3995,1.462,3996,1.462,3997,1.462,3998,1.462,3999,4.075,4000,1.462,4001,2.553,4002,1.462,4003,1.462,4004,1.462,4005,1.462,4006,1.462,4007,1.462,4008,1.462,4009,1.462,4010,1.462,4011,3.399,4012,1.462,4013,1.462,4014,1.462,4015,2.553,4016,1.462,4017,1.462,4018,1.462,4019,1.462,4020,1.462,4021,1.462,4022,1.462,4023,2.553,4024,2.553,4025,4.626,4026,3.399,4027,1.462,4028,2.553,4029,1.462,4030,1.462,4031,1.462,4032,1.462,4033,3.399,4034,2.553,4035,1.462,4036,2.553,4037,2.553,4038,2.553,4039,1.462,4040,1.462,4041,1.462,4042,1.462,4043,1.462,4044,1.462,4045,1.462,4046,1.462,4047,1.462,4048,2.553,4049,1.462,4050,3.399,4051,1.462,4052,1.462,4053,1.462,4054,1.462,4055,1.462,4056,1.462,4057,1.462,4058,1.462,4059,1.462,4060,1.462,4061,1.462,4062,1.462,4063,1.462,4064,2.553,4065,1.462,4066,1.462,4067,1.462,4068,1.462,4069,1.462,4070,1.462,4071,1.462,4072,1.462,4073,1.462,4074,1.462,4075,1.462,4076,1.462,4077,1.462,4078,1.462,4079,1.462,4080,3.399,4081,2.553,4082,1.462,4083,1.462,4084,1.462,4085,1.462,4086,1.462,4087,1.462,4088,2.553,4089,3.399,4090,2.553,4091,1.462,4092,1.462,4093,1.462,4094,1.462,4095,1.462,4096,1.462,4097,1.462,4098,2.553,4099,1.462,4100,1.462,4101,1.462,4102,1.462,4103,1.462,4104,1.462,4105,1.462,4106,1.462,4107,1.462,4108,1.462,4109,1.462,4110,1.462,4111,1.462,4112,1.462,4113,1.462,4114,1.462,4115,1.462,4116,1.462,4117,1.462]],["title/modules.html",[141,2.871]],["body/modules.html",[22,0.006,92,1.619,112,0.006,113,0.006,140,5.282,141,3.14,152,4.15,153,4.725,154,4.725,155,4.725,165,7.966,1023,4.725,1029,3.86,1030,3.86,1271,4.725,1775,4.725,1846,4.508,2027,4.725,2376,4.725,2731,4.725,2859,4.725,3517,6.172,3675,8.683,4118,9.771,4119,9.792]],["title/overview.html",[4120,5.644]],["body/overview.html",[1,1.724,2,1.134,22,0.007,26,0.874,34,2.148,36,1.724,38,1.724,41,1.757,44,2.109,46,1.757,48,1.724,50,1.757,52,1.724,54,1.757,55,1.724,56,1.724,58,1.724,62,2.07,65,1.757,67,2.148,69,1.757,71,1.724,73,1.757,74,1.757,75,1.724,76,1.724,78,1.757,80,1.724,82,1.757,83,1.757,84,1.724,85,1.724,87,2.148,91,2.148,93,1.757,95,1.724,97,1.757,98,1.757,99,1.724,100,2.109,103,1.757,105,1.724,107,1.757,108,1.724,112,0.004,113,0.004,123,4.103,139,1.438,140,7.261,141,1.895,142,1.946,143,1.801,144,1.946,145,1.999,146,1.801,147,3.725,148,3.725,149,3.725,150,3.725,151,3.725,152,4.703,153,5.355,154,6.083,155,6.449,156,4.671,157,2.825,158,1.847,159,1.946,201,3.187,335,2.413,469,1.225,541,1.325,612,3.817,892,3.77,1023,6.481,1024,3.725,1025,3.725,1026,3.725,1027,3.725,1028,3.725,1029,5.059,1030,4.97,1138,3.953,1196,1.5,1204,2.72,1208,2.118,1271,6.337,1272,3.725,1274,3.725,1275,3.725,1630,3.725,1631,3.725,1775,5.713,1776,3.725,1777,3.725,1778,3.725,1846,5.567,1855,3.725,1856,3.725,1858,3.725,1861,3.817,2027,6.496,2028,3.725,2029,3.725,2030,3.725,2031,3.725,2032,5.675,2190,3.817,2376,6.43,2377,3.725,2378,3.725,2380,3.725,2496,5.598,2497,5.598,2498,5.598,2500,3.725,2501,3.725,2502,3.725,2539,3.725,2540,3.725,2542,3.725,2562,3.725,2563,3.725,2564,3.725,2579,3.817,2731,6.388,2732,3.725,2733,3.725,2735,3.725,2859,6.337,2880,3.725,2881,3.725,2882,3.725,2883,3.725,2886,3.953,2996,3.725,2997,3.725,2999,3.725,4120,3.725,4121,4.192,4122,4.192,4123,4.192]],["title/properties.html",[119,0.538,3160,3.429]],["body/properties.html",[22,0.007,112,0.006,113,0.006,119,0.737,3327,6.796,4124,7.649]],["title/routes.html",[201,4.83]],["body/routes.html",[22,0.006,112,0.006,113,0.006,201,5.841]],["title/miscellaneous/typealiases.html",[3199,2.399,4125,5.582]],["body/miscellaneous/typealiases.html",[22,0.006,112,0.006,113,0.006,118,0.311,127,0.453,897,7.632,1235,5.339,2153,6.871,2529,7.002,3199,4.649,4126,7.478,4127,9.036,4128,7.478]],["title/miscellaneous/variables.html",[3199,2.399,4129,4.96]],["body/miscellaneous/variables.html",[22,0.007,112,0.006,113,0.006,118,0.306,127,0.416,130,1.53,131,1.445,626,5.791,662,3.165,664,2.635,3156,6.545,3157,7.528,3158,6.545,3199,4.579,3311,7.565,4129,6.545,4130,7.365,4131,7.365]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"modules/CurveModule.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"interfaces/HeaderRequirement.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"modules/InterfaceUtilModule.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"modules/MoonModule.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyData.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"modules/ScatterModule.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"components/SpectrumComponent.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"modules/SpectrumModule.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"modules/VenusModule.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":685,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"classes/DualStorage.html":{},"interfaces/HeaderRequirement.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"components/SpectrumComponent.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"components/SpectrumHighchartComponent.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"components/ToolsNavbarComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["0.0.0",{"_index":4124,"title":{},"body":{"properties.html":{}}}],["0.01",{"_index":1699,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["0.1.7",{"_index":3183,"title":{},"body":{"dependencies.html":{}}}],["0.11.4",{"_index":3198,"title":{},"body":{"dependencies.html":{}}}],["0.27",{"_index":2913,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["0.445",{"_index":3045,"title":{},"body":{"injectables/VenusService.html":{}}}],["0.53",{"_index":2912,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["0.7",{"_index":2315,"title":{},"body":{"components/ScatterHighchartComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["0.8",{"_index":3046,"title":{},"body":{"injectables/VenusService.html":{}}}],["0/1",{"_index":3141,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":3107,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":3129,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":3118,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":3126,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":3130,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":3124,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":3109,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":3117,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":3133,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":3108,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":3151,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":3134,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":3112,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":3138,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":3111,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":3110,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":3119,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":3116,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":3128,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":777,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"interfaces/HeaderRequirement.html":{},"components/MenubarComponent.html":{},"components/MoonComponent.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"components/ScatterComponent.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"components/SpectrumComponent.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"components/SpectrumHighchartComponent.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["1.0",{"_index":1575,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["1.082e8",{"_index":2938,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["1.1.19",{"_index":3169,"title":{},"body":{"dependencies.html":{}}}],["1.10.3",{"_index":3179,"title":{},"body":{"dependencies.html":{}}}],["1.210e4",{"_index":2934,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["1.496e8",{"_index":2937,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["1.62",{"_index":1901,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{}}}],["1/1",{"_index":3103,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":3136,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":3125,"title":{},"body":{"coverage.html":{}}}],["1/13",{"_index":3137,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":3121,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":3150,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":3132,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1196,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"components/SimpleGraphButtonComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{},"overview.html":{}}}],["100",{"_index":741,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{}}}],["100px",{"_index":915,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/SpectrumComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusComponent.html":{}}}],["10px",{"_index":1007,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/LineFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["11",{"_index":1200,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"coverage.html":{},"license.html":{}}}],["11.1.0",{"_index":3181,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":1202,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["12.4.0",{"_index":3170,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":1204,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"license.html":{},"overview.html":{}}}],["14",{"_index":1206,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["14.1.0",{"_index":3171,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":1208,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["15.2.9",{"_index":3162,"title":{},"body":{"dependencies.html":{}}}],["15px",{"_index":1825,"title":{},"body":{"components/LineFormComponent.html":{},"components/SpectrumComponent.html":{}}}],["16",{"_index":1210,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"coverage.html":{},"license.html":{}}}],["17",{"_index":1212,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["180",{"_index":2221,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["1996",{"_index":3645,"title":{},"body":{"license.html":{}}}],["1e4",{"_index":2684,"title":{},"body":{"components/SpectrumComponent.html":{}}}],["2",{"_index":779,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SliderUtil.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["2.0.16",{"_index":3193,"title":{},"body":{"dependencies.html":{}}}],["2.0.5",{"_index":3175,"title":{},"body":{"dependencies.html":{}}}],["2.10.2",{"_index":3173,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":3196,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":3105,"title":{},"body":{"coverage.html":{}}}],["2/30",{"_index":3127,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":3149,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":3155,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":3643,"title":{},"body":{"license.html":{}}}],["2007",{"_index":3330,"title":{},"body":{"license.html":{}}}],["200px",{"_index":2876,"title":{},"body":{"components/ToolsNavbarComponent.html":{}}}],["20px",{"_index":328,"title":{},"body":{"components/AppearanceComponent.html":{},"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/SettingsComponent.html":{},"components/SpectrumComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusComponent.html":{}}}],["21",{"_index":3143,"title":{},"body":{"coverage.html":{}}}],["21.085",{"_index":2685,"title":{},"body":{"components/SpectrumComponent.html":{}}}],["22",{"_index":3154,"title":{},"body":{"coverage.html":{}}}],["250px",{"_index":333,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["28",{"_index":3148,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["29",{"_index":3328,"title":{},"body":{"license.html":{}}}],["299792458",{"_index":2683,"title":{},"body":{"components/SpectrumComponent.html":{}}}],["2b4162",{"_index":532,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["3",{"_index":781,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"injectables/MoonService.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"components/SpectrumHighchartComponent.html":{},"injectables/VenusService.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["3.1.2",{"_index":3182,"title":{},"body":{"dependencies.html":{}}}],["3/14",{"_index":3144,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":3106,"title":{},"body":{"coverage.html":{}}}],["3/33",{"_index":3153,"title":{},"body":{"coverage.html":{}}}],["3/34",{"_index":3152,"title":{},"body":{"coverage.html":{}}}],["3/40",{"_index":3135,"title":{},"body":{"coverage.html":{}}}],["3/44",{"_index":3123,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2911,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"license.html":{}}}],["32",{"_index":4123,"title":{},"body":{"overview.html":{}}}],["325769",{"_index":535,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["33",{"_index":3120,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":2561,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{}}}],["360",{"_index":1904,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{}}}],["37",{"_index":4122,"title":{},"body":{"overview.html":{}}}],["4",{"_index":783,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{},"components/ScatterComponent.html":{},"components/SpectrumComponent.html":{},"components/VenusComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["4.1.1",{"_index":3185,"title":{},"body":{"dependencies.html":{}}}],["4.2.1",{"_index":3180,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":3113,"title":{},"body":{"coverage.html":{}}}],["4/44",{"_index":3131,"title":{},"body":{"coverage.html":{}}}],["41",{"_index":4121,"title":{},"body":{"overview.html":{}}}],["45",{"_index":1906,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["5",{"_index":1181,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{},"components/ScatterHighchartComponent.html":{},"license.html":{}}}],["5.0.0",{"_index":3188,"title":{},"body":{"dependencies.html":{}}}],["5.3.0",{"_index":3176,"title":{},"body":{"dependencies.html":{}}}],["5/6",{"_index":3146,"title":{},"body":{"coverage.html":{}}}],["5/9",{"_index":3115,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":2255,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["500px",{"_index":1668,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["55",{"_index":3114,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1184,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"coverage.html":{}}}],["6.62",{"_index":1898,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{}}}],["60",{"_index":2914,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"license.html":{}}}],["66",{"_index":3104,"title":{},"body":{"coverage.html":{}}}],["6b",{"_index":3732,"title":{},"body":{"license.html":{}}}],["6d",{"_index":3759,"title":{},"body":{"license.html":{}}}],["7",{"_index":1187,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"coverage.html":{},"license.html":{}}}],["7.5.0",{"_index":3194,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":916,"title":{},"body":{"components/CurveComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/SpectrumComponent.html":{},"components/VenusComponent.html":{},"coverage.html":{}}}],["8.0.0",{"_index":3191,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":914,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/SpectrumComponent.html":{},"components/VenusComponent.html":{}}}],["83",{"_index":3145,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1192,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"coverage.html":{}}}],["90",{"_index":1774,"title":{},"body":{"components/InputSliderComponent.html":{},"components/MoonFormComponent.html":{},"components/ScatterFormComponent.html":{}}}],["99",{"_index":3231,"title":{},"body":{"miscellaneous/functions.html":{}}}],["a['x",{"_index":834,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["a[0",{"_index":1005,"title":{},"body":{"components/CurveHighChartComponent.html":{},"injectables/MoonService.html":{}}}],["ability",{"_index":3807,"title":{},"body":{"license.html":{}}}],["about'},{'name",{"_index":33,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["about.component.html",{"_index":19,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.scss",{"_index":17,"title":{},"body":{"components/AboutComponent.html":{}}}],["aboutcomponent",{"_index":1,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["above",{"_index":2949,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"license.html":{}}}],["absence",{"_index":3672,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":2560,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"license.html":{}}}],["absolutely",{"_index":4097,"title":{},"body":{"license.html":{}}}],["abuse",{"_index":3437,"title":{},"body":{"license.html":{}}}],["accept",{"_index":3897,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":3896,"title":{},"body":{"license.html":{}}}],["access",{"_index":3427,"title":{},"body":{"license.html":{}}}],["accessible",{"_index":3965,"title":{},"body":{"license.html":{}}}],["accompanied",{"_index":3714,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":4074,"title":{},"body":{"license.html":{}}}],["accord",{"_index":3671,"title":{},"body":{"license.html":{}}}],["according",{"_index":4066,"title":{},"body":{"license.html":{}}}],["achieve",{"_index":4079,"title":{},"body":{"license.html":{}}}],["acknowledges",{"_index":3609,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":3944,"title":{},"body":{"license.html":{}}}],["action.action",{"_index":905,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/SpectrumComponent.html":{},"components/VenusComponent.html":{}}}],["actionhandler",{"_index":890,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/SpectrumComponent.html":{},"components/VenusComponent.html":{}}}],["actionhandler(actions",{"_index":896,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/SpectrumComponent.html":{},"components/VenusComponent.html":{}}}],["actions",{"_index":899,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/SpectrumComponent.html":{},"components/VenusComponent.html":{},"index.html":{},"license.html":{}}}],["actions.foreach((action",{"_index":904,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/VenusComponent.html":{}}}],["activities",{"_index":3519,"title":{},"body":{"license.html":{}}}],["activity",{"_index":3991,"title":{},"body":{"license.html":{}}}],["actual",{"_index":3969,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":111,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["actual_freq1",{"_index":2663,"title":{},"body":{"components/SpectrumComponent.html":{}}}],["actually",{"_index":3782,"title":{},"body":{"license.html":{}}}],["adapt",{"_index":3491,"title":{},"body":{"license.html":{}}}],["add",{"_index":2536,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["added",{"_index":3670,"title":{},"body":{"license.html":{}}}],["addexiftoimage",{"_index":1545,"title":{},"body":{"injectables/HonorCodeChartService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["addexiftoimage(destcanvas.todataurl('image/jpeg",{"_index":1574,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["addexiftoimage(jpegdata",{"_index":3212,"title":{},"body":{"miscellaneous/functions.html":{}}}],["additional",{"_index":3684,"title":{},"body":{"license.html":{}}}],["address",{"_index":4020,"title":{},"body":{"license.html":{}}}],["addressed",{"_index":3488,"title":{},"body":{"license.html":{}}}],["addrow",{"_index":906,"title":{},"body":{"components/CurveComponent.html":{},"classes/CurveData.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"injectables/DualService.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"injectables/MoonService.html":{},"interfaces/MyData.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"injectables/ScatterService.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SpectrumComponent.html":{},"classes/SpectrumData.html":{},"injectables/SpectrumService.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"injectables/VenusService.html":{}}}],["addrow(index",{"_index":812,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/MoonData.html":{},"injectables/MoonService.html":{},"interfaces/MyData.html":{},"classes/ScatterData.html":{},"injectables/ScatterService.html":{},"classes/SpectrumData.html":{},"injectables/SpectrumService.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["adjusting",{"_index":2332,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["adjustscale",{"_index":2288,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["adopted",{"_index":3642,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":3814,"title":{},"body":{"license.html":{}}}],["advised",{"_index":4061,"title":{},"body":{"license.html":{}}}],["affects",{"_index":3815,"title":{},"body":{"license.html":{}}}],["affero",{"_index":4011,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":3925,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":3605,"title":{},"body":{"license.html":{}}}],["afterviewinit",{"_index":609,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualHighchartComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/SpectrumHighchartComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["against",{"_index":3660,"title":{},"body":{"license.html":{}}}],["aggregate",{"_index":3699,"title":{},"body":{"license.html":{}}}],["agree",{"_index":4007,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":4049,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":3956,"title":{},"body":{"license.html":{}}}],["aim",{"_index":3434,"title":{},"body":{"license.html":{}}}],["alert(\"error",{"_index":2672,"title":{},"body":{"components/SpectrumComponent.html":{}}}],["aliases",{"_index":4126,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":975,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["alleging",{"_index":3932,"title":{},"body":{"license.html":{}}}],["allow",{"_index":3460,"title":{},"body":{"license.html":{}}}],["allowed",{"_index":3346,"title":{},"body":{"license.html":{}}}],["along",{"_index":3674,"title":{},"body":{"license.html":{}}}],["alpha1",{"_index":3177,"title":{},"body":{"dependencies.html":{}}}],["already",{"_index":3943,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":3728,"title":{},"body":{"license.html":{}}}],["although",{"_index":3430,"title":{},"body":{"license.html":{}}}],["amount",{"_index":813,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonData.html":{},"injectables/MoonService.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyData.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["amplitude",{"_index":1930,"title":{},"body":{"components/MoonFormComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"injectables/MoonService.html":{},"miscellaneous/enumerations.html":{}}}],["amplitudesubject",{"_index":1922,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["ancillary",{"_index":3898,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":1447,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"license.html":{}}}],["angle",{"_index":3254,"title":{},"body":{"miscellaneous/functions.html":{}}}],["angular",{"_index":1059,"title":{},"body":{"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/MoonModule.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"modules/ScatterModule.html":{},"modules/SpectrumModule.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"modules/VenusModule.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":3161,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":3163,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1278,"title":{},"body":{"modules/DualModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"modules/SpectrumModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":3164,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":21,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"injectables/DualService.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"modules/InterfaceUtilModule.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"modules/MoonModule.html":{},"injectables/MoonService.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"modules/ScatterModule.html":{},"injectables/ScatterService.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"modules/SpectrumModule.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"modules/VenusModule.html":{},"injectables/VenusService.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartFormComponent.html":{},"modules/CurveModule.html":{},"components/DualChartFormComponent.html":{},"modules/DualModule.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"modules/InterfaceUtilModule.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"modules/MoonModule.html":{},"components/ScatterChartFormComponent.html":{},"modules/ScatterModule.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumFormComponent.html":{},"modules/SpectrumModule.html":{},"components/VenusChartFormComponent.html":{},"modules/VenusModule.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":3165,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":3166,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":1040,"title":{},"body":{"modules/CurveModule.html":{},"injectables/HonorCodePopupService.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["angular/material/icon",{"_index":1054,"title":{},"body":{"modules/CurveModule.html":{},"modules/HonorCodePopupModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["angular/material/input",{"_index":1720,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"modules/InterfaceUtilModule.html":{},"classes/SliderUtil.html":{}}}],["angular/material/legacy",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"modules/DualModule.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"modules/SpectrumModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"modules/VenusModule.html":{}}}],["angular/material/progress",{"_index":1662,"title":{},"body":{"injectables/HonorCodePopupService.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["angular/material/sidenav",{"_index":2492,"title":{},"body":{"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["angular/material/slider",{"_index":1782,"title":{},"body":{"modules/InterfaceUtilModule.html":{},"modules/MoonModule.html":{}}}],["angular/material/toolbar",{"_index":1843,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{}}}],["angular/platform",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":202,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"dependencies.html":{}}}],["angularseparation",{"_index":1885,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{}}}],["animation",{"_index":683,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["anlysis",{"_index":3264,"title":{},"body":{"index.html":{}}}],["anti",{"_index":3630,"title":{},"body":{"license.html":{}}}],["anyone",{"_index":3681,"title":{},"body":{"license.html":{}}}],["anything",{"_index":3503,"title":{},"body":{"license.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppearanceComponent.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["app.component",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":34,"title":{"components/AppComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearance",{"_index":227,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"components/SettingsComponent.html":{}}}],["appearance'},{'name",{"_index":37,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["appearance.component.html",{"_index":248,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["appearance.component.scss",{"_index":247,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["appearance.utils",{"_index":387,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{}}}],["appearancecomponent",{"_index":36,"title":{"components/AppearanceComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearanceservice",{"_index":123,"title":{"injectables/AppearanceService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearanceservice.getfontfamily",{"_index":290,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["appearanceservice.getfontsize",{"_index":292,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["appearanceservice.getfontstyle",{"_index":291,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["appearancestorageservice",{"_index":156,"title":{"injectables/AppearanceStorageService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"coverage.html":{},"overview.html":{}}}],["applicable",{"_index":3509,"title":{},"body":{"license.html":{}}}],["applications",{"_index":4112,"title":{},"body":{"license.html":{}}}],["applied",{"_index":3466,"title":{},"body":{"license.html":{}}}],["applies",{"_index":3364,"title":{},"body":{"license.html":{}}}],["apply",{"_index":3367,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":140,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":3532,"title":{},"body":{"license.html":{}}}],["appropriately",{"_index":3664,"title":{},"body":{"license.html":{}}}],["approutingmodule",{"_index":152,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"modules.html":{},"overview.html":{}}}],["approximates",{"_index":4070,"title":{},"body":{"license.html":{}}}],["arc",{"_index":2925,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["area",{"_index":2978,"title":{},"body":{"components/VenusHighchartComponent.html":{},"license.html":{}}}],["arise",{"_index":3446,"title":{},"body":{"license.html":{}}}],["arising",{"_index":4053,"title":{},"body":{"license.html":{}}}],["arrange",{"_index":3966,"title":{},"body":{"license.html":{}}}],["arrangement",{"_index":3979,"title":{},"body":{"license.html":{}}}],["array",{"_index":1888,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["article",{"_index":3639,"title":{},"body":{"license.html":{}}}],["asking",{"_index":3385,"title":{},"body":{"license.html":{}}}],["assert",{"_index":3406,"title":{},"body":{"license.html":{}}}],["assets",{"_index":3916,"title":{},"body":{"license.html":{}}}],["associated",{"_index":3587,"title":{},"body":{"license.html":{}}}],["assume",{"_index":4044,"title":{},"body":{"license.html":{}}}],["assumption",{"_index":4073,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":3858,"title":{},"body":{"license.html":{}}}],["assures",{"_index":3469,"title":{},"body":{"license.html":{}}}],["astronony",{"_index":3270,"title":{},"body":{"index.html":{}}}],["attach",{"_index":4081,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":3872,"title":{},"body":{"license.html":{}}}],["attest",{"_index":1621,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["attributed",{"_index":3422,"title":{},"body":{"license.html":{}}}],["attributions",{"_index":3841,"title":{},"body":{"license.html":{}}}],["author",{"_index":3321,"title":{},"body":{"index.html":{},"license.html":{}}}],["authorization",{"_index":3793,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":3834,"title":{},"body":{"license.html":{}}}],["authorizes",{"_index":3938,"title":{},"body":{"license.html":{}}}],["authorizing",{"_index":3982,"title":{},"body":{"license.html":{}}}],["authors",{"_index":3299,"title":{},"body":{"index.html":{},"license.html":{}}}],["auto",{"_index":922,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MenubarComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/SpectrumComponent.html":{},"components/VenusComponent.html":{}}}],["automatic",{"_index":3907,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":3597,"title":{},"body":{"license.html":{}}}],["available",{"_index":3517,"title":{},"body":{"license.html":{},"modules.html":{}}}],["avoid",{"_index":2334,"title":{},"body":{"components/ScatterHighchartComponent.html":{},"license.html":{}}}],["away",{"_index":3353,"title":{},"body":{"license.html":{}}}],["axis",{"_index":740,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["b",{"_index":833,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"injectables/MoonService.html":{},"license.html":{}}}],["b['x",{"_index":835,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["b[0",{"_index":1006,"title":{},"body":{"components/CurveHighChartComponent.html":{},"injectables/MoonService.html":{}}}],["backdrop",{"_index":2842,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["background",{"_index":2723,"title":{},"body":{"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["bar",{"_index":1829,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["based",{"_index":232,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["basic",{"_index":3598,"title":{},"body":{"license.html":{}}}],["before",{"_index":1593,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["behalf",{"_index":3619,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":2843,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["behaviorsubject",{"_index":1314,"title":{},"body":{"injectables/DualService.html":{},"injectables/MoonService.html":{},"injectables/ScatterService.html":{},"injectables/SpectrumService.html":{},"injectables/VenusService.html":{}}}],["behaviorsubject(this.dualchartinfo",{"_index":1315,"title":{},"body":{"injectables/DualService.html":{}}}],["behaviorsubject(this.dualdata",{"_index":1319,"title":{},"body":{"injectables/DualService.html":{}}}],["behaviorsubject(this.getdata",{"_index":2078,"title":{},"body":{"injectables/MoonService.html":{}}}],["behaviorsubject(this.moonchartinfo",{"_index":2075,"title":{},"body":{"injectables/MoonService.html":{}}}],["behaviorsubject(this.scatterchartinfo",{"_index":2416,"title":{},"body":{"injectables/ScatterService.html":{}}}],["behaviorsubject(this.scatterdata",{"_index":2419,"title":{},"body":{"injectables/ScatterService.html":{}}}],["behaviorsubject(this.spectrumchartinfo",{"_index":2766,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["behaviorsubject(this.spectrumdata",{"_index":2769,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["behaviorsubject(this.spectruminterface.getchannel",{"_index":2772,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["behaviorsubject(this.venuschartinfo",{"_index":3033,"title":{},"body":{"injectables/VenusService.html":{}}}],["behaviorsubject(this.venusdata.getdata",{"_index":3036,"title":{},"body":{"injectables/VenusService.html":{}}}],["behaviorsubject(updatesource.init",{"_index":2083,"title":{},"body":{"injectables/MoonService.html":{},"injectables/ScatterService.html":{}}}],["being",{"_index":3757,"title":{},"body":{"license.html":{}}}],["believe",{"_index":3975,"title":{},"body":{"license.html":{}}}],["below",{"_index":2948,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"license.html":{}}}],["benefit",{"_index":3968,"title":{},"body":{"license.html":{}}}],["best",{"_index":4078,"title":{},"body":{"license.html":{}}}],["beta",{"_index":2930,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["between",{"_index":2928,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["beyond",{"_index":3701,"title":{},"body":{"license.html":{}}}],["black",{"_index":537,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"components/ScatterHighchartComponent.html":{}}}],["blob",{"_index":3223,"title":{},"body":{"miscellaneous/functions.html":{}}}],["block",{"_index":2559,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{}}}],["blue",{"_index":480,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["body",{"_index":3553,"title":{},"body":{"license.html":{}}}],["bold",{"_index":504,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["bolder",{"_index":506,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["boolean",{"_index":839,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/DualHighchartComponent.html":{},"interfaces/HeaderRequirement.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"components/ScatterHighchartComponent.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"classes/SliderUtil.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["bootstrap",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/InterfaceUtilModule.html":{},"modules/MenubarModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules/SettingsModule.html":{},"modules/SimpleDataButtonModule.html":{},"modules/SimpleGraphButtonModule.html":{},"modules/SpectrumModule.html":{},"modules/ToolsNavbarModule.html":{},"modules/VenusModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":1636,"title":{},"body":{"modules/HonorCodePopupModule.html":{},"dependencies.html":{}}}],["both",{"_index":3415,"title":{},"body":{"license.html":{}}}],["bottom",{"_index":674,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/SpectrumComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["box",{"_index":4103,"title":{},"body":{"license.html":{}}}],["break",{"_index":822,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["browse",{"_index":4119,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{}}}],["browseranimationsmodule",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{}}}],["browsermodule",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["brush",{"_index":1848,"title":{},"body":{"components/MenubarComponent.html":{}}}],["build",{"_index":3306,"title":{},"body":{"index.html":{}}}],["buildto",{"_index":3312,"title":{},"body":{"index.html":{}}}],["business",{"_index":3988,"title":{},"body":{"license.html":{}}}],["button",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"components/AppearanceComponent.html":{},"components/CurveComponent.html":{},"modules/CurveModule.html":{},"components/DualComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/SpectrumComponent.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"components/VenusComponent.html":{}}}],["button'},{'name",{"_index":90,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["button.component",{"_index":1036,"title":{},"body":{"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules/SpectrumModule.html":{},"modules/VenusModule.html":{}}}],["button.component.html",{"_index":2506,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["button.component.scss",{"_index":2505,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["button.component.ts",{"_index":2504,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"coverage.html":{}}}],["button.component.ts:12",{"_index":2520,"title":{},"body":{"components/SimpleDataButtonComponent.html":{}}}],["button.component.ts:13",{"_index":2518,"title":{},"body":{"components/SimpleDataButtonComponent.html":{}}}],["button.component.ts:14",{"_index":2519,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{}}}],["button.component.ts:15",{"_index":2521,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{}}}],["button.component.ts:16",{"_index":2517,"title":{},"body":{"components/SimpleDataButtonComponent.html":{}}}],["button.component.ts:17",{"_index":2546,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{}}}],["button.component.ts:23",{"_index":2526,"title":{},"body":{"components/SimpleDataButtonComponent.html":{}}}],["button.component.ts:24",{"_index":2548,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{}}}],["button.component.ts:26",{"_index":2527,"title":{},"body":{"components/SimpleDataButtonComponent.html":{}}}],["button.component.ts:30",{"_index":2522,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{}}}],["button.component.ts:34",{"_index":2525,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{}}}],["button.component.ts:38",{"_index":2528,"title":{},"body":{"components/SimpleDataButtonComponent.html":{}}}],["button.component.ts:42",{"_index":2524,"title":{},"body":{"components/SimpleDataButtonComponent.html":{}}}],["button/simple",{"_index":1035,"title":{},"body":{"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"modules/SpectrumModule.html":{},"modules/VenusModule.html":{},"coverage.html":{}}}],["buttons",{"_index":981,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["c",{"_index":3332,"title":{},"body":{"license.html":{}}}],["c3cfd4",{"_index":534,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["called",{"_index":3498,"title":{},"body":{"license.html":{}}}],["canvas",{"_index":1560,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["canvas.height",{"_index":1565,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["canvas.width",{"_index":1563,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["carry",{"_index":3677,"title":{},"body":{"license.html":{}}}],["case",{"_index":819,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"license.html":{}}}],["cases",{"_index":3777,"title":{},"body":{"license.html":{}}}],["cause",{"_index":3705,"title":{},"body":{"license.html":{}}}],["cease",{"_index":3876,"title":{},"body":{"license.html":{}}}],["center",{"_index":976,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["certain",{"_index":3388,"title":{},"body":{"license.html":{}}}],["cessation",{"_index":3888,"title":{},"body":{"license.html":{}}}],["change",{"_index":3356,"title":{},"body":{"license.html":{}}}],["changed",{"_index":3420,"title":{},"body":{"license.html":{}}}],["changes",{"_index":943,"title":{},"body":{"classes/CurveData.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["changing",{"_index":3345,"title":{},"body":{"license.html":{}}}],["channel",{"_index":2618,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"components/SpectrumFormComponent.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["channel1",{"_index":2604,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"components/SpectrumComponent.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{}}}],["channel2",{"_index":2605,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"components/SpectrumComponent.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{}}}],["channeloptions",{"_index":2699,"title":{},"body":{"components/SpectrumFormComponent.html":{}}}],["character",{"_index":3232,"title":{},"body":{"miscellaneous/functions.html":{}}}],["characterized",{"_index":3804,"title":{},"body":{"license.html":{}}}],["charge",{"_index":3372,"title":{},"body":{"license.html":{}}}],["chart",{"_index":42,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"modules/CurveModule.html":{},"classes/CurveStorage.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"modules/MoonModule.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"modules/ScatterModule.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"modules/SpectrumModule.html":{},"injectables/SpectrumService.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"modules/VenusModule.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["chart'},{'name",{"_index":40,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["chart.canvas",{"_index":1561,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["chart.component",{"_index":1049,"title":{},"body":{"modules/CurveModule.html":{}}}],["chart.component.html",{"_index":624,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveHighChartComponent.html":{}}}],["chart.component.scss",{"_index":625,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveHighChartComponent.html":{}}}],["chart.component.ts",{"_index":589,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveHighChartComponent.html":{},"coverage.html":{}}}],["chart.component.ts:101",{"_index":598,"title":{},"body":{"classes/CurveChart.html":{}}}],["chart.component.ts:104",{"_index":970,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:118",{"_index":967,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:124",{"_index":968,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:13",{"_index":984,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:130",{"_index":965,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:132",{"_index":608,"title":{},"body":{"classes/CurveChart.html":{}}}],["chart.component.ts:134",{"_index":964,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:136",{"_index":603,"title":{},"body":{"classes/CurveChart.html":{}}}],["chart.component.ts:14",{"_index":985,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:15",{"_index":971,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:156",{"_index":606,"title":{},"body":{"classes/CurveChart.html":{}}}],["chart.component.ts:16",{"_index":972,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:17",{"_index":983,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:25",{"_index":708,"title":{},"body":{"components/CurveChartComponent.html":{}}}],["chart.component.ts:29",{"_index":707,"title":{},"body":{"components/CurveChartComponent.html":{}}}],["chart.component.ts:33",{"_index":709,"title":{},"body":{"components/CurveChartComponent.html":{}}}],["chart.component.ts:37",{"_index":710,"title":{},"body":{"components/CurveChartComponent.html":{},"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:38",{"_index":704,"title":{},"body":{"components/CurveChartComponent.html":{}}}],["chart.component.ts:45",{"_index":960,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:50",{"_index":962,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:56",{"_index":705,"title":{},"body":{"components/CurveChartComponent.html":{}}}],["chart.component.ts:81",{"_index":706,"title":{},"body":{"components/CurveChartComponent.html":{},"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:86",{"_index":969,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:88",{"_index":596,"title":{},"body":{"classes/CurveChart.html":{}}}],["chart.component.ts:90",{"_index":966,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:94",{"_index":597,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveHighChartComponent.html":{}}}],["chart.defaults.bordercolor",{"_index":637,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["chart.defaults.color",{"_index":635,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["chart.exportchart",{"_index":1579,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["chart.exportchartlocal",{"_index":1585,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["chart.getchart(this.id)?.update('none",{"_index":686,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["chart.js",{"_index":573,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"injectables/HonorCodeChartService.html":{},"interfaces/MyChart.html":{},"dependencies.html":{},"index.html":{}}}],["chart.js/dist/types",{"_index":611,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"injectables/HonorCodeChartService.html":{}}}],["chart.service",{"_index":903,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/SpectrumComponent.html":{},"components/VenusComponent.html":{}}}],["chart.service.ts",{"_index":1517,"title":{},"body":{"injectables/HonorCodeChartService.html":{},"coverage.html":{}}}],["chart.service.ts:15",{"_index":1525,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["chart.service.ts:27",{"_index":1533,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["chart.service.ts:44",{"_index":1542,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["chart.service.ts:55",{"_index":1544,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["chart.service.ts:66",{"_index":1528,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["chart.service.ts:70",{"_index":1531,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["chart/curve",{"_index":588,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"modules/CurveModule.html":{},"coverage.html":{}}}],["chartaction",{"_index":1235,"title":{},"body":{"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/SpectrumComponent.html":{},"components/VenusComponent.html":{},"miscellaneous/typealiases.html":{}}}],["chartcolor",{"_index":386,"title":{"classes/ChartColor.html":{}},"body":{"injectables/AppearanceService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"coverage.html":{}}}],["chartcolor.getbackgroundcolor(this.getchartcolormode",{"_index":414,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["chartcolor.getfontcolor(this.getchartcolormode",{"_index":413,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["chartcolormode",{"_index":361,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["chartcolormode.dark",{"_index":418,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["chartcolormode.light",{"_index":416,"title":{},"body":{"injectables/AppearanceService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["chartcolormodekey",{"_index":422,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["chartconfiguration",{"_index":571,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"interfaces/MyChart.html":{}}}],["chartconfiguration['data",{"_index":579,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"interfaces/MyChart.html":{}}}],["chartconstructor",{"_index":946,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["chartdata",{"_index":604,"title":{},"body":{"classes/CurveChart.html":{}}}],["chartinfo",{"_index":540,"title":{"interfaces/ChartInfo.html":{}},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"interfaces/MyChart.html":{},"interfaces/MyStorage.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"coverage.html":{}}}],["chartinfokey",{"_index":855,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualStorage.html":{},"classes/MoonStorage.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["chartinfoobject",{"_index":1077,"title":{},"body":{"classes/CurveStorage.html":{}}}],["chartinfosubject",{"_index":1283,"title":{},"body":{"injectables/DualService.html":{},"injectables/MoonService.html":{},"injectables/ScatterService.html":{},"injectables/SpectrumService.html":{},"injectables/VenusService.html":{}}}],["chartinitialized",{"_index":950,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["chartinitialized($event",{"_index":958,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["chartobject",{"_index":947,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["chartoptions",{"_index":572,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MyChart.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["chartprecision",{"_index":2038,"title":{},"body":{"injectables/MoonService.html":{}}}],["charts",{"_index":1052,"title":{},"body":{"modules/CurveModule.html":{},"injectables/HonorCodeChartService.html":{},"dependencies.html":{}}}],["charts/utils",{"_index":1549,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["chartservice",{"_index":893,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/SpectrumComponent.html":{},"components/VenusComponent.html":{}}}],["charttitle",{"_index":720,"title":{},"body":{"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"components/SpectrumChartFormComponent.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["charttype",{"_index":1529,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["chartuseractionobs",{"_index":2544,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["check",{"_index":3304,"title":{},"body":{"index.html":{}}}],["children",{"_index":223,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["choose",{"_index":4028,"title":{},"body":{"license.html":{}}}],["choosing",{"_index":4032,"title":{},"body":{"license.html":{}}}],["circle",{"_index":2250,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"components/SpectrumHighchartComponent.html":{}}}],["circumstances",{"_index":3624,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":3631,"title":{},"body":{"license.html":{}}}],["civil",{"_index":4072,"title":{},"body":{"license.html":{}}}],["claim",{"_index":3929,"title":{},"body":{"license.html":{}}}],["claims",{"_index":3940,"title":{},"body":{"license.html":{}}}],["class",{"_index":24,"title":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"classes/CurveChartInfo.html":{},"classes/CurveData.html":{},"classes/CurveImpl.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"classes/DefaultAppearanceSettings.html":{},"classes/DualChartInfo.html":{},"classes/DualData.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"classes/MoonChartInfo.html":{},"classes/MoonData.html":{},"classes/MoonInterfaceImpl.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"classes/MyFileParserTXT.html":{},"classes/ScatterChartInfo.html":{},"classes/ScatterData.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"classes/SliderUtil.html":{},"classes/SpectrumChartInfo.html":{},"classes/SpectrumData.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"classes/VenusChartInfo.html":{},"classes/VenusData.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"modules/CurveModule.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"interfaces/HeaderRequirement.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"modules/InterfaceUtilModule.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"modules/MoonModule.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyColorTheme.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"modules/ScatterModule.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"components/SpectrumComponent.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"modules/SpectrumModule.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"modules/VenusModule.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"license.html":{}}}],["classes",{"_index":469,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"classes/CurveChartInfo.html":{},"classes/CurveData.html":{},"classes/CurveImpl.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"classes/DefaultAppearanceSettings.html":{},"classes/DualChartInfo.html":{},"classes/DualData.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"classes/MoonChartInfo.html":{},"classes/MoonData.html":{},"classes/MoonInterfaceImpl.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"classes/MyFileParserTXT.html":{},"classes/ScatterChartInfo.html":{},"classes/ScatterData.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"classes/SliderUtil.html":{},"classes/SpectrumChartInfo.html":{},"classes/SpectrumData.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"classes/VenusChartInfo.html":{},"classes/VenusData.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"overview.html":{}}}],["clear",{"_index":3740,"title":{},"body":{"license.html":{}}}],["clearly",{"_index":3412,"title":{},"body":{"license.html":{}}}],["click",{"_index":1625,"title":{},"body":{"components/HonorCodePopupComponent.html":{},"components/SpectrumComponent.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["close",{"_index":1616,"title":{},"body":{"components/HonorCodePopupComponent.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["closely",{"_index":4069,"title":{},"body":{"license.html":{}}}],["closest",{"_index":2924,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["cluster",{"_index":2870,"title":{},"body":{"components/ToolsNavbarComponent.html":{}}}],["cluster_appmodule",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_curvemodule",{"_index":1024,"title":{},"body":{"modules/CurveModule.html":{},"overview.html":{}}}],["cluster_curvemodule_declarations",{"_index":1027,"title":{},"body":{"modules/CurveModule.html":{},"overview.html":{}}}],["cluster_curvemodule_exports",{"_index":1025,"title":{},"body":{"modules/CurveModule.html":{},"overview.html":{}}}],["cluster_curvemodule_imports",{"_index":1028,"title":{},"body":{"modules/CurveModule.html":{},"overview.html":{}}}],["cluster_curvemodule_providers",{"_index":1026,"title":{},"body":{"modules/CurveModule.html":{},"overview.html":{}}}],["cluster_dualmodule",{"_index":1272,"title":{},"body":{"modules/DualModule.html":{},"overview.html":{}}}],["cluster_dualmodule_declarations",{"_index":1275,"title":{},"body":{"modules/DualModule.html":{},"overview.html":{}}}],["cluster_dualmodule_imports",{"_index":1273,"title":{},"body":{"modules/DualModule.html":{}}}],["cluster_dualmodule_providers",{"_index":1274,"title":{},"body":{"modules/DualModule.html":{},"overview.html":{}}}],["cluster_honorcodepopupmodule",{"_index":1630,"title":{},"body":{"modules/HonorCodePopupModule.html":{},"overview.html":{}}}],["cluster_honorcodepopupmodule_declarations",{"_index":1631,"title":{},"body":{"modules/HonorCodePopupModule.html":{},"overview.html":{}}}],["cluster_interfaceutilmodule",{"_index":1776,"title":{},"body":{"modules/InterfaceUtilModule.html":{},"overview.html":{}}}],["cluster_interfaceutilmodule_declarations",{"_index":1778,"title":{},"body":{"modules/InterfaceUtilModule.html":{},"overview.html":{}}}],["cluster_interfaceutilmodule_exports",{"_index":1777,"title":{},"body":{"modules/InterfaceUtilModule.html":{},"overview.html":{}}}],["cluster_menubarmodule",{"_index":1855,"title":{},"body":{"modules/MenubarModule.html":{},"overview.html":{}}}],["cluster_menubarmodule_declarations",{"_index":1856,"title":{},"body":{"modules/MenubarModule.html":{},"overview.html":{}}}],["cluster_menubarmodule_exports",{"_index":1858,"title":{},"body":{"modules/MenubarModule.html":{},"overview.html":{}}}],["cluster_menubarmodule_imports",{"_index":1857,"title":{},"body":{"modules/MenubarModule.html":{}}}],["cluster_moonmodule",{"_index":2028,"title":{},"body":{"modules/MoonModule.html":{},"overview.html":{}}}],["cluster_moonmodule_declarations",{"_index":2031,"title":{},"body":{"modules/MoonModule.html":{},"overview.html":{}}}],["cluster_moonmodule_imports",{"_index":2029,"title":{},"body":{"modules/MoonModule.html":{},"overview.html":{}}}],["cluster_moonmodule_providers",{"_index":2030,"title":{},"body":{"modules/MoonModule.html":{},"overview.html":{}}}],["cluster_scattermodule",{"_index":2377,"title":{},"body":{"modules/ScatterModule.html":{},"overview.html":{}}}],["cluster_scattermodule_declarations",{"_index":2380,"title":{},"body":{"modules/ScatterModule.html":{},"overview.html":{}}}],["cluster_scattermodule_imports",{"_index":2379,"title":{},"body":{"modules/ScatterModule.html":{}}}],["cluster_scattermodule_providers",{"_index":2378,"title":{},"body":{"modules/ScatterModule.html":{},"overview.html":{}}}],["cluster_settingsmodule",{"_index":2500,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_declarations",{"_index":2501,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_imports",{"_index":2502,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_simpledatabuttonmodule",{"_index":2539,"title":{},"body":{"modules/SimpleDataButtonModule.html":{},"overview.html":{}}}],["cluster_simpledatabuttonmodule_declarations",{"_index":2540,"title":{},"body":{"modules/SimpleDataButtonModule.html":{},"overview.html":{}}}],["cluster_simpledatabuttonmodule_exports",{"_index":2542,"title":{},"body":{"modules/SimpleDataButtonModule.html":{},"overview.html":{}}}],["cluster_simpledatabuttonmodule_imports",{"_index":2541,"title":{},"body":{"modules/SimpleDataButtonModule.html":{}}}],["cluster_simplegraphbuttonmodule",{"_index":2562,"title":{},"body":{"modules/SimpleGraphButtonModule.html":{},"overview.html":{}}}],["cluster_simplegraphbuttonmodule_declarations",{"_index":2564,"title":{},"body":{"modules/SimpleGraphButtonModule.html":{},"overview.html":{}}}],["cluster_simplegraphbuttonmodule_exports",{"_index":2563,"title":{},"body":{"modules/SimpleGraphButtonModule.html":{},"overview.html":{}}}],["cluster_spectrummodule",{"_index":2732,"title":{},"body":{"modules/SpectrumModule.html":{},"overview.html":{}}}],["cluster_spectrummodule_declarations",{"_index":2733,"title":{},"body":{"modules/SpectrumModule.html":{},"overview.html":{}}}],["cluster_spectrummodule_imports",{"_index":2734,"title":{},"body":{"modules/SpectrumModule.html":{}}}],["cluster_spectrummodule_providers",{"_index":2735,"title":{},"body":{"modules/SpectrumModule.html":{},"overview.html":{}}}],["cluster_toolsnavbarmodule",{"_index":2880,"title":{},"body":{"modules/ToolsNavbarModule.html":{},"overview.html":{}}}],["cluster_toolsnavbarmodule_declarations",{"_index":2882,"title":{},"body":{"modules/ToolsNavbarModule.html":{},"overview.html":{}}}],["cluster_toolsnavbarmodule_exports",{"_index":2881,"title":{},"body":{"modules/ToolsNavbarModule.html":{},"overview.html":{}}}],["cluster_toolsnavbarmodule_imports",{"_index":2883,"title":{},"body":{"modules/ToolsNavbarModule.html":{},"overview.html":{}}}],["cluster_venusmodule",{"_index":2996,"title":{},"body":{"modules/VenusModule.html":{},"overview.html":{}}}],["cluster_venusmodule_declarations",{"_index":2997,"title":{},"body":{"modules/VenusModule.html":{},"overview.html":{}}}],["cluster_venusmodule_imports",{"_index":2998,"title":{},"body":{"modules/VenusModule.html":{}}}],["cluster_venusmodule_providers",{"_index":2999,"title":{},"body":{"modules/VenusModule.html":{},"overview.html":{}}}],["code",{"_index":60,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"modules/MoonModule.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"license.html":{}}}],["col",{"_index":816,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/DualComponent.html":{},"interfaces/HeaderRequirement.html":{},"components/MoonComponent.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"components/ScatterComponent.html":{},"components/SpectrumComponent.html":{},"components/VenusComponent.html":{}}}],["col.trim()).filter((col",{"_index":1482,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["collect",{"_index":1592,"title":{},"body":{"components/HonorCodePopupComponent.html":{},"license.html":{}}}],["colnames",{"_index":1097,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["color",{"_index":315,"title":{},"body":{"components/AppearanceComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["color.displayname",{"_index":317,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["colors",{"_index":681,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["colortheme",{"_index":267,"title":{},"body":{"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{}}}],["colorthemekey",{"_index":423,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["colorthemes",{"_index":364,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["colorthemes.dark",{"_index":417,"title":{},"body":{"injectables/AppearanceService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["colorthemes.high_contrast",{"_index":515,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["colorthemes.high_contrast_dark",{"_index":518,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["colorthemes.light",{"_index":415,"title":{},"body":{"injectables/AppearanceService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["colorthemesettings",{"_index":283,"title":{"classes/ColorThemeSettings.html":{}},"body":{"components/AppearanceComponent.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"coverage.html":{}}}],["colorthemesettings.getfontfamilylists",{"_index":275,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["colorthemesettings.getfontsizelists",{"_index":278,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["colorthemesettings.getfontstylelists",{"_index":281,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["colorthemesettings.getthemelists",{"_index":272,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["colorthemeslist",{"_index":251,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["cols",{"_index":1477,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["cols.indexof(datakey",{"_index":1487,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["column",{"_index":919,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/SpectrumComponent.html":{},"components/VenusComponent.html":{}}}],["combination",{"_index":4014,"title":{},"body":{"license.html":{}}}],["combine",{"_index":4012,"title":{},"body":{"license.html":{}}}],["combined",{"_index":3696,"title":{},"body":{"license.html":{}}}],["comes",{"_index":3682,"title":{},"body":{"license.html":{}}}],["comic",{"_index":512,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["comic_neue",{"_index":511,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["commands",{"_index":3543,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":3787,"title":{},"body":{"license.html":{}}}],["commitment",{"_index":3957,"title":{},"body":{"license.html":{}}}],["common",{"_index":3781,"title":{},"body":{"license.html":{}}}],["commonmodule",{"_index":1277,"title":{},"body":{"modules/DualModule.html":{},"modules/ScatterModule.html":{},"modules/SpectrumModule.html":{}}}],["communication",{"_index":3594,"title":{},"body":{"license.html":{}}}],["compilation",{"_index":3691,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":3700,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":3993,"title":{},"body":{"license.html":{}}}],["compiler",{"_index":3575,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":3912,"title":{},"body":{"license.html":{}}}],["comply",{"_index":3617,"title":{},"body":{"license.html":{}}}],["compodoc/compodoc",{"_index":3168,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"license.html":{}}}],["component_template",{"_index":31,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"overview.html":{}}}],["computer",{"_index":3513,"title":{},"body":{"license.html":{}}}],["computers",{"_index":3463,"title":{},"body":{"license.html":{}}}],["concerning",{"_index":4013,"title":{},"body":{"license.html":{}}}],["concerns",{"_index":4021,"title":{},"body":{"license.html":{}}}],["conditioned",{"_index":3987,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":3474,"title":{},"body":{"license.html":{}}}],["configuration",{"_index":628,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["confused",{"_index":2954,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["connection",{"_index":3977,"title":{},"body":{"license.html":{}}}],["consequence",{"_index":3900,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":4052,"title":{},"body":{"license.html":{}}}],["consider",{"_index":4110,"title":{},"body":{"license.html":{}}}],["considered",{"_index":3860,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":3948,"title":{},"body":{"license.html":{}}}],["conspicuously",{"_index":3663,"title":{},"body":{"license.html":{}}}],["const",{"_index":209,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"classes/DualStorage.html":{},"interfaces/HeaderRequirement.html":{},"injectables/HonorCodeChartService.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/SliderUtil.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"components/SpectrumComponent.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["constantly",{"_index":3457,"title":{},"body":{"license.html":{}}}],["constitutes",{"_index":3608,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/MyFileParser.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"components/SpectrumComponent.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["constructor(appearanceservice",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/AppearanceComponent.html":{}}}],["constructor(dataservice",{"_index":1118,"title":{},"body":{"components/CurveTableComponent.html":{}}}],["constructor(defaultdata",{"_index":859,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["constructor(dialog",{"_index":1647,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["constructor(filetype",{"_index":1426,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["constructor(id",{"_index":595,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["constructor(matdialogref",{"_index":1601,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["constructor(popupservice",{"_index":2545,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{}}}],["constructor(private",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["constructor(service",{"_index":703,"title":{},"body":{"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["constructor(storageservice",{"_index":354,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["construed",{"_index":3997,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":3765,"title":{},"body":{"license.html":{}}}],["contact",{"_index":3320,"title":{},"body":{"index.html":{},"license.html":{}}}],["contain",{"_index":3994,"title":{},"body":{"license.html":{}}}],["container",{"_index":326,"title":{},"body":{"components/AppearanceComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/MoonComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["containing",{"_index":3233,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["contains",{"_index":1784,"title":{},"body":{"components/LineFormComponent.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"license.html":{}}}],["content",{"_index":921,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/SpectrumComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusComponent.html":{},"license.html":{}}}],["contents",{"_index":3952,"title":{},"body":{"license.html":{}}}],["context",{"_index":3569,"title":{},"body":{"license.html":{}}}],["contextbutton",{"_index":982,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["continue",{"_index":3810,"title":{},"body":{"license.html":{}}}],["continued",{"_index":3796,"title":{},"body":{"license.html":{}}}],["contractual",{"_index":3857,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":4003,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":517,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"license.html":{}}}],["contributor",{"_index":3937,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":3939,"title":{},"body":{"license.html":{}}}],["control",{"_index":3581,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":3942,"title":{},"body":{"license.html":{}}}],["convenient",{"_index":3535,"title":{},"body":{"license.html":{}}}],["convert",{"_index":3229,"title":{},"body":{"miscellaneous/functions.html":{}}}],["convey",{"_index":3521,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":3981,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":3805,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":3529,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":3856,"title":{},"body":{"license.html":{}}}],["coordinates",{"_index":2268,"title":{},"body":{"classes/ScatterData.html":{}}}],["copies",{"_index":3343,"title":{},"body":{"license.html":{}}}],["copy",{"_index":3340,"title":{},"body":{"license.html":{}}}],["copying",{"_index":3475,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":3348,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":3331,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":3484,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":3621,"title":{},"body":{"license.html":{}}}],["core",{"_index":2740,"title":{},"body":{"modules/SpectrumModule.html":{}}}],["correction",{"_index":4047,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":3247,"title":{},"body":{"miscellaneous/functions.html":{}}}],["corresponding",{"_index":3578,"title":{},"body":{"license.html":{}}}],["cosphi",{"_index":2947,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["cost",{"_index":3725,"title":{},"body":{"license.html":{}}}],["count",{"_index":848,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/LineFormComponent.html":{}}}],["counterclaim",{"_index":3930,"title":{},"body":{"license.html":{}}}],["countries",{"_index":3518,"title":{},"body":{"license.html":{}}}],["country",{"_index":3971,"title":{},"body":{"license.html":{}}}],["course",{"_index":3272,"title":{},"body":{"index.html":{},"license.html":{}}}],["court",{"_index":4002,"title":{},"body":{"license.html":{}}}],["courts",{"_index":4068,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":3960,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":3098,"title":{"coverage.html":{}},"body":{"coverage.html":{},"license.html":{}}}],["covered",{"_index":3500,"title":{},"body":{"license.html":{}}}],["create",{"_index":1576,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["created",{"_index":1587,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["credit",{"_index":1619,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["credits",{"_index":1583,"title":{},"body":{"injectables/HonorCodeChartService.html":{},"miscellaneous/functions.html":{}}}],["criterion",{"_index":3546,"title":{},"body":{"license.html":{}}}],["cross",{"_index":2317,"title":{},"body":{"components/ScatterHighchartComponent.html":{},"license.html":{}}}],["cure",{"_index":3892,"title":{},"body":{"license.html":{}}}],["current",{"_index":3236,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cursive",{"_index":1847,"title":{},"body":{"components/MenubarComponent.html":{}}}],["curve",{"_index":39,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"modules/CurveModule.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["curve'},{'name",{"_index":45,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["curve.component",{"_index":1033,"title":{},"body":{"modules/CurveModule.html":{}}}],["curve.component.html",{"_index":889,"title":{},"body":{"components/CurveComponent.html":{}}}],["curve.component.scss",{"_index":888,"title":{},"body":{"components/CurveComponent.html":{}}}],["curve.service",{"_index":613,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/LineFormComponent.html":{}}}],["curve.service.util",{"_index":619,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/LineFormComponent.html":{}}}],["curvechart",{"_index":586,"title":{"classes/CurveChart.html":{}},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"coverage.html":{}}}],["curvechart(this.id",{"_index":640,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["curvechartcomponent",{"_index":38,"title":{"components/CurveChartComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["curvechartformcomponent",{"_index":41,"title":{"components/CurveChartFormComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["curvechartinfo",{"_index":616,"title":{"classes/CurveChartInfo.html":{}},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"coverage.html":{}}}],["curvechartinfo).getcharttitle",{"_index":680,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["curvechartinfo).gettablelabels",{"_index":660,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["curvechartinfo).getxaxislabel",{"_index":670,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["curvechartinfo).getyaxislabel",{"_index":676,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["curvechartinfostorageobject",{"_index":756,"title":{"interfaces/CurveChartInfoStorageObject.html":{}},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"coverage.html":{}}}],["curvecomponent",{"_index":44,"title":{"components/CurveComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["curvecount",{"_index":601,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["curvecount).join",{"_index":791,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["curvecounts",{"_index":617,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/LineFormComponent.html":{},"miscellaneous/enumerations.html":{}}}],["curvecounts.four",{"_index":700,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/LineFormComponent.html":{}}}],["curvecounts.one",{"_index":690,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/LineFormComponent.html":{}}}],["curvecounts.three",{"_index":697,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/LineFormComponent.html":{}}}],["curvecounts.two",{"_index":694,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/LineFormComponent.html":{}}}],["curvecountskeys",{"_index":1788,"title":{},"body":{"components/LineFormComponent.html":{}}}],["curvedata",{"_index":923,"title":{"classes/CurveData.html":{}},"body":{"classes/CurveData.html":{},"coverage.html":{}}}],["curvedatadict",{"_index":600,"title":{"interfaces/CurveDataDict.html":{}},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"coverage.html":{}}}],["curvehighchartcomponent",{"_index":46,"title":{"components/CurveHighChartComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["curveimpl",{"_index":843,"title":{"classes/CurveImpl.html":{}},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"coverage.html":{}}}],["curveinterface",{"_index":618,"title":{"interfaces/CurveInterface.html":{}},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"coverage.html":{}}}],["curveinterface).getcurvecount",{"_index":659,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["curveinterface).getismagnitudeon",{"_index":678,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["curveinterface.getismagnitudeon",{"_index":1822,"title":{},"body":{"components/LineFormComponent.html":{}}}],["curveinterfacestorageobject",{"_index":841,"title":{"interfaces/CurveInterfaceStorageObject.html":{}},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"coverage.html":{}}}],["curveinterfacestorageobject.curvecount",{"_index":850,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["curveinterfacestorageobject.ismagnitudeon",{"_index":851,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["curvemodule",{"_index":1023,"title":{"modules/CurveModule.html":{}},"body":{"modules/CurveModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"modules.html":{},"overview.html":{}}}],["curveparam",{"_index":771,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"miscellaneous/enumerations.html":{}}}],["curveparam.x",{"_index":820,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["curveparam.y1",{"_index":823,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["curveparam.y2",{"_index":825,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["curveparam.y3",{"_index":827,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["curveparam.y4",{"_index":829,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["curves",{"_index":1785,"title":{},"body":{"components/LineFormComponent.html":{}}}],["curveservice",{"_index":612,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/LineFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["curvestorage",{"_index":852,"title":{"classes/CurveStorage.html":{}},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"coverage.html":{}}}],["curvetable",{"_index":1081,"title":{"classes/CurveTable.html":{}},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"coverage.html":{}}}],["curvetable(this.id",{"_index":1099,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["curvetablecomponent",{"_index":48,"title":{"components/CurveTableComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["custom",{"_index":627,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["customarily",{"_index":3717,"title":{},"body":{"license.html":{}}}],["customer",{"_index":3722,"title":{},"body":{"license.html":{}}}],["d",{"_index":3690,"title":{},"body":{"license.html":{}}}],["d[0",{"_index":2324,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["d[1",{"_index":2325,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["damages",{"_index":4050,"title":{},"body":{"license.html":{}}}],["danger",{"_index":3465,"title":{},"body":{"license.html":{}}}],["dark",{"_index":497,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["dark_theme",{"_index":498,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"components/ScatterHighchartComponent.html":{},"miscellaneous/enumerations.html":{}}}],["data",{"_index":89,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"modules/CurveModule.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"components/DualTableComponent.html":{},"interfaces/HeaderRequirement.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"modules/MoonModule.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"components/MoonTableComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyData.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"interfaces/MyStorage.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"modules/ScatterModule.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"components/SpectrumComponent.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"modules/SpectrumModule.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"modules/VenusModule.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["data.getdata",{"_index":658,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["data.map",{"_index":1376,"title":{},"body":{"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["data.map((rawdata",{"_index":2675,"title":{},"body":{"components/SpectrumComponent.html":{}}}],["data.split(\",\").map((label",{"_index":1230,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["data.trim",{"_index":1228,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["data/data.interface",{"_index":575,"title":{},"body":{"interfaces/ChartInfo.html":{},"interfaces/MyChart.html":{}}}],["data[field",{"_index":1470,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["data[i].x",{"_index":693,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["data[i].y1",{"_index":691,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["data[i].y2",{"_index":695,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["data[i].y3",{"_index":698,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["data[i].y4",{"_index":701,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["dataarray",{"_index":2058,"title":{},"body":{"injectables/MoonService.html":{},"injectables/VenusService.html":{}}}],["dataarray.map",{"_index":3071,"title":{},"body":{"injectables/VenusService.html":{}}}],["datadict",{"_index":607,"title":{},"body":{"classes/CurveChart.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["datadictarray",{"_index":2674,"title":{},"body":{"components/SpectrumComponent.html":{}}}],["datakey",{"_index":853,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualStorage.html":{},"classes/MoonStorage.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["datakeys",{"_index":1414,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["datakeys.foreach((datakey",{"_index":1485,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["datalabel",{"_index":722,"title":{},"body":{"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"components/SpectrumChartFormComponent.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["datalabel.split(\",\").map((label",{"_index":793,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["datalabelarray",{"_index":792,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["datalabels",{"_index":743,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["dataratio",{"_index":2344,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["datareset",{"_index":2507,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{}}}],["dataservice",{"_index":1100,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["dataset",{"_index":1098,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"miscellaneous/functions.html":{}}}],["datasetindex",{"_index":3240,"title":{},"body":{"miscellaneous/functions.html":{}}}],["datasets",{"_index":688,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"miscellaneous/functions.html":{}}}],["datasorted",{"_index":2092,"title":{},"body":{"injectables/MoonService.html":{}}}],["datasorted.length",{"_index":2098,"title":{},"body":{"injectables/MoonService.html":{}}}],["datasubject",{"_index":1284,"title":{},"body":{"injectables/DualService.html":{},"interfaces/HeaderRequirement.html":{},"injectables/MoonService.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"injectables/ScatterService.html":{},"injectables/SpectrumService.html":{},"injectables/VenusService.html":{}}}],["datasubject.next(data",{"_index":1509,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["dataurl",{"_index":3222,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dataurltoblob",{"_index":1546,"title":{},"body":{"injectables/HonorCodeChartService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["dataurltoblob(dataurl",{"_index":3220,"title":{},"body":{"miscellaneous/functions.html":{}}}],["date",{"_index":2117,"title":{},"body":{"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["dateappendzero",{"_index":3140,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["dateappendzero(num",{"_index":3225,"title":{},"body":{"miscellaneous/functions.html":{}}}],["days",{"_index":3887,"title":{},"body":{"license.html":{}}}],["de",{"_index":2936,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["debouncetime",{"_index":718,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["debouncetime(200",{"_index":729,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["debouncetime(2000",{"_index":1727,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["december",{"_index":3644,"title":{},"body":{"license.html":{}}}],["decide",{"_index":4030,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/InterfaceUtilModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"modules/SpectrumModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"modules/VenusModule.html":{},"overview.html":{}}}],["declared",{"_index":1596,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["declining",{"_index":3848,"title":{},"body":{"license.html":{}}}],["decorators",{"_index":1710,"title":{},"body":{"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["deemed",{"_index":3633,"title":{},"body":{"license.html":{}}}],["deep",{"_index":2346,"title":{},"body":{"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["default",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/DualChartFormComponent.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyColorTheme.html":{},"classes/MyFileParser.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterData.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defaultappearancesettings",{"_index":284,"title":{"classes/DefaultAppearanceSettings.html":{}},"body":{"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"coverage.html":{}}}],["defaultappearancesettings.chartcolormode",{"_index":419,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["defaultappearancesettings.fontfamily",{"_index":297,"title":{},"body":{"components/AppearanceComponent.html":{},"injectables/AppearanceStorageService.html":{}}}],["defaultappearancesettings.fontsize",{"_index":299,"title":{},"body":{"components/AppearanceComponent.html":{},"injectables/AppearanceStorageService.html":{}}}],["defaultappearancesettings.fontstyle",{"_index":298,"title":{},"body":{"components/AppearanceComponent.html":{},"injectables/AppearanceStorageService.html":{}}}],["defaultappearancesettings.theme",{"_index":453,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["defaultchartinfo",{"_index":857,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["defaultdata",{"_index":856,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["defaultinterface",{"_index":858,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["defaultvalue",{"_index":1681,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["defective",{"_index":4043,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":4000,"title":{},"body":{"license.html":{}}}],["defined",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyData.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"classes/SpectrumChartInfo.html":{},"components/SpectrumComponent.html":{},"classes/SpectrumData.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"license.html":{}}}],["definition",{"_index":3585,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":3478,"title":{},"body":{"license.html":{}}}],["degree",{"_index":3256,"title":{},"body":{"miscellaneous/functions.html":{}}}],["degrees",{"_index":3255,"title":{},"body":{"miscellaneous/functions.html":{}}}],["demo",{"_index":2608,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{}}}],["denied",{"_index":3811,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":3958,"title":{},"body":{"license.html":{}}}],["deny",{"_index":3426,"title":{},"body":{"license.html":{}}}],["denying",{"_index":3384,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":142,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/InterfaceUtilModule.html":{},"modules/MenubarModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules/SettingsModule.html":{},"modules/SimpleDataButtonModule.html":{},"modules/SimpleGraphButtonModule.html":{},"modules/SpectrumModule.html":{},"modules/ToolsNavbarModule.html":{},"modules/VenusModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deprive",{"_index":3967,"title":{},"body":{"license.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveComponent.html":{},"modules/CurveModule.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/PageNotFoundComponent.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"classes/VenusModels.html":{},"miscellaneous/functions.html":{}}}],["design",{"_index":3293,"title":{},"body":{"index.html":{}}}],["designated",{"_index":3734,"title":{},"body":{"license.html":{}}}],["designed",{"_index":3262,"title":{},"body":{"index.html":{},"license.html":{}}}],["destcanvas",{"_index":1558,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["destcanvas.getcontext('2d",{"_index":1567,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["destcanvas.height",{"_index":1564,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["destcanvas.width",{"_index":1562,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["destctx",{"_index":1566,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["destctx.drawimage(canvas",{"_index":1571,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["destctx.fillrect(0",{"_index":1570,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["destctx.fillstyle",{"_index":1568,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["destroy",{"_index":632,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumHighchartComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["detail",{"_index":4019,"title":{},"body":{"license.html":{}}}],["details",{"_index":4090,"title":{},"body":{"license.html":{}}}],["details.the",{"_index":4100,"title":{},"body":{"license.html":{}}}],["determining",{"_index":3775,"title":{},"body":{"license.html":{}}}],["develop",{"_index":4075,"title":{},"body":{"license.html":{}}}],["developers",{"_index":3404,"title":{},"body":{"license.html":{}}}],["development",{"_index":3307,"title":{},"body":{"index.html":{},"license.html":{}}}],["device",{"_index":1537,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["devices",{"_index":3425,"title":{},"body":{"license.html":{}}}],["dialog",{"_index":1609,"title":{},"body":{"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{}}}],["diameter",{"_index":2236,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterFormComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["diametersubject",{"_index":2273,"title":{},"body":{"components/ScatterFormComponent.html":{}}}],["diamond",{"_index":2319,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["dictionary",{"_index":1404,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"miscellaneous/functions.html":{}}}],["differ",{"_index":4018,"title":{},"body":{"license.html":{}}}],["different",{"_index":1838,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"license.html":{}}}],["differently",{"_index":3839,"title":{},"body":{"license.html":{}}}],["direction",{"_index":3620,"title":{},"body":{"license.html":{}}}],["directions",{"_index":3741,"title":{},"body":{"license.html":{}}}],["directive",{"_index":29,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["directives",{"_index":110,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["directly",{"_index":3505,"title":{},"body":{"license.html":{}}}],["disabled",{"_index":2583,"title":{},"body":{"components/SpectrumChartFormComponent.html":{}}}],["disablesavegraph",{"_index":1642,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["disclaim",{"_index":3655,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":4033,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":3836,"title":{},"body":{"license.html":{}}}],["discriminatory",{"_index":3984,"title":{},"body":{"license.html":{}}}],["dismiss",{"_index":1599,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["display",{"_index":671,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumComponent.html":{},"components/VenusComponent.html":{},"license.html":{}}}],["displayed",{"_index":3842,"title":{},"body":{"license.html":{}}}],["displayname",{"_index":493,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["displays",{"_index":3531,"title":{},"body":{"license.html":{}}}],["distance",{"_index":2213,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterFormComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"miscellaneous/enumerations.html":{}}}],["distancesubject",{"_index":2274,"title":{},"body":{"components/ScatterFormComponent.html":{}}}],["distinguishing",{"_index":4022,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":3341,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":4086,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":3989,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":3476,"title":{},"body":{"license.html":{}}}],["docsto",{"_index":3313,"title":{},"body":{"index.html":{}}}],["document",{"_index":3344,"title":{},"body":{"license.html":{}}}],["document.createelement('canvas",{"_index":1559,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["documentation",{"_index":3099,"title":{},"body":{"coverage.html":{}}}],["documentations",{"_index":3300,"title":{},"body":{"index.html":{}}}],["documented",{"_index":3820,"title":{},"body":{"license.html":{}}}],["doesn't",{"_index":2951,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["domains",{"_index":3448,"title":{},"body":{"license.html":{}}}],["doubtful",{"_index":3776,"title":{},"body":{"license.html":{}}}],["down",{"_index":2689,"title":{},"body":{"components/SpectrumComponent.html":{}}}],["download",{"_index":3218,"title":{},"body":{"miscellaneous/functions.html":{}}}],["downloading",{"_index":1595,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["downstream",{"_index":3909,"title":{},"body":{"license.html":{}}}],["drag",{"_index":2687,"title":{},"body":{"components/SpectrumComponent.html":{}}}],["drawer",{"_index":2499,"title":{},"body":{"components/SettingsComponent.html":{}}}],["dual",{"_index":51,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["dual'},{'name",{"_index":53,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["dual.component.html",{"_index":1233,"title":{},"body":{"components/DualComponent.html":{}}}],["dual.component.scss",{"_index":1232,"title":{},"body":{"components/DualComponent.html":{}}}],["dual.service",{"_index":1139,"title":{},"body":{"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{}}}],["dual.service.util",{"_index":1324,"title":{},"body":{"injectables/DualService.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{}}}],["dual/dual.component",{"_index":1279,"title":{},"body":{"modules/DualModule.html":{}}}],["dualchartformcomponent",{"_index":50,"title":{"components/DualChartFormComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dualchartinfo",{"_index":1140,"title":{"classes/DualChartInfo.html":{}},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"coverage.html":{}}}],["dualchartinfo.getdefaultchartinfo().charttitle",{"_index":1220,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["dualchartinfo.getdefaultchartinfo().datalabel",{"_index":1222,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["dualchartinfo.getdefaultchartinfo().xaxislabel",{"_index":1223,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["dualchartinfo.getdefaultchartinfo().yaxislabel",{"_index":1224,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["dualchartinfostorageobject",{"_index":1152,"title":{"interfaces/DualChartInfoStorageObject.html":{}},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"coverage.html":{}}}],["dualcomponent",{"_index":52,"title":{"components/DualComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dualdata",{"_index":1164,"title":{"classes/DualData.html":{}},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"coverage.html":{}}}],["dualdata.getdefaultdata",{"_index":1166,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["dualdatadict",{"_index":1161,"title":{"interfaces/DualDataDict.html":{}},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"coverage.html":{}}}],["dualhighchartcomponent",{"_index":54,"title":{"components/DualHighchartComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dualmodule",{"_index":1271,"title":{"modules/DualModule.html":{}},"body":{"modules/DualModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"modules.html":{},"overview.html":{}}}],["dualservice",{"_index":1138,"title":{"injectables/DualService.html":{}},"body":{"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"injectables/DualService.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dualstorage",{"_index":1285,"title":{"classes/DualStorage.html":{}},"body":{"injectables/DualService.html":{},"classes/DualStorage.html":{},"coverage.html":{}}}],["dualtable",{"_index":1362,"title":{"classes/DualTable.html":{}},"body":{"classes/DualTable.html":{},"components/DualTableComponent.html":{},"coverage.html":{}}}],["dualtable(this.id",{"_index":1367,"title":{},"body":{"classes/DualTable.html":{},"components/DualTableComponent.html":{}}}],["dualtablecomponent",{"_index":55,"title":{"components/DualTableComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["durable",{"_index":3716,"title":{},"body":{"license.html":{}}}],["duration",{"_index":684,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["dv",{"_index":2933,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["dwelling",{"_index":3774,"title":{},"body":{"license.html":{}}}],["dynamic",{"_index":3167,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":3588,"title":{},"body":{"license.html":{}}}],["e",{"_index":3751,"title":{},"body":{"license.html":{}}}],["each",{"_index":3486,"title":{},"body":{"license.html":{}}}],["earlier",{"_index":3499,"title":{},"body":{"license.html":{}}}],["earth",{"_index":2935,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["easy",{"_index":3265,"title":{},"body":{"index.html":{}}}],["edge",{"_index":2337,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["effect",{"_index":4065,"title":{},"body":{"license.html":{}}}],["effected",{"_index":3653,"title":{},"body":{"license.html":{}}}],["effective",{"_index":3634,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":3467,"title":{},"body":{"license.html":{}}}],["efforts",{"_index":3923,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":4091,"title":{},"body":{"license.html":{}}}],["element",{"_index":28,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["embodied",{"_index":3711,"title":{},"body":{"license.html":{}}}],["emit",{"_index":1435,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["emits",{"_index":1411,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["employer",{"_index":4104,"title":{},"body":{"license.html":{}}}],["enable",{"_index":3568,"title":{},"body":{"license.html":{}}}],["enabled",{"_index":978,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["enablemousetracking",{"_index":2320,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["enables",{"_index":3523,"title":{},"body":{"license.html":{}}}],["enablesavegraph",{"_index":1643,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["encapsulate",{"_index":2866,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["encapsulating",{"_index":1032,"title":{},"body":{"modules/CurveModule.html":{},"modules/HonorCodePopupModule.html":{}}}],["encapsution",{"_index":1845,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{}}}],["end",{"_index":2942,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"license.html":{}}}],["enforce",{"_index":3959,"title":{},"body":{"license.html":{}}}],["enforcing",{"_index":3659,"title":{},"body":{"license.html":{}}}],["ensure",{"_index":3748,"title":{},"body":{"license.html":{}}}],["entered",{"_index":3995,"title":{},"body":{"license.html":{}}}],["entire",{"_index":1830,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"license.html":{}}}],["entirely",{"_index":4010,"title":{},"body":{"license.html":{}}}],["entity",{"_index":3913,"title":{},"body":{"license.html":{}}}],["entry",{"_index":803,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["entry.channel1",{"_index":2613,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{}}}],["entry.channel2",{"_index":2616,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{}}}],["entry.diameter",{"_index":2909,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["entry.distance",{"_index":2223,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["entry.phase",{"_index":2910,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["entry.wavelength",{"_index":2612,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{}}}],["entry.x1",{"_index":1214,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["entry.x2",{"_index":1217,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["entry.y1",{"_index":806,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["entry.y2",{"_index":796,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["entry.y3",{"_index":798,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["entry.y4",{"_index":800,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["entry[0",{"_index":2096,"title":{},"body":{"injectables/MoonService.html":{}}}],["entry[1",{"_index":2097,"title":{},"body":{"injectables/MoonService.html":{}}}],["enum",{"_index":494,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/HeaderRequirement.html":{},"components/MoonFormComponent.html":{},"interfaces/MyColorTheme.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"components/ScatterFormComponent.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{}}}],["enumerations",{"_index":3200,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":3157,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["equivalent",{"_index":3611,"title":{},"body":{"license.html":{}}}],["erroneously",{"_index":3423,"title":{},"body":{"license.html":{}}}],["error",{"_index":1412,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"components/SpectrumComponent.html":{}}}],["error(\"invalid",{"_index":847,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["errorsubject",{"_index":1420,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["errorsubject.next(myfileparsererrors.data",{"_index":1508,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["errorsubject.next(myfileparsererrors.field",{"_index":1506,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["errorsubject.next(myfileparsererrors.format",{"_index":1501,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["errorsubject.next(myfileparsererrors.header",{"_index":1503,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["errorsubject.next(myfileparsererrors.strategy",{"_index":1512,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["escape",{"_index":2841,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["essential",{"_index":3570,"title":{},"body":{"license.html":{}}}],["even",{"_index":3298,"title":{},"body":{"index.html":{},"license.html":{}}}],["event",{"_index":961,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"classes/SliderUtil.html":{},"components/SpectrumComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{},"license.html":{}}}],["event.key",{"_index":1941,"title":{},"body":{"components/MoonFormComponent.html":{},"components/ScatterFormComponent.html":{}}}],["eventemitter",{"_index":1702,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{}}}],["everyone",{"_index":3338,"title":{},"body":{"license.html":{}}}],["exact",{"_index":3496,"title":{},"body":{"license.html":{}}}],["example",{"_index":3392,"title":{},"body":{"license.html":{}}}],["except",{"_index":3511,"title":{},"body":{"license.html":{}}}],["exceptions",{"_index":3825,"title":{},"body":{"license.html":{}}}],["excluded",{"_index":3763,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":3998,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":4084,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":3949,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":3614,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":4004,"title":{},"body":{"license.html":{}}}],["executable",{"_index":3561,"title":{},"body":{"license.html":{}}}],["execute",{"_index":3794,"title":{},"body":{"license.html":{}}}],["executing",{"_index":3512,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":3924,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":3654,"title":{},"body":{"license.html":{}}}],["exif",{"_index":3213,"title":{},"body":{"miscellaneous/functions.html":{}}}],["exifimage",{"_index":1573,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["existing",{"_index":3289,"title":{},"body":{"index.html":{}}}],["expected",{"_index":3785,"title":{},"body":{"license.html":{}}}],["expects",{"_index":3784,"title":{},"body":{"license.html":{}}}],["explains",{"_index":3413,"title":{},"body":{"license.html":{}}}],["explicitly",{"_index":3604,"title":{},"body":{"license.html":{}}}],["export",{"_index":23,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"modules/CurveModule.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"interfaces/HeaderRequirement.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"modules/InterfaceUtilModule.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"modules/MoonModule.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyData.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"modules/ScatterModule.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"components/SpectrumComponent.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"modules/SpectrumModule.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"modules/VenusModule.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["exporting",{"_index":980,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{},"dependencies.html":{}}}],["exports",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/InterfaceUtilModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"modules/SpectrumModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"modules/VenusModule.html":{},"overview.html":{}}}],["express",{"_index":3955,"title":{},"body":{"license.html":{}}}],["expressed",{"_index":4035,"title":{},"body":{"license.html":{}}}],["expressly",{"_index":3871,"title":{},"body":{"license.html":{}}}],["extend",{"_index":3451,"title":{},"body":{"license.html":{}}}],["extended",{"_index":3983,"title":{},"body":{"license.html":{}}}],["extensions",{"_index":3695,"title":{},"body":{"license.html":{}}}],["extent",{"_index":3534,"title":{},"body":{"license.html":{}}}],["extra",{"_index":523,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["extra_bold",{"_index":505,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["extract",{"_index":3316,"title":{},"body":{"index.html":{}}}],["f",{"_index":3854,"title":{},"body":{"license.html":{}}}],["f5f0f6",{"_index":533,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["facilities",{"_index":3616,"title":{},"body":{"license.html":{}}}],["fact",{"_index":1622,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["fails",{"_index":3884,"title":{},"body":{"license.html":{}}}],["failure",{"_index":4059,"title":{},"body":{"license.html":{}}}],["fair",{"_index":3610,"title":{},"body":{"license.html":{}}}],["false",{"_index":664,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/DualHighchartComponent.html":{},"interfaces/HeaderRequirement.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/MoonHighchartComponent.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"components/ScatterHighchartComponent.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"classes/SliderUtil.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":319,"title":{},"body":{"components/AppearanceComponent.html":{},"components/MenubarComponent.html":{},"license.html":{}}}],["family.displayname",{"_index":320,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["fashion",{"_index":3493,"title":{},"body":{"license.html":{}}}],["favor",{"_index":3779,"title":{},"body":{"license.html":{}}}],["feature",{"_index":3537,"title":{},"body":{"license.html":{}}}],["fee",{"_index":3396,"title":{},"body":{"license.html":{}}}],["ffffff",{"_index":1569,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["field",{"_index":331,"title":{},"body":{"components/AppearanceComponent.html":{},"components/CurveChartFormComponent.html":{},"modules/CurveModule.html":{},"components/DualChartFormComponent.html":{},"modules/DualModule.html":{},"interfaces/HeaderRequirement.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"modules/MoonModule.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterFormComponent.html":{},"modules/ScatterModule.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumFormComponent.html":{},"modules/SpectrumModule.html":{},"components/VenusChartFormComponent.html":{},"modules/VenusModule.html":{},"miscellaneous/enumerations.html":{}}}],["fields",{"_index":1410,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["fields.foreach((field",{"_index":1469,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["fields.length",{"_index":1458,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["fieldsindices",{"_index":1417,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"modules/CurveModule.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"interfaces/HeaderRequirement.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"modules/InterfaceUtilModule.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"modules/MoonModule.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyData.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"modules/ScatterModule.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"components/SpectrumComponent.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"modules/SpectrumModule.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"modules/VenusModule.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["file.name.endswith(\".txt",{"_index":1511,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["file.type.match(\"text/plain",{"_index":1510,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["filechanged",{"_index":2508,"title":{},"body":{"components/SimpleDataButtonComponent.html":{}}}],["filechanged($event",{"_index":2523,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{}}}],["filename",{"_index":1580,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["fileparser",{"_index":2653,"title":{},"body":{"components/SpectrumComponent.html":{}}}],["filereader",{"_index":1439,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["filereader.onload",{"_index":1440,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["filereader.readastext(file",{"_index":1445,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["filereader.result",{"_index":1441,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["files",{"_index":3586,"title":{},"body":{"license.html":{}}}],["filetext",{"_index":1405,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["filetext.split(\"\\n",{"_index":1474,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["filetext.split(\"\\n\").filter((line",{"_index":1461,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["filetype",{"_index":1427,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"components/SpectrumComponent.html":{},"miscellaneous/enumerations.html":{}}}],["filetype.gbo_spectrum_txt",{"_index":1428,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["fileupload",{"_index":2515,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{}}}],["fill",{"_index":2348,"title":{},"body":{"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["filter((value",{"_index":1468,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["finally",{"_index":3455,"title":{},"body":{"license.html":{}}}],["find",{"_index":3744,"title":{},"body":{"license.html":{}}}],["first",{"_index":3891,"title":{},"body":{"license.html":{}}}],["fit",{"_index":920,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/SpectrumComponent.html":{},"components/VenusComponent.html":{}}}],["fitness",{"_index":4038,"title":{},"body":{"license.html":{}}}],["fix",{"_index":3227,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fixed",{"_index":3715,"title":{},"body":{"license.html":{}}}],["flat",{"_index":1852,"title":{},"body":{"components/MenubarComponent.html":{}}}],["flex",{"_index":917,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MenubarComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/SpectrumComponent.html":{},"components/VenusComponent.html":{}}}],["flip",{"_index":1787,"title":{},"body":{"components/LineFormComponent.html":{}}}],["float_precision",{"_index":2114,"title":{},"body":{"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{}}}],["flow",{"_index":918,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/SpectrumComponent.html":{},"components/VenusComponent.html":{},"license.html":{}}}],["follow",{"_index":3276,"title":{},"body":{"index.html":{},"license.html":{}}}],["following",{"_index":3953,"title":{},"body":{"license.html":{}}}],["font",{"_index":318,"title":{},"body":{"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["fontfamily",{"_index":263,"title":{},"body":{"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["fontfamily.comic_neue",{"_index":531,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["fontfamily.roboto",{"_index":530,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["fontkey",{"_index":424,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["fontlist",{"_index":252,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["fontsize",{"_index":265,"title":{},"body":{"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["fontsizekey",{"_index":425,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["fontsizes",{"_index":369,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["fontsizes.default",{"_index":526,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["fontsizes.large",{"_index":527,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["fontsizes.larger",{"_index":528,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["fontsizes.small",{"_index":525,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["fontsizeslist",{"_index":253,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["fontstyle",{"_index":264,"title":{},"body":{"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["fontstylekey",{"_index":426,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["fontstyles",{"_index":373,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["fontstyles.bold",{"_index":521,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["fontstyles.default",{"_index":520,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["fontstyles.extra_bold",{"_index":522,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["fontstyleslist",{"_index":254,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["forbid",{"_index":3652,"title":{},"body":{"license.html":{}}}],["force",{"_index":3612,"title":{},"body":{"license.html":{}}}],["forceoverride",{"_index":682,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["form",{"_index":330,"title":{},"body":{"components/AppearanceComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"modules/CurveModule.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"modules/DualModule.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"modules/MoonModule.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"modules/ScatterModule.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"modules/SpectrumModule.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"modules/VenusModule.html":{},"license.html":{}}}],["form'},{'name",{"_index":43,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["form.component",{"_index":1038,"title":{},"body":{"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules/SpectrumModule.html":{},"modules/VenusModule.html":{}}}],["form.component.html",{"_index":714,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterFormComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["form.component.scss",{"_index":713,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterFormComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["form.component.ts",{"_index":712,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterFormComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumFormComponent.html":{},"components/VenusChartFormComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["form.component.ts:12",{"_index":717,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["form.component.ts:13",{"_index":715,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterFormComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["form.component.ts:14",{"_index":1934,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["form.component.ts:15",{"_index":2278,"title":{},"body":{"components/ScatterFormComponent.html":{}}}],["form.component.ts:16",{"_index":2275,"title":{},"body":{"components/ScatterFormComponent.html":{},"components/SpectrumFormComponent.html":{}}}],["form.component.ts:19",{"_index":1929,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["form.component.ts:20",{"_index":1935,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["form.component.ts:21",{"_index":1936,"title":{},"body":{"components/MoonFormComponent.html":{},"components/ScatterFormComponent.html":{}}}],["form.component.ts:22",{"_index":1937,"title":{},"body":{"components/MoonFormComponent.html":{},"components/SpectrumFormComponent.html":{}}}],["form.component.ts:23",{"_index":1798,"title":{},"body":{"components/LineFormComponent.html":{},"components/MoonFormComponent.html":{}}}],["form.component.ts:28",{"_index":1928,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["form.component.ts:29",{"_index":1800,"title":{},"body":{"components/LineFormComponent.html":{}}}],["form.component.ts:30",{"_index":1802,"title":{},"body":{"components/LineFormComponent.html":{}}}],["form.component.ts:31",{"_index":1807,"title":{},"body":{"components/LineFormComponent.html":{}}}],["form.component.ts:32",{"_index":1804,"title":{},"body":{"components/LineFormComponent.html":{}}}],["form.component.ts:33",{"_index":1792,"title":{},"body":{"components/LineFormComponent.html":{}}}],["form.component.ts:37",{"_index":2276,"title":{},"body":{"components/ScatterFormComponent.html":{}}}],["form.component.ts:40",{"_index":1795,"title":{},"body":{"components/LineFormComponent.html":{},"components/MoonFormComponent.html":{}}}],["form.component.ts:42",{"_index":2277,"title":{},"body":{"components/ScatterFormComponent.html":{}}}],["form.component.ts:43",{"_index":2580,"title":{},"body":{"components/SpectrumChartFormComponent.html":{}}}],["form.component.ts:45",{"_index":1797,"title":{},"body":{"components/LineFormComponent.html":{}}}],["form.component.ts:48",{"_index":716,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["form.component.ts:49",{"_index":1793,"title":{},"body":{"components/LineFormComponent.html":{}}}],["form.component.ts:57",{"_index":1794,"title":{},"body":{"components/LineFormComponent.html":{}}}],["form.component.ts:61",{"_index":1926,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["form/curve",{"_index":711,"title":{},"body":{"components/CurveChartFormComponent.html":{},"modules/CurveModule.html":{},"coverage.html":{}}}],["form/dual",{"_index":1137,"title":{},"body":{"components/DualChartFormComponent.html":{},"modules/DualModule.html":{},"coverage.html":{}}}],["form/line",{"_index":1037,"title":{},"body":{"modules/CurveModule.html":{},"components/LineFormComponent.html":{},"coverage.html":{}}}],["form/moon",{"_index":1860,"title":{},"body":{"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"modules/MoonModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["form/scatter",{"_index":2189,"title":{},"body":{"components/ScatterChartFormComponent.html":{},"components/ScatterFormComponent.html":{},"modules/ScatterModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["form/spectrum",{"_index":2578,"title":{},"body":{"components/SpectrumChartFormComponent.html":{},"components/SpectrumFormComponent.html":{},"modules/SpectrumModule.html":{},"coverage.html":{}}}],["form/venus",{"_index":2885,"title":{},"body":{"components/VenusChartFormComponent.html":{},"modules/VenusModule.html":{},"coverage.html":{}}}],["format",{"_index":1395,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["formatnumber",{"_index":2363,"title":{},"body":{"classes/ScatterModelInterface.html":{}}}],["formatnumber(input",{"_index":2366,"title":{},"body":{"classes/ScatterModelInterface.html":{}}}],["formattime",{"_index":1547,"title":{},"body":{"injectables/HonorCodeChartService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["formattime(getdatestring",{"_index":1586,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["formattime(time",{"_index":1578,"title":{},"body":{"injectables/HonorCodeChartService.html":{},"miscellaneous/functions.html":{}}}],["formbuilder",{"_index":1603,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["formcontrol",{"_index":286,"title":{},"body":{"components/AppearanceComponent.html":{},"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["formcontrol(30",{"_index":1931,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["formcontrol(colortheme",{"_index":302,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["formcontrol(curvecounts.one",{"_index":1801,"title":{},"body":{"components/LineFormComponent.html":{}}}],["formcontrol(fontfamily",{"_index":304,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["formcontrol(fontsize",{"_index":306,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["formcontrol(fontstyle",{"_index":305,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["formcontrol(this.service.getcharttitle",{"_index":721,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["formcontrol(this.service.getdatalabel",{"_index":723,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["formcontrol(this.service.getxaxislabel",{"_index":725,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["formcontrol(this.service.getyaxislabel",{"_index":727,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["formcontrol({value",{"_index":2582,"title":{},"body":{"components/SpectrumChartFormComponent.html":{}}}],["formgroup",{"_index":255,"title":{},"body":{"components/AppearanceComponent.html":{},"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["forms",{"_index":3706,"title":{},"body":{"license.html":{}}}],["formsmodule",{"_index":1042,"title":{},"body":{"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/InterfaceUtilModule.html":{},"modules/MoonModule.html":{},"modules/SpectrumModule.html":{},"modules/VenusModule.html":{}}}],["found",{"_index":230,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"components/PageNotFoundComponent.html":{},"license.html":{}}}],["found'},{'name",{"_index":77,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["found.component",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["found.component.html",{"_index":2187,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.scss",{"_index":2186,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":2185,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found/page",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found:page",{"_index":229,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["foundation",{"_index":3335,"title":{},"body":{"license.html":{}}}],["four",{"_index":782,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"miscellaneous/enumerations.html":{}}}],["framework",{"_index":3281,"title":{},"body":{"index.html":{}}}],["free",{"_index":3333,"title":{},"body":{"license.html":{}}}],["freedom",{"_index":3354,"title":{},"body":{"license.html":{}}}],["freedoms",{"_index":3400,"title":{},"body":{"license.html":{}}}],["freq",{"_index":2676,"title":{},"body":{"components/SpectrumComponent.html":{}}}],["freq1(mhz",{"_index":2665,"title":{},"body":{"components/SpectrumComponent.html":{}}}],["fu",{"_index":3323,"title":{},"body":{"index.html":{}}}],["fulfilling",{"_index":3637,"title":{},"body":{"license.html":{}}}],["full",{"_index":225,"title":{},"body":{"modules/AppRoutingModule.html":{},"license.html":{}}}],["functinoality",{"_index":3288,"title":{},"body":{"index.html":{}}}],["function",{"_index":238,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functioning",{"_index":3797,"title":{},"body":{"license.html":{}}}],["functions",{"_index":3209,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fundamentally",{"_index":3432,"title":{},"body":{"license.html":{}}}],["further",{"_index":3735,"title":{},"body":{"license.html":{}}}],["future",{"_index":3453,"title":{},"body":{"license.html":{}}}],["gbo",{"_index":1455,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"miscellaneous/enumerations.html":{}}}],["gbo_spectrum_txt",{"_index":1454,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"miscellaneous/enumerations.html":{}}}],["general",{"_index":3326,"title":{},"body":{"license.html":{}}}],["generally",{"_index":3583,"title":{},"body":{"license.html":{}}}],["generate",{"_index":231,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["generatechartconfig",{"_index":591,"title":{},"body":{"classes/CurveChart.html":{},"interfaces/MyChart.html":{}}}],["generatechartconfig(data",{"_index":577,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"interfaces/MyChart.html":{}}}],["generatechartoptions",{"_index":592,"title":{},"body":{"classes/CurveChart.html":{},"interfaces/MyChart.html":{}}}],["generatechartoptions(chartinfo",{"_index":580,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"interfaces/MyChart.html":{}}}],["generatecurvechartconfig",{"_index":593,"title":{},"body":{"classes/CurveChart.html":{}}}],["generatecurvechartconfig(chartdata",{"_index":599,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["generated",{"_index":1894,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["generatefilename",{"_index":1520,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["generatefilename(charttype",{"_index":1526,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["generates",{"_index":2939,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["generatesignature",{"_index":1521,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["generatesignature(signature",{"_index":1530,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["geocentric",{"_index":2940,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["geocentric(start",{"_index":2946,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["getamplitude",{"_index":1983,"title":{},"body":{"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{}}}],["getbackgroundcolor",{"_index":474,"title":{},"body":{"classes/ChartColor.html":{}}}],["getbackgroundcolor(mode",{"_index":483,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["getchannel",{"_index":2620,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{}}}],["getchartbackgroundcolor",{"_index":339,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["getchartcolormode",{"_index":340,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["getchartfontcolor",{"_index":341,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["getchartinfo",{"_index":863,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualStorage.html":{},"classes/MoonStorage.html":{},"interfaces/MyStorage.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["getcharttitle",{"_index":543,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/MoonChartInfo.html":{},"injectables/MoonService.html":{},"interfaces/MyChart.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["getcolortheme",{"_index":342,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{}}}],["getcurvecount",{"_index":836,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["getcurvedata",{"_index":924,"title":{},"body":{"classes/CurveData.html":{}}}],["getcurvedata(curvecount",{"_index":932,"title":{},"body":{"classes/CurveData.html":{}}}],["getdata",{"_index":866,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualData.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonData.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyData.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"classes/ScatterData.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["getdata(filetext",{"_index":1418,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["getdataarray",{"_index":802,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualData.html":{},"injectables/DualService.html":{},"classes/MoonData.html":{},"injectables/MoonService.html":{},"interfaces/MyData.html":{},"classes/ScatterData.html":{},"injectables/ScatterService.html":{},"classes/SpectrumData.html":{},"injectables/SpectrumService.html":{},"classes/VenusData.html":{},"injectables/VenusService.html":{}}}],["getdatalabel",{"_index":544,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/MoonChartInfo.html":{},"injectables/MoonService.html":{},"interfaces/MyChart.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["getdatalabelarray",{"_index":1142,"title":{},"body":{"classes/DualChartInfo.html":{},"injectables/DualService.html":{}}}],["getdatalabelbycurvecount",{"_index":744,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["getdatalabelbycurvecount(curvecount",{"_index":753,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["getdatestring",{"_index":1548,"title":{},"body":{"injectables/HonorCodeChartService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getdefaultchannel",{"_index":2625,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{}}}],["getdefaultchartinfo",{"_index":1143,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/MoonChartInfo.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["getdefaultdata",{"_index":925,"title":{},"body":{"classes/CurveData.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["getdefaultdatadict",{"_index":2216,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["getdefaultstorageobject",{"_index":745,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/MoonInterfaceImpl.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{}}}],["getdiameter",{"_index":2239,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{}}}],["getdistance",{"_index":2238,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{}}}],["getfieldsindices",{"_index":2152,"title":{},"body":{"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["getfieldsindices(filetext",{"_index":1415,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["getfont",{"_index":427,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["getfontcolor",{"_index":475,"title":{},"body":{"classes/ChartColor.html":{}}}],["getfontcolor(mode",{"_index":486,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["getfontfamily",{"_index":343,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["getfontfamilyclassname",{"_index":344,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["getfontfamilyclassname(font",{"_index":366,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["getfontfamilylists",{"_index":529,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["getfontsize",{"_index":345,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{}}}],["getfontsizeclassname",{"_index":346,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["getfontsizeclassname(fontsize",{"_index":370,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["getfontsizelists",{"_index":524,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["getfontstyle",{"_index":347,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{}}}],["getfontstyleclassname",{"_index":348,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["getfontstyleclassname(fontstyle",{"_index":374,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["getfontstylelists",{"_index":519,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["getformgroup",{"_index":258,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["getformgroup(colortheme",{"_index":262,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["getgeocentricmodeldatalower",{"_index":3004,"title":{},"body":{"injectables/VenusService.html":{}}}],["getgeocentricmodeldataupper",{"_index":3005,"title":{},"body":{"injectables/VenusService.html":{}}}],["getheaders",{"_index":2137,"title":{},"body":{"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["getheaders(file",{"_index":1437,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["getheaders(filetext",{"_index":1408,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["getheliocentricmodeldata",{"_index":3006,"title":{},"body":{"injectables/VenusService.html":{}}}],["gethighchart",{"_index":1286,"title":{},"body":{"injectables/DualService.html":{},"injectables/MoonService.html":{},"injectables/ScatterService.html":{},"injectables/SpectrumService.html":{},"injectables/VenusService.html":{}}}],["getinterface",{"_index":869,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualStorage.html":{},"classes/MoonStorage.html":{},"interfaces/MyStorage.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["getismagnitudeon",{"_index":838,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["getlinecolor",{"_index":476,"title":{},"body":{"classes/ChartColor.html":{}}}],["getlinecolor(index",{"_index":488,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["getmodel",{"_index":2244,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{}}}],["getmodelstorageobject",{"_index":2242,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{}}}],["getmoonmodeldata",{"_index":2025,"title":{},"body":{"interfaces/MoonModel.html":{},"injectables/MoonService.html":{}}}],["getperiod",{"_index":1984,"title":{},"body":{"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{}}}],["getphase",{"_index":1985,"title":{},"body":{"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{}}}],["getslidermax",{"_index":2565,"title":{},"body":{"classes/SliderUtil.html":{}}}],["getslidermax(max",{"_index":1759,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["getslidermin",{"_index":2566,"title":{},"body":{"classes/SliderUtil.html":{}}}],["getslidermin(min",{"_index":1754,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["getsliderstep",{"_index":2567,"title":{},"body":{"classes/SliderUtil.html":{}}}],["getsliderstep(min",{"_index":1764,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["getstorageobject",{"_index":545,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{},"interfaces/MyChart.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["gettable",{"_index":1085,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyTable.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["gettablelabels",{"_index":746,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["getthemelists",{"_index":514,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["gettilt",{"_index":1986,"title":{},"body":{"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{}}}],["getting",{"_index":3257,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettoolsitename",{"_index":3102,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["gettoolsitename($localize`:about:about",{"_index":214,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["gettoolsitename($localize`:curve:curve",{"_index":215,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["gettoolsitename($localize`:dual:dual",{"_index":220,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["gettoolsitename($localize`:home:home",{"_index":213,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["gettoolsitename($localize`:moon:moon",{"_index":216,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["gettoolsitename($localize`:scatter:scatter",{"_index":218,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["gettoolsitename($localize`:settings:settings",{"_index":222,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["gettoolsitename($localize`:spectrum:spectrum",{"_index":219,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["gettoolsitename($localize`:venus:venus",{"_index":217,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["gettoolsitename(tool",{"_index":239,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/functions.html":{}}}],["getxaxislabel",{"_index":546,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/MoonChartInfo.html":{},"injectables/MoonService.html":{},"interfaces/MyChart.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["getyaxislabel",{"_index":547,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/MoonChartInfo.html":{},"injectables/MoonService.html":{},"interfaces/MyChart.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["github",{"_index":3302,"title":{},"body":{"index.html":{}}}],["give",{"_index":3673,"title":{},"body":{"license.html":{}}}],["given",{"_index":3245,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["gives",{"_index":3687,"title":{},"body":{"license.html":{}}}],["giving",{"_index":3408,"title":{},"body":{"license.html":{}}}],["gnu",{"_index":3325,"title":{},"body":{"license.html":{}}}],["goal",{"_index":3285,"title":{},"body":{"index.html":{}}}],["good",{"_index":3292,"title":{},"body":{"index.html":{}}}],["governed",{"_index":3828,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":3405,"title":{},"body":{"license.html":{}}}],["grant",{"_index":3849,"title":{},"body":{"license.html":{}}}],["granted",{"_index":3600,"title":{},"body":{"license.html":{}}}],["grants",{"_index":3903,"title":{},"body":{"license.html":{}}}],["graph",{"_index":92,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"modules/MoonModule.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"modules/ScatterModule.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"modules/SpectrumModule.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"modules/VenusModule.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"modules.html":{}}}],["graphing",{"_index":233,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/MenubarComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["gratis",{"_index":3395,"title":{},"body":{"license.html":{}}}],["gravity",{"_index":2868,"title":{},"body":{"components/ToolsNavbarComponent.html":{}}}],["greatest",{"_index":4076,"title":{},"body":{"license.html":{}}}],["green",{"_index":479,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["grey",{"_index":2349,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["guarantee",{"_index":3358,"title":{},"body":{"license.html":{}}}],["gui",{"_index":4102,"title":{},"body":{"license.html":{}}}],["h2",{"_index":1628,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["handsontable",{"_index":1092,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyTable.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"dependencies.html":{},"index.html":{}}}],["handsontable/angular",{"_index":1048,"title":{},"body":{"modules/CurveModule.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"modules/DualModule.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"modules/MoonModule.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"modules/ScatterModule.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"modules/SpectrumModule.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"modules/VenusModule.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"dependencies.html":{}}}],["handsontable/registry",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["having",{"_index":2335,"title":{},"body":{"components/ScatterHighchartComponent.html":{},"license.html":{}}}],["hc_dark_theme",{"_index":502,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["hc_exporting",{"_index":1552,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["hc_exporting(highcharts",{"_index":1556,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["hc_offline_exporting",{"_index":1554,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["hc_offline_exporting(highcharts",{"_index":1557,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["hc_theme",{"_index":500,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["header",{"_index":1396,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"miscellaneous/enumerations.html":{}}}],["headerkeys",{"_index":1494,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["headerkeys.includes(headerrequirement.key",{"_index":1498,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["headerlines",{"_index":1488,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["headerlines.map((line",{"_index":1490,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["headerrequirement",{"_index":1392,"title":{"interfaces/HeaderRequirement.html":{}},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"coverage.html":{}}}],["headerrequirement.value",{"_index":1499,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["headerrequirements",{"_index":1406,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["headerrequirements.foreach((headerrequirement",{"_index":1497,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["headers",{"_index":1403,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["headers[headerrequirement.key",{"_index":1500,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["headers[line.split(\"=\")[0].replace",{"_index":1491,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["headersubject",{"_index":1421,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["headersubject.next(headers",{"_index":1504,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["height",{"_index":913,"title":{},"body":{"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/MoonComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["heliocentric",{"_index":2955,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["heliocentric(start",{"_index":2956,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["here",{"_index":3305,"title":{},"body":{"index.html":{}}}],["hereafter",{"_index":3945,"title":{},"body":{"license.html":{}}}],["hh:mm:ss",{"_index":3238,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hidden",{"_index":1130,"title":{},"body":{"components/CurveTableComponent.html":{},"components/DualTableComponent.html":{},"components/MoonTableComponent.html":{},"components/ScatterTableComponent.html":{},"components/SpectrumTableComponent.html":{},"components/VenusTableComponent.html":{}}}],["high",{"_index":516,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"coverage.html":{}}}],["high_contrast",{"_index":499,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["high_contrast_dark",{"_index":501,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["highchart",{"_index":945,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"components/MoonHighchartComponent.html":{},"injectables/MoonService.html":{},"components/ScatterHighchartComponent.html":{},"injectables/ScatterService.html":{},"components/SpectrumHighchartComponent.html":{},"injectables/SpectrumService.html":{},"components/VenusHighchartComponent.html":{},"injectables/VenusService.html":{}}}],["highchart'},{'name",{"_index":47,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["highchart.component",{"_index":1281,"title":{},"body":{"modules/DualModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules/SpectrumModule.html":{},"modules/VenusModule.html":{}}}],["highchart.component.html",{"_index":1247,"title":{},"body":{"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["highchart.component.scss",{"_index":1246,"title":{},"body":{"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["highchart.component.ts",{"_index":1245,"title":{},"body":{"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{},"coverage.html":{}}}],["highchart.component.ts:100",{"_index":1966,"title":{},"body":{"components/MoonHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["highchart.component.ts:101",{"_index":1259,"title":{},"body":{"components/DualHighchartComponent.html":{}}}],["highchart.component.ts:105",{"_index":1255,"title":{},"body":{"components/DualHighchartComponent.html":{}}}],["highchart.component.ts:108",{"_index":1969,"title":{},"body":{"components/MoonHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["highchart.component.ts:109",{"_index":1256,"title":{},"body":{"components/DualHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{}}}],["highchart.component.ts:112",{"_index":2973,"title":{},"body":{"components/VenusHighchartComponent.html":{}}}],["highchart.component.ts:114",{"_index":2713,"title":{},"body":{"components/SpectrumHighchartComponent.html":{}}}],["highchart.component.ts:115",{"_index":1257,"title":{},"body":{"components/DualHighchartComponent.html":{}}}],["highchart.component.ts:117",{"_index":1967,"title":{},"body":{"components/MoonHighchartComponent.html":{}}}],["highchart.component.ts:118",{"_index":2974,"title":{},"body":{"components/VenusHighchartComponent.html":{}}}],["highchart.component.ts:12",{"_index":1264,"title":{},"body":{"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["highchart.component.ts:120",{"_index":2301,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["highchart.component.ts:121",{"_index":1962,"title":{},"body":{"components/MoonHighchartComponent.html":{}}}],["highchart.component.ts:124",{"_index":2976,"title":{},"body":{"components/VenusHighchartComponent.html":{}}}],["highchart.component.ts:125",{"_index":1963,"title":{},"body":{"components/MoonHighchartComponent.html":{}}}],["highchart.component.ts:13",{"_index":1265,"title":{},"body":{"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["highchart.component.ts:131",{"_index":1964,"title":{},"body":{"components/MoonHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{}}}],["highchart.component.ts:132",{"_index":2305,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["highchart.component.ts:135",{"_index":2710,"title":{},"body":{"components/SpectrumHighchartComponent.html":{}}}],["highchart.component.ts:136",{"_index":2299,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["highchart.component.ts:139",{"_index":2711,"title":{},"body":{"components/SpectrumHighchartComponent.html":{}}}],["highchart.component.ts:14",{"_index":1261,"title":{},"body":{"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["highchart.component.ts:145",{"_index":2712,"title":{},"body":{"components/SpectrumHighchartComponent.html":{}}}],["highchart.component.ts:15",{"_index":1262,"title":{},"body":{"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["highchart.component.ts:150",{"_index":2304,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["highchart.component.ts:154",{"_index":2303,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["highchart.component.ts:158",{"_index":2296,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["highchart.component.ts:16",{"_index":1263,"title":{},"body":{"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["highchart.component.ts:162",{"_index":2297,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["highchart.component.ts:168",{"_index":2298,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["highchart.component.ts:17",{"_index":2714,"title":{},"body":{"components/SpectrumHighchartComponent.html":{}}}],["highchart.component.ts:174",{"_index":2292,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["highchart.component.ts:18",{"_index":2718,"title":{},"body":{"components/SpectrumHighchartComponent.html":{}}}],["highchart.component.ts:36",{"_index":1250,"title":{},"body":{"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["highchart.component.ts:44",{"_index":1251,"title":{},"body":{"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["highchart.component.ts:46",{"_index":2705,"title":{},"body":{"components/SpectrumHighchartComponent.html":{}}}],["highchart.component.ts:49",{"_index":2294,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["highchart.component.ts:50",{"_index":1253,"title":{},"body":{"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{}}}],["highchart.component.ts:54",{"_index":2706,"title":{},"body":{"components/SpectrumHighchartComponent.html":{}}}],["highchart.component.ts:60",{"_index":2708,"title":{},"body":{"components/SpectrumHighchartComponent.html":{}}}],["highchart.component.ts:66",{"_index":2972,"title":{},"body":{"components/VenusHighchartComponent.html":{}}}],["highchart.component.ts:68",{"_index":1254,"title":{},"body":{"components/DualHighchartComponent.html":{}}}],["highchart.component.ts:71",{"_index":2971,"title":{},"body":{"components/VenusHighchartComponent.html":{}}}],["highchart.component.ts:73",{"_index":1252,"title":{},"body":{"components/DualHighchartComponent.html":{}}}],["highchart.component.ts:74",{"_index":1961,"title":{},"body":{"components/MoonHighchartComponent.html":{}}}],["highchart.component.ts:75",{"_index":2295,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["highchart.component.ts:76",{"_index":2975,"title":{},"body":{"components/VenusHighchartComponent.html":{}}}],["highchart.component.ts:77",{"_index":1258,"title":{},"body":{"components/DualHighchartComponent.html":{}}}],["highchart.component.ts:78",{"_index":2709,"title":{},"body":{"components/SpectrumHighchartComponent.html":{}}}],["highchart.component.ts:79",{"_index":1960,"title":{},"body":{"components/MoonHighchartComponent.html":{}}}],["highchart.component.ts:80",{"_index":2293,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["highchart.component.ts:83",{"_index":2707,"title":{},"body":{"components/SpectrumHighchartComponent.html":{}}}],["highchart.component.ts:84",{"_index":1965,"title":{},"body":{"components/MoonHighchartComponent.html":{}}}],["highchart.component.ts:87",{"_index":2302,"title":{},"body":{"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{}}}],["highchart.component.ts:89",{"_index":1260,"title":{},"body":{"components/DualHighchartComponent.html":{}}}],["highchart.component.ts:92",{"_index":1968,"title":{},"body":{"components/MoonHighchartComponent.html":{}}}],["highchart.component.ts:98",{"_index":2300,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["highchart/curve",{"_index":944,"title":{},"body":{"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"coverage.html":{}}}],["highchart/dual",{"_index":1244,"title":{},"body":{"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"coverage.html":{}}}],["highchart/moon",{"_index":1957,"title":{},"body":{"components/MoonHighchartComponent.html":{},"modules/MoonModule.html":{},"coverage.html":{}}}],["highchart/scatter",{"_index":2287,"title":{},"body":{"components/ScatterHighchartComponent.html":{},"modules/ScatterModule.html":{},"coverage.html":{}}}],["highchart/spectrum",{"_index":2704,"title":{},"body":{"components/SpectrumHighchartComponent.html":{},"modules/SpectrumModule.html":{},"coverage.html":{}}}],["highchart/venus",{"_index":2970,"title":{},"body":{"components/VenusHighchartComponent.html":{},"modules/VenusModule.html":{},"coverage.html":{}}}],["highcharts",{"_index":948,"title":{},"body":{"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"injectables/DualService.html":{},"injectables/HonorCodeChartService.html":{},"components/MoonHighchartComponent.html":{},"modules/MoonModule.html":{},"injectables/MoonService.html":{},"components/ScatterHighchartComponent.html":{},"modules/ScatterModule.html":{},"injectables/ScatterService.html":{},"components/SpectrumHighchartComponent.html":{},"modules/SpectrumModule.html":{},"injectables/SpectrumService.html":{},"components/VenusHighchartComponent.html":{},"modules/VenusModule.html":{},"injectables/VenusService.html":{},"dependencies.html":{}}}],["highcharts.chart",{"_index":959,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"injectables/HonorCodeChartService.html":{},"components/MoonHighchartComponent.html":{},"injectables/MoonService.html":{},"components/ScatterHighchartComponent.html":{},"injectables/ScatterService.html":{},"components/SpectrumHighchartComponent.html":{},"injectables/SpectrumService.html":{},"components/VenusHighchartComponent.html":{},"injectables/VenusService.html":{}}}],["highcharts.options",{"_index":973,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["highcharts/modules/exporting",{"_index":1553,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["highcharts/modules/offline",{"_index":1555,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["highchartschartmodule",{"_index":1058,"title":{},"body":{"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules/SpectrumModule.html":{},"modules/VenusModule.html":{}}}],["hold",{"_index":2688,"title":{},"body":{"components/SpectrumComponent.html":{}}}],["holder",{"_index":3878,"title":{},"body":{"license.html":{}}}],["holders",{"_index":3835,"title":{},"body":{"license.html":{}}}],["home",{"_index":212,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":57,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["home.component.html",{"_index":1515,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1514,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":56,"title":{"components/HomeComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["honor",{"_index":59,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["honorcodechartservice",{"_index":894,"title":{"injectables/HonorCodeChartService.html":{}},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/SpectrumComponent.html":{},"components/VenusComponent.html":{},"coverage.html":{}}}],["honorcodepopupcomponent",{"_index":58,"title":{"components/HonorCodePopupComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["honorcodepopupmodule",{"_index":153,"title":{"modules/HonorCodePopupModule.html":{}},"body":{"modules/AppModule.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"modules.html":{},"overview.html":{}}}],["honorcodepopupservice",{"_index":892,"title":{"injectables/HonorCodePopupService.html":{}},"body":{"components/CurveComponent.html":{},"modules/CurveModule.html":{},"components/DualComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/MoonComponent.html":{},"modules/MoonModule.html":{},"components/ScatterComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/SpectrumComponent.html":{},"components/VenusComponent.html":{},"coverage.html":{},"overview.html":{}}}],["honorcodeservice",{"_index":891,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/SpectrumComponent.html":{},"components/VenusComponent.html":{}}}],["honored",{"_index":1644,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["hope",{"_index":4087,"title":{},"body":{"license.html":{}}}],["host",{"_index":2345,"title":{},"body":{"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["hosts",{"_index":3745,"title":{},"body":{"license.html":{}}}],["hotregisterer",{"_index":1084,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["hottablemodule",{"_index":1047,"title":{},"body":{"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules/SpectrumModule.html":{},"modules/VenusModule.html":{}}}],["hottableregisterer",{"_index":1088,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["household",{"_index":3770,"title":{},"body":{"license.html":{}}}],["hover",{"_index":665,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["html",{"_index":27,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["htmlinputelement).files![0",{"_index":2534,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{}}}],["htmlinputelement).value",{"_index":1751,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["https://fsf.org",{"_index":3337,"title":{},"body":{"license.html":{}}}],["https://stackoverflow.com/a/30407959/1154380",{"_index":3224,"title":{},"body":{"miscellaneous/functions.html":{}}}],["https://www.gnu.org/licenses",{"_index":4107,"title":{},"body":{"license.html":{}}}],["https://www.gnu.org/licenses/why",{"_index":4116,"title":{},"body":{"license.html":{}}}],["hypothetical",{"_index":4101,"title":{},"body":{"license.html":{}}}],["i'm",{"_index":2953,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["i18n",{"_index":3318,"title":{},"body":{"index.html":{}}}],["icons",{"_index":3178,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":590,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["identifiable",{"_index":3973,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":3100,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":1815,"title":{},"body":{"components/LineFormComponent.html":{}}}],["image",{"_index":1535,"title":{},"body":{"injectables/HonorCodeChartService.html":{},"miscellaneous/functions.html":{}}}],["image/jpeg",{"_index":1582,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["imagination",{"_index":3260,"title":{},"body":{"index.html":{}}}],["implement",{"_index":3287,"title":{},"body":{"index.html":{},"license.html":{}}}],["implementation",{"_index":1290,"title":{},"body":{"injectables/DualService.html":{},"license.html":{}}}],["implements",{"_index":245,"title":{},"body":{"components/AppearanceComponent.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"interfaces/HeaderRequirement.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"components/SpectrumComponent.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"components/SpectrumHighchartComponent.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["implied",{"_index":3999,"title":{},"body":{"license.html":{}}}],["import",{"_index":20,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"modules/CurveModule.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"interfaces/HeaderRequirement.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"modules/InterfaceUtilModule.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"modules/MoonModule.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyChart.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"interfaces/MyTable.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"modules/ScatterModule.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"components/SpectrumComponent.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"modules/SpectrumModule.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"modules/VenusModule.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"license.html":{}}}],["important",{"_index":2985,"title":{},"body":{"components/VenusHighchartComponent.html":{}}}],["importing",{"_index":3936,"title":{},"body":{"license.html":{}}}],["imports",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/InterfaceUtilModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"modules/SpectrumModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"modules/VenusModule.html":{}}}],["impose",{"_index":3859,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":4001,"title":{},"body":{"license.html":{}}}],["inability",{"_index":4054,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":4056,"title":{},"body":{"license.html":{}}}],["inactive",{"_index":2984,"title":{},"body":{"components/VenusHighchartComponent.html":{}}}],["inc",{"_index":3336,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":4051,"title":{},"body":{"license.html":{}}}],["include",{"_index":3562,"title":{},"body":{"license.html":{}}}],["included",{"_index":3564,"title":{},"body":{"license.html":{}}}],["includes",{"_index":3516,"title":{},"body":{"license.html":{}}}],["including",{"_index":3579,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":3704,"title":{},"body":{"license.html":{}}}],["incompatible",{"_index":3433,"title":{},"body":{"license.html":{}}}],["incorporating",{"_index":4108,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":3773,"title":{},"body":{"license.html":{}}}],["indemnification",{"_index":3855,"title":{},"body":{"license.html":{}}}],["independent",{"_index":3693,"title":{},"body":{"license.html":{}}}],["index",{"_index":118,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"interfaces/HeaderRequirement.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyData.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"components/SpectrumComponent.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index).concat(this.datadict.slice(index",{"_index":1219,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["indicate",{"_index":3906,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":3869,"title":{},"body":{"license.html":{}}}],["indices",{"_index":1409,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["individual",{"_index":3702,"title":{},"body":{"license.html":{}}}],["individuals",{"_index":3440,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":3788,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"modules/CurveModule.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"interfaces/HeaderRequirement.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"modules/InterfaceUtilModule.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"modules/MoonModule.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyData.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"modules/ScatterModule.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"components/SpectrumComponent.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"modules/SpectrumModule.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"modules/VenusModule.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["inform",{"_index":3755,"title":{},"body":{"license.html":{}}}],["information",{"_index":3214,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["infringe",{"_index":3904,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":3933,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":3508,"title":{},"body":{"license.html":{}}}],["init",{"_index":3208,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["initchartseries",{"_index":1248,"title":{},"body":{"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{}}}],["initiate",{"_index":3927,"title":{},"body":{"license.html":{}}}],["initiating",{"_index":1594,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["initiation",{"_index":3219,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injectable",{"_index":334,"title":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"injectables/DualService.html":{},"injectables/HonorCodeChartService.html":{},"injectables/HonorCodePopupService.html":{},"injectables/MoonService.html":{},"injectables/ScatterService.html":{},"injectables/SpectrumService.html":{},"injectables/VenusService.html":{}},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"injectables/DualService.html":{},"injectables/HonorCodeChartService.html":{},"injectables/HonorCodePopupService.html":{},"injectables/MoonService.html":{},"injectables/ScatterService.html":{},"injectables/SpectrumService.html":{},"injectables/VenusService.html":{},"coverage.html":{}}}],["injectables",{"_index":335,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"injectables/DualService.html":{},"injectables/HonorCodeChartService.html":{},"injectables/HonorCodePopupService.html":{},"injectables/MoonService.html":{},"injectables/ScatterService.html":{},"injectables/SpectrumService.html":{},"injectables/VenusService.html":{},"overview.html":{}}}],["input",{"_index":63,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"modules/InterfaceUtilModule.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"modules/MoonModule.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterModelInterface.html":{},"modules/ScatterModule.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"modules/SpectrumModule.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"modules/VenusModule.html":{},"components/VenusTableComponent.html":{}}}],["inputchild",{"_index":1676,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["inputlabels",{"_index":1229,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["inputs",{"_index":1680,"title":{},"body":{"components/InputSliderComponent.html":{},"components/MenubarComponent.html":{},"components/SimpleDataButtonComponent.html":{}}}],["inputslidercomponent",{"_index":62,"title":{"components/InputSliderComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"modules/InterfaceUtilModule.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["inputslidervalue",{"_index":1745,"title":{"interfaces/InputSliderValue.html":{}},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/MoonFormComponent.html":{},"components/ScatterFormComponent.html":{},"classes/SliderUtil.html":{},"coverage.html":{}}}],["inputtoslider",{"_index":2568,"title":{},"body":{"classes/SliderUtil.html":{}}}],["inputtoslider(input",{"_index":1746,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["inside",{"_index":3429,"title":{},"body":{"license.html":{}}}],["install",{"_index":3428,"title":{},"body":{"license.html":{}}}],["installation",{"_index":3791,"title":{},"body":{"license.html":{}}}],["installed",{"_index":3808,"title":{},"body":{"license.html":{}}}],["instead",{"_index":4114,"title":{},"body":{"license.html":{}}}],["intact",{"_index":3667,"title":{},"body":{"license.html":{}}}],["intended",{"_index":3357,"title":{},"body":{"license.html":{}}}],["intention",{"_index":3656,"title":{},"body":{"license.html":{}}}],["interaction",{"_index":3526,"title":{},"body":{"license.html":{}}}],["interactive",{"_index":3530,"title":{},"body":{"license.html":{}}}],["interchange",{"_index":3718,"title":{},"body":{"license.html":{}}}],["interest",{"_index":3922,"title":{},"body":{"license.html":{}}}],["interface",{"_index":491,"title":{"interfaces/ChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"interfaces/CurveDataDict.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"interfaces/DualChartInfoStorageObject.html":{},"interfaces/DualDataDict.html":{},"interfaces/HeaderRequirement.html":{},"interfaces/InputSliderValue.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"interfaces/MyChart.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyData.html":{},"interfaces/MyFileParserStrategy.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"interfaces/VenusDataDict.html":{}},"body":{"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"interfaces/HeaderRequirement.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyData.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SliderUtil.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["interface.ts",{"_index":2180,"title":{},"body":{"interfaces/MyTable.html":{},"coverage.html":{}}}],["interface.ts:4",{"_index":2182,"title":{},"body":{"interfaces/MyTable.html":{}}}],["interface.ts:6",{"_index":2183,"title":{},"body":{"interfaces/MyTable.html":{}}}],["interface.ts:8",{"_index":2181,"title":{},"body":{"interfaces/MyTable.html":{}}}],["interfaceinfo",{"_index":1080,"title":{},"body":{"classes/CurveStorage.html":{},"classes/DualStorage.html":{},"classes/MoonStorage.html":{},"interfaces/MyStorage.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumStorage.html":{},"classes/VenusStorage.html":{}}}],["interfacekey",{"_index":854,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/MoonStorage.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{}}}],["interfaces",{"_index":541,"title":{},"body":{"interfaces/ChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"interfaces/CurveDataDict.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"interfaces/DualChartInfoStorageObject.html":{},"interfaces/DualDataDict.html":{},"interfaces/HeaderRequirement.html":{},"interfaces/InputSliderValue.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"interfaces/MyChart.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyData.html":{},"interfaces/MyFileParserStrategy.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"interfaces/VenusDataDict.html":{},"license.html":{},"overview.html":{}}}],["interfacesubject",{"_index":2039,"title":{},"body":{"injectables/MoonService.html":{},"injectables/ScatterService.html":{},"injectables/SpectrumService.html":{}}}],["interfaceutilmodule",{"_index":1775,"title":{"modules/InterfaceUtilModule.html":{}},"body":{"modules/InterfaceUtilModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules.html":{},"overview.html":{}}}],["interfered",{"_index":3799,"title":{},"body":{"license.html":{}}}],["interpretation",{"_index":4063,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":3577,"title":{},"body":{"license.html":{}}}],["intialize",{"_index":349,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["intimate",{"_index":3593,"title":{},"body":{"license.html":{}}}],["intro",{"_index":3268,"title":{},"body":{"index.html":{}}}],["introduce",{"_index":1895,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{}}}],["invalid",{"_index":1416,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"classes/SliderUtil.html":{}}}],["invalidate",{"_index":3688,"title":{},"body":{"license.html":{}}}],["irrevocable",{"_index":3601,"title":{},"body":{"license.html":{}}}],["isdatakeymissing",{"_index":1484,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["isdatarandom",{"_index":2512,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{}}}],["isemitdata",{"_index":1448,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["isemiterror",{"_index":1436,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["isemitheaders",{"_index":1449,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["isheadervalid",{"_index":1496,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["islog",{"_index":1682,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["ismagnitudeon",{"_index":842,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["isnan(channel1",{"_index":2681,"title":{},"body":{"components/SpectrumComponent.html":{}}}],["isnan(entry[0",{"_index":2094,"title":{},"body":{"injectables/MoonService.html":{}}}],["isnan(entry[1",{"_index":2095,"title":{},"body":{"injectables/MoonService.html":{}}}],["isnan(freq",{"_index":2680,"title":{},"body":{"components/SpectrumComponent.html":{}}}],["isuploaddata",{"_index":2513,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{}}}],["it's",{"_index":3275,"title":{},"body":{"index.html":{}}}],["italic",{"_index":2879,"title":{},"body":{"components/ToolsNavbarComponent.html":{}}}],["item",{"_index":2877,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"license.html":{}}}],["itself",{"_index":3812,"title":{},"body":{"license.html":{}}}],["jpeg",{"_index":3216,"title":{},"body":{"miscellaneous/functions.html":{}}}],["jpegdata",{"_index":3215,"title":{},"body":{"miscellaneous/functions.html":{}}}],["jpg",{"_index":1538,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["json.parse(localstorage.getitem(spectrumstorage.chartinfokey",{"_index":2636,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{}}}],["json.parse(localstorage.getitem(spectrumstorage.datakey",{"_index":2639,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{}}}],["json.parse(localstorage.getitem(spectrumstorage.interfacekey",{"_index":2641,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{}}}],["json.parse(localstorage.getitem(this.chartinfokey",{"_index":865,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["json.parse(localstorage.getitem(this.colorthemekey",{"_index":452,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["json.parse(localstorage.getitem(this.datakey",{"_index":868,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["json.parse(localstorage.getitem(this.fontkey",{"_index":468,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["json.parse(localstorage.getitem(this.fontsizekey",{"_index":463,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["json.parse(localstorage.getitem(this.fontstylekey",{"_index":458,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["json.parse(localstorage.getitem(this.interfacekey",{"_index":871,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["json.stringify(chartinfo",{"_index":2649,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["json.stringify(chartinfoobject",{"_index":874,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["json.stringify(colortheme",{"_index":449,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["json.stringify(data",{"_index":877,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["json.stringify(font",{"_index":465,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["json.stringify(fontsize",{"_index":460,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["json.stringify(fontstyle",{"_index":455,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["json.stringify(interfaceinfo",{"_index":880,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{}}}],["json.stringify(spectrumchartinfo.getdefaultstorageobject",{"_index":2644,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{}}}],["json.stringify(spectrumdata.getdefaultdata",{"_index":2646,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{}}}],["json.stringify(spectruminterfaceimpl.getdefaultchannel",{"_index":2648,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{}}}],["json.stringify(this.defaultchartinfo",{"_index":882,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["json.stringify(this.defaultdata",{"_index":884,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["json.stringify(this.defaultinterface",{"_index":886,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["julian",{"_index":2116,"title":{},"body":{"classes/MoonTable.html":{},"components/MoonTableComponent.html":{}}}],["juliandate",{"_index":1884,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{}}}],["june",{"_index":3329,"title":{},"body":{"license.html":{}}}],["keep",{"_index":3666,"title":{},"body":{"license.html":{}}}],["kernel",{"_index":3571,"title":{},"body":{"license.html":{}}}],["key",{"_index":492,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/HeaderRequirement.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"interfaces/MyColorTheme.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"classes/SliderUtil.html":{},"components/SpectrumComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["keyfieldmap",{"_index":1483,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["keyfieldmap[datakey",{"_index":1486,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["keys",{"_index":1108,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["kind",{"_index":3522,"title":{},"body":{"license.html":{}}}],["kinds",{"_index":3349,"title":{},"body":{"license.html":{}}}],["km",{"_index":2932,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["know",{"_index":3377,"title":{},"body":{"license.html":{}}}],["knowingly",{"_index":3962,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":3970,"title":{},"body":{"license.html":{}}}],["lab",{"_index":3271,"title":{},"body":{"index.html":{}}}],["label",{"_index":1683,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["label.trim",{"_index":794,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["labels",{"_index":602,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/SimpleGraphButtonComponent.html":{}}}],["language",{"_index":3317,"title":{},"body":{"index.html":{},"license.html":{}}}],["large",{"_index":508,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"components/ToolsNavbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["larger",{"_index":509,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["later",{"_index":4025,"title":{},"body":{"license.html":{}}}],["latitude",{"_index":2212,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{}}}],["law",{"_index":3510,"title":{},"body":{"license.html":{}}}],["laws",{"_index":3481,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":3931,"title":{},"body":{"license.html":{}}}],["leading",{"_index":1736,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{},"miscellaneous/functions.html":{}}}],["left",{"_index":1823,"title":{},"body":{"components/LineFormComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["legal",{"_index":3409,"title":{},"body":{"license.html":{}}}],["legend",{"_index":26,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"components/InputSliderComponent.html":{},"modules/InterfaceUtilModule.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"modules/MoonModule.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"modules/ScatterModule.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"modules/SpectrumModule.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"modules/VenusModule.html":{},"components/VenusTableComponent.html":{},"overview.html":{}}}],["length",{"_index":2339,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["less",{"_index":3228,"title":{},"body":{"miscellaneous/functions.html":{}}}],["lesser",{"_index":4113,"title":{},"body":{"license.html":{}}}],["level",{"_index":3269,"title":{},"body":{"index.html":{}}}],["lgpl.html",{"_index":4117,"title":{},"body":{"license.html":{}}}],["liability",{"_index":3838,"title":{},"body":{"license.html":{}}}],["liable",{"_index":3507,"title":{},"body":{"license.html":{}}}],["libaries",{"_index":3282,"title":{},"body":{"index.html":{}}}],["libraries",{"_index":3560,"title":{},"body":{"license.html":{}}}],["library",{"_index":3764,"title":{},"body":{"license.html":{}}}],["license",{"_index":3324,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":3485,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":3487,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":3489,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":3350,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":3908,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":3847,"title":{},"body":{"license.html":{}}}],["light",{"_index":495,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["light_theme",{"_index":496,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"components/ScatterHighchartComponent.html":{},"miscellaneous/enumerations.html":{}}}],["lightgray",{"_index":2352,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["likewise",{"_index":3901,"title":{},"body":{"license.html":{}}}],["limit",{"_index":3657,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":4048,"title":{},"body":{"license.html":{}}}],["limited",{"_index":4036,"title":{},"body":{"license.html":{}}}],["limiting",{"_index":3837,"title":{},"body":{"license.html":{}}}],["limitprecision",{"_index":1384,"title":{},"body":{"components/DualTableComponent.html":{},"injectables/MoonService.html":{},"components/MoonTableComponent.html":{},"components/ScatterTableComponent.html":{},"components/SpectrumTableComponent.html":{},"injectables/VenusService.html":{},"components/VenusTableComponent.html":{}}}],["limitprecision(data",{"_index":1374,"title":{},"body":{"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["limitprecision(dataarray",{"_index":2056,"title":{},"body":{"injectables/MoonService.html":{},"injectables/VenusService.html":{}}}],["line",{"_index":66,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"license.html":{}}}],["line.includes",{"_index":1489,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["line.split(\"=\")[1].trim",{"_index":1493,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["line.split(/\\s",{"_index":1465,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["line.startswith",{"_index":1462,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["linear",{"_index":672,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["linechartdata",{"_index":629,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["linechartoptions",{"_index":631,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["linecolordarkarray",{"_index":472,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["linecolorlightarray",{"_index":473,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["lineformcomponent",{"_index":65,"title":{"components/LineFormComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["lines",{"_index":1473,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["lines.filter((line",{"_index":1476,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["link",{"_index":1060,"title":{},"body":{"modules/CurveModule.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"license.html":{}}}],["linked",{"_index":3589,"title":{},"body":{"license.html":{}}}],["linking",{"_index":4111,"title":{},"body":{"license.html":{}}}],["list",{"_index":2495,"title":{},"body":{"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"license.html":{}}}],["literal",{"_index":2153,"title":{},"body":{"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"miscellaneous/typealiases.html":{}}}],["litigation",{"_index":3928,"title":{},"body":{"license.html":{}}}],["ln(1",{"_index":1899,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{}}}],["ln(750",{"_index":1897,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{}}}],["local",{"_index":4064,"title":{},"body":{"license.html":{}}}],["localize`:page",{"_index":228,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["localize`:site",{"_index":241,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["localstorage.getitem(spectrumstorage.chartinfokey",{"_index":2635,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{}}}],["localstorage.getitem(spectrumstorage.datakey",{"_index":2638,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{}}}],["localstorage.getitem(spectrumstorage.interfacekey",{"_index":2640,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{}}}],["localstorage.getitem(this.chartinfokey",{"_index":864,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["localstorage.getitem(this.colorthemekey",{"_index":450,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["localstorage.getitem(this.datakey",{"_index":867,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["localstorage.getitem(this.fontkey",{"_index":466,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["localstorage.getitem(this.fontsizekey",{"_index":461,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["localstorage.getitem(this.fontstylekey",{"_index":456,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["localstorage.getitem(this.interfacekey",{"_index":870,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["localstorage.setitem(spectrumstorage.chartinfokey",{"_index":2643,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{}}}],["localstorage.setitem(spectrumstorage.datakey",{"_index":2645,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{}}}],["localstorage.setitem(spectrumstorage.interfacekey",{"_index":2647,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{}}}],["localstorage.setitem(this.chartinfokey",{"_index":873,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["localstorage.setitem(this.colorthemekey",{"_index":448,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["localstorage.setitem(this.datakey",{"_index":876,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["localstorage.setitem(this.fontkey",{"_index":464,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["localstorage.setitem(this.fontsizekey",{"_index":459,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["localstorage.setitem(this.fontstylekey",{"_index":454,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["localstorage.setitem(this.interfacekey",{"_index":879,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["long",{"_index":3296,"title":{},"body":{"index.html":{},"license.html":{}}}],["longitude",{"_index":2211,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{}}}],["loss",{"_index":4055,"title":{},"body":{"license.html":{}}}],["losses",{"_index":4057,"title":{},"body":{"license.html":{}}}],["machine",{"_index":3708,"title":{},"body":{"license.html":{}}}],["made",{"_index":1623,"title":{},"body":{"components/HonorCodePopupComponent.html":{},"license.html":{}}}],["magnitude",{"_index":1786,"title":{},"body":{"components/LineFormComponent.html":{}}}],["magslider",{"_index":1789,"title":{},"body":{"components/LineFormComponent.html":{}}}],["mail",{"_index":4093,"title":{},"body":{"license.html":{}}}],["maintain",{"_index":3739,"title":{},"body":{"license.html":{}}}],["maintainaspectratio",{"_index":663,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["maintainble",{"_index":3295,"title":{},"body":{"index.html":{}}}],["major",{"_index":3566,"title":{},"body":{"license.html":{}}}],["make",{"_index":3263,"title":{},"body":{"index.html":{},"license.html":{}}}],["makerawdata",{"_index":594,"title":{},"body":{"classes/CurveChart.html":{}}}],["makerawdata(datadict",{"_index":605,"title":{},"body":{"classes/CurveChart.html":{}}}],["makes",{"_index":3628,"title":{},"body":{"license.html":{}}}],["making",{"_index":3495,"title":{},"body":{"license.html":{}}}],["manner",{"_index":3946,"title":{},"body":{"license.html":{}}}],["manufacturer",{"_index":3431,"title":{},"body":{"license.html":{}}}],["map",{"_index":1215,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["map((col",{"_index":1481,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["map((entry",{"_index":2611,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{}}}],["map((line",{"_index":1463,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["map((value",{"_index":1466,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["march",{"_index":3996,"title":{},"body":{"license.html":{}}}],["margin",{"_index":1629,"title":{},"body":{"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["marked",{"_index":3419,"title":{},"body":{"license.html":{}}}],["marker",{"_index":2311,"title":{},"body":{"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{}}}],["marks",{"_index":3853,"title":{},"body":{"license.html":{}}}],["masks",{"_index":3483,"title":{},"body":{"license.html":{}}}],["mat",{"_index":329,"title":{},"body":{"components/AppearanceComponent.html":{},"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterFormComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumFormComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["matbutton",{"_index":1654,"title":{},"body":{"injectables/HonorCodePopupService.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["matbuttonmodule",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"modules/HonorCodePopupModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["matbuttontogglemodule",{"_index":1039,"title":{},"body":{"modules/CurveModule.html":{}}}],["matching",{"_index":113,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"modules/CurveModule.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"interfaces/HeaderRequirement.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"modules/InterfaceUtilModule.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"modules/MoonModule.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyData.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"modules/ScatterModule.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"components/SpectrumComponent.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"modules/SpectrumModule.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"modules/VenusModule.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":1648,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["matdialogmodule",{"_index":1638,"title":{},"body":{"modules/HonorCodePopupModule.html":{}}}],["matdialogref",{"_index":1602,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["material",{"_index":3283,"title":{},"body":{"index.html":{},"license.html":{}}}],["materially",{"_index":3813,"title":{},"body":{"license.html":{}}}],["matformfieldmodule",{"_index":1044,"title":{},"body":{"modules/CurveModule.html":{}}}],["math.cos(entry.longitude",{"_index":2224,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["math.exp(math.random",{"_index":1900,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{}}}],["math.log(maxnum",{"_index":1767,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["math.log(minnum",{"_index":1768,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["math.log(value",{"_index":1748,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["math.max((1",{"_index":2950,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["math.max(...data.map(d",{"_index":2329,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["math.min(...data.map(d",{"_index":2327,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["math.pi",{"_index":2222,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["math.pi)).tofixed(scatterdata.float_precision",{"_index":2225,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["math.pow(10",{"_index":1771,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["math.random",{"_index":1902,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{}}}],["math.round(value",{"_index":1772,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["math.sin(entry.longitude",{"_index":2226,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["maticonmodule",{"_index":1053,"title":{},"body":{"modules/CurveModule.html":{},"modules/HonorCodePopupModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["matinput",{"_index":1709,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["matinputmodule",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/InterfaceUtilModule.html":{}}}],["matlegacybuttonmodule",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"modules/HonorCodePopupModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["matlegacydialog",{"_index":1661,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["matlegacydialogmodule",{"_index":1637,"title":{},"body":{"modules/HonorCodePopupModule.html":{}}}],["matlegacydialogref",{"_index":1608,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["matlegacyformfieldmodule",{"_index":1043,"title":{},"body":{"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules/SpectrumModule.html":{},"modules/VenusModule.html":{}}}],["matlegacyinputmodule",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules/SpectrumModule.html":{},"modules/VenusModule.html":{}}}],["matlegacylistmodule",{"_index":2493,"title":{},"body":{"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["matlegacyoptionmodule",{"_index":2739,"title":{},"body":{"modules/SpectrumModule.html":{}}}],["matlegacyselectmodule",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"modules/SpectrumModule.html":{}}}],["matlegacyslidetoggle",{"_index":1808,"title":{},"body":{"components/LineFormComponent.html":{}}}],["matlegacyslidetogglemodule",{"_index":1055,"title":{},"body":{"modules/CurveModule.html":{},"modules/SpectrumModule.html":{}}}],["matlistmodule",{"_index":2494,"title":{},"body":{"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["matprogressspinner",{"_index":1657,"title":{},"body":{"injectables/HonorCodePopupService.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["matprogressspinnermodule",{"_index":2551,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["matselectmodule",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{}}}],["matsidenav",{"_index":2852,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["matsidenavmodule",{"_index":2491,"title":{},"body":{"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["matslidermodule",{"_index":1781,"title":{},"body":{"modules/InterfaceUtilModule.html":{},"modules/MoonModule.html":{}}}],["matslidetoggle",{"_index":1805,"title":{},"body":{"components/LineFormComponent.html":{}}}],["matslidetogglemodule",{"_index":1056,"title":{},"body":{"modules/CurveModule.html":{}}}],["mattoolbarmodule",{"_index":1842,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{}}}],["max",{"_index":1761,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["maxa",{"_index":2927,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["maxnum",{"_index":1760,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["maxvalue",{"_index":1684,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["maxx",{"_index":2328,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["maxy",{"_index":2331,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["meaning",{"_index":3863,"title":{},"body":{"license.html":{}}}],["means",{"_index":3480,"title":{},"body":{"license.html":{}}}],["measure",{"_index":3636,"title":{},"body":{"license.html":{}}}],["measures",{"_index":3649,"title":{},"body":{"license.html":{}}}],["medium",{"_index":1826,"title":{},"body":{"components/LineFormComponent.html":{},"license.html":{}}}],["meet",{"_index":3676,"title":{},"body":{"license.html":{}}}],["meets",{"_index":3545,"title":{},"body":{"license.html":{}}}],["menu",{"_index":1828,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"license.html":{}}}],["menubar",{"_index":1831,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["menubar'},{'name",{"_index":68,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["menubar.component.html",{"_index":1833,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{}}}],["menubar.component.scss",{"_index":1832,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{}}}],["menubar/menubar.component",{"_index":2856,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["menubarcomponent",{"_index":67,"title":{"components/MenubarComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["menubarmodule",{"_index":1846,"title":{"modules/MenubarModule.html":{}},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"modules.html":{},"overview.html":{}}}],["merchantability",{"_index":4037,"title":{},"body":{"license.html":{}}}],["mere",{"_index":3525,"title":{},"body":{"license.html":{}}}],["merging",{"_index":3918,"title":{},"body":{"license.html":{}}}],["met",{"_index":3603,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["methods",{"_index":256,"title":{},"body":{"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyData.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"classes/SpectrumChartInfo.html":{},"components/SpectrumComponent.html":{},"classes/SpectrumData.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"license.html":{}}}],["min",{"_index":1756,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["min/max",{"_index":2333,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["minnum",{"_index":1755,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["minvalue",{"_index":1685,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["minx",{"_index":2326,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["miny",{"_index":2330,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["miscellaneous",{"_index":3199,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["misrepresentation",{"_index":3843,"title":{},"body":{"license.html":{}}}],["modalref",{"_index":1666,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["modalref.afterclosed",{"_index":1669,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["mode",{"_index":485,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"license.html":{}}}],["model",{"_index":1975,"title":{},"body":{"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SimpleDataButtonComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"license.html":{}}}],["modeldata",{"_index":2251,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["modelreset",{"_index":2509,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{}}}],["modelresetvisible",{"_index":2514,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{}}}],["models",{"_index":3015,"title":{},"body":{"injectables/VenusService.html":{}}}],["modern",{"_index":3291,"title":{},"body":{"index.html":{}}}],["modification",{"_index":3477,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":3548,"title":{},"body":{"license.html":{}}}],["modified",{"_index":3418,"title":{},"body":{"license.html":{}}}],["modifies",{"_index":3680,"title":{},"body":{"license.html":{}}}],["modify",{"_index":3390,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":3514,"title":{},"body":{"license.html":{}}}],["module",{"_index":139,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/InterfaceUtilModule.html":{},"modules/MenubarModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules/SettingsModule.html":{},"modules/SimpleDataButtonModule.html":{},"modules/SimpleGraphButtonModule.html":{},"modules/SpectrumModule.html":{},"modules/ToolsNavbarModule.html":{},"modules/VenusModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/InterfaceUtilModule.html":{},"modules/MenubarModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules/SettingsModule.html":{},"modules/SimpleDataButtonModule.html":{},"modules/SimpleGraphButtonModule.html":{},"modules/SpectrumModule.html":{},"modules/ToolsNavbarModule.html":{},"modules/VenusModule.html":{},"overview.html":{}}}],["modules",{"_index":141,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/InterfaceUtilModule.html":{},"modules/MenubarModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules/SettingsModule.html":{},"modules/SimpleDataButtonModule.html":{},"modules/SimpleGraphButtonModule.html":{},"modules/SpectrumModule.html":{},"modules/ToolsNavbarModule.html":{},"modules/VenusModule.html":{},"modules.html":{},"overview.html":{}}}],["moon",{"_index":70,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"modules/MoonModule.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["moon's",{"_index":1891,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{}}}],["moon'},{'name",{"_index":72,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["moon.component.html",{"_index":1910,"title":{},"body":{"components/MoonComponent.html":{}}}],["moon.component.scss",{"_index":1909,"title":{},"body":{"components/MoonComponent.html":{}}}],["moon.service",{"_index":1862,"title":{},"body":{"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"modules/MoonModule.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{}}}],["moon.service.util",{"_index":1940,"title":{},"body":{"components/MoonFormComponent.html":{},"injectables/MoonService.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{}}}],["moon/moon.component",{"_index":2034,"title":{},"body":{"modules/MoonModule.html":{}}}],["moon/moon.service.util",{"_index":2279,"title":{},"body":{"components/ScatterFormComponent.html":{},"injectables/ScatterService.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{}}}],["moonchartformcomponent",{"_index":69,"title":{"components/MoonChartFormComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"modules/MoonModule.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["moonchartinfo",{"_index":1863,"title":{"classes/MoonChartInfo.html":{}},"body":{"classes/MoonChartInfo.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"coverage.html":{}}}],["moonchartinfostorageobject",{"_index":1872,"title":{"interfaces/MoonChartInfoStorageObject.html":{}},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonStorage.html":{},"coverage.html":{}}}],["mooncomponent",{"_index":71,"title":{"components/MoonComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"modules/MoonModule.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["moondata",{"_index":1886,"title":{"classes/MoonData.html":{}},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"coverage.html":{}}}],["moondatadict",{"_index":1883,"title":{"interfaces/MoonDataDict.html":{}},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"coverage.html":{}}}],["moonformcomponent",{"_index":73,"title":{"components/MoonFormComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"modules/MoonModule.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["moonhighchartcomponent",{"_index":74,"title":{"components/MoonHighchartComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"modules/MoonModule.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mooninterface",{"_index":1982,"title":{"interfaces/MoonInterface.html":{}},"body":{"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"coverage.html":{}}}],["mooninterfaceimpl",{"_index":2007,"title":{"classes/MoonInterfaceImpl.html":{}},"body":{"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{},"coverage.html":{}}}],["mooninterfacestorageobject",{"_index":1995,"title":{"interfaces/MoonInterfaceStorageObject.html":{}},"body":{"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"classes/MoonStorage.html":{},"coverage.html":{}}}],["moonmodel",{"_index":2024,"title":{"interfaces/MoonModel.html":{}},"body":{"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"coverage.html":{}}}],["moonmodelparameters",{"_index":1955,"title":{},"body":{"components/MoonFormComponent.html":{},"miscellaneous/enumerations.html":{}}}],["moonmodelparameters.amplitude",{"_index":1942,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["moonmodelparameters.period",{"_index":1944,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["moonmodelparameters.phase",{"_index":1946,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["moonmodelparameters.tilt",{"_index":1948,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["moonmodule",{"_index":2027,"title":{"modules/MoonModule.html":{}},"body":{"modules/MoonModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"modules.html":{},"overview.html":{}}}],["moonservice",{"_index":1861,"title":{"injectables/MoonService.html":{}},"body":{"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"modules/MoonModule.html":{},"injectables/MoonService.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["moonstorage",{"_index":2040,"title":{"classes/MoonStorage.html":{}},"body":{"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"coverage.html":{}}}],["moontable",{"_index":2113,"title":{"classes/MoonTable.html":{}},"body":{"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"coverage.html":{}}}],["moontable(this.id",{"_index":2115,"title":{},"body":{"classes/MoonTable.html":{},"components/MoonTableComponent.html":{}}}],["moontablecomponent",{"_index":75,"title":{"components/MoonTableComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"modules/MoonModule.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["moontablecomponent.float_precision",{"_index":2119,"title":{},"body":{"classes/MoonTable.html":{},"components/MoonTableComponent.html":{}}}],["more",{"_index":1413,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"license.html":{}}}],["moreover",{"_index":3889,"title":{},"body":{"license.html":{}}}],["mt",{"_index":1850,"title":{},"body":{"components/MenubarComponent.html":{}}}],["multi",{"_index":3278,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":3249,"title":{},"body":{"miscellaneous/functions.html":{}}}],["multiplier",{"_index":1770,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["myaction",{"_index":897,"title":{},"body":{"components/CurveComponent.html":{},"miscellaneous/typealiases.html":{}}}],["mychart",{"_index":576,"title":{"interfaces/MyChart.html":{}},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"interfaces/MyChart.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mycolortheme",{"_index":271,"title":{"interfaces/MyColorTheme.html":{}},"body":{"components/AppearanceComponent.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"coverage.html":{}}}],["mydata",{"_index":574,"title":{"interfaces/MyData.html":{}},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"interfaces/MyChart.html":{},"interfaces/MyData.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"coverage.html":{}}}],["myfileparser",{"_index":1423,"title":{"classes/MyFileParser.html":{}},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"components/SpectrumComponent.html":{},"coverage.html":{}}}],["myfileparser(filetype.gbo_spectrum_txt",{"_index":2661,"title":{},"body":{"components/SpectrumComponent.html":{}}}],["myfileparserdefault",{"_index":1431,"title":{"classes/MyFileParserDefault.html":{}},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"coverage.html":{}}}],["myfileparsererrors",{"_index":1394,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"miscellaneous/enumerations.html":{}}}],["myfileparserstrategy",{"_index":1398,"title":{"interfaces/MyFileParserStrategy.html":{}},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"coverage.html":{}}}],["myfileparsertxt",{"_index":1430,"title":{"classes/MyFileParserTXT.html":{}},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"coverage.html":{}}}],["myfontfamily",{"_index":274,"title":{"interfaces/MyFontFamily.html":{}},"body":{"components/AppearanceComponent.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"coverage.html":{}}}],["myfontsize",{"_index":277,"title":{"interfaces/MyFontSize.html":{}},"body":{"components/AppearanceComponent.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"coverage.html":{}}}],["myfontstyle",{"_index":280,"title":{"interfaces/MyFontStyle.html":{}},"body":{"components/AppearanceComponent.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"coverage.html":{}}}],["myround",{"_index":2569,"title":{},"body":{"classes/SliderUtil.html":{}}}],["myround(value",{"_index":1769,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["mystorage",{"_index":769,"title":{"interfaces/MyStorage.html":{}},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{},"interfaces/MyStorage.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"coverage.html":{}}}],["mytable",{"_index":1083,"title":{"interfaces/MyTable.html":{}},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyTable.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"coverage.html":{}}}],["name",{"_index":32,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyData.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"interfaces/MyStorage.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"classes/SpectrumChartInfo.html":{},"components/SpectrumComponent.html":{},"classes/SpectrumData.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"miscellaneous/functions.html":{}}}],["name:skynet",{"_index":242,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["names",{"_index":3846,"title":{},"body":{"license.html":{}}}],["nature",{"_index":3694,"title":{},"body":{"license.html":{}}}],["nav",{"_index":2875,"title":{},"body":{"components/ToolsNavbarComponent.html":{}}}],["navbar",{"_index":1835,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["navbar'},{'name",{"_index":102,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["navbar.component",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{}}}],["navbar.component.html",{"_index":2847,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["navbar.component.scss",{"_index":2846,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["navbar.component.ts",{"_index":2839,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"coverage.html":{}}}],["navbar.component.ts:30",{"_index":2854,"title":{},"body":{"components/ToolsNavbarComponent.html":{}}}],["navbar.component.ts:35",{"_index":2851,"title":{},"body":{"components/ToolsNavbarComponent.html":{}}}],["navbar.component.ts:42",{"_index":2850,"title":{},"body":{"components/ToolsNavbarComponent.html":{}}}],["navbar/tools",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"coverage.html":{}}}],["navigation",{"_index":1841,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["nearest",{"_index":666,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["necessary",{"_index":3234,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["need",{"_index":3381,"title":{},"body":{"license.html":{}}}],["needed",{"_index":3454,"title":{},"body":{"license.html":{}}}],["needs",{"_index":1539,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["neo",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/MenubarComponent.html":{},"index.html":{}}}],["network",{"_index":3527,"title":{},"body":{"license.html":{}}}],["neue",{"_index":513,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["new",{"_index":301,"title":{},"body":{"components/AppearanceComponent.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"interfaces/HeaderRequirement.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"injectables/MoonService.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"injectables/ScatterService.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusHighchartComponent.html":{},"injectables/VenusService.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"license.html":{}}}],["next",{"_index":3742,"title":{},"body":{"license.html":{}}}],["ng",{"_index":1635,"title":{},"body":{"modules/HonorCodePopupModule.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{},"dependencies.html":{},"index.html":{}}}],["ng2",{"_index":1051,"title":{},"body":{"modules/CurveModule.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":648,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/SpectrumHighchartComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["ngbmodule",{"_index":1634,"title":{},"body":{"modules/HonorCodePopupModule.html":{}}}],["ngchartsmodule",{"_index":1050,"title":{},"body":{"modules/CurveModule.html":{}}}],["ngif",{"_index":2032,"title":{},"body":{"modules/MoonModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"overview.html":{}}}],["ngmodule",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/InterfaceUtilModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"modules/SpectrumModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"modules/VenusModule.html":{}}}],["ngondestroy",{"_index":654,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumHighchartComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["ngoninit",{"_index":259,"title":{},"body":{"components/AppearanceComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{}}}],["ngx",{"_index":3186,"title":{},"body":{"dependencies.html":{}}}],["node",{"_index":3189,"title":{},"body":{"dependencies.html":{}}}],["noise",{"_index":1896,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{}}}],["non",{"_index":3472,"title":{},"body":{"license.html":{}}}],["noncommercially",{"_index":3730,"title":{},"body":{"license.html":{}}}],["nondatalines",{"_index":1475,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["nondatalines[nondatalines.length",{"_index":1478,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["normal",{"_index":503,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["normally",{"_index":3769,"title":{},"body":{"license.html":{}}}],["nothing",{"_index":3902,"title":{},"body":{"license.html":{}}}],["notice",{"_index":3538,"title":{},"body":{"license.html":{}}}],["notices",{"_index":3533,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":3890,"title":{},"body":{"license.html":{}}}],["notify",{"_index":3885,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":3833,"title":{},"body":{"license.html":{}}}],["npm",{"_index":3309,"title":{},"body":{"index.html":{}}}],["null",{"_index":391,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["num",{"_index":3230,"title":{},"body":{"miscellaneous/functions.html":{}}}],["number",{"_index":489,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"interfaces/HeaderRequirement.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyData.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SliderUtil.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["numbered",{"_index":4024,"title":{},"body":{"license.html":{}}}],["numoverride",{"_index":1686,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["object",{"_index":626,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/LineFormComponent.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["object.keys(fieldsindices).length",{"_index":1459,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["object.keys(headers",{"_index":1495,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["object.values(this.curvecounts",{"_index":1799,"title":{},"body":{"components/LineFormComponent.html":{}}}],["obligate",{"_index":4008,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":3747,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":3638,"title":{},"body":{"license.html":{}}}],["observable",{"_index":1311,"title":{},"body":{"injectables/DualService.html":{},"injectables/HonorCodePopupService.html":{},"injectables/VenusService.html":{}}}],["occasionally",{"_index":3729,"title":{},"body":{"license.html":{}}}],["occurring",{"_index":3899,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":3438,"title":{},"body":{"license.html":{}}}],["offer",{"_index":3407,"title":{},"body":{"license.html":{}}}],["offered",{"_index":3758,"title":{},"body":{"license.html":{}}}],["offering",{"_index":3733,"title":{},"body":{"license.html":{}}}],["official",{"_index":3550,"title":{},"body":{"license.html":{}}}],["offline",{"_index":3184,"title":{},"body":{"dependencies.html":{}}}],["onchange",{"_index":1109,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/MoonFormComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/ScatterFormComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["onchange($event",{"_index":1927,"title":{},"body":{"components/MoonFormComponent.html":{},"components/ScatterFormComponent.html":{}}}],["oncurvenumchange",{"_index":1790,"title":{},"body":{"components/LineFormComponent.html":{}}}],["ondestroy",{"_index":610,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualHighchartComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumHighchartComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["one",{"_index":776,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"interfaces/HeaderRequirement.html":{},"components/LineFormComponent.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["oninit",{"_index":246,"title":{},"body":{"components/AppearanceComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{}}}],["oninsert",{"_index":1113,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["onmagnitude",{"_index":1791,"title":{},"body":{"components/LineFormComponent.html":{}}}],["onmagnitude(value",{"_index":1796,"title":{},"body":{"components/LineFormComponent.html":{}}}],["onremove",{"_index":1111,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["onselect",{"_index":2700,"title":{},"body":{"components/SpectrumFormComponent.html":{}}}],["opacity",{"_index":2982,"title":{},"body":{"components/VenusHighchartComponent.html":{}}}],["open",{"_index":2849,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["opening",{"_index":1840,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{}}}],["opentoolnavbar",{"_index":1834,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{}}}],["operate",{"_index":4060,"title":{},"body":{"license.html":{}}}],["operated",{"_index":3736,"title":{},"body":{"license.html":{}}}],["operating",{"_index":3573,"title":{},"body":{"license.html":{}}}],["operation",{"_index":3658,"title":{},"body":{"license.html":{}}}],["option",{"_index":3830,"title":{},"body":{"license.html":{}}}],["optional",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"interfaces/HeaderRequirement.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyData.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"interfaces/MyStorage.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"classes/SpectrumChartInfo.html":{},"components/SpectrumComponent.html":{},"classes/SpectrumData.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":630,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"license.html":{}}}],["orange",{"_index":478,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"components/ScatterHighchartComponent.html":{}}}],["orbit",{"_index":1892,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{}}}],["order",{"_index":3246,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["organization",{"_index":3915,"title":{},"body":{"license.html":{}}}],["organizations",{"_index":3490,"title":{},"body":{"license.html":{}}}],["origin",{"_index":3844,"title":{},"body":{"license.html":{}}}],["original",{"_index":3261,"title":{},"body":{"index.html":{},"license.html":{}}}],["others",{"_index":3383,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":1401,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["out",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/InterfaceUtilModule.html":{},"modules/MenubarModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules/SettingsModule.html":{},"modules/SimpleDataButtonModule.html":{},"modules/SimpleGraphButtonModule.html":{},"modules/SpectrumModule.html":{},"modules/ToolsNavbarModule.html":{},"modules/VenusModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["outlet",{"_index":2845,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["output",{"_index":1717,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"index.html":{},"license.html":{}}}],["outputs",{"_index":1689,"title":{},"body":{"components/InputSliderComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{}}}],["outside",{"_index":3622,"title":{},"body":{"license.html":{}}}],["over",{"_index":2340,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["overflow",{"_index":1129,"title":{},"body":{"components/CurveTableComponent.html":{},"components/DualTableComponent.html":{},"components/MoonTableComponent.html":{},"components/ScatterTableComponent.html":{},"components/SpectrumTableComponent.html":{},"components/VenusTableComponent.html":{}}}],["overview",{"_index":4120,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owned",{"_index":3941,"title":{},"body":{"license.html":{}}}],["p",{"_index":1457,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"components/LineFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["package",{"_index":3160,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packaged",{"_index":3686,"title":{},"body":{"license.html":{}}}],["packaging",{"_index":3565,"title":{},"body":{"license.html":{}}}],["padding",{"_index":327,"title":{},"body":{"components/AppearanceComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SettingsComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["page",{"_index":12,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"index.html":{}}}],["pagenotfoundcomponent",{"_index":76,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pan",{"_index":2691,"title":{},"body":{"components/SpectrumComponent.html":{}}}],["pankey",{"_index":2716,"title":{},"body":{"components/SpectrumHighchartComponent.html":{}}}],["panning",{"_index":2715,"title":{},"body":{"components/SpectrumHighchartComponent.html":{}}}],["paper",{"_index":4092,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":3875,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":3954,"title":{},"body":{"license.html":{}}}],["param",{"_index":236,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/HeaderRequirement.html":{},"injectables/HonorCodeChartService.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["parameter",{"_index":2943,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["parameters",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyData.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"interfaces/MyStorage.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"classes/SpectrumChartInfo.html":{},"components/SpectrumComponent.html":{},"classes/SpectrumData.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"miscellaneous/functions.html":{}}}],["parsefloat(($event.target",{"_index":1750,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["parsefloat((math.cos(entry.latitude",{"_index":2220,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["parsefloat(input",{"_index":1747,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["parsefloat(max",{"_index":1762,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["parsefloat(min",{"_index":1757,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["parsefloat(rawdata[spectrumcomponent.spectrum_gbo_fields[0",{"_index":2677,"title":{},"body":{"components/SpectrumComponent.html":{}}}],["parsefloat(rawdata[spectrumcomponent.spectrum_gbo_fields[1",{"_index":2678,"title":{},"body":{"components/SpectrumComponent.html":{}}}],["parsefloat(rawdata[spectrumcomponent.spectrum_gbo_fields[2",{"_index":2679,"title":{},"body":{"components/SpectrumComponent.html":{}}}],["parsefloat(row.angularseparation.tofixed(precision",{"_index":2123,"title":{},"body":{"classes/MoonTable.html":{},"components/MoonTableComponent.html":{}}}],["parsefloat(row.channel1.tofixed(2",{"_index":2832,"title":{},"body":{"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{}}}],["parsefloat(row.channel2.tofixed(2",{"_index":2834,"title":{},"body":{"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{}}}],["parsefloat(row.diameter.tofixed(precision",{"_index":3090,"title":{},"body":{"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["parsefloat(row.distance.tofixed(precision",{"_index":2483,"title":{},"body":{"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{}}}],["parsefloat(row.juliandate.tofixed(precision",{"_index":2121,"title":{},"body":{"classes/MoonTable.html":{},"components/MoonTableComponent.html":{}}}],["parsefloat(row.latitude.tofixed(precision",{"_index":2481,"title":{},"body":{"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{}}}],["parsefloat(row.longitude.tofixed(precision",{"_index":2479,"title":{},"body":{"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{}}}],["parsefloat(row.phase.tofixed(precision",{"_index":3092,"title":{},"body":{"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["parsefloat(row.wavelength.tofixed(4",{"_index":2830,"title":{},"body":{"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{}}}],["parsefloat(row.x1.tofixed(precision",{"_index":1378,"title":{},"body":{"classes/DualTable.html":{},"components/DualTableComponent.html":{}}}],["parsefloat(row.x2.tofixed(precision",{"_index":1382,"title":{},"body":{"classes/DualTable.html":{},"components/DualTableComponent.html":{}}}],["parsefloat(row.y1.tofixed(precision",{"_index":1380,"title":{},"body":{"classes/DualTable.html":{},"components/DualTableComponent.html":{}}}],["parsefloat(row.y2.tofixed(precision",{"_index":1383,"title":{},"body":{"classes/DualTable.html":{},"components/DualTableComponent.html":{}}}],["parsefloat(step",{"_index":1766,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["parsefloat(value.tofixed(precision",{"_index":2100,"title":{},"body":{"injectables/MoonService.html":{},"injectables/VenusService.html":{}}}],["part",{"_index":3492,"title":{},"body":{"license.html":{}}}],["particular",{"_index":3555,"title":{},"body":{"license.html":{}}}],["parties",{"_index":3524,"title":{},"body":{"license.html":{}}}],["parts",{"_index":3595,"title":{},"body":{"license.html":{}}}],["party",{"_index":3737,"title":{},"body":{"license.html":{}}}],["party's",{"_index":3920,"title":{},"body":{"license.html":{}}}],["pass",{"_index":3397,"title":{},"body":{"license.html":{}}}],["passing/parsing",{"_index":1809,"title":{},"body":{"components/LineFormComponent.html":{}}}],["password",{"_index":3821,"title":{},"body":{"license.html":{}}}],["patent",{"_index":3874,"title":{},"body":{"license.html":{}}}],["patents",{"_index":3458,"title":{},"body":{"license.html":{}}}],["path",{"_index":211,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{}}}],["pathmatch",{"_index":224,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pattern",{"_index":3294,"title":{},"body":{"index.html":{},"license.html":{}}}],["payment",{"_index":3990,"title":{},"body":{"license.html":{}}}],["peer",{"_index":3753,"title":{},"body":{"license.html":{}}}],["peers",{"_index":3756,"title":{},"body":{"license.html":{}}}],["perform",{"_index":1519,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["performance",{"_index":4041,"title":{},"body":{"license.html":{}}}],["performing",{"_index":3584,"title":{},"body":{"license.html":{}}}],["period",{"_index":1956,"title":{},"body":{"components/MoonFormComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"injectables/MoonService.html":{},"miscellaneous/enumerations.html":{}}}],["periodsubject",{"_index":1923,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["permanently",{"_index":3883,"title":{},"body":{"license.html":{}}}],["permission",{"_index":3410,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":3599,"title":{},"body":{"license.html":{}}}],["permissive",{"_index":3669,"title":{},"body":{"license.html":{}}}],["permit",{"_index":3703,"title":{},"body":{"license.html":{}}}],["permits",{"_index":3865,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":3339,"title":{},"body":{"license.html":{}}}],["perpetuity",{"_index":3803,"title":{},"body":{"license.html":{}}}],["personal",{"_index":3767,"title":{},"body":{"license.html":{}}}],["pertinent",{"_index":4006,"title":{},"body":{"license.html":{}}}],["phase",{"_index":1903,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"components/MoonFormComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["phasesubject",{"_index":1924,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["physical",{"_index":3712,"title":{},"body":{"license.html":{}}}],["physically",{"_index":3726,"title":{},"body":{"license.html":{}}}],["pieces",{"_index":3376,"title":{},"body":{"license.html":{}}}],["piexif",{"_index":3192,"title":{},"body":{"dependencies.html":{}}}],["place",{"_index":3273,"title":{},"body":{"index.html":{},"license.html":{}}}],["please",{"_index":4115,"title":{},"body":{"license.html":{}}}],["pledge",{"_index":1615,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["plotted",{"_index":1810,"title":{},"body":{"components/LineFormComponent.html":{}}}],["plotting",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"index.html":{}}}],["plugins",{"_index":679,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["plus",{"_index":2872,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"license.html":{}}}],["point",{"_index":2941,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["pointer",{"_index":4085,"title":{},"body":{"license.html":{}}}],["points",{"_index":1889,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{},"components/ScatterHighchartComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["popperjs/core",{"_index":3172,"title":{},"body":{"dependencies.html":{}}}],["popup",{"_index":1590,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["popup'},{'name",{"_index":61,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["popup.component",{"_index":1633,"title":{},"body":{"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{}}}],["popup.component.html",{"_index":1598,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["popup.component.scss",{"_index":1597,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["popup.component.ts",{"_index":1589,"title":{},"body":{"components/HonorCodePopupComponent.html":{},"coverage.html":{}}}],["popup.component.ts:16",{"_index":1604,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["popup.component.ts:21",{"_index":1606,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["popup.component.ts:27",{"_index":1605,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["popup.component.ts:31",{"_index":1607,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["popup.module",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["popup.module.ts",{"_index":1632,"title":{},"body":{"modules/HonorCodePopupModule.html":{}}}],["popup.service",{"_index":902,"title":{},"body":{"components/CurveComponent.html":{},"modules/CurveModule.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"modules/MoonModule.html":{},"components/ScatterComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/SpectrumComponent.html":{},"components/VenusComponent.html":{}}}],["popup.service.ts",{"_index":1639,"title":{},"body":{"injectables/HonorCodePopupService.html":{},"coverage.html":{}}}],["popup.service.ts:10",{"_index":1660,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["popup.service.ts:11",{"_index":1649,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["popup.service.ts:16",{"_index":1655,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["popup.service.ts:20",{"_index":1658,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["popup.service.ts:24",{"_index":1650,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["popup.service.ts:28",{"_index":1651,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["popup.service.ts:32",{"_index":1652,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["popup/honor",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"components/CurveComponent.html":{},"modules/CurveModule.html":{},"components/DualComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/MoonComponent.html":{},"modules/MoonModule.html":{},"components/ScatterComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/SpectrumComponent.html":{},"components/VenusComponent.html":{},"coverage.html":{}}}],["popupservice",{"_index":2547,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["portion",{"_index":3761,"title":{},"body":{"license.html":{}}}],["position",{"_index":673,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["possesses",{"_index":3723,"title":{},"body":{"license.html":{}}}],["possession",{"_index":3683,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":4062,"title":{},"body":{"license.html":{}}}],["possible",{"_index":4077,"title":{},"body":{"license.html":{}}}],["power",{"_index":3651,"title":{},"body":{"license.html":{}}}],["practical",{"_index":3351,"title":{},"body":{"license.html":{}}}],["practice",{"_index":3444,"title":{},"body":{"license.html":{}}}],["pre",{"_index":3226,"title":{},"body":{"miscellaneous/functions.html":{}}}],["preamble",{"_index":3347,"title":{},"body":{"license.html":{}}}],["precise",{"_index":3473,"title":{},"body":{"license.html":{}}}],["precisely",{"_index":3441,"title":{},"body":{"license.html":{}}}],["precision",{"_index":1375,"title":{},"body":{"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"injectables/MoonService.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SliderUtil.html":{},"injectables/VenusService.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["predecessor",{"_index":3921,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":3547,"title":{},"body":{"license.html":{}}}],["present",{"_index":4017,"title":{},"body":{"license.html":{}}}],["presents",{"_index":3542,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":3840,"title":{},"body":{"license.html":{}}}],["prevent",{"_index":3382,"title":{},"body":{"license.html":{}}}],["prevented",{"_index":3798,"title":{},"body":{"license.html":{}}}],["previous",{"_index":3424,"title":{},"body":{"license.html":{}}}],["price",{"_index":3371,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":3992,"title":{},"body":{"license.html":{}}}],["prior",{"_index":3886,"title":{},"body":{"license.html":{}}}],["private",{"_index":257,"title":{},"body":{"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"interfaces/HeaderRequirement.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyColorTheme.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"components/SpectrumComponent.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"components/SpectrumHighchartComponent.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"license.html":{}}}],["pro",{"_index":2871,"title":{},"body":{"components/ToolsNavbarComponent.html":{}}}],["problems",{"_index":3421,"title":{},"body":{"license.html":{}}}],["procedures",{"_index":3792,"title":{},"body":{"license.html":{}}}],["processdata",{"_index":951,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["processdata(data",{"_index":963,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["procuring",{"_index":3980,"title":{},"body":{"license.html":{}}}],["produce",{"_index":3576,"title":{},"body":{"license.html":{}}}],["product",{"_index":3713,"title":{},"body":{"license.html":{}}}],["production",{"_index":3311,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["products",{"_index":3439,"title":{},"body":{"license.html":{}}}],["program",{"_index":3360,"title":{},"body":{"license.html":{}}}],["program's",{"_index":3662,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":4105,"title":{},"body":{"license.html":{}}}],["programming",{"_index":3556,"title":{},"body":{"license.html":{}}}],["programs",{"_index":3368,"title":{},"body":{"license.html":{}}}],["prohibit",{"_index":3443,"title":{},"body":{"license.html":{}}}],["prohibiting",{"_index":3647,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":3986,"title":{},"body":{"license.html":{}}}],["project",{"_index":3280,"title":{},"body":{"index.html":{}}}],["projector",{"_index":3286,"title":{},"body":{"index.html":{}}}],["prominent",{"_index":3544,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":3536,"title":{},"body":{"license.html":{}}}],["prompt",{"_index":2878,"title":{},"body":{"components/ToolsNavbarComponent.html":{}}}],["propagate",{"_index":3502,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":3905,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":3515,"title":{},"body":{"license.html":{}}}],["properties",{"_index":119,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"interfaces/HeaderRequirement.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyColorTheme.html":{},"classes/MyFileParser.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"components/SpectrumComponent.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"properties.html":{}}}],["property",{"_index":3768,"title":{},"body":{"license.html":{}}}],["proprietary",{"_index":3468,"title":{},"body":{"license.html":{}}}],["protect",{"_index":3379,"title":{},"body":{"license.html":{}}}],["protected",{"_index":249,"title":{},"body":{"components/AppearanceComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/MoonFormComponent.html":{},"components/ScatterFormComponent.html":{},"classes/SliderUtil.html":{},"components/SpectrumFormComponent.html":{}}}],["protecting",{"_index":3435,"title":{},"body":{"license.html":{}}}],["protection",{"_index":3411,"title":{},"body":{"license.html":{}}}],["protocols",{"_index":3818,"title":{},"body":{"license.html":{}}}],["prove",{"_index":4042,"title":{},"body":{"license.html":{}}}],["provide",{"_index":3615,"title":{},"body":{"license.html":{}}}],["provided",{"_index":3541,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":388,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"injectables/HonorCodeChartService.html":{}}}],["providers",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"components/CurveComponent.html":{},"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/InterfaceUtilModule.html":{},"modules/MenubarModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules/SettingsModule.html":{},"modules/SimpleDataButtonModule.html":{},"modules/SimpleGraphButtonModule.html":{},"modules/SpectrumModule.html":{},"modules/ToolsNavbarModule.html":{},"modules/VenusModule.html":{},"overview.html":{}}}],["provides",{"_index":3251,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provision",{"_index":3452,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":3880,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":4029,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":4031,"title":{},"body":{"license.html":{}}}],["public",{"_index":338,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"interfaces/HeaderRequirement.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyColorTheme.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SliderUtil.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"license.html":{}}}],["publicity",{"_index":3845,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":3819,"title":{},"body":{"license.html":{}}}],["publish",{"_index":3665,"title":{},"body":{"license.html":{}}}],["published",{"_index":4026,"title":{},"body":{"license.html":{}}}],["pulsar",{"_index":2873,"title":{},"body":{"components/ToolsNavbarComponent.html":{}}}],["purpose",{"_index":3462,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":3771,"title":{},"body":{"license.html":{}}}],["pursuant",{"_index":3976,"title":{},"body":{"license.html":{}}}],["qualify",{"_index":3895,"title":{},"body":{"license.html":{}}}],["quality",{"_index":4040,"title":{},"body":{"license.html":{}}}],["rad",{"_index":1881,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rad(45",{"_index":2931,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["rad(degree",{"_index":3253,"title":{},"body":{"miscellaneous/functions.html":{}}}],["radians",{"_index":2929,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"miscellaneous/functions.html":{}}}],["radio",{"_index":2869,"title":{},"body":{"components/ToolsNavbarComponent.html":{}}}],["radius",{"_index":2312,"title":{},"body":{"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{}}}],["random",{"_index":2537,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{}}}],["randomly",{"_index":1893,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{}}}],["range",{"_index":1773,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["ratio",{"_index":2338,"title":{},"body":{"components/ScatterHighchartComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["re",{"_index":3259,"title":{},"body":{"index.html":{}}}],["reactiveformsmodule",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/InterfaceUtilModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules/SpectrumModule.html":{},"modules/VenusModule.html":{}}}],["read",{"_index":1419,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"license.html":{}}}],["readable",{"_index":3709,"title":{},"body":{"license.html":{}}}],["readfile",{"_index":2138,"title":{},"body":{"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["readfile(file",{"_index":1422,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["readily",{"_index":3964,"title":{},"body":{"license.html":{}}}],["reading",{"_index":3823,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":250,"title":{},"body":{"components/AppearanceComponent.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"interfaces/HeaderRequirement.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyColorTheme.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SliderUtil.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"components/SpectrumComponent.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["ready",{"_index":3450,"title":{},"body":{"license.html":{}}}],["reason",{"_index":3974,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":3724,"title":{},"body":{"license.html":{}}}],["receipt",{"_index":3893,"title":{},"body":{"license.html":{}}}],["receive",{"_index":3374,"title":{},"body":{"license.html":{}}}],["received",{"_index":3401,"title":{},"body":{"license.html":{}}}],["receives",{"_index":3910,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":1618,"title":{},"body":{"components/HonorCodePopupComponent.html":{},"license.html":{}}}],["recipient",{"_index":3802,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":3972,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":3398,"title":{},"body":{"license.html":{}}}],["recognized",{"_index":3551,"title":{},"body":{"license.html":{}}}],["red",{"_index":477,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["redirectto",{"_index":226,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redistribute",{"_index":4080,"title":{},"body":{"license.html":{}}}],["reed",{"_index":3322,"title":{},"body":{"index.html":{}}}],["referring",{"_index":3370,"title":{},"body":{"license.html":{}}}],["refers",{"_index":3479,"title":{},"body":{"license.html":{}}}],["refrain",{"_index":4009,"title":{},"body":{"license.html":{}}}],["regard",{"_index":3829,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":3685,"title":{},"body":{"license.html":{}}}],["regenerate",{"_index":3596,"title":{},"body":{"license.html":{}}}],["registerallmodules",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["registersavegraphbutton",{"_index":1645,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["registersavegraphbutton(button",{"_index":1653,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["registersavegraphspinner",{"_index":1646,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["registersavegraphspinner(spinner",{"_index":1656,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["reinstated",{"_index":3879,"title":{},"body":{"license.html":{}}}],["relationship",{"_index":3623,"title":{},"body":{"license.html":{}}}],["released",{"_index":3365,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":3678,"title":{},"body":{"license.html":{}}}],["relicensing",{"_index":3866,"title":{},"body":{"license.html":{}}}],["relying",{"_index":3963,"title":{},"body":{"license.html":{}}}],["remain",{"_index":3746,"title":{},"body":{"license.html":{}}}],["remains",{"_index":3362,"title":{},"body":{"license.html":{}}}],["removal",{"_index":3832,"title":{},"body":{"license.html":{}}}],["remove",{"_index":3831,"title":{},"body":{"license.html":{}}}],["removerow",{"_index":926,"title":{},"body":{"classes/CurveData.html":{},"classes/DualData.html":{},"injectables/DualService.html":{},"classes/MoonData.html":{},"injectables/MoonService.html":{},"interfaces/MyData.html":{},"classes/ScatterData.html":{},"injectables/ScatterService.html":{},"classes/SpectrumData.html":{},"injectables/SpectrumService.html":{},"classes/VenusData.html":{},"injectables/VenusService.html":{}}}],["removerow(index",{"_index":937,"title":{},"body":{"classes/CurveData.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/MoonData.html":{},"injectables/MoonService.html":{},"interfaces/MyData.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["render",{"_index":3471,"title":{},"body":{"license.html":{}}}],["renderchart",{"_index":581,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"interfaces/MyChart.html":{}}}],["rendered",{"_index":2269,"title":{},"body":{"classes/ScatterData.html":{},"license.html":{}}}],["renderer",{"_index":337,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["renderer2",{"_index":385,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["rendererfactory",{"_index":355,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["rendererfactory.createrenderer(document.body",{"_index":390,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["rendererfactory2",{"_index":356,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["rendertable",{"_index":1086,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyTable.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["repair",{"_index":4046,"title":{},"body":{"license.html":{}}}],["replace",{"_index":1479,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["represent",{"_index":1890,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{},"license.html":{}}}],["represents",{"_index":2944,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["require",{"_index":3592,"title":{},"body":{"license.html":{}}}],["required",{"_index":1617,"title":{},"body":{"components/HonorCodePopupComponent.html":{},"license.html":{}}}],["requirement",{"_index":3679,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":3750,"title":{},"body":{"license.html":{}}}],["requires",{"_index":3417,"title":{},"body":{"license.html":{}}}],["requiring",{"_index":3494,"title":{},"body":{"license.html":{}}}],["reset",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"components/AppearanceComponent.html":{},"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/InterfaceUtilModule.html":{},"modules/MenubarModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"modules/SpectrumModule.html":{},"modules/ToolsNavbarModule.html":{},"modules/VenusModule.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["resetchartinfo",{"_index":881,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/DualComponent.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"components/MoonComponent.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"interfaces/MyStorage.html":{},"components/ScatterComponent.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"components/SpectrumComponent.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["resetdata",{"_index":883,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/DualComponent.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"components/MoonComponent.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"interfaces/MyStorage.html":{},"components/ScatterComponent.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"components/SpectrumComponent.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["resetdefault",{"_index":260,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["resetgraphinfo",{"_index":2543,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["resetinterface",{"_index":885,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualStorage.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"interfaces/MyStorage.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["resetmodel",{"_index":1913,"title":{},"body":{"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"injectables/ScatterService.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{}}}],["resolved",{"_index":3778,"title":{},"body":{"license.html":{}}}],["respect",{"_index":3391,"title":{},"body":{"license.html":{}}}],["responsibilities",{"_index":3389,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":3911,"title":{},"body":{"license.html":{}}}],["responsive",{"_index":661,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["restrict",{"_index":3461,"title":{},"body":{"license.html":{}}}],["restricting",{"_index":3648,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":3864,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":3861,"title":{},"body":{"license.html":{}}}],["result",{"_index":687,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"license.html":{}}}],["result.push(row",{"_index":801,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["result.slice(0",{"_index":790,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["result[0].push([entry.x",{"_index":805,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["result[0].push({x",{"_index":692,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["result[1].push([entry.x",{"_index":807,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["result[1].push({x",{"_index":696,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["result[2].push([entry.x",{"_index":808,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["result[2].push({x",{"_index":699,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["result[3].push([entry.x",{"_index":809,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["result[3].push({x",{"_index":702,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["resultdata",{"_index":1460,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["resultdata.push(data",{"_index":1472,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["resulting",{"_index":3497,"title":{},"body":{"license.html":{}}}],["results",{"_index":112,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"modules/CurveModule.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"interfaces/HeaderRequirement.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"modules/InterfaceUtilModule.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"modules/MoonModule.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyData.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"modules/ScatterModule.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"components/SpectrumComponent.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"modules/SpectrumModule.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"modules/VenusModule.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retains",{"_index":3806,"title":{},"body":{"license.html":{}}}],["return",{"_index":240,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"interfaces/HeaderRequirement.html":{},"injectables/HonorCodeChartService.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"injectables/MoonService.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyColorTheme.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SliderUtil.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"license.html":{}}}],["returndata",{"_index":1907,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{}}}],["returned",{"_index":3235,"title":{},"body":{"miscellaneous/functions.html":{}}}],["returns",{"_index":237,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyData.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"classes/SpectrumChartInfo.html":{},"components/SpectrumComponent.html":{},"classes/SpectrumData.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"miscellaneous/functions.html":{}}}],["reverse",{"_index":677,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["reverseyaxis",{"_index":952,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["reviewing",{"_index":4067,"title":{},"body":{"license.html":{}}}],["revised",{"_index":4015,"title":{},"body":{"license.html":{}}}],["right",{"_index":2538,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"license.html":{}}}],["rights",{"_index":3380,"title":{},"body":{"license.html":{}}}],["risk",{"_index":4039,"title":{},"body":{"license.html":{}}}],["roboto",{"_index":510,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["rom",{"_index":3809,"title":{},"body":{"license.html":{}}}],["root",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"injectables/HonorCodeChartService.html":{}}}],["root'},{'name",{"_index":35,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["router",{"_index":2844,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["routerlink",{"_index":2496,"title":{},"body":{"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"overview.html":{}}}],["routerlinkactive",{"_index":2497,"title":{},"body":{"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"overview.html":{}}}],["routermodule",{"_index":200,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(tools_routes",{"_index":243,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routeroutlet",{"_index":2498,"title":{},"body":{"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"overview.html":{}}}],["routes",{"_index":201,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["routing.module.ts",{"_index":199,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["row",{"_index":815,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/DualComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/MoonComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/ScatterComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SpectrumComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/VenusComponent.html":{},"injectables/VenusService.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["row.angularseparation",{"_index":2122,"title":{},"body":{"classes/MoonTable.html":{},"components/MoonTableComponent.html":{}}}],["row.channel1",{"_index":2831,"title":{},"body":{"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{}}}],["row.channel2",{"_index":2833,"title":{},"body":{"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{}}}],["row.diameter",{"_index":3089,"title":{},"body":{"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["row.distance",{"_index":2482,"title":{},"body":{"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{}}}],["row.juliandate",{"_index":2120,"title":{},"body":{"classes/MoonTable.html":{},"components/MoonTableComponent.html":{}}}],["row.latitude",{"_index":2480,"title":{},"body":{"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{}}}],["row.longitude",{"_index":2478,"title":{},"body":{"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{}}}],["row.map((value",{"_index":2099,"title":{},"body":{"injectables/MoonService.html":{},"injectables/VenusService.html":{}}}],["row.phase",{"_index":3091,"title":{},"body":{"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["row.wavelength",{"_index":2829,"title":{},"body":{"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{}}}],["row.x1",{"_index":1377,"title":{},"body":{"classes/DualTable.html":{},"components/DualTableComponent.html":{}}}],["row.x2",{"_index":1381,"title":{},"body":{"classes/DualTable.html":{},"components/DualTableComponent.html":{}}}],["row.y1",{"_index":1379,"title":{},"body":{"classes/DualTable.html":{},"components/DualTableComponent.html":{}}}],["row.y2",{"_index":795,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{}}}],["row.y3",{"_index":797,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["row.y4",{"_index":799,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["royalty",{"_index":3926,"title":{},"body":{"license.html":{}}}],["rules",{"_index":3817,"title":{},"body":{"license.html":{}}}],["run",{"_index":3308,"title":{},"body":{"index.html":{},"license.html":{}}}],["running",{"_index":3607,"title":{},"body":{"license.html":{}}}],["runs",{"_index":3574,"title":{},"body":{"license.html":{}}}],["rxjs",{"_index":623,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"interfaces/HeaderRequirement.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"injectables/MoonService.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"injectables/ScatterService.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumHighchartComponent.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusHighchartComponent.html":{},"injectables/VenusService.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"dependencies.html":{}}}],["safest",{"_index":4082,"title":{},"body":{"license.html":{}}}],["sake",{"_index":3416,"title":{},"body":{"license.html":{}}}],["sale",{"_index":3935,"title":{},"body":{"license.html":{}}}],["same",{"_index":3399,"title":{},"body":{"license.html":{}}}],["sass",{"_index":3190,"title":{},"body":{"dependencies.html":{}}}],["satisfy",{"_index":3749,"title":{},"body":{"license.html":{}}}],["save",{"_index":1534,"title":{},"body":{"injectables/HonorCodeChartService.html":{},"components/SimpleGraphButtonComponent.html":{}}}],["saveas",{"_index":1550,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["saveas(dataurltoblob(exifimage",{"_index":1577,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["savechartinfo",{"_index":1061,"title":{},"body":{"classes/CurveStorage.html":{},"classes/DualStorage.html":{},"classes/MoonStorage.html":{},"interfaces/MyStorage.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumStorage.html":{},"classes/VenusStorage.html":{}}}],["savechartinfo(chartinfo",{"_index":1358,"title":{},"body":{"classes/DualStorage.html":{},"classes/MoonStorage.html":{},"interfaces/MyStorage.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["savechartinfo(chartinfoobject",{"_index":872,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["saved",{"_index":1540,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["savedata",{"_index":1062,"title":{},"body":{"classes/CurveStorage.html":{},"classes/DualStorage.html":{},"classes/MoonStorage.html":{},"interfaces/MyStorage.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumStorage.html":{},"classes/VenusStorage.html":{}}}],["savedata(data",{"_index":875,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualStorage.html":{},"classes/MoonStorage.html":{},"interfaces/MyStorage.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["savegraph",{"_index":908,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/SpectrumComponent.html":{},"components/VenusComponent.html":{}}}],["savegraphbutton",{"_index":1640,"title":{},"body":{"injectables/HonorCodePopupService.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["savegraphspinner",{"_index":1641,"title":{},"body":{"injectables/HonorCodePopupService.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["saveimage",{"_index":1522,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["saveimage(chart",{"_index":1532,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["saveimagehighchart",{"_index":1523,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["saveimagehighchart(chart",{"_index":1541,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["saveimagehighchartoffline",{"_index":1524,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["saveimagehighchartoffline(chart",{"_index":1543,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["saveinterface",{"_index":1063,"title":{},"body":{"classes/CurveStorage.html":{},"classes/DualStorage.html":{},"classes/MoonStorage.html":{},"interfaces/MyStorage.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumStorage.html":{},"classes/VenusStorage.html":{}}}],["saveinterface(interfaceinfo",{"_index":878,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualStorage.html":{},"classes/MoonStorage.html":{},"interfaces/MyStorage.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["saver",{"_index":1551,"title":{},"body":{"injectables/HonorCodeChartService.html":{},"dependencies.html":{}}}],["saying",{"_index":3743,"title":{},"body":{"license.html":{}}}],["scales",{"_index":667,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["scatter",{"_index":79,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"modules/ScatterModule.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["scatter'},{'name",{"_index":81,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["scatter.component.html",{"_index":2258,"title":{},"body":{"components/ScatterComponent.html":{}}}],["scatter.component.scss",{"_index":2257,"title":{},"body":{"components/ScatterComponent.html":{}}}],["scatter.service",{"_index":2191,"title":{},"body":{"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"modules/ScatterModule.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{}}}],["scatter.service.util",{"_index":2427,"title":{},"body":{"injectables/ScatterService.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{}}}],["scatter/scatter.component",{"_index":2382,"title":{},"body":{"modules/ScatterModule.html":{}}}],["scatterchartformcomponent",{"_index":78,"title":{"components/ScatterChartFormComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"modules/ScatterModule.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scatterchartinfo",{"_index":2192,"title":{"classes/ScatterChartInfo.html":{}},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"coverage.html":{}}}],["scatterchartinfo.getdefaultstorageobject().charttitle",{"_index":2227,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["scatterchartinfo.getdefaultstorageobject().datalabel",{"_index":2228,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["scatterchartinfo.getdefaultstorageobject().xaxislabel",{"_index":2229,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["scatterchartinfo.getdefaultstorageobject().yaxislabel",{"_index":2230,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["scatterchartinfostorageobject",{"_index":2201,"title":{"interfaces/ScatterChartInfoStorageObject.html":{}},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"coverage.html":{}}}],["scattercomponent",{"_index":80,"title":{"components/ScatterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"modules/ScatterModule.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scatterdata",{"_index":2214,"title":{"classes/ScatterData.html":{}},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"coverage.html":{}}}],["scatterdata.getdefaultdatadict",{"_index":2215,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["scatterdatadict",{"_index":2210,"title":{"interfaces/ScatterDataDict.html":{}},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"coverage.html":{}}}],["scatterdatadict.distance",{"_index":2219,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["scatterdatadict.latitude",{"_index":2218,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["scatterdatadict.longitude",{"_index":2217,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["scatterformcomponent",{"_index":82,"title":{"components/ScatterFormComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"modules/ScatterModule.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scatterhighchartcomponent",{"_index":83,"title":{"components/ScatterHighchartComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"modules/ScatterModule.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scatterinterface",{"_index":2385,"title":{},"body":{"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{}}}],["scatterinterfacestorageobject",{"_index":2235,"title":{"interfaces/ScatterInterfaceStorageObject.html":{}},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"coverage.html":{}}}],["scattermodel",{"_index":2237,"title":{"interfaces/ScatterModel.html":{}},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"coverage.html":{}}}],["scattermodelinterface",{"_index":2245,"title":{"classes/ScatterModelInterface.html":{}},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"coverage.html":{}}}],["scattermodelinterface.getdefaultstorageobject().diameter",{"_index":2249,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["scattermodelinterface.getdefaultstorageobject().distance",{"_index":2247,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["scattermodelparameters",{"_index":2286,"title":{},"body":{"components/ScatterFormComponent.html":{},"miscellaneous/enumerations.html":{}}}],["scattermodelparameters.diameter",{"_index":2284,"title":{},"body":{"components/ScatterFormComponent.html":{}}}],["scattermodelparameters.distance",{"_index":2282,"title":{},"body":{"components/ScatterFormComponent.html":{}}}],["scattermodule",{"_index":2376,"title":{"modules/ScatterModule.html":{}},"body":{"modules/ScatterModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"modules.html":{},"overview.html":{}}}],["scatterservice",{"_index":2190,"title":{"injectables/ScatterService.html":{}},"body":{"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"modules/ScatterModule.html":{},"injectables/ScatterService.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scatterstorage",{"_index":2386,"title":{"classes/ScatterStorage.html":{}},"body":{"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"coverage.html":{}}}],["scattertable",{"_index":2475,"title":{"classes/ScatterTable.html":{}},"body":{"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"coverage.html":{}}}],["scattertable(this.id",{"_index":2476,"title":{},"body":{"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{}}}],["scattertablecomponent",{"_index":84,"title":{"components/ScatterTableComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"modules/ScatterModule.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scattertablecomponent.float_precision",{"_index":2477,"title":{},"body":{"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{}}}],["school",{"_index":4106,"title":{},"body":{"license.html":{}}}],["scope",{"_index":3985,"title":{},"body":{"license.html":{}}}],["screenratio",{"_index":2341,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["script",{"_index":1849,"title":{},"body":{"components/MenubarComponent.html":{}}}],["scripts",{"_index":3580,"title":{},"body":{"license.html":{}}}],["secondarily",{"_index":3506,"title":{},"body":{"license.html":{}}}],["seconds",{"_index":2926,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["section",{"_index":3627,"title":{},"body":{"license.html":{}}}],["sections",{"_index":3707,"title":{},"body":{"license.html":{}}}],["see",{"_index":4089,"title":{},"body":{"license.html":{}}}],["select",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/SpectrumFormComponent.html":{},"modules/SpectrumModule.html":{},"components/ToolsNavbarComponent.html":{}}}],["selecting",{"_index":2855,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["sell",{"_index":3951,"title":{},"body":{"license.html":{}}}],["selling",{"_index":3934,"title":{},"body":{"license.html":{}}}],["semiconductor",{"_index":3482,"title":{},"body":{"license.html":{}}}],["separable",{"_index":3760,"title":{},"body":{"license.html":{}}}],["separate",{"_index":3692,"title":{},"body":{"license.html":{}}}],["separately",{"_index":3689,"title":{},"body":{"license.html":{}}}],["separation",{"_index":2118,"title":{},"body":{"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["series",{"_index":2983,"title":{},"body":{"components/VenusHighchartComponent.html":{}}}],["serif",{"_index":1851,"title":{},"body":{"components/MenubarComponent.html":{}}}],["serve",{"_index":3315,"title":{},"body":{"index.html":{}}}],["server",{"_index":3727,"title":{},"body":{"license.html":{}}}],["serves",{"_index":3567,"title":{},"body":{"license.html":{}}}],["service",{"_index":633,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"dependencies.html":{},"license.html":{}}}],["service/appearance.service",{"_index":288,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["service/appearance.utils",{"_index":285,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["services",{"_index":1518,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["servicing",{"_index":4045,"title":{},"body":{"license.html":{}}}],["set",{"_index":3301,"title":{},"body":{"index.html":{}}}],["setamplitude",{"_index":1987,"title":{},"body":{"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{}}}],["setamplitude(amplitude",{"_index":1998,"title":{},"body":{"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{}}}],["setchannel",{"_index":2724,"title":{},"body":{"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{}}}],["setchannel(channel",{"_index":2621,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{}}}],["setchartseries",{"_index":953,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["setcharttitle",{"_index":548,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChartInfo.html":{},"components/CurveHighChartComponent.html":{},"classes/DualChartInfo.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/MoonChartInfo.html":{},"components/MoonHighchartComponent.html":{},"injectables/MoonService.html":{},"classes/ScatterChartInfo.html":{},"components/ScatterHighchartComponent.html":{},"injectables/ScatterService.html":{},"classes/SpectrumChartInfo.html":{},"components/SpectrumHighchartComponent.html":{},"injectables/SpectrumService.html":{},"classes/VenusChartInfo.html":{},"components/VenusHighchartComponent.html":{},"injectables/VenusService.html":{}}}],["setcharttitle(title",{"_index":558,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/MoonChartInfo.html":{},"injectables/MoonService.html":{},"interfaces/MyChart.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["setchartxaxis",{"_index":954,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["setchartyaxis",{"_index":955,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["setcolortheme",{"_index":350,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{}}}],["setcolortheme(colortheme",{"_index":377,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{}}}],["setcross",{"_index":2289,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["setcurvecount",{"_index":1008,"title":{},"body":{"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{}}}],["setcurvecount(curvecount",{"_index":837,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["setdata",{"_index":927,"title":{},"body":{"classes/CurveData.html":{},"classes/DualData.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/MoonData.html":{},"components/MoonHighchartComponent.html":{},"injectables/MoonService.html":{},"interfaces/MyData.html":{},"classes/ScatterData.html":{},"components/ScatterHighchartComponent.html":{},"injectables/ScatterService.html":{},"classes/SpectrumData.html":{},"components/SpectrumHighchartComponent.html":{},"injectables/SpectrumService.html":{},"classes/VenusData.html":{},"components/VenusHighchartComponent.html":{},"injectables/VenusService.html":{}}}],["setdata(data",{"_index":810,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/MoonData.html":{},"injectables/MoonService.html":{},"interfaces/MyData.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["setdatabycell",{"_index":928,"title":{},"body":{"classes/CurveData.html":{}}}],["setdatabycell(value",{"_index":817,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["setdatabycellontablechange",{"_index":929,"title":{},"body":{"classes/CurveData.html":{}}}],["setdatabycellontablechange(changes",{"_index":941,"title":{},"body":{"classes/CurveData.html":{}}}],["setdatalabel",{"_index":549,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChartInfo.html":{},"classes/DualChartInfo.html":{},"injectables/DualService.html":{},"classes/MoonChartInfo.html":{},"injectables/MoonService.html":{},"classes/ScatterChartInfo.html":{},"injectables/ScatterService.html":{},"classes/SpectrumChartInfo.html":{},"injectables/SpectrumService.html":{},"classes/VenusChartInfo.html":{},"injectables/VenusService.html":{}}}],["setdatalabel(data",{"_index":560,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/MoonChartInfo.html":{},"injectables/MoonService.html":{},"interfaces/MyChart.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["setdatalabel(datalabel",{"_index":762,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["setdiameter",{"_index":2353,"title":{},"body":{"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{}}}],["setdiameter(diameter",{"_index":2241,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{}}}],["setdistance",{"_index":2354,"title":{},"body":{"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{}}}],["setdistance(distance",{"_index":2240,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{}}}],["setfont",{"_index":428,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["setfont(font",{"_index":435,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["setfontfamily",{"_index":351,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["setfontfamily(fontfamily",{"_index":379,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["setfontsize",{"_index":352,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{}}}],["setfontsize(fontsize",{"_index":381,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{}}}],["setfontstyle",{"_index":353,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{}}}],["setfontstyle(fontstyle",{"_index":383,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{}}}],["sethighchart",{"_index":1287,"title":{},"body":{"injectables/DualService.html":{},"injectables/MoonService.html":{},"injectables/ScatterService.html":{},"injectables/SpectrumService.html":{},"injectables/VenusService.html":{}}}],["sethighchart(chart",{"_index":2760,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["sethighchart(highchart",{"_index":1306,"title":{},"body":{"injectables/DualService.html":{},"injectables/MoonService.html":{},"injectables/ScatterService.html":{},"injectables/VenusService.html":{}}}],["setismagnitudeon",{"_index":1009,"title":{},"body":{"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{}}}],["setismagnitudeon(ismagnitudeon",{"_index":840,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["setmodel",{"_index":1958,"title":{},"body":{"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{}}}],["setmodelstorageobject",{"_index":2355,"title":{},"body":{"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{}}}],["setmodelstorageobject(storageobject",{"_index":2243,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{}}}],["setperiod",{"_index":1988,"title":{},"body":{"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{}}}],["setperiod(period",{"_index":2000,"title":{},"body":{"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{}}}],["setphase",{"_index":1989,"title":{},"body":{"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{}}}],["setphase(phase",{"_index":2002,"title":{},"body":{"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{}}}],["setstorageobject",{"_index":550,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChartInfo.html":{},"classes/CurveImpl.html":{},"classes/DualChartInfo.html":{},"injectables/DualService.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{},"classes/ScatterChartInfo.html":{},"injectables/ScatterService.html":{},"classes/SpectrumChartInfo.html":{},"injectables/SpectrumService.html":{},"classes/VenusChartInfo.html":{},"injectables/VenusService.html":{}}}],["setstorageobject(curveinterfacestorageobject",{"_index":849,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["setstorageobject(storageobject",{"_index":562,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChartInfo.html":{},"classes/DualChartInfo.html":{},"injectables/DualService.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{},"interfaces/MyChart.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["setsun",{"_index":2290,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["settilt",{"_index":1990,"title":{},"body":{"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{}}}],["settilt(tilt",{"_index":2005,"title":{},"body":{"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{}}}],["setting",{"_index":325,"title":{},"body":{"components/AppearanceComponent.html":{},"components/SettingsComponent.html":{}}}],["settings",{"_index":221,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MenubarComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{}}}],["settings'},{'name",{"_index":86,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["settings.component.html",{"_index":2488,"title":{},"body":{"components/SettingsComponent.html":{},"modules/SettingsModule.html":{}}}],["settings.component.scss",{"_index":2487,"title":{},"body":{"components/SettingsComponent.html":{},"modules/SettingsModule.html":{}}}],["settingscomponent",{"_index":85,"title":{"components/SettingsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["settingsmodule",{"_index":154,"title":{"modules/SettingsModule.html":{}},"body":{"modules/AppModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["setxaxislabel",{"_index":551,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChartInfo.html":{},"classes/DualChartInfo.html":{},"injectables/DualService.html":{},"classes/MoonChartInfo.html":{},"injectables/MoonService.html":{},"classes/ScatterChartInfo.html":{},"injectables/ScatterService.html":{},"classes/SpectrumChartInfo.html":{},"injectables/SpectrumService.html":{},"classes/VenusChartInfo.html":{},"injectables/VenusService.html":{}}}],["setxaxislabel(xaxis",{"_index":565,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/DualChartInfo.html":{},"injectables/DualService.html":{},"classes/MoonChartInfo.html":{},"injectables/MoonService.html":{},"interfaces/MyChart.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["setxaxislabel(xaxislabel",{"_index":765,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["setyaxislabel",{"_index":552,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChartInfo.html":{},"classes/DualChartInfo.html":{},"injectables/DualService.html":{},"classes/MoonChartInfo.html":{},"injectables/MoonService.html":{},"classes/ScatterChartInfo.html":{},"injectables/ScatterService.html":{},"classes/SpectrumChartInfo.html":{},"injectables/SpectrumService.html":{},"classes/VenusChartInfo.html":{},"injectables/VenusService.html":{}}}],["setyaxislabel(yaxis",{"_index":568,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/DualChartInfo.html":{},"injectables/DualService.html":{},"classes/MoonChartInfo.html":{},"injectables/MoonService.html":{},"interfaces/MyChart.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["setyaxislabel(yaxislabel",{"_index":767,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["shall",{"_index":3632,"title":{},"body":{"license.html":{}}}],["share",{"_index":3355,"title":{},"body":{"license.html":{}}}],["shared",{"_index":979,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{},"license.html":{}}}],["shared/about/about.component",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["shared/charts/chart.interface",{"_index":614,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["shared/data/data.interface",{"_index":615,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["shared/data/fileparser",{"_index":2669,"title":{},"body":{"components/SpectrumComponent.html":{}}}],["shared/data/utils",{"_index":1882,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["shared/home/home.component",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["shared/honor",{"_index":901,"title":{},"body":{"components/CurveComponent.html":{},"modules/CurveModule.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"modules/MoonModule.html":{},"components/ScatterComponent.html":{},"components/SpectrumComponent.html":{},"components/VenusComponent.html":{}}}],["shared/interface/input",{"_index":1938,"title":{},"body":{"components/MoonFormComponent.html":{},"components/ScatterFormComponent.html":{}}}],["shared/interface/util",{"_index":2036,"title":{},"body":{"modules/MoonModule.html":{},"modules/ScatterModule.html":{}}}],["shared/page",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["shared/settings/appearance/appearance.component",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["shared/settings/appearance/service/appearance",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/settings/appearance/service/appearance.service",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["shared/settings/appearance/service/appearance.utils",{"_index":620,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["shared/settings/settings.component",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["shared/simple",{"_index":1034,"title":{},"body":{"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules/SpectrumModule.html":{},"modules/VenusModule.html":{}}}],["shared/storage/storage.interface",{"_index":770,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["shared/tables/table",{"_index":1094,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["shared/tools",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/types/actions",{"_index":900,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/SpectrumComponent.html":{},"components/VenusComponent.html":{}}}],["shift",{"_index":2690,"title":{},"body":{"components/SpectrumComponent.html":{},"components/SpectrumHighchartComponent.html":{}}}],["short",{"_index":4095,"title":{},"body":{"license.html":{}}}],["show",{"_index":3402,"title":{},"body":{"license.html":{}}}],["showinlegend",{"_index":2321,"title":{},"body":{"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["sidenav",{"_index":2840,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["sign",{"_index":1620,"title":{},"body":{"components/HonorCodePopupComponent.html":{},"license.html":{}}}],["signature",{"_index":1527,"title":{},"body":{"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"miscellaneous/functions.html":{}}}],["significant",{"_index":3790,"title":{},"body":{"license.html":{}}}],["similar",{"_index":3646,"title":{},"body":{"license.html":{}}}],["simple",{"_index":88,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["simpledatabuttoncomponent",{"_index":87,"title":{"components/SimpleDataButtonComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["simpledatabuttonmodule",{"_index":1029,"title":{"modules/SimpleDataButtonModule.html":{}},"body":{"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"modules/SpectrumModule.html":{},"modules/VenusModule.html":{},"modules.html":{},"overview.html":{}}}],["simplegraphbuttoncomponent",{"_index":91,"title":{"components/SimpleGraphButtonComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["simplegraphbuttonmodule",{"_index":1030,"title":{"modules/SimpleGraphButtonModule.html":{}},"body":{"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"modules/SpectrumModule.html":{},"modules/VenusModule.html":{},"modules.html":{},"overview.html":{}}}],["simultaneously",{"_index":4005,"title":{},"body":{"license.html":{}}}],["single",{"_index":3978,"title":{},"body":{"license.html":{}}}],["site",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"miscellaneous/functions.html":{}}}],["size",{"_index":323,"title":{},"body":{"components/AppearanceComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["size.displayname",{"_index":324,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["skynet",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/MenubarComponent.html":{},"index.html":{}}}],["skynet.unc.edu",{"_index":1588,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["slide",{"_index":1057,"title":{},"body":{"modules/CurveModule.html":{},"components/LineFormComponent.html":{},"modules/SpectrumModule.html":{}}}],["slider",{"_index":1673,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/MoonFormComponent.html":{},"components/ScatterFormComponent.html":{},"classes/SliderUtil.html":{}}}],["slider'},{'name",{"_index":64,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["slider.component",{"_index":1780,"title":{},"body":{"modules/InterfaceUtilModule.html":{},"components/MoonFormComponent.html":{},"components/ScatterFormComponent.html":{}}}],["slider.component.html",{"_index":1675,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["slider.component.scss",{"_index":1674,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["slider.component.ts",{"_index":1672,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{},"coverage.html":{}}}],["slider.component.ts:107",{"_index":2576,"title":{},"body":{"classes/SliderUtil.html":{}}}],["slider.component.ts:116",{"_index":2572,"title":{},"body":{"classes/SliderUtil.html":{}}}],["slider.component.ts:121",{"_index":2571,"title":{},"body":{"classes/SliderUtil.html":{}}}],["slider.component.ts:126",{"_index":2573,"title":{},"body":{"classes/SliderUtil.html":{}}}],["slider.component.ts:13",{"_index":1695,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["slider.component.ts:137",{"_index":2575,"title":{},"body":{"classes/SliderUtil.html":{}}}],["slider.component.ts:14",{"_index":1694,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["slider.component.ts:15",{"_index":1691,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["slider.component.ts:16",{"_index":1698,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["slider.component.ts:17",{"_index":1700,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["slider.component.ts:18",{"_index":1692,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["slider.component.ts:19",{"_index":1697,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["slider.component.ts:20",{"_index":1696,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["slider.component.ts:21",{"_index":1693,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["slider.component.ts:22",{"_index":1701,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["slider.component.ts:23",{"_index":1703,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["slider.component.ts:26",{"_index":1712,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["slider.component.ts:27",{"_index":1715,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["slider.component.ts:28",{"_index":1716,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["slider.component.ts:29",{"_index":1708,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["slider.component.ts:30",{"_index":1714,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["slider.component.ts:31",{"_index":1690,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["slider.component.ts:40",{"_index":1704,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["slider.component.ts:82",{"_index":1705,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["slider.component.ts:87",{"_index":1707,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["slider.component.ts:98",{"_index":2574,"title":{},"body":{"classes/SliderUtil.html":{}}}],["slider/input",{"_index":1671,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"modules/InterfaceUtilModule.html":{},"components/MoonFormComponent.html":{},"components/ScatterFormComponent.html":{},"classes/SliderUtil.html":{},"coverage.html":{}}}],["slidersubject",{"_index":1677,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["slidertoinput",{"_index":2570,"title":{},"body":{"classes/SliderUtil.html":{}}}],["slidertoinput($event",{"_index":1749,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["sliderutil",{"_index":1678,"title":{"classes/SliderUtil.html":{}},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{},"coverage.html":{}}}],["sliderutil.inputtoslider(maxnum",{"_index":1763,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["sliderutil.inputtoslider(minnum",{"_index":1758,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["small",{"_index":507,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["software",{"_index":3334,"title":{},"body":{"license.html":{}}}],["sold",{"_index":3772,"title":{},"body":{"license.html":{}}}],["sole",{"_index":3613,"title":{},"body":{"license.html":{}}}],["solely",{"_index":3625,"title":{},"body":{"license.html":{}}}],["sort((a",{"_index":1004,"title":{},"body":{"components/CurveHighChartComponent.html":{},"injectables/MoonService.html":{}}}],["sortdatabyx",{"_index":831,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"modules/CurveModule.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"interfaces/HeaderRequirement.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"modules/InterfaceUtilModule.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"modules/MoonModule.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyData.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"modules/ScatterModule.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"components/SpectrumComponent.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"modules/SpectrumModule.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"modules/VenusModule.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"index.html":{},"license.html":{}}}],["space",{"_index":3274,"title":{},"body":{"index.html":{}}}],["spacer",{"_index":1854,"title":{},"body":{"components/MenubarComponent.html":{}}}],["spare",{"_index":3721,"title":{},"body":{"license.html":{}}}],["speak",{"_index":3369,"title":{},"body":{"license.html":{}}}],["special",{"_index":3464,"title":{},"body":{"license.html":{}}}],["specific",{"_index":3572,"title":{},"body":{"license.html":{}}}],["specifically",{"_index":3591,"title":{},"body":{"license.html":{}}}],["specified",{"_index":3554,"title":{},"body":{"license.html":{}}}],["specifies",{"_index":4023,"title":{},"body":{"license.html":{}}}],["specify",{"_index":4027,"title":{},"body":{"license.html":{}}}],["spectrum",{"_index":94,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"interfaces/HeaderRequirement.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"modules/SpectrumModule.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["spectrum'},{'name",{"_index":96,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["spectrum.component.html",{"_index":2652,"title":{},"body":{"components/SpectrumComponent.html":{}}}],["spectrum.component.scss",{"_index":2651,"title":{},"body":{"components/SpectrumComponent.html":{}}}],["spectrum.service",{"_index":2581,"title":{},"body":{"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"modules/SpectrumModule.html":{}}}],["spectrum.service.util",{"_index":2670,"title":{},"body":{"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"injectables/SpectrumService.html":{}}}],["spectrum/spectrum.component",{"_index":2737,"title":{},"body":{"modules/SpectrumModule.html":{}}}],["spectrum/spectrum.service",{"_index":2827,"title":{},"body":{"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{}}}],["spectrum/spectrum.service.util",{"_index":2826,"title":{},"body":{"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{}}}],["spectrum_gbo_fields",{"_index":2654,"title":{},"body":{"components/SpectrumComponent.html":{}}}],["spectrumchartformcomponent",{"_index":93,"title":{"components/SpectrumChartFormComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"modules/SpectrumModule.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["spectrumchartinfo",{"_index":2584,"title":{"classes/SpectrumChartInfo.html":{}},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"coverage.html":{}}}],["spectrumchartinfo.getdefaultstorageobject",{"_index":2637,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{}}}],["spectrumchartinfo.getdefaultstorageobject().data",{"_index":2629,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{}}}],["spectrumchartinfo.getdefaultstorageobject().title",{"_index":2626,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{}}}],["spectrumchartinfo.getdefaultstorageobject().xaxis",{"_index":2627,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{}}}],["spectrumchartinfo.getdefaultstorageobject().yaxis",{"_index":2628,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{}}}],["spectrumchartinfostorageobject",{"_index":2593,"title":{"interfaces/SpectrumChartInfoStorageObject.html":{}},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"coverage.html":{}}}],["spectrumcomponent",{"_index":95,"title":{"components/SpectrumComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"modules/SpectrumModule.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["spectrumcomponent.spectrum_gbo_fields",{"_index":2662,"title":{},"body":{"components/SpectrumComponent.html":{}}}],["spectrumdata",{"_index":2606,"title":{"classes/SpectrumData.html":{}},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"coverage.html":{}}}],["spectrumdata.getdefaultdata",{"_index":2607,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{}}}],["spectrumdatadict",{"_index":2602,"title":{"interfaces/SpectrumDataDict.html":{}},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"components/SpectrumComponent.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"coverage.html":{}}}],["spectrumdatadict.channel1",{"_index":2610,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{}}}],["spectrumdatadict.channel2",{"_index":2615,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{}}}],["spectrumdatadict.wavelength",{"_index":2609,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{}}}],["spectrumformcomponent",{"_index":97,"title":{"components/SpectrumFormComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"modules/SpectrumModule.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["spectrumhighchartcomponent",{"_index":98,"title":{"components/SpectrumHighchartComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"modules/SpectrumModule.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["spectruminterface",{"_index":2619,"title":{"interfaces/SpectrumInterface.html":{}},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"coverage.html":{}}}],["spectruminterfaceimpl",{"_index":2622,"title":{"classes/SpectrumInterfaceImpl.html":{}},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"coverage.html":{}}}],["spectruminterfaceimpl.getdefaultchannel",{"_index":2642,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{}}}],["spectrummodule",{"_index":2731,"title":{"modules/SpectrumModule.html":{}},"body":{"modules/SpectrumModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"modules.html":{},"overview.html":{}}}],["spectrumoptions",{"_index":2617,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"miscellaneous/enumerations.html":{}}}],["spectrumoptions.one",{"_index":2624,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{}}}],["spectrumoptions.two",{"_index":2701,"title":{},"body":{"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{}}}],["spectrumservice",{"_index":2579,"title":{"injectables/SpectrumService.html":{}},"body":{"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"modules/SpectrumModule.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["spectrumstorage",{"_index":2634,"title":{"classes/SpectrumStorage.html":{}},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"coverage.html":{}}}],["spectrumtable",{"_index":2820,"title":{"classes/SpectrumTable.html":{}},"body":{"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"coverage.html":{}}}],["spectrumtable(this.id",{"_index":2828,"title":{},"body":{"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{}}}],["spectrumtablecomponent",{"_index":99,"title":{"components/SpectrumTableComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"modules/SpectrumModule.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["spinner",{"_index":1659,"title":{},"body":{"injectables/HonorCodePopupService.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["spirit",{"_index":4016,"title":{},"body":{"license.html":{}}}],["split(/\\s",{"_index":1480,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["sqr",{"_index":2986,"title":{},"body":{"classes/VenusModels.html":{}}}],["sqr(x",{"_index":2994,"title":{},"body":{"classes/VenusModels.html":{}}}],["src/.../actions.ts",{"_index":4127,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../app",{"_index":3211,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../appearance.utils.ts",{"_index":3201,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../curve.service.util.ts",{"_index":3202,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.ts",{"_index":4130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":4131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../fileparser.ts",{"_index":3203,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../moon",{"_index":3204,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../moon.service.util.ts",{"_index":3207,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../scatter",{"_index":3205,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../spectrum.service.util.ts",{"_index":3206,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../utils.ts",{"_index":3210,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":198,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/app.component.ts",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:16",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/shared/about/about.component.ts",{"_index":10,"title":{},"body":{"components/AboutComponent.html":{},"coverage.html":{}}}],["src/app/shared/home/home.component.ts",{"_index":1513,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/shared/menubar/menubar.component.ts",{"_index":1827,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"coverage.html":{}}}],["src/app/shared/menubar/menubar.component.ts:20",{"_index":1836,"title":{},"body":{"components/MenubarComponent.html":{}}}],["src/app/shared/menubar/menubar.component.ts:25",{"_index":1839,"title":{},"body":{"components/MenubarComponent.html":{}}}],["src/app/shared/page",{"_index":2184,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/shared/settings/appearance/appearance.component.ts",{"_index":244,"title":{},"body":{"components/AppearanceComponent.html":{},"coverage.html":{}}}],["src/app/shared/settings/appearance/appearance.component.ts:20",{"_index":273,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["src/app/shared/settings/appearance/appearance.component.ts:21",{"_index":282,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["src/app/shared/settings/appearance/appearance.component.ts:22",{"_index":279,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["src/app/shared/settings/appearance/appearance.component.ts:23",{"_index":276,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["src/app/shared/settings/appearance/appearance.component.ts:25",{"_index":261,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["src/app/shared/settings/appearance/appearance.component.ts:34",{"_index":269,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["src/app/shared/settings/appearance/appearance.component.ts:37",{"_index":270,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["src/app/shared/settings/appearance/appearance.component.ts:47",{"_index":266,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["src/app/shared/settings/appearance/service/appearance",{"_index":420,"title":{},"body":{"injectables/AppearanceStorageService.html":{},"coverage.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts",{"_index":336,"title":{},"body":{"injectables/AppearanceService.html":{},"coverage.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:17",{"_index":357,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:23",{"_index":376,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:31",{"_index":382,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:37",{"_index":368,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:41",{"_index":378,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:47",{"_index":363,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:51",{"_index":384,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:57",{"_index":372,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:61",{"_index":380,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:67",{"_index":365,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:71",{"_index":362,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:75",{"_index":359,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:79",{"_index":371,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:83",{"_index":375,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:87",{"_index":367,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:91",{"_index":360,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts",{"_index":470,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:100",{"_index":487,"title":{},"body":{"classes/ChartColor.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:104",{"_index":484,"title":{},"body":{"classes/ChartColor.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:108",{"_index":490,"title":{},"body":{"classes/ChartColor.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:47",{"_index":585,"title":{},"body":{"classes/ColorThemeSettings.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:56",{"_index":584,"title":{},"body":{"classes/ColorThemeSettings.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:64",{"_index":583,"title":{},"body":{"classes/ColorThemeSettings.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:73",{"_index":582,"title":{},"body":{"classes/ColorThemeSettings.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:88",{"_index":1135,"title":{},"body":{"classes/DefaultAppearanceSettings.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:89",{"_index":1134,"title":{},"body":{"classes/DefaultAppearanceSettings.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:90",{"_index":1133,"title":{},"body":{"classes/DefaultAppearanceSettings.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:91",{"_index":1132,"title":{},"body":{"classes/DefaultAppearanceSettings.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:92",{"_index":1131,"title":{},"body":{"classes/DefaultAppearanceSettings.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:97",{"_index":482,"title":{},"body":{"classes/ChartColor.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:98",{"_index":481,"title":{},"body":{"classes/ChartColor.html":{}}}],["src/app/shared/settings/settings.component.ts",{"_index":2486,"title":{},"body":{"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"coverage.html":{}}}],["src/app/shared/settings/settings.component.ts:13",{"_index":2489,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/shared/settings/settings.component.ts:18",{"_index":2490,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/shared/tools",{"_index":2838,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"coverage.html":{}}}],["src/app/tools/curve/curve",{"_index":587,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"coverage.html":{}}}],["src/app/tools/curve/curve.component.ts",{"_index":887,"title":{},"body":{"components/CurveComponent.html":{},"coverage.html":{}}}],["src/app/tools/curve/curve.component.ts:16",{"_index":895,"title":{},"body":{"components/CurveComponent.html":{}}}],["src/app/tools/curve/curve.component.ts:22",{"_index":898,"title":{},"body":{"components/CurveComponent.html":{}}}],["src/app/tools/curve/curve.module.ts",{"_index":1031,"title":{},"body":{"modules/CurveModule.html":{}}}],["src/app/tools/curve/curve.service.ts",{"_index":3122,"title":{},"body":{"coverage.html":{}}}],["src/app/tools/curve/curve.service.util.ts",{"_index":742,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/tools/curve/curve.service.util.ts:101",{"_index":757,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:110",{"_index":764,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:121",{"_index":930,"title":{},"body":{"classes/CurveData.html":{}}}],["src/app/tools/curve/curve.service.util.ts:127",{"_index":936,"title":{},"body":{"classes/CurveData.html":{}}}],["src/app/tools/curve/curve.service.util.ts:147",{"_index":933,"title":{},"body":{"classes/CurveData.html":{}}}],["src/app/tools/curve/curve.service.util.ts:165",{"_index":935,"title":{},"body":{"classes/CurveData.html":{}}}],["src/app/tools/curve/curve.service.util.ts:176",{"_index":939,"title":{},"body":{"classes/CurveData.html":{}}}],["src/app/tools/curve/curve.service.util.ts:182",{"_index":931,"title":{},"body":{"classes/CurveData.html":{}}}],["src/app/tools/curve/curve.service.util.ts:191",{"_index":938,"title":{},"body":{"classes/CurveData.html":{}}}],["src/app/tools/curve/curve.service.util.ts:195",{"_index":934,"title":{},"body":{"classes/CurveData.html":{}}}],["src/app/tools/curve/curve.service.util.ts:199",{"_index":942,"title":{},"body":{"classes/CurveData.html":{}}}],["src/app/tools/curve/curve.service.util.ts:205",{"_index":940,"title":{},"body":{"classes/CurveData.html":{}}}],["src/app/tools/curve/curve.service.util.ts:246",{"_index":1019,"title":{},"body":{"interfaces/CurveInterface.html":{}}}],["src/app/tools/curve/curve.service.util.ts:248",{"_index":1021,"title":{},"body":{"interfaces/CurveInterface.html":{}}}],["src/app/tools/curve/curve.service.util.ts:250",{"_index":1020,"title":{},"body":{"interfaces/CurveInterface.html":{}}}],["src/app/tools/curve/curve.service.util.ts:252",{"_index":1022,"title":{},"body":{"interfaces/CurveInterface.html":{}}}],["src/app/tools/curve/curve.service.util.ts:263",{"_index":1010,"title":{},"body":{"classes/CurveImpl.html":{}}}],["src/app/tools/curve/curve.service.util.ts:264",{"_index":1011,"title":{},"body":{"classes/CurveImpl.html":{}}}],["src/app/tools/curve/curve.service.util.ts:266",{"_index":1013,"title":{},"body":{"classes/CurveImpl.html":{}}}],["src/app/tools/curve/curve.service.util.ts:270",{"_index":1012,"title":{},"body":{"classes/CurveImpl.html":{}}}],["src/app/tools/curve/curve.service.util.ts:274",{"_index":1014,"title":{},"body":{"classes/CurveImpl.html":{}}}],["src/app/tools/curve/curve.service.util.ts:278",{"_index":1016,"title":{},"body":{"classes/CurveImpl.html":{}}}],["src/app/tools/curve/curve.service.util.ts:285",{"_index":1017,"title":{},"body":{"classes/CurveImpl.html":{}}}],["src/app/tools/curve/curve.service.util.ts:289",{"_index":1015,"title":{},"body":{"classes/CurveImpl.html":{}}}],["src/app/tools/curve/curve.service.util.ts:293",{"_index":1018,"title":{},"body":{"classes/CurveImpl.html":{}}}],["src/app/tools/curve/curve.service.util.ts:302",{"_index":1066,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:303",{"_index":1069,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:304",{"_index":1065,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:305",{"_index":1068,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:306",{"_index":1067,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:307",{"_index":1064,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:315",{"_index":1070,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:322",{"_index":1071,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:329",{"_index":1072,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:336",{"_index":1076,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:340",{"_index":1078,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:344",{"_index":1079,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:348",{"_index":1073,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:352",{"_index":1074,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:356",{"_index":1075,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:36",{"_index":748,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:37",{"_index":749,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:38",{"_index":750,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:39",{"_index":747,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:48",{"_index":755,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:57",{"_index":751,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:61",{"_index":752,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:65",{"_index":758,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:69",{"_index":754,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:74",{"_index":759,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:78",{"_index":760,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:82",{"_index":761,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:86",{"_index":763,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:93",{"_index":766,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:97",{"_index":768,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/line",{"_index":1783,"title":{},"body":{"components/LineFormComponent.html":{},"coverage.html":{}}}],["src/app/tools/dual/dual",{"_index":1136,"title":{},"body":{"components/DualChartFormComponent.html":{},"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"coverage.html":{}}}],["src/app/tools/dual/dual.module.ts",{"_index":1276,"title":{},"body":{"modules/DualModule.html":{}}}],["src/app/tools/dual/dual.service.ts",{"_index":1282,"title":{},"body":{"injectables/DualService.html":{},"coverage.html":{}}}],["src/app/tools/dual/dual.service.ts:100",{"_index":1292,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:104",{"_index":1293,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:108",{"_index":1300,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:11",{"_index":1322,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:114",{"_index":1304,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:12",{"_index":1321,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:120",{"_index":1302,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:126",{"_index":1307,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:130",{"_index":1296,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:14",{"_index":1323,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:16",{"_index":1320,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:17",{"_index":1318,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:18",{"_index":1316,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:19",{"_index":1313,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:21",{"_index":1288,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:30",{"_index":1291,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:34",{"_index":1294,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:38",{"_index":1295,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:42",{"_index":1297,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:46",{"_index":1298,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:50",{"_index":1299,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:54",{"_index":1303,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:60",{"_index":1305,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:67",{"_index":1308,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:73",{"_index":1309,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:79",{"_index":1310,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:85",{"_index":1301,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:94",{"_index":1289,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.util.ts",{"_index":1141,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"coverage.html":{}}}],["src/app/tools/dual/dual.service.util.ts:104",{"_index":1151,"title":{},"body":{"classes/DualChartInfo.html":{}}}],["src/app/tools/dual/dual.service.util.ts:113",{"_index":1148,"title":{},"body":{"classes/DualChartInfo.html":{}}}],["src/app/tools/dual/dual.service.util.ts:117",{"_index":1149,"title":{},"body":{"classes/DualChartInfo.html":{}}}],["src/app/tools/dual/dual.service.util.ts:125",{"_index":1153,"title":{},"body":{"classes/DualChartInfo.html":{}}}],["src/app/tools/dual/dual.service.util.ts:13",{"_index":1237,"title":{},"body":{"classes/DualData.html":{}}}],["src/app/tools/dual/dual.service.util.ts:134",{"_index":1154,"title":{},"body":{"classes/DualChartInfo.html":{}}}],["src/app/tools/dual/dual.service.util.ts:138",{"_index":1155,"title":{},"body":{"classes/DualChartInfo.html":{}}}],["src/app/tools/dual/dual.service.util.ts:142",{"_index":1156,"title":{},"body":{"classes/DualChartInfo.html":{}}}],["src/app/tools/dual/dual.service.util.ts:146",{"_index":1157,"title":{},"body":{"classes/DualChartInfo.html":{}}}],["src/app/tools/dual/dual.service.util.ts:159",{"_index":1158,"title":{},"body":{"classes/DualChartInfo.html":{}}}],["src/app/tools/dual/dual.service.util.ts:166",{"_index":1159,"title":{},"body":{"classes/DualChartInfo.html":{}}}],["src/app/tools/dual/dual.service.util.ts:170",{"_index":1160,"title":{},"body":{"classes/DualChartInfo.html":{}}}],["src/app/tools/dual/dual.service.util.ts:174",{"_index":1150,"title":{},"body":{"classes/DualChartInfo.html":{}}}],["src/app/tools/dual/dual.service.util.ts:181",{"_index":1351,"title":{},"body":{"classes/DualStorage.html":{}}}],["src/app/tools/dual/dual.service.util.ts:182",{"_index":1350,"title":{},"body":{"classes/DualStorage.html":{}}}],["src/app/tools/dual/dual.service.util.ts:184",{"_index":1352,"title":{},"body":{"classes/DualStorage.html":{}}}],["src/app/tools/dual/dual.service.util.ts:19",{"_index":1241,"title":{},"body":{"classes/DualData.html":{}}}],["src/app/tools/dual/dual.service.util.ts:192",{"_index":1353,"title":{},"body":{"classes/DualStorage.html":{}}}],["src/app/tools/dual/dual.service.util.ts:200",{"_index":1354,"title":{},"body":{"classes/DualStorage.html":{}}}],["src/app/tools/dual/dual.service.util.ts:203",{"_index":1355,"title":{},"body":{"classes/DualStorage.html":{}}}],["src/app/tools/dual/dual.service.util.ts:207",{"_index":1356,"title":{},"body":{"classes/DualStorage.html":{}}}],["src/app/tools/dual/dual.service.util.ts:211",{"_index":1357,"title":{},"body":{"classes/DualStorage.html":{}}}],["src/app/tools/dual/dual.service.util.ts:214",{"_index":1359,"title":{},"body":{"classes/DualStorage.html":{}}}],["src/app/tools/dual/dual.service.util.ts:218",{"_index":1360,"title":{},"body":{"classes/DualStorage.html":{}}}],["src/app/tools/dual/dual.service.util.ts:222",{"_index":1361,"title":{},"body":{"classes/DualStorage.html":{}}}],["src/app/tools/dual/dual.service.util.ts:41",{"_index":1238,"title":{},"body":{"classes/DualData.html":{}}}],["src/app/tools/dual/dual.service.util.ts:51",{"_index":1239,"title":{},"body":{"classes/DualData.html":{}}}],["src/app/tools/dual/dual.service.util.ts:55",{"_index":1240,"title":{},"body":{"classes/DualData.html":{}}}],["src/app/tools/dual/dual.service.util.ts:72",{"_index":1242,"title":{},"body":{"classes/DualData.html":{}}}],["src/app/tools/dual/dual.service.util.ts:76",{"_index":1243,"title":{},"body":{"classes/DualData.html":{}}}],["src/app/tools/dual/dual.service.util.ts:92",{"_index":1145,"title":{},"body":{"classes/DualChartInfo.html":{}}}],["src/app/tools/dual/dual.service.util.ts:93",{"_index":1146,"title":{},"body":{"classes/DualChartInfo.html":{}}}],["src/app/tools/dual/dual.service.util.ts:94",{"_index":1147,"title":{},"body":{"classes/DualChartInfo.html":{}}}],["src/app/tools/dual/dual.service.util.ts:95",{"_index":1144,"title":{},"body":{"classes/DualChartInfo.html":{}}}],["src/app/tools/dual/dual/dual.component.ts",{"_index":1231,"title":{},"body":{"components/DualComponent.html":{},"coverage.html":{}}}],["src/app/tools/dual/dual/dual.component.ts:12",{"_index":1234,"title":{},"body":{"components/DualComponent.html":{}}}],["src/app/tools/dual/dual/dual.component.ts:18",{"_index":1236,"title":{},"body":{"components/DualComponent.html":{}}}],["src/app/tools/moon/moon",{"_index":1859,"title":{},"body":{"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/tools/moon/moon.module.ts",{"_index":2033,"title":{},"body":{"modules/MoonModule.html":{}}}],["src/app/tools/moon/moon.service.ts",{"_index":2037,"title":{},"body":{"injectables/MoonService.html":{},"coverage.html":{}}}],["src/app/tools/moon/moon.service.ts:101",{"_index":2068,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:107",{"_index":2069,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:113",{"_index":2071,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:120",{"_index":2044,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:124",{"_index":2054,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:128",{"_index":2055,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:132",{"_index":2047,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:136",{"_index":2052,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:140",{"_index":2064,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:146",{"_index":2072,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:152",{"_index":2073,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:158",{"_index":2066,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:165",{"_index":2070,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:169",{"_index":2060,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:177",{"_index":2042,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:183",{"_index":2045,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:187",{"_index":2046,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:191",{"_index":2059,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:197",{"_index":2065,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:20",{"_index":2087,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:203",{"_index":2061,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:209",{"_index":2067,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:21",{"_index":2085,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:213",{"_index":2048,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:217",{"_index":2057,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:22",{"_index":2086,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:23",{"_index":2088,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:24",{"_index":2080,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:26",{"_index":2077,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:28",{"_index":2084,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:29",{"_index":2082,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:30",{"_index":2076,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:31",{"_index":2074,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:32",{"_index":2079,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:33",{"_index":2041,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:42",{"_index":2049,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:73",{"_index":2043,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:77",{"_index":2050,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:81",{"_index":2051,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:85",{"_index":2053,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:89",{"_index":2062,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:95",{"_index":2063,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.util.ts",{"_index":1864,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/tools/moon/moon.service.util.ts:104",{"_index":1871,"title":{},"body":{"classes/MoonChartInfo.html":{}}}],["src/app/tools/moon/moon.service.util.ts:113",{"_index":1869,"title":{},"body":{"classes/MoonChartInfo.html":{}}}],["src/app/tools/moon/moon.service.util.ts:117",{"_index":1870,"title":{},"body":{"classes/MoonChartInfo.html":{}}}],["src/app/tools/moon/moon.service.util.ts:12",{"_index":1915,"title":{},"body":{"classes/MoonData.html":{}}}],["src/app/tools/moon/moon.service.util.ts:121",{"_index":1874,"title":{},"body":{"classes/MoonChartInfo.html":{}}}],["src/app/tools/moon/moon.service.util.ts:125",{"_index":1875,"title":{},"body":{"classes/MoonChartInfo.html":{}}}],["src/app/tools/moon/moon.service.util.ts:129",{"_index":1876,"title":{},"body":{"classes/MoonChartInfo.html":{}}}],["src/app/tools/moon/moon.service.util.ts:133",{"_index":1877,"title":{},"body":{"classes/MoonChartInfo.html":{}}}],["src/app/tools/moon/moon.service.util.ts:137",{"_index":1879,"title":{},"body":{"classes/MoonChartInfo.html":{}}}],["src/app/tools/moon/moon.service.util.ts:141",{"_index":1880,"title":{},"body":{"classes/MoonChartInfo.html":{}}}],["src/app/tools/moon/moon.service.util.ts:145",{"_index":1873,"title":{},"body":{"classes/MoonChartInfo.html":{}}}],["src/app/tools/moon/moon.service.util.ts:154",{"_index":1878,"title":{},"body":{"classes/MoonChartInfo.html":{}}}],["src/app/tools/moon/moon.service.util.ts:165",{"_index":1991,"title":{},"body":{"interfaces/MoonInterface.html":{}}}],["src/app/tools/moon/moon.service.util.ts:167",{"_index":1992,"title":{},"body":{"interfaces/MoonInterface.html":{}}}],["src/app/tools/moon/moon.service.util.ts:169",{"_index":1993,"title":{},"body":{"interfaces/MoonInterface.html":{}}}],["src/app/tools/moon/moon.service.util.ts:171",{"_index":1996,"title":{},"body":{"interfaces/MoonInterface.html":{}}}],["src/app/tools/moon/moon.service.util.ts:173",{"_index":1994,"title":{},"body":{"interfaces/MoonInterface.html":{}}}],["src/app/tools/moon/moon.service.util.ts:175",{"_index":1999,"title":{},"body":{"interfaces/MoonInterface.html":{}}}],["src/app/tools/moon/moon.service.util.ts:177",{"_index":2001,"title":{},"body":{"interfaces/MoonInterface.html":{}}}],["src/app/tools/moon/moon.service.util.ts:179",{"_index":2003,"title":{},"body":{"interfaces/MoonInterface.html":{}}}],["src/app/tools/moon/moon.service.util.ts:181",{"_index":2006,"title":{},"body":{"interfaces/MoonInterface.html":{}}}],["src/app/tools/moon/moon.service.util.ts:183",{"_index":2004,"title":{},"body":{"interfaces/MoonInterface.html":{}}}],["src/app/tools/moon/moon.service.util.ts:185",{"_index":1997,"title":{},"body":{"interfaces/MoonInterface.html":{}}}],["src/app/tools/moon/moon.service.util.ts:198",{"_index":2008,"title":{},"body":{"classes/MoonInterfaceImpl.html":{}}}],["src/app/tools/moon/moon.service.util.ts:199",{"_index":2009,"title":{},"body":{"classes/MoonInterfaceImpl.html":{}}}],["src/app/tools/moon/moon.service.util.ts:200",{"_index":2010,"title":{},"body":{"classes/MoonInterfaceImpl.html":{}}}],["src/app/tools/moon/moon.service.util.ts:201",{"_index":2011,"title":{},"body":{"classes/MoonInterfaceImpl.html":{}}}],["src/app/tools/moon/moon.service.util.ts:203",{"_index":2012,"title":{},"body":{"classes/MoonInterfaceImpl.html":{}}}],["src/app/tools/moon/moon.service.util.ts:207",{"_index":2014,"title":{},"body":{"classes/MoonInterfaceImpl.html":{}}}],["src/app/tools/moon/moon.service.util.ts:211",{"_index":2015,"title":{},"body":{"classes/MoonInterfaceImpl.html":{}}}],["src/app/tools/moon/moon.service.util.ts:215",{"_index":2017,"title":{},"body":{"classes/MoonInterfaceImpl.html":{}}}],["src/app/tools/moon/moon.service.util.ts:219",{"_index":2018,"title":{},"body":{"classes/MoonInterfaceImpl.html":{}}}],["src/app/tools/moon/moon.service.util.ts:223",{"_index":2019,"title":{},"body":{"classes/MoonInterfaceImpl.html":{}}}],["src/app/tools/moon/moon.service.util.ts:227",{"_index":2020,"title":{},"body":{"classes/MoonInterfaceImpl.html":{}}}],["src/app/tools/moon/moon.service.util.ts:23",{"_index":1919,"title":{},"body":{"classes/MoonData.html":{}}}],["src/app/tools/moon/moon.service.util.ts:231",{"_index":2021,"title":{},"body":{"classes/MoonInterfaceImpl.html":{}}}],["src/app/tools/moon/moon.service.util.ts:235",{"_index":2023,"title":{},"body":{"classes/MoonInterfaceImpl.html":{}}}],["src/app/tools/moon/moon.service.util.ts:239",{"_index":2016,"title":{},"body":{"classes/MoonInterfaceImpl.html":{}}}],["src/app/tools/moon/moon.service.util.ts:248",{"_index":2022,"title":{},"body":{"classes/MoonInterfaceImpl.html":{}}}],["src/app/tools/moon/moon.service.util.ts:255",{"_index":2013,"title":{},"body":{"classes/MoonInterfaceImpl.html":{}}}],["src/app/tools/moon/moon.service.util.ts:268",{"_index":2101,"title":{},"body":{"classes/MoonStorage.html":{}}}],["src/app/tools/moon/moon.service.util.ts:269",{"_index":2102,"title":{},"body":{"classes/MoonStorage.html":{}}}],["src/app/tools/moon/moon.service.util.ts:270",{"_index":2103,"title":{},"body":{"classes/MoonStorage.html":{}}}],["src/app/tools/moon/moon.service.util.ts:272",{"_index":2104,"title":{},"body":{"classes/MoonStorage.html":{}}}],["src/app/tools/moon/moon.service.util.ts:280",{"_index":2105,"title":{},"body":{"classes/MoonStorage.html":{}}}],["src/app/tools/moon/moon.service.util.ts:288",{"_index":2106,"title":{},"body":{"classes/MoonStorage.html":{}}}],["src/app/tools/moon/moon.service.util.ts:296",{"_index":2107,"title":{},"body":{"classes/MoonStorage.html":{}}}],["src/app/tools/moon/moon.service.util.ts:300",{"_index":2108,"title":{},"body":{"classes/MoonStorage.html":{}}}],["src/app/tools/moon/moon.service.util.ts:304",{"_index":2109,"title":{},"body":{"classes/MoonStorage.html":{}}}],["src/app/tools/moon/moon.service.util.ts:308",{"_index":2110,"title":{},"body":{"classes/MoonStorage.html":{}}}],["src/app/tools/moon/moon.service.util.ts:312",{"_index":2111,"title":{},"body":{"classes/MoonStorage.html":{}}}],["src/app/tools/moon/moon.service.util.ts:316",{"_index":2112,"title":{},"body":{"classes/MoonStorage.html":{}}}],["src/app/tools/moon/moon.service.util.ts:324",{"_index":2026,"title":{},"body":{"interfaces/MoonModel.html":{}}}],["src/app/tools/moon/moon.service.util.ts:50",{"_index":1916,"title":{},"body":{"classes/MoonData.html":{}}}],["src/app/tools/moon/moon.service.util.ts:60",{"_index":1917,"title":{},"body":{"classes/MoonData.html":{}}}],["src/app/tools/moon/moon.service.util.ts:64",{"_index":1918,"title":{},"body":{"classes/MoonData.html":{}}}],["src/app/tools/moon/moon.service.util.ts:72",{"_index":1920,"title":{},"body":{"classes/MoonData.html":{}}}],["src/app/tools/moon/moon.service.util.ts:76",{"_index":1921,"title":{},"body":{"classes/MoonData.html":{}}}],["src/app/tools/moon/moon.service.util.ts:92",{"_index":1866,"title":{},"body":{"classes/MoonChartInfo.html":{}}}],["src/app/tools/moon/moon.service.util.ts:93",{"_index":1867,"title":{},"body":{"classes/MoonChartInfo.html":{}}}],["src/app/tools/moon/moon.service.util.ts:94",{"_index":1868,"title":{},"body":{"classes/MoonChartInfo.html":{}}}],["src/app/tools/moon/moon.service.util.ts:95",{"_index":1865,"title":{},"body":{"classes/MoonChartInfo.html":{}}}],["src/app/tools/moon/moon/moon.component.ts",{"_index":1908,"title":{},"body":{"components/MoonComponent.html":{},"coverage.html":{}}}],["src/app/tools/moon/moon/moon.component.ts:12",{"_index":1911,"title":{},"body":{"components/MoonComponent.html":{}}}],["src/app/tools/moon/moon/moon.component.ts:18",{"_index":1912,"title":{},"body":{"components/MoonComponent.html":{}}}],["src/app/tools/scatter/scatter",{"_index":2188,"title":{},"body":{"components/ScatterChartFormComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/tools/scatter/scatter.module.ts",{"_index":2381,"title":{},"body":{"modules/ScatterModule.html":{}}}],["src/app/tools/scatter/scatter.service.ts",{"_index":2384,"title":{},"body":{"injectables/ScatterService.html":{},"coverage.html":{}}}],["src/app/tools/scatter/scatter.service.ts:103",{"_index":2398,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:107",{"_index":2405,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:113",{"_index":2413,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:119",{"_index":2414,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:125",{"_index":2407,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:132",{"_index":2412,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:138",{"_index":2402,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:147",{"_index":2388,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:153",{"_index":2390,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:157",{"_index":2391,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:161",{"_index":2401,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:167",{"_index":2406,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:173",{"_index":2403,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:179",{"_index":2410,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:183",{"_index":2395,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:21",{"_index":2424,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:22",{"_index":2423,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:23",{"_index":2425,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:25",{"_index":2426,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:27",{"_index":2421,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:29",{"_index":2420,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:30",{"_index":2418,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:31",{"_index":2417,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:32",{"_index":2415,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:33",{"_index":2422,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:34",{"_index":2387,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:44",{"_index":2393,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:48",{"_index":2394,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:52",{"_index":2396,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:56",{"_index":2397,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:60",{"_index":2408,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:66",{"_index":2409,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:72",{"_index":2411,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:77",{"_index":2404,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:87",{"_index":2389,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:91",{"_index":2399,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:95",{"_index":2400,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:99",{"_index":2392,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts",{"_index":2193,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"coverage.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:107",{"_index":2198,"title":{},"body":{"classes/ScatterChartInfo.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:111",{"_index":2199,"title":{},"body":{"classes/ScatterChartInfo.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:115",{"_index":2202,"title":{},"body":{"classes/ScatterChartInfo.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:12",{"_index":2263,"title":{},"body":{"classes/ScatterData.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:124",{"_index":2203,"title":{},"body":{"classes/ScatterChartInfo.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:128",{"_index":2204,"title":{},"body":{"classes/ScatterChartInfo.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:13",{"_index":2262,"title":{},"body":{"classes/ScatterData.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:132",{"_index":2205,"title":{},"body":{"classes/ScatterChartInfo.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:136",{"_index":2206,"title":{},"body":{"classes/ScatterChartInfo.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:140",{"_index":2207,"title":{},"body":{"classes/ScatterChartInfo.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:147",{"_index":2208,"title":{},"body":{"classes/ScatterChartInfo.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:151",{"_index":2209,"title":{},"body":{"classes/ScatterChartInfo.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:165",{"_index":2357,"title":{},"body":{"interfaces/ScatterModel.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:167",{"_index":2356,"title":{},"body":{"interfaces/ScatterModel.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:169",{"_index":2361,"title":{},"body":{"interfaces/ScatterModel.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:171",{"_index":2360,"title":{},"body":{"interfaces/ScatterModel.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:173",{"_index":2359,"title":{},"body":{"interfaces/ScatterModel.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:175",{"_index":2362,"title":{},"body":{"interfaces/ScatterModel.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:177",{"_index":2358,"title":{},"body":{"interfaces/ScatterModel.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:182",{"_index":2365,"title":{},"body":{"classes/ScatterModelInterface.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:183",{"_index":2364,"title":{},"body":{"classes/ScatterModelInterface.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:19",{"_index":2270,"title":{},"body":{"classes/ScatterData.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:190",{"_index":2368,"title":{},"body":{"classes/ScatterModelInterface.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:197",{"_index":2369,"title":{},"body":{"classes/ScatterModelInterface.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:201",{"_index":2370,"title":{},"body":{"classes/ScatterModelInterface.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:208",{"_index":2371,"title":{},"body":{"classes/ScatterModelInterface.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:227",{"_index":2372,"title":{},"body":{"classes/ScatterModelInterface.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:234",{"_index":2373,"title":{},"body":{"classes/ScatterModelInterface.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:238",{"_index":2374,"title":{},"body":{"classes/ScatterModelInterface.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:242",{"_index":2375,"title":{},"body":{"classes/ScatterModelInterface.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:247",{"_index":2367,"title":{},"body":{"classes/ScatterModelInterface.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:255",{"_index":2464,"title":{},"body":{"classes/ScatterStorage.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:256",{"_index":2463,"title":{},"body":{"classes/ScatterStorage.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:257",{"_index":2465,"title":{},"body":{"classes/ScatterStorage.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:259",{"_index":2466,"title":{},"body":{"classes/ScatterStorage.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:267",{"_index":2467,"title":{},"body":{"classes/ScatterStorage.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:275",{"_index":2468,"title":{},"body":{"classes/ScatterStorage.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:283",{"_index":2469,"title":{},"body":{"classes/ScatterStorage.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:287",{"_index":2470,"title":{},"body":{"classes/ScatterStorage.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:291",{"_index":2471,"title":{},"body":{"classes/ScatterStorage.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:295",{"_index":2472,"title":{},"body":{"classes/ScatterStorage.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:299",{"_index":2473,"title":{},"body":{"classes/ScatterStorage.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:303",{"_index":2474,"title":{},"body":{"classes/ScatterStorage.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:31",{"_index":2264,"title":{},"body":{"classes/ScatterData.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:41",{"_index":2265,"title":{},"body":{"classes/ScatterData.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:49",{"_index":2266,"title":{},"body":{"classes/ScatterData.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:66",{"_index":2271,"title":{},"body":{"classes/ScatterData.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:70",{"_index":2272,"title":{},"body":{"classes/ScatterData.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:85",{"_index":2195,"title":{},"body":{"classes/ScatterChartInfo.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:86",{"_index":2196,"title":{},"body":{"classes/ScatterChartInfo.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:87",{"_index":2197,"title":{},"body":{"classes/ScatterChartInfo.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:88",{"_index":2194,"title":{},"body":{"classes/ScatterChartInfo.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:98",{"_index":2200,"title":{},"body":{"classes/ScatterChartInfo.html":{}}}],["src/app/tools/scatter/scatter/scatter.component.ts",{"_index":2256,"title":{},"body":{"components/ScatterComponent.html":{},"coverage.html":{}}}],["src/app/tools/scatter/scatter/scatter.component.ts:12",{"_index":2259,"title":{},"body":{"components/ScatterComponent.html":{}}}],["src/app/tools/scatter/scatter/scatter.component.ts:18",{"_index":2260,"title":{},"body":{"components/ScatterComponent.html":{}}}],["src/app/tools/shared/charts/chart.interface.ts",{"_index":542,"title":{},"body":{"interfaces/ChartInfo.html":{},"interfaces/MyChart.html":{},"coverage.html":{}}}],["src/app/tools/shared/charts/chart.interface.ts:11",{"_index":554,"title":{},"body":{"interfaces/ChartInfo.html":{}}}],["src/app/tools/shared/charts/chart.interface.ts:13",{"_index":555,"title":{},"body":{"interfaces/ChartInfo.html":{}}}],["src/app/tools/shared/charts/chart.interface.ts:15",{"_index":559,"title":{},"body":{"interfaces/ChartInfo.html":{}}}],["src/app/tools/shared/charts/chart.interface.ts:17",{"_index":566,"title":{},"body":{"interfaces/ChartInfo.html":{}}}],["src/app/tools/shared/charts/chart.interface.ts:19",{"_index":569,"title":{},"body":{"interfaces/ChartInfo.html":{}}}],["src/app/tools/shared/charts/chart.interface.ts:21",{"_index":561,"title":{},"body":{"interfaces/ChartInfo.html":{}}}],["src/app/tools/shared/charts/chart.interface.ts:23",{"_index":563,"title":{},"body":{"interfaces/ChartInfo.html":{}}}],["src/app/tools/shared/charts/chart.interface.ts:28",{"_index":2128,"title":{},"body":{"interfaces/MyChart.html":{}}}],["src/app/tools/shared/charts/chart.interface.ts:30",{"_index":2129,"title":{},"body":{"interfaces/MyChart.html":{}}}],["src/app/tools/shared/charts/chart.interface.ts:32",{"_index":2130,"title":{},"body":{"interfaces/MyChart.html":{}}}],["src/app/tools/shared/charts/chart.interface.ts:5",{"_index":553,"title":{},"body":{"interfaces/ChartInfo.html":{}}}],["src/app/tools/shared/charts/chart.interface.ts:7",{"_index":556,"title":{},"body":{"interfaces/ChartInfo.html":{}}}],["src/app/tools/shared/charts/chart.interface.ts:9",{"_index":557,"title":{},"body":{"interfaces/ChartInfo.html":{}}}],["src/app/tools/shared/charts/utils.ts",{"_index":3139,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/tools/shared/data/data.interface.ts",{"_index":2131,"title":{},"body":{"interfaces/MyData.html":{},"coverage.html":{}}}],["src/app/tools/shared/data/data.interface.ts:10",{"_index":2135,"title":{},"body":{"interfaces/MyData.html":{}}}],["src/app/tools/shared/data/data.interface.ts:2",{"_index":2133,"title":{},"body":{"interfaces/MyData.html":{}}}],["src/app/tools/shared/data/data.interface.ts:4",{"_index":2134,"title":{},"body":{"interfaces/MyData.html":{}}}],["src/app/tools/shared/data/data.interface.ts:6",{"_index":2136,"title":{},"body":{"interfaces/MyData.html":{}}}],["src/app/tools/shared/data/data.interface.ts:8",{"_index":2132,"title":{},"body":{"interfaces/MyData.html":{}}}],["src/app/tools/shared/data/fileparser.ts",{"_index":1393,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/tools/shared/data/fileparser.ts:109",{"_index":2151,"title":{},"body":{"classes/MyFileParser.html":{}}}],["src/app/tools/shared/data/fileparser.ts:119",{"_index":2149,"title":{},"body":{"classes/MyFileParser.html":{}}}],["src/app/tools/shared/data/fileparser.ts:141",{"_index":2150,"title":{},"body":{"classes/MyFileParser.html":{}}}],["src/app/tools/shared/data/fileparser.ts:156",{"_index":2164,"title":{},"body":{"classes/MyFileParserTXT.html":{}}}],["src/app/tools/shared/data/fileparser.ts:178",{"_index":2165,"title":{},"body":{"classes/MyFileParserTXT.html":{}}}],["src/app/tools/shared/data/fileparser.ts:196",{"_index":2166,"title":{},"body":{"classes/MyFileParserTXT.html":{}}}],["src/app/tools/shared/data/fileparser.ts:218",{"_index":2167,"title":{},"body":{"classes/MyFileParserTXT.html":{}}}],["src/app/tools/shared/data/fileparser.ts:23",{"_index":2163,"title":{},"body":{"interfaces/MyFileParserStrategy.html":{}}}],["src/app/tools/shared/data/fileparser.ts:256",{"_index":2168,"title":{},"body":{"classes/MyFileParserTXT.html":{}}}],["src/app/tools/shared/data/fileparser.ts:262",{"_index":2154,"title":{},"body":{"classes/MyFileParserDefault.html":{}}}],["src/app/tools/shared/data/fileparser.ts:267",{"_index":2155,"title":{},"body":{"classes/MyFileParserDefault.html":{}}}],["src/app/tools/shared/data/fileparser.ts:271",{"_index":2156,"title":{},"body":{"classes/MyFileParserDefault.html":{}}}],["src/app/tools/shared/data/fileparser.ts:275",{"_index":2157,"title":{},"body":{"classes/MyFileParserDefault.html":{}}}],["src/app/tools/shared/data/fileparser.ts:282",{"_index":2158,"title":{},"body":{"classes/MyFileParserDefault.html":{}}}],["src/app/tools/shared/data/fileparser.ts:31",{"_index":2161,"title":{},"body":{"interfaces/MyFileParserStrategy.html":{}}}],["src/app/tools/shared/data/fileparser.ts:42",{"_index":2160,"title":{},"body":{"interfaces/MyFileParserStrategy.html":{}}}],["src/app/tools/shared/data/fileparser.ts:55",{"_index":2159,"title":{},"body":{"interfaces/MyFileParserStrategy.html":{}}}],["src/app/tools/shared/data/fileparser.ts:71",{"_index":2162,"title":{},"body":{"interfaces/MyFileParserStrategy.html":{}}}],["src/app/tools/shared/data/fileparser.ts:80",{"_index":2148,"title":{},"body":{"classes/MyFileParser.html":{}}}],["src/app/tools/shared/data/fileparser.ts:81",{"_index":2146,"title":{},"body":{"classes/MyFileParser.html":{}}}],["src/app/tools/shared/data/fileparser.ts:82",{"_index":2141,"title":{},"body":{"classes/MyFileParser.html":{}}}],["src/app/tools/shared/data/fileparser.ts:84",{"_index":2144,"title":{},"body":{"classes/MyFileParser.html":{}}}],["src/app/tools/shared/data/fileparser.ts:85",{"_index":2143,"title":{},"body":{"classes/MyFileParser.html":{}}}],["src/app/tools/shared/data/fileparser.ts:86",{"_index":2147,"title":{},"body":{"classes/MyFileParser.html":{}}}],["src/app/tools/shared/data/fileparser.ts:88",{"_index":2145,"title":{},"body":{"classes/MyFileParser.html":{}}}],["src/app/tools/shared/data/fileparser.ts:89",{"_index":2142,"title":{},"body":{"classes/MyFileParser.html":{}}}],["src/app/tools/shared/data/fileparser.ts:90",{"_index":2140,"title":{},"body":{"classes/MyFileParser.html":{}}}],["src/app/tools/shared/data/utils.ts",{"_index":3147,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/tools/shared/honor",{"_index":1516,"title":{},"body":{"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"coverage.html":{}}}],["src/app/tools/shared/interface/input",{"_index":1670,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{},"coverage.html":{}}}],["src/app/tools/shared/interface/util.ts",{"_index":1779,"title":{},"body":{"modules/InterfaceUtilModule.html":{}}}],["src/app/tools/shared/simple",{"_index":2503,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"coverage.html":{}}}],["src/app/tools/shared/storage/storage.interface.ts",{"_index":2169,"title":{},"body":{"interfaces/MyStorage.html":{},"coverage.html":{}}}],["src/app/tools/shared/storage/storage.interface.ts:10",{"_index":2172,"title":{},"body":{"interfaces/MyStorage.html":{}}}],["src/app/tools/shared/storage/storage.interface.ts:12",{"_index":2178,"title":{},"body":{"interfaces/MyStorage.html":{}}}],["src/app/tools/shared/storage/storage.interface.ts:14",{"_index":2174,"title":{},"body":{"interfaces/MyStorage.html":{}}}],["src/app/tools/shared/storage/storage.interface.ts:16",{"_index":2175,"title":{},"body":{"interfaces/MyStorage.html":{}}}],["src/app/tools/shared/storage/storage.interface.ts:18",{"_index":2173,"title":{},"body":{"interfaces/MyStorage.html":{}}}],["src/app/tools/shared/storage/storage.interface.ts:2",{"_index":2171,"title":{},"body":{"interfaces/MyStorage.html":{}}}],["src/app/tools/shared/storage/storage.interface.ts:4",{"_index":2177,"title":{},"body":{"interfaces/MyStorage.html":{}}}],["src/app/tools/shared/storage/storage.interface.ts:6",{"_index":2170,"title":{},"body":{"interfaces/MyStorage.html":{}}}],["src/app/tools/shared/storage/storage.interface.ts:8",{"_index":2176,"title":{},"body":{"interfaces/MyStorage.html":{}}}],["src/app/tools/shared/tables/table",{"_index":2179,"title":{},"body":{"interfaces/MyTable.html":{},"coverage.html":{}}}],["src/app/tools/shared/types/actions.ts",{"_index":4128,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/tools/spectrum/spectrum",{"_index":2577,"title":{},"body":{"components/SpectrumChartFormComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"coverage.html":{}}}],["src/app/tools/spectrum/spectrum.module.ts",{"_index":2736,"title":{},"body":{"modules/SpectrumModule.html":{}}}],["src/app/tools/spectrum/spectrum.service.ts",{"_index":2741,"title":{},"body":{"injectables/SpectrumService.html":{},"coverage.html":{}}}],["src/app/tools/spectrum/spectrum.service.ts:104",{"_index":2744,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["src/app/tools/spectrum/spectrum.service.ts:108",{"_index":2756,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["src/app/tools/spectrum/spectrum.service.ts:119",{"_index":2743,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["src/app/tools/spectrum/spectrum.service.ts:125",{"_index":2746,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["src/app/tools/spectrum/spectrum.service.ts:129",{"_index":2747,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["src/app/tools/spectrum/spectrum.service.ts:133",{"_index":2753,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["src/app/tools/spectrum/spectrum.service.ts:139",{"_index":2758,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["src/app/tools/spectrum/spectrum.service.ts:145",{"_index":2755,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["src/app/tools/spectrum/spectrum.service.ts:151",{"_index":2761,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["src/app/tools/spectrum/spectrum.service.ts:155",{"_index":2749,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["src/app/tools/spectrum/spectrum.service.ts:19",{"_index":2775,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["src/app/tools/spectrum/spectrum.service.ts:20",{"_index":2776,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["src/app/tools/spectrum/spectrum.service.ts:21",{"_index":2774,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["src/app/tools/spectrum/spectrum.service.ts:23",{"_index":2777,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["src/app/tools/spectrum/spectrum.service.ts:25",{"_index":2770,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["src/app/tools/spectrum/spectrum.service.ts:26",{"_index":2768,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["src/app/tools/spectrum/spectrum.service.ts:27",{"_index":2773,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["src/app/tools/spectrum/spectrum.service.ts:28",{"_index":2771,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["src/app/tools/spectrum/spectrum.service.ts:29",{"_index":2767,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["src/app/tools/spectrum/spectrum.service.ts:30",{"_index":2765,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["src/app/tools/spectrum/spectrum.service.ts:32",{"_index":2742,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["src/app/tools/spectrum/spectrum.service.ts:43",{"_index":2745,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["src/app/tools/spectrum/spectrum.service.ts:47",{"_index":2748,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["src/app/tools/spectrum/spectrum.service.ts:51",{"_index":2750,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["src/app/tools/spectrum/spectrum.service.ts:55",{"_index":2751,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["src/app/tools/spectrum/spectrum.service.ts:59",{"_index":2752,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["src/app/tools/spectrum/spectrum.service.ts:63",{"_index":2757,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["src/app/tools/spectrum/spectrum.service.ts:69",{"_index":2759,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["src/app/tools/spectrum/spectrum.service.ts:76",{"_index":2762,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["src/app/tools/spectrum/spectrum.service.ts:82",{"_index":2763,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["src/app/tools/spectrum/spectrum.service.ts:88",{"_index":2764,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["src/app/tools/spectrum/spectrum.service.ts:94",{"_index":2754,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts",{"_index":2585,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts:103",{"_index":2730,"title":{},"body":{"classes/SpectrumInterfaceImpl.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts:117",{"_index":2587,"title":{},"body":{"classes/SpectrumChartInfo.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts:118",{"_index":2588,"title":{},"body":{"classes/SpectrumChartInfo.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts:119",{"_index":2589,"title":{},"body":{"classes/SpectrumChartInfo.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts:12",{"_index":2692,"title":{},"body":{"classes/SpectrumData.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts:120",{"_index":2586,"title":{},"body":{"classes/SpectrumChartInfo.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts:129",{"_index":2592,"title":{},"body":{"classes/SpectrumChartInfo.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts:138",{"_index":2590,"title":{},"body":{"classes/SpectrumChartInfo.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts:142",{"_index":2591,"title":{},"body":{"classes/SpectrumChartInfo.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts:146",{"_index":2594,"title":{},"body":{"classes/SpectrumChartInfo.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts:155",{"_index":2595,"title":{},"body":{"classes/SpectrumChartInfo.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts:159",{"_index":2596,"title":{},"body":{"classes/SpectrumChartInfo.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts:163",{"_index":2597,"title":{},"body":{"classes/SpectrumChartInfo.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts:167",{"_index":2598,"title":{},"body":{"classes/SpectrumChartInfo.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts:171",{"_index":2599,"title":{},"body":{"classes/SpectrumChartInfo.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts:178",{"_index":2600,"title":{},"body":{"classes/SpectrumChartInfo.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts:182",{"_index":2601,"title":{},"body":{"classes/SpectrumChartInfo.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts:190",{"_index":2809,"title":{},"body":{"classes/SpectrumStorage.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts:191",{"_index":2810,"title":{},"body":{"classes/SpectrumStorage.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts:192",{"_index":2808,"title":{},"body":{"classes/SpectrumStorage.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts:194",{"_index":2811,"title":{},"body":{"classes/SpectrumStorage.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts:202",{"_index":2812,"title":{},"body":{"classes/SpectrumStorage.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts:21",{"_index":2696,"title":{},"body":{"classes/SpectrumData.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts:210",{"_index":2813,"title":{},"body":{"classes/SpectrumStorage.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts:218",{"_index":2814,"title":{},"body":{"classes/SpectrumStorage.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts:222",{"_index":2815,"title":{},"body":{"classes/SpectrumStorage.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts:226",{"_index":2816,"title":{},"body":{"classes/SpectrumStorage.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts:230",{"_index":2817,"title":{},"body":{"classes/SpectrumStorage.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts:234",{"_index":2818,"title":{},"body":{"classes/SpectrumStorage.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts:238",{"_index":2819,"title":{},"body":{"classes/SpectrumStorage.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts:34",{"_index":2693,"title":{},"body":{"classes/SpectrumData.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts:44",{"_index":2694,"title":{},"body":{"classes/SpectrumData.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts:48",{"_index":2695,"title":{},"body":{"classes/SpectrumData.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts:65",{"_index":2697,"title":{},"body":{"classes/SpectrumData.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts:69",{"_index":2698,"title":{},"body":{"classes/SpectrumData.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts:82",{"_index":2725,"title":{},"body":{"interfaces/SpectrumInterface.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts:84",{"_index":2726,"title":{},"body":{"interfaces/SpectrumInterface.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts:89",{"_index":2727,"title":{},"body":{"classes/SpectrumInterfaceImpl.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts:95",{"_index":2729,"title":{},"body":{"classes/SpectrumInterfaceImpl.html":{}}}],["src/app/tools/spectrum/spectrum.service.util.ts:99",{"_index":2728,"title":{},"body":{"classes/SpectrumInterfaceImpl.html":{}}}],["src/app/tools/spectrum/spectrum/spectrum.component.ts",{"_index":2650,"title":{},"body":{"components/SpectrumComponent.html":{},"coverage.html":{}}}],["src/app/tools/spectrum/spectrum/spectrum.component.ts:16",{"_index":2668,"title":{},"body":{"components/SpectrumComponent.html":{}}}],["src/app/tools/spectrum/spectrum/spectrum.component.ts:17",{"_index":2664,"title":{},"body":{"components/SpectrumComponent.html":{}}}],["src/app/tools/spectrum/spectrum/spectrum.component.ts:21",{"_index":2656,"title":{},"body":{"components/SpectrumComponent.html":{}}}],["src/app/tools/spectrum/spectrum/spectrum.component.ts:59",{"_index":2657,"title":{},"body":{"components/SpectrumComponent.html":{}}}],["src/app/tools/spectrum/spectrum/spectrum.component.ts:75",{"_index":2660,"title":{},"body":{"components/SpectrumComponent.html":{}}}],["src/app/tools/spectrum/spectrum/spectrum.component.ts:79",{"_index":2658,"title":{},"body":{"components/SpectrumComponent.html":{}}}],["src/app/tools/venus/venus",{"_index":2884,"title":{},"body":{"components/VenusChartFormComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"coverage.html":{}}}],["src/app/tools/venus/venus.module.ts",{"_index":3000,"title":{},"body":{"modules/VenusModule.html":{}}}],["src/app/tools/venus/venus.service.ts",{"_index":3003,"title":{},"body":{"injectables/VenusService.html":{},"coverage.html":{}}}],["src/app/tools/venus/venus.service.ts:100",{"_index":3029,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:106",{"_index":3023,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:115",{"_index":3008,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:121",{"_index":3010,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:125",{"_index":3011,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:129",{"_index":3022,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:135",{"_index":3026,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:141",{"_index":3024,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:145",{"_index":3028,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:149",{"_index":3017,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:154",{"_index":3021,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:19",{"_index":3040,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:20",{"_index":3039,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:21",{"_index":3038,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:24",{"_index":3037,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:26",{"_index":3035,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:27",{"_index":3034,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:29",{"_index":3032,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:31",{"_index":3007,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:40",{"_index":3014,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:44",{"_index":3013,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:48",{"_index":3016,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:55",{"_index":3009,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:59",{"_index":3019,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:63",{"_index":3020,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:67",{"_index":3012,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:71",{"_index":3018,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:75",{"_index":3025,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:81",{"_index":3030,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:87",{"_index":3031,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:93",{"_index":3027,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.util.ts",{"_index":2889,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"coverage.html":{}}}],["src/app/tools/venus/venus.service.util.ts:108",{"_index":2899,"title":{},"body":{"classes/VenusChartInfo.html":{}}}],["src/app/tools/venus/venus.service.util.ts:112",{"_index":2900,"title":{},"body":{"classes/VenusChartInfo.html":{}}}],["src/app/tools/venus/venus.service.util.ts:116",{"_index":2901,"title":{},"body":{"classes/VenusChartInfo.html":{}}}],["src/app/tools/venus/venus.service.util.ts:120",{"_index":2902,"title":{},"body":{"classes/VenusChartInfo.html":{}}}],["src/app/tools/venus/venus.service.util.ts:124",{"_index":2903,"title":{},"body":{"classes/VenusChartInfo.html":{}}}],["src/app/tools/venus/venus.service.util.ts:13",{"_index":2963,"title":{},"body":{"classes/VenusData.html":{}}}],["src/app/tools/venus/venus.service.util.ts:131",{"_index":2904,"title":{},"body":{"classes/VenusChartInfo.html":{}}}],["src/app/tools/venus/venus.service.util.ts:135",{"_index":2905,"title":{},"body":{"classes/VenusChartInfo.html":{}}}],["src/app/tools/venus/venus.service.util.ts:139",{"_index":2896,"title":{},"body":{"classes/VenusChartInfo.html":{}}}],["src/app/tools/venus/venus.service.util.ts:151",{"_index":3073,"title":{},"body":{"classes/VenusStorage.html":{}}}],["src/app/tools/venus/venus.service.util.ts:152",{"_index":3072,"title":{},"body":{"classes/VenusStorage.html":{}}}],["src/app/tools/venus/venus.service.util.ts:153",{"_index":3074,"title":{},"body":{"classes/VenusStorage.html":{}}}],["src/app/tools/venus/venus.service.util.ts:163",{"_index":3075,"title":{},"body":{"classes/VenusStorage.html":{}}}],["src/app/tools/venus/venus.service.util.ts:172",{"_index":3076,"title":{},"body":{"classes/VenusStorage.html":{}}}],["src/app/tools/venus/venus.service.util.ts:175",{"_index":3077,"title":{},"body":{"classes/VenusStorage.html":{}}}],["src/app/tools/venus/venus.service.util.ts:179",{"_index":3078,"title":{},"body":{"classes/VenusStorage.html":{}}}],["src/app/tools/venus/venus.service.util.ts:183",{"_index":3079,"title":{},"body":{"classes/VenusStorage.html":{}}}],["src/app/tools/venus/venus.service.util.ts:186",{"_index":3080,"title":{},"body":{"classes/VenusStorage.html":{}}}],["src/app/tools/venus/venus.service.util.ts:19",{"_index":2964,"title":{},"body":{"classes/VenusData.html":{}}}],["src/app/tools/venus/venus.service.util.ts:190",{"_index":3081,"title":{},"body":{"classes/VenusStorage.html":{}}}],["src/app/tools/venus/venus.service.util.ts:194",{"_index":3082,"title":{},"body":{"classes/VenusStorage.html":{}}}],["src/app/tools/venus/venus.service.util.ts:202",{"_index":2991,"title":{},"body":{"classes/VenusModels.html":{}}}],["src/app/tools/venus/venus.service.util.ts:204",{"_index":2987,"title":{},"body":{"classes/VenusModels.html":{}}}],["src/app/tools/venus/venus.service.util.ts:206",{"_index":2990,"title":{},"body":{"classes/VenusModels.html":{}}}],["src/app/tools/venus/venus.service.util.ts:208",{"_index":2988,"title":{},"body":{"classes/VenusModels.html":{}}}],["src/app/tools/venus/venus.service.util.ts:210",{"_index":2989,"title":{},"body":{"classes/VenusModels.html":{}}}],["src/app/tools/venus/venus.service.util.ts:221",{"_index":2992,"title":{},"body":{"classes/VenusModels.html":{}}}],["src/app/tools/venus/venus.service.util.ts:251",{"_index":2993,"title":{},"body":{"classes/VenusModels.html":{}}}],["src/app/tools/venus/venus.service.util.ts:271",{"_index":2995,"title":{},"body":{"classes/VenusModels.html":{}}}],["src/app/tools/venus/venus.service.util.ts:29",{"_index":2965,"title":{},"body":{"classes/VenusData.html":{}}}],["src/app/tools/venus/venus.service.util.ts:33",{"_index":2966,"title":{},"body":{"classes/VenusData.html":{}}}],["src/app/tools/venus/venus.service.util.ts:44",{"_index":2968,"title":{},"body":{"classes/VenusData.html":{}}}],["src/app/tools/venus/venus.service.util.ts:48",{"_index":2969,"title":{},"body":{"classes/VenusData.html":{}}}],["src/app/tools/venus/venus.service.util.ts:52",{"_index":2967,"title":{},"body":{"classes/VenusData.html":{}}}],["src/app/tools/venus/venus.service.util.ts:78",{"_index":2891,"title":{},"body":{"classes/VenusChartInfo.html":{}}}],["src/app/tools/venus/venus.service.util.ts:79",{"_index":2892,"title":{},"body":{"classes/VenusChartInfo.html":{}}}],["src/app/tools/venus/venus.service.util.ts:80",{"_index":2893,"title":{},"body":{"classes/VenusChartInfo.html":{}}}],["src/app/tools/venus/venus.service.util.ts:81",{"_index":2890,"title":{},"body":{"classes/VenusChartInfo.html":{}}}],["src/app/tools/venus/venus.service.util.ts:91",{"_index":2894,"title":{},"body":{"classes/VenusChartInfo.html":{}}}],["src/app/tools/venus/venus.service.util.ts:95",{"_index":2895,"title":{},"body":{"classes/VenusChartInfo.html":{}}}],["src/app/tools/venus/venus.service.util.ts:99",{"_index":2897,"title":{},"body":{"classes/VenusChartInfo.html":{}}}],["src/app/tools/venus/venus/venus.component.ts",{"_index":2957,"title":{},"body":{"components/VenusComponent.html":{},"coverage.html":{}}}],["src/app/tools/venus/venus/venus.component.ts:12",{"_index":2960,"title":{},"body":{"components/VenusComponent.html":{}}}],["src/app/tools/venus/venus/venus.component.ts:19",{"_index":2961,"title":{},"body":{"components/VenusComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":3156,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":3158,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/locale",{"_index":3319,"title":{},"body":{"index.html":{}}}],["stand",{"_index":3449,"title":{},"body":{"license.html":{}}}],["standard",{"_index":3549,"title":{},"body":{"license.html":{}}}],["standards",{"_index":3552,"title":{},"body":{"license.html":{}}}],["start",{"_index":1626,"title":{},"body":{"components/HonorCodePopupComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"license.html":{}}}],["started",{"_index":3258,"title":{"index.html":{},"license.html":{}},"body":{}}],["starts",{"_index":4096,"title":{},"body":{"license.html":{}}}],["startto",{"_index":3310,"title":{},"body":{"index.html":{}}}],["state",{"_index":4083,"title":{},"body":{"license.html":{}}}],["stated",{"_index":3602,"title":{},"body":{"license.html":{}}}],["statement",{"_index":3868,"title":{},"body":{"license.html":{}}}],["statements",{"_index":3101,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":3459,"title":{},"body":{"license.html":{}}}],["static",{"_index":471,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DefaultAppearanceSettings.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SliderUtil.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"components/SpectrumComponent.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["stating",{"_index":3668,"title":{},"body":{"license.html":{}}}],["status",{"_index":1728,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{},"license.html":{}}}],["step",{"_index":1687,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/SliderUtil.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["stepnum",{"_index":1765,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["steps",{"_index":2254,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"license.html":{}}}],["stepvalue",{"_index":1688,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["storage",{"_index":3698,"title":{},"body":{"license.html":{}}}],["storage.service",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppearanceService.html":{}}}],["storage.service.ts",{"_index":421,"title":{},"body":{"injectables/AppearanceStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:15",{"_index":440,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:16",{"_index":446,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:17",{"_index":444,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:18",{"_index":442,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:19",{"_index":439,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:20",{"_index":441,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:21",{"_index":447,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:22",{"_index":445,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:23",{"_index":443,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:24",{"_index":429,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:29",{"_index":434,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:33",{"_index":430,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:42",{"_index":438,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:46",{"_index":433,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:55",{"_index":437,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:59",{"_index":432,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:68",{"_index":436,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:72",{"_index":431,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storageobject",{"_index":564,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChartInfo.html":{},"classes/DualChartInfo.html":{},"injectables/DualService.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/SpectrumChartInfo.html":{},"injectables/SpectrumService.html":{},"classes/VenusChartInfo.html":{},"injectables/VenusService.html":{}}}],["storageobject.charttitle",{"_index":2231,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["storageobject.data",{"_index":2633,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{}}}],["storageobject.datalabel",{"_index":2232,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["storageobject.title",{"_index":2630,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{}}}],["storageobject.xaxis",{"_index":2631,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{}}}],["storageobject.xaxislabel",{"_index":2233,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["storageobject.yaxis",{"_index":2632,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{}}}],["storageobject.yaxislabel",{"_index":2234,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["storageservice",{"_index":358,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["strategy",{"_index":1397,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"miscellaneous/enumerations.html":{}}}],["string",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"interfaces/HeaderRequirement.html":{},"injectables/HonorCodeChartService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/MoonComponent.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyColorTheme.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SliderUtil.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"components/SpectrumComponent.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"miscellaneous/functions.html":{}}}],["string(sliderutil.myround(math.exp(slider",{"_index":1752,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["string(sliderutil.myround(slider",{"_index":1753,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["stroke",{"_index":2347,"title":{},"body":{"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["students",{"_index":3266,"title":{},"body":{"index.html":{}}}],["style",{"_index":321,"title":{},"body":{"components/AppearanceComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["style.displayname",{"_index":322,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["styledmode",{"_index":974,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["styleurls",{"_index":16,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["subdividing",{"_index":3917,"title":{},"body":{"license.html":{}}}],["subject",{"_index":621,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"interfaces/HeaderRequirement.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumHighchartComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"license.html":{}}}],["sublicenses",{"_index":3947,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":3626,"title":{},"body":{"license.html":{}}}],["submit",{"_index":1600,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["subprograms",{"_index":3590,"title":{},"body":{"license.html":{}}}],["subroutine",{"_index":4109,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":651,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/SliderUtil.html":{},"components/SpectrumComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["subscribe((curveinterface",{"_index":1819,"title":{},"body":{"components/LineFormComponent.html":{}}}],["subscribe((data",{"_index":995,"title":{},"body":{"components/CurveHighChartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{}}}],["subscribe((info",{"_index":993,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["subscribe(info",{"_index":719,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["subscribe(label",{"_index":736,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["subscribe(labels",{"_index":733,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["subscribe(title",{"_index":730,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["subsection",{"_index":3731,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":3786,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":3447,"title":{},"body":{"license.html":{}}}],["such",{"_index":3393,"title":{},"body":{"license.html":{}}}],["sue",{"_index":3961,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":3795,"title":{},"body":{"license.html":{}}}],["sun",{"_index":2310,"title":{},"body":{"components/ScatterHighchartComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["supplement",{"_index":3824,"title":{},"body":{"license.html":{}}}],["support",{"_index":3675,"title":{},"body":{"license.html":{},"modules.html":{}}}],["supports",{"_index":3738,"title":{},"body":{"license.html":{}}}],["sure",{"_index":3361,"title":{},"body":{"license.html":{}}}],["surrender",{"_index":3386,"title":{},"body":{"license.html":{}}}],["survive",{"_index":3867,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":4058,"title":{},"body":{"license.html":{}}}],["svg",{"_index":4118,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":818,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["symbol",{"_index":2313,"title":{},"body":{"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{}}}],["system",{"_index":3559,"title":{},"body":{"license.html":{}}}],["systematic",{"_index":3436,"title":{},"body":{"license.html":{}}}],["table",{"_index":109,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":49,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["table.component",{"_index":1046,"title":{},"body":{"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules/SpectrumModule.html":{},"modules/VenusModule.html":{}}}],["table.component.html",{"_index":1095,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["table.component.scss",{"_index":1096,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["table.component.ts",{"_index":1082,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"coverage.html":{}}}],["table.component.ts:15",{"_index":1388,"title":{},"body":{"components/DualTableComponent.html":{},"components/MoonTableComponent.html":{},"components/VenusTableComponent.html":{}}}],["table.component.ts:16",{"_index":1122,"title":{},"body":{"components/CurveTableComponent.html":{},"components/DualTableComponent.html":{},"components/MoonTableComponent.html":{},"components/SpectrumTableComponent.html":{},"components/VenusTableComponent.html":{}}}],["table.component.ts:17",{"_index":1123,"title":{},"body":{"components/CurveTableComponent.html":{},"components/DualTableComponent.html":{},"components/MoonTableComponent.html":{},"components/ScatterTableComponent.html":{},"components/SpectrumTableComponent.html":{},"components/VenusTableComponent.html":{}}}],["table.component.ts:18",{"_index":1124,"title":{},"body":{"components/CurveTableComponent.html":{},"components/DualTableComponent.html":{},"components/MoonTableComponent.html":{},"components/ScatterTableComponent.html":{},"components/SpectrumTableComponent.html":{},"components/VenusTableComponent.html":{}}}],["table.component.ts:19",{"_index":1128,"title":{},"body":{"components/CurveTableComponent.html":{},"components/DualTableComponent.html":{},"components/MoonTableComponent.html":{},"components/ScatterTableComponent.html":{},"components/SpectrumTableComponent.html":{},"components/VenusTableComponent.html":{}}}],["table.component.ts:20",{"_index":1119,"title":{},"body":{"components/CurveTableComponent.html":{},"components/MoonTableComponent.html":{},"components/ScatterTableComponent.html":{},"components/SpectrumTableComponent.html":{}}}],["table.component.ts:21",{"_index":2485,"title":{},"body":{"components/ScatterTableComponent.html":{}}}],["table.component.ts:22",{"_index":2484,"title":{},"body":{"components/ScatterTableComponent.html":{}}}],["table.component.ts:25",{"_index":1386,"title":{},"body":{"components/DualTableComponent.html":{},"components/SpectrumTableComponent.html":{}}}],["table.component.ts:26",{"_index":3094,"title":{},"body":{"components/VenusTableComponent.html":{}}}],["table.component.ts:27",{"_index":1120,"title":{},"body":{"components/CurveTableComponent.html":{},"components/MoonTableComponent.html":{},"components/ScatterTableComponent.html":{}}}],["table.component.ts:34",{"_index":2836,"title":{},"body":{"components/SpectrumTableComponent.html":{}}}],["table.component.ts:36",{"_index":2124,"title":{},"body":{"components/MoonTableComponent.html":{},"components/ScatterTableComponent.html":{}}}],["table.component.ts:37",{"_index":3095,"title":{},"body":{"components/VenusTableComponent.html":{}}}],["table.component.ts:39",{"_index":2837,"title":{},"body":{"components/SpectrumTableComponent.html":{}}}],["table.component.ts:41",{"_index":2125,"title":{},"body":{"components/MoonTableComponent.html":{},"components/ScatterTableComponent.html":{}}}],["table.component.ts:42",{"_index":3096,"title":{},"body":{"components/VenusTableComponent.html":{}}}],["table.component.ts:44",{"_index":1387,"title":{},"body":{"components/DualTableComponent.html":{}}}],["table.component.ts:45",{"_index":1121,"title":{},"body":{"components/CurveTableComponent.html":{},"components/SpectrumTableComponent.html":{}}}],["table.component.ts:47",{"_index":2127,"title":{},"body":{"components/MoonTableComponent.html":{},"components/ScatterTableComponent.html":{}}}],["table.component.ts:48",{"_index":3097,"title":{},"body":{"components/VenusTableComponent.html":{}}}],["table.component.ts:49",{"_index":1389,"title":{},"body":{"components/DualTableComponent.html":{},"components/SpectrumTableComponent.html":{}}}],["table.component.ts:50",{"_index":1125,"title":{},"body":{"components/CurveTableComponent.html":{}}}],["table.component.ts:51",{"_index":2126,"title":{},"body":{"components/MoonTableComponent.html":{},"components/ScatterTableComponent.html":{}}}],["table.component.ts:53",{"_index":2835,"title":{},"body":{"components/SpectrumTableComponent.html":{},"components/VenusTableComponent.html":{}}}],["table.component.ts:55",{"_index":1391,"title":{},"body":{"components/DualTableComponent.html":{},"components/MoonTableComponent.html":{},"components/ScatterTableComponent.html":{}}}],["table.component.ts:56",{"_index":1127,"title":{},"body":{"components/CurveTableComponent.html":{}}}],["table.component.ts:57",{"_index":3093,"title":{},"body":{"components/VenusTableComponent.html":{}}}],["table.component.ts:59",{"_index":1390,"title":{},"body":{"components/DualTableComponent.html":{}}}],["table.component.ts:60",{"_index":1126,"title":{},"body":{"components/CurveTableComponent.html":{}}}],["table.component.ts:63",{"_index":1385,"title":{},"body":{"components/DualTableComponent.html":{}}}],["table.component.ts:67",{"_index":2822,"title":{},"body":{"classes/SpectrumTable.html":{}}}],["table.component.ts:68",{"_index":2821,"title":{},"body":{"classes/SpectrumTable.html":{}}}],["table.component.ts:69",{"_index":1089,"title":{},"body":{"classes/CurveTable.html":{},"classes/MoonTable.html":{},"classes/ScatterTable.html":{}}}],["table.component.ts:70",{"_index":1087,"title":{},"body":{"classes/CurveTable.html":{},"classes/MoonTable.html":{},"classes/ScatterTable.html":{},"classes/VenusTable.html":{}}}],["table.component.ts:71",{"_index":3084,"title":{},"body":{"classes/VenusTable.html":{}}}],["table.component.ts:74",{"_index":2824,"title":{},"body":{"classes/SpectrumTable.html":{}}}],["table.component.ts:76",{"_index":1091,"title":{},"body":{"classes/CurveTable.html":{},"classes/MoonTable.html":{},"classes/ScatterTable.html":{}}}],["table.component.ts:77",{"_index":3086,"title":{},"body":{"classes/VenusTable.html":{}}}],["table.component.ts:78",{"_index":2825,"title":{},"body":{"classes/SpectrumTable.html":{}}}],["table.component.ts:79",{"_index":1363,"title":{},"body":{"classes/DualTable.html":{}}}],["table.component.ts:80",{"_index":1093,"title":{},"body":{"classes/CurveTable.html":{},"classes/DualTable.html":{},"classes/MoonTable.html":{},"classes/ScatterTable.html":{}}}],["table.component.ts:81",{"_index":3087,"title":{},"body":{"classes/VenusTable.html":{}}}],["table.component.ts:82",{"_index":2823,"title":{},"body":{"classes/SpectrumTable.html":{}}}],["table.component.ts:84",{"_index":1090,"title":{},"body":{"classes/CurveTable.html":{},"classes/MoonTable.html":{},"classes/ScatterTable.html":{}}}],["table.component.ts:85",{"_index":3085,"title":{},"body":{"classes/VenusTable.html":{}}}],["table.component.ts:86",{"_index":1365,"title":{},"body":{"classes/DualTable.html":{}}}],["table.component.ts:90",{"_index":1366,"title":{},"body":{"classes/DualTable.html":{}}}],["table.component.ts:94",{"_index":1364,"title":{},"body":{"classes/DualTable.html":{}}}],["table/curve",{"_index":1045,"title":{},"body":{"modules/CurveModule.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"coverage.html":{}}}],["table/dual",{"_index":1280,"title":{},"body":{"modules/DualModule.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"coverage.html":{}}}],["table/moon",{"_index":2035,"title":{},"body":{"modules/MoonModule.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"coverage.html":{}}}],["table/scatter",{"_index":2383,"title":{},"body":{"modules/ScatterModule.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"coverage.html":{}}}],["table/spectrum",{"_index":2738,"title":{},"body":{"modules/SpectrumModule.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"coverage.html":{}}}],["table/venus",{"_index":3002,"title":{},"body":{"modules/VenusModule.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"coverage.html":{}}}],["tableaction",{"_index":2529,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"miscellaneous/typealiases.html":{}}}],["tableaddrow",{"_index":2510,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{}}}],["tabledata",{"_index":3250,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3159,"title":{},"body":{"coverage.html":{}}}],["tableuseractionobs",{"_index":2516,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{}}}],["take",{"_index":3352,"title":{},"body":{"license.html":{}}}],["takes",{"_index":3243,"title":{},"body":{"miscellaneous/functions.html":{}}}],["takeuntil",{"_index":622,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumHighchartComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["takeuntil(this.destroy",{"_index":650,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumHighchartComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["taking",{"_index":3267,"title":{},"body":{"index.html":{}}}],["tangible",{"_index":3766,"title":{},"body":{"license.html":{}}}],["technological",{"_index":3635,"title":{},"body":{"license.html":{}}}],["tells",{"_index":3539,"title":{},"body":{"license.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["term",{"_index":3297,"title":{},"body":{"index.html":{},"license.html":{}}}],["terminal",{"_index":4094,"title":{},"body":{"license.html":{}}}],["terminate",{"_index":3873,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":3894,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":3882,"title":{},"body":{"license.html":{}}}],["termination",{"_index":3870,"title":{},"body":{"license.html":{}}}],["terms",{"_index":3403,"title":{},"body":{"license.html":{}}}],["text",{"_index":669,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveHighChartComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["theme",{"_index":316,"title":{},"body":{"components/AppearanceComponent.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["therefore",{"_index":3387,"title":{},"body":{"license.html":{}}}],["things",{"_index":3378,"title":{},"body":{"license.html":{}}}],["third",{"_index":3661,"title":{},"body":{"license.html":{}}}],["this.adjustscale",{"_index":2306,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["this.amplitudesubject.next(this.service.getamplitude",{"_index":1950,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["this.appearanceservice.getchartbackgroundcolor",{"_index":638,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.appearanceservice.getchartfontcolor",{"_index":636,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.appearanceservice.intialize",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["this.appearanceservice.setcolortheme(defaultappearancesettings.theme",{"_index":293,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["this.appearanceservice.setcolortheme(value",{"_index":308,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["this.appearanceservice.setfontfamily(value",{"_index":310,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["this.appearanceservice.setfontsize(defaultappearancesettings.fontsize",{"_index":295,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["this.appearanceservice.setfontsize(value",{"_index":314,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["this.appearanceservice.setfontstyle(defaultappearancesettings.fontstyle",{"_index":294,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["this.appearanceservice.setfontstyle(value",{"_index":312,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["this.channel",{"_index":2623,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{}}}],["this.chart",{"_index":639,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.chart.generatechartconfig",{"_index":642,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.chart.generatechartoptions",{"_index":647,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.chart.renderchart",{"_index":652,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.chartinfosubject.asobservable",{"_index":1312,"title":{},"body":{"injectables/DualService.html":{},"injectables/MoonService.html":{},"injectables/ScatterService.html":{},"injectables/SpectrumService.html":{},"injectables/VenusService.html":{}}}],["this.chartinfosubject.next(this.dualchartinfo",{"_index":1335,"title":{},"body":{"injectables/DualService.html":{}}}],["this.chartinfosubject.next(this.scatterchartinfo",{"_index":2449,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.chartinfosubject.next(this.spectrumchartinfo",{"_index":2788,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["this.chartinfosubject.next(this.venuschartinfo",{"_index":3055,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.chartobject",{"_index":990,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["this.chartobject.addseries",{"_index":1972,"title":{},"body":{"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["this.chartobject.plotheight",{"_index":2343,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["this.chartobject.plotwidth",{"_index":2342,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["this.chartobject.series[0].update",{"_index":1974,"title":{},"body":{"components/MoonHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["this.chartobject.series[1].update",{"_index":1977,"title":{},"body":{"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{}}}],["this.chartobject.series[2].setdata(this.service.getmodel",{"_index":2316,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["this.chartobject.series[3].setdata([[this.service.getdistance",{"_index":2322,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["this.chartoptions.title",{"_index":1001,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["this.chartoptions.xaxis",{"_index":1978,"title":{},"body":{"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["this.chartoptions.yaxis",{"_index":1980,"title":{},"body":{"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["this.chartservice.saveimagehighchartoffline(this.service.gethighchart",{"_index":910,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/SpectrumComponent.html":{},"components/VenusComponent.html":{}}}],["this.charttitle",{"_index":784,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["this.chartuseractionobs",{"_index":2554,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["this.chartuseractionobs$.emit([{action",{"_index":2557,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["this.colnames",{"_index":1101,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{}}}],["this.colortheme",{"_index":451,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["this.curvecount",{"_index":844,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.curvedatadict",{"_index":804,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.curvedatadict.sort",{"_index":832,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.curvedatadict[row][curveparam.x",{"_index":821,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.curvedatadict[row][curveparam.y1",{"_index":824,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.curvedatadict[row][curveparam.y2",{"_index":826,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.curvedatadict[row][curveparam.y3",{"_index":828,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.curvedatadict[row][curveparam.y4",{"_index":830,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.datadict",{"_index":1165,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["this.datadict.filter",{"_index":2614,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{}}}],["this.datadict.filter((entry",{"_index":1216,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["this.datadict.slice(0",{"_index":1218,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["this.datakeys",{"_index":1433,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["this.datalabel",{"_index":1221,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["this.datalabel.join",{"_index":1227,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["this.datalabel[0",{"_index":1225,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["this.datalabel[1",{"_index":1226,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["this.datalabels",{"_index":787,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.datalabels.join",{"_index":788,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.dataservice.addrow(index",{"_index":1114,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["this.dataservice.data$.pipe",{"_index":1105,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["this.dataservice.datakeys$.pipe",{"_index":1107,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["this.dataservice.getdata",{"_index":1104,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["this.dataservice.getdatalabelarray",{"_index":1102,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["this.dataservice.removerow(index",{"_index":1112,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["this.dataservice.setdata(this.table.getdata",{"_index":1110,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["this.dataset",{"_index":1103,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["this.datasubject",{"_index":1452,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["this.datasubject.asobservable",{"_index":1317,"title":{},"body":{"injectables/DualService.html":{},"interfaces/HeaderRequirement.html":{},"injectables/MoonService.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"injectables/ScatterService.html":{},"injectables/SpectrumService.html":{},"injectables/VenusService.html":{}}}],["this.datasubject.next(this.dualdata",{"_index":1337,"title":{},"body":{"injectables/DualService.html":{}}}],["this.datasubject.next(this.getdata",{"_index":3059,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.datasubject.next(this.scatterdata",{"_index":2453,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.datasubject.next(this.spectrumdata",{"_index":2790,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["this.datasubject.next(this.venusdata.getdata",{"_index":3064,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.defaultchartinfo",{"_index":861,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.defaultdata",{"_index":860,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.defaultinterface",{"_index":862,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.defaultvalue",{"_index":1723,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["this.destroy$.complete",{"_index":656,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumHighchartComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["this.destroy$.next",{"_index":1370,"title":{},"body":{"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/MoonFormComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SliderUtil.html":{},"components/SpectrumComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["this.destroy$.next(null",{"_index":655,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualHighchartComponent.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["this.dialog.open(honorcodepopupcomponent",{"_index":1667,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["this.diameter",{"_index":2248,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["this.diametersubject.next(this.service.getdiameter",{"_index":2281,"title":{},"body":{"components/ScatterFormComponent.html":{}}}],["this.distance",{"_index":2246,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["this.distancesubject.next(this.service.getdistance",{"_index":2280,"title":{},"body":{"components/ScatterFormComponent.html":{}}}],["this.dualchartinfo.getcharttitle",{"_index":1327,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualchartinfo.getdatalabel",{"_index":1328,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualchartinfo.getdatalabelarray",{"_index":1329,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualchartinfo.getstorageobject",{"_index":1330,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualchartinfo.getxaxislabel",{"_index":1331,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualchartinfo.getyaxislabel",{"_index":1332,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualchartinfo.setcharttitle(title",{"_index":1333,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualchartinfo.setdatalabel(data",{"_index":1336,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualchartinfo.setstorageobject(dualchartinfo.getdefaultchartinfo",{"_index":1341,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualchartinfo.setstorageobject(storageobject",{"_index":1338,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualchartinfo.setstorageobject(this.dualstorage.getchartinfo",{"_index":1326,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualchartinfo.setxaxislabel(xaxis",{"_index":1339,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualchartinfo.setyaxislabel(yaxis",{"_index":1340,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualdata.addrow(index",{"_index":1342,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualdata.getdata",{"_index":1344,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualdata.getdataarray",{"_index":1345,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualdata.removerow(index",{"_index":1346,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualdata.setdata(data",{"_index":1347,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualdata.setdata(dualdata.getdefaultdata",{"_index":1348,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualdata.setdata(this.dualstorage.getdata",{"_index":1325,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualstorage.savechartinfo(this.dualchartinfo.getstorageobject",{"_index":1334,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualstorage.savedata(this.dualdata.getdata",{"_index":1343,"title":{},"body":{"injectables/DualService.html":{}}}],["this.errorsubject",{"_index":1451,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["this.errorsubject.asobservable",{"_index":1424,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["this.errorsubject.next(myfileparsererrors.header",{"_index":1443,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["this.fileparser.data$.pipe",{"_index":2673,"title":{},"body":{"components/SpectrumComponent.html":{}}}],["this.fileparser.error$.pipe",{"_index":2671,"title":{},"body":{"components/SpectrumComponent.html":{}}}],["this.fileparser.readfile($event",{"_index":2686,"title":{},"body":{"components/SpectrumComponent.html":{}}}],["this.fileupload$.emit(($event.target",{"_index":2533,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{}}}],["this.font",{"_index":467,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["this.fontsize",{"_index":462,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["this.fontstyle",{"_index":457,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["this.form",{"_index":1610,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["this.form.setvalue(curveinterface.getcurvecount",{"_index":1820,"title":{},"body":{"components/LineFormComponent.html":{}}}],["this.form.setvalue(this.service.getchannel",{"_index":2702,"title":{},"body":{"components/SpectrumFormComponent.html":{}}}],["this.form.setvalue(this.service.getcurvecount",{"_index":1812,"title":{},"body":{"components/LineFormComponent.html":{}}}],["this.form.valid",{"_index":1613,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["this.formbuilder.group",{"_index":1611,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["this.formcontrol",{"_index":1722,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["this.formcontrol.haserror('max",{"_index":1732,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["this.formcontrol.haserror('min",{"_index":1729,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["this.formcontrol.setvalue(this.maxvalue",{"_index":1733,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["this.formcontrol.setvalue(this.minvalue",{"_index":1731,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["this.formcontrol.setvalue(value",{"_index":1740,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["this.formcontrol.statuschanges.pipe",{"_index":1726,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["this.formcontrol.valuechanges.pipe",{"_index":1734,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["this.formgroup",{"_index":300,"title":{},"body":{"components/AppearanceComponent.html":{},"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["this.formgroup.controls['charttitle'].valuechanges.pipe",{"_index":728,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["this.formgroup.controls['datalabel'].valuechanges.pipe",{"_index":732,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["this.formgroup.controls['xaxislabel'].valuechanges.pipe",{"_index":735,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["this.formgroup.controls['yaxislabel'].valuechanges.pipe",{"_index":738,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["this.formgroup.get(\"colortheme\")?.valuechanges.subscribe(value",{"_index":307,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["this.formgroup.get(\"fontfamily\")?.valuechanges.subscribe(value",{"_index":309,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["this.formgroup.get(\"fontsize\")?.valuechanges.subscribe(value",{"_index":313,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["this.formgroup.get(\"fontstyle\")?.valuechanges.subscribe(value",{"_index":311,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["this.generatecurvechartconfig",{"_index":657,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.generatefilename(charttype",{"_index":1581,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["this.generatesignature(signature",{"_index":1584,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["this.getcolortheme",{"_index":402,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.getdata(filetext",{"_index":1507,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["this.getdiameter",{"_index":2253,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["this.getdistance",{"_index":2252,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["this.getfieldsindices(filetext",{"_index":1505,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["this.getfontfamilyclassname(fontfamily",{"_index":410,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.getfontfamilyclassname(this.getfontfamily",{"_index":409,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.getfontsizeclassname(fontsize",{"_index":399,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.getfontsizeclassname(this.getfontsize",{"_index":397,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.getfontstyleclassname(fontstyle",{"_index":406,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.getfontstyleclassname(this.getfontstyle",{"_index":405,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.getformgroup(appearanceservice.getcolortheme",{"_index":289,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["this.getformgroup(defaultappearancesettings.theme",{"_index":296,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["this.getheaders(filetext",{"_index":1502,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["this.gettable().getsourcedata",{"_index":1117,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["this.gettable().render",{"_index":1116,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["this.headerrequirements",{"_index":1432,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["this.headersubject",{"_index":1453,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["this.headersubject.asobservable",{"_index":1425,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["this.headersubject.next(headers",{"_index":1444,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["this.highchart",{"_index":1349,"title":{},"body":{"injectables/DualService.html":{},"injectables/ScatterService.html":{},"injectables/SpectrumService.html":{},"injectables/VenusService.html":{}}}],["this.honorcodeservice.honored().subscribe((name",{"_index":909,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/SpectrumComponent.html":{},"components/VenusComponent.html":{}}}],["this.hotregisterer.getinstance(this.id",{"_index":1115,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["this.id",{"_index":634,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["this.initchartseries",{"_index":1266,"title":{},"body":{"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{}}}],["this.interfacesubject.asobservable",{"_index":2081,"title":{},"body":{"injectables/MoonService.html":{},"injectables/ScatterService.html":{},"injectables/SpectrumService.html":{}}}],["this.interfacesubject.next(this.spectruminterface.getchannel",{"_index":2799,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["this.interfacesubject.next(updatesource.interface",{"_index":2437,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.interfacesubject.next(updatesource.reset",{"_index":2441,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.ismagnitudeon",{"_index":845,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.limitprecision(this.service.getdata",{"_index":1369,"title":{},"body":{"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["this.limitprecision(venusmodels.geocentric(10.15",{"_index":3044,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.limitprecision(venusmodels.heliocentric(10.15",{"_index":3047,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.linechartdata",{"_index":641,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.linechartoptions",{"_index":646,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.linecolordarkarray[index",{"_index":539,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["this.linecolorlightarray.length",{"_index":536,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["this.linecolorlightarray[index",{"_index":538,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["this.magnitude",{"_index":1813,"title":{},"body":{"components/LineFormComponent.html":{}}}],["this.magslider.checked",{"_index":1821,"title":{},"body":{"components/LineFormComponent.html":{}}}],["this.makerawdata(chartdata",{"_index":689,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.matdialogref.close",{"_index":1612,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["this.matdialogref.close(this.form.value.signature",{"_index":1614,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["this.moonchartinfo.setstorageobject(this.moonstorage.getchartinfo",{"_index":2090,"title":{},"body":{"injectables/MoonService.html":{}}}],["this.moondata.getdataarray().filter((entry",{"_index":2093,"title":{},"body":{"injectables/MoonService.html":{}}}],["this.moondata.setdata(this.moonstorage.getdata",{"_index":2091,"title":{},"body":{"injectables/MoonService.html":{}}}],["this.mooninterface.setstorageobject(this.moonstorage.getinterface",{"_index":2089,"title":{},"body":{"injectables/MoonService.html":{}}}],["this.name",{"_index":1744,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["this.navbar.open",{"_index":1844,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{}}}],["this.numoverride",{"_index":1730,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["this.periodsubject.next(this.service.getperiod",{"_index":1951,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["this.phasesubject.next(this.service.getphase",{"_index":1952,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["this.popupservice.registersavegraphbutton(this.savegraphbutton",{"_index":2555,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["this.popupservice.registersavegraphspinner(this.savegraphspinner",{"_index":2556,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["this.renderer",{"_index":389,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.renderer.addclass(document.body",{"_index":398,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.renderer.removeclass(document.body",{"_index":396,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.reverseyaxis",{"_index":998,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["this.savechartinfo(venuschartinfo.getdefaultchartinfo",{"_index":2920,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["this.savedata(venusdata.getdefaultdata",{"_index":2922,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["this.savegraphbutton",{"_index":1663,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["this.savegraphbutton.disabled",{"_index":1665,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["this.savegraphspinner",{"_index":1664,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["this.scatterchartinfo.getcharttitle",{"_index":2442,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterchartinfo.getdatalabel",{"_index":2445,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterchartinfo.getstorageobject",{"_index":2446,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterchartinfo.getxaxislabel",{"_index":2443,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterchartinfo.getyaxislabel",{"_index":2444,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterchartinfo.setcharttitle(title",{"_index":2447,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterchartinfo.setdatalabel(data",{"_index":2452,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterchartinfo.setstorageobject(scatterchartinfo.getdefaultstorageobject",{"_index":2455,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterchartinfo.setstorageobject(storageobject",{"_index":2454,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterchartinfo.setstorageobject(this.scatterstorage.getchartinfo",{"_index":2429,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterchartinfo.setxaxislabel(xaxis",{"_index":2450,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterchartinfo.setyaxislabel(yaxis",{"_index":2451,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterdata.addrow(index",{"_index":2456,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterdata.getdata",{"_index":2458,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterdata.getdataarray",{"_index":2459,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterdata.removerow(index",{"_index":2460,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterdata.setdata(data",{"_index":2461,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterdata.setdata(this.scatterstorage.getdata",{"_index":2428,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterinterface.getdiameter",{"_index":2431,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterinterface.getdistance",{"_index":2432,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterinterface.getmodel",{"_index":2433,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterinterface.getmodelstorageobject",{"_index":2434,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterinterface.setdiameter(diameter",{"_index":2435,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterinterface.setdistance(distance",{"_index":2438,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterinterface.setmodelstorageobject(scattermodelinterface.getdefaultstorageobject",{"_index":2440,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterinterface.setmodelstorageobject(storageobject",{"_index":2439,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterinterface.setmodelstorageobject(this.scatterstorage.getinterface",{"_index":2430,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterstorage.resetdata",{"_index":2462,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterstorage.savechartinfo(this.scatterchartinfo.getstorageobject",{"_index":2448,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterstorage.savedata(this.scatterdata.getdata",{"_index":2457,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterstorage.saveinterface(this.scatterinterface.getmodelstorageobject",{"_index":2436,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.service.addrow",{"_index":907,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/SpectrumComponent.html":{},"components/VenusComponent.html":{}}}],["this.service.addrow(index",{"_index":1373,"title":{},"body":{"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["this.service.chartinfo$.pipe",{"_index":653,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveHighChartComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["this.service.data$.pipe",{"_index":649,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SpectrumHighchartComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["this.service.datakeys$.pipe",{"_index":999,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["this.service.getchannel",{"_index":2721,"title":{},"body":{"components/SpectrumHighchartComponent.html":{}}}],["this.service.getchartinfoobject",{"_index":644,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.service.getcharttitle",{"_index":1002,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["this.service.getdata",{"_index":1368,"title":{},"body":{"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["this.service.getdataarray",{"_index":1270,"title":{},"body":{"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["this.service.getdataarray().filter(d",{"_index":2323,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["this.service.getdataarray()[0",{"_index":2719,"title":{},"body":{"components/SpectrumHighchartComponent.html":{}}}],["this.service.getdataarray()[1",{"_index":2722,"title":{},"body":{"components/SpectrumHighchartComponent.html":{}}}],["this.service.getdatalabel",{"_index":1973,"title":{},"body":{"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["this.service.getdatalabelarray",{"_index":1269,"title":{},"body":{"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{}}}],["this.service.getdataobject",{"_index":643,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.service.getdistance",{"_index":2318,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["this.service.getgeocentricmodeldatalower",{"_index":2979,"title":{},"body":{"components/VenusHighchartComponent.html":{}}}],["this.service.getgeocentricmodeldataupper",{"_index":2977,"title":{},"body":{"components/VenusHighchartComponent.html":{}}}],["this.service.getheliocentricmodeldata",{"_index":2980,"title":{},"body":{"components/VenusHighchartComponent.html":{}}}],["this.service.getinterfaceobject",{"_index":645,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.service.getismagnitudeon",{"_index":1803,"title":{},"body":{"components/LineFormComponent.html":{}}}],["this.service.getmodel",{"_index":2314,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["this.service.getmoonmodeldata",{"_index":1976,"title":{},"body":{"components/MoonHighchartComponent.html":{}}}],["this.service.getxaxislabel",{"_index":1979,"title":{},"body":{"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["this.service.getyaxislabel",{"_index":1981,"title":{},"body":{"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["this.service.interface$.pipe",{"_index":997,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{}}}],["this.service.interface$.pipe(takeuntil(this.destroy",{"_index":1818,"title":{},"body":{"components/LineFormComponent.html":{}}}],["this.service.removerow(index",{"_index":1372,"title":{},"body":{"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["this.service.resetchartinfo",{"_index":912,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/SpectrumComponent.html":{},"components/VenusComponent.html":{}}}],["this.service.resetdata",{"_index":911,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/SpectrumComponent.html":{},"components/VenusComponent.html":{}}}],["this.service.resetinterface",{"_index":1914,"title":{},"body":{"components/MoonComponent.html":{}}}],["this.service.resetmodel",{"_index":2261,"title":{},"body":{"components/ScatterComponent.html":{}}}],["this.service.setamplitude($event.value",{"_index":1943,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["this.service.setchannel(this.form.value",{"_index":2703,"title":{},"body":{"components/SpectrumFormComponent.html":{}}}],["this.service.setcharttitle(title",{"_index":731,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["this.service.setcurvecount(this.form.value",{"_index":1816,"title":{},"body":{"components/LineFormComponent.html":{}}}],["this.service.setdata(this.table.getdata",{"_index":1371,"title":{},"body":{"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["this.service.setdatalabel(labels",{"_index":734,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["this.service.setdiameter(parsefloat($event.value",{"_index":2285,"title":{},"body":{"components/ScatterFormComponent.html":{}}}],["this.service.setdistance(parsefloat($event.value",{"_index":2283,"title":{},"body":{"components/ScatterFormComponent.html":{}}}],["this.service.sethighchart(this.chartobject",{"_index":992,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["this.service.setismagnitudeon(value",{"_index":1817,"title":{},"body":{"components/LineFormComponent.html":{}}}],["this.service.setperiod($event.value",{"_index":1945,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["this.service.setphase($event.value",{"_index":1947,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["this.service.settilt($event.value",{"_index":1949,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["this.service.setxaxislabel(label",{"_index":737,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["this.service.setyaxislabel(label",{"_index":739,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["this.setchartseries",{"_index":991,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["this.setcharttitle",{"_index":987,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["this.setchartxaxis",{"_index":988,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["this.setchartyaxis",{"_index":989,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["this.setcolortheme(this.getcolortheme",{"_index":392,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.setcross",{"_index":2309,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["this.setdata",{"_index":1268,"title":{},"body":{"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["this.setdata(moondata.getdefaultdata",{"_index":1887,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{}}}],["this.setdata(venusdata.getdefaultdata",{"_index":3070,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.setdatabycell(newvalue",{"_index":814,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.setdatalabel(this.spectruminterface.getchannel",{"_index":2800,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["this.setfontfamily(this.getfontfamily",{"_index":393,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.setfontsize(this.getfontsize",{"_index":394,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.setfontstyle(this.getfontstyle",{"_index":395,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.setmodel",{"_index":1971,"title":{},"body":{"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{}}}],["this.setsun",{"_index":2308,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["this.slider$.pipe",{"_index":1739,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["this.slidersubject.asobservable",{"_index":1713,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["this.sortdatabyx",{"_index":811,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.spectrumchartinfo.getcharttitle",{"_index":2781,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["this.spectrumchartinfo.getdatalabel",{"_index":2782,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["this.spectrumchartinfo.getstorageobject",{"_index":2783,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["this.spectrumchartinfo.getxaxislabel",{"_index":2784,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["this.spectrumchartinfo.getyaxislabel",{"_index":2785,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["this.spectrumchartinfo.setcharttitle(title",{"_index":2786,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["this.spectrumchartinfo.setdatalabel(data",{"_index":2789,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["this.spectrumchartinfo.setdatalabel(this.getchannel",{"_index":2795,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["this.spectrumchartinfo.setstorageobject(spectrumchartinfo.getdefaultstorageobject",{"_index":2794,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["this.spectrumchartinfo.setstorageobject(storageobject",{"_index":2791,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["this.spectrumchartinfo.setstorageobject(this.spectrumstorage.getchartinfo",{"_index":2780,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["this.spectrumchartinfo.setxaxislabel(xaxis",{"_index":2792,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["this.spectrumchartinfo.setyaxislabel(yaxis",{"_index":2793,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["this.spectrumdata.addrow(index",{"_index":2801,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["this.spectrumdata.getdata",{"_index":2803,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["this.spectrumdata.getdataarray",{"_index":2804,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["this.spectrumdata.removerow(index",{"_index":2805,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["this.spectrumdata.setdata(data",{"_index":2806,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["this.spectrumdata.setdata(spectrumdata.getdefaultdata",{"_index":2807,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["this.spectrumdata.setdata(this.spectrumstorage.getdata",{"_index":2778,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["this.spectruminterface.getchannel",{"_index":2796,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["this.spectruminterface.setchannel(channel",{"_index":2797,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["this.spectruminterface.setchannel(this.spectrumstorage.getinterface",{"_index":2779,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["this.spectrumstorage.savechartinfo(this.spectrumchartinfo.getstorageobject",{"_index":2787,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["this.spectrumstorage.savedata(this.spectrumdata.getdata",{"_index":2802,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["this.spectrumstorage.saveinterface(this.spectruminterface.getchannel",{"_index":2798,"title":{},"body":{"injectables/SpectrumService.html":{}}}],["this.storageservice.getcolortheme",{"_index":404,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.storageservice.getfont",{"_index":412,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.storageservice.getfontsize",{"_index":401,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.storageservice.getfontstyle",{"_index":408,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.storageservice.setcolortheme(colortheme",{"_index":403,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.storageservice.setfont(fontfamily",{"_index":411,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.storageservice.setfontsize(fontsize",{"_index":400,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.storageservice.setfontstyle(fontstyle",{"_index":407,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.strategy",{"_index":1429,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["this.strategy.getheaders(filetext",{"_index":1442,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["this.strategy.readfile(file",{"_index":1450,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["this.strategy.validateformat(file",{"_index":1434,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["this.table.rendertable",{"_index":1106,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["this.tableuseractionobs",{"_index":2531,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{}}}],["this.tableuseractionobs$.emit([{action",{"_index":2532,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{}}}],["this.tiltsubject.next(this.service.gettilt",{"_index":1953,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["this.toolsnav.close",{"_index":2865,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["this.toolsnav.open",{"_index":2864,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["this.updatechart",{"_index":994,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["this.updatechartseries",{"_index":996,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["this.updatecross",{"_index":2307,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["this.updatedata",{"_index":1267,"title":{},"body":{"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["this.updateflag",{"_index":1000,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["this.updatemodel",{"_index":1970,"title":{},"body":{"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{}}}],["this.validateformat(file",{"_index":1438,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["this.value$?.pipe",{"_index":1742,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["this.value.emit({key",{"_index":1743,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["this.valuechange(this.formcontrol.value",{"_index":1741,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["this.valuechange(value",{"_index":1738,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["this.venuschartinfo.getcharttitle",{"_index":3048,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.venuschartinfo.getdatalabel",{"_index":3051,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.venuschartinfo.getstorageobject",{"_index":3052,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.venuschartinfo.getxaxislabel",{"_index":3049,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.venuschartinfo.getyaxislabel",{"_index":3050,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.venuschartinfo.setcharttitle(title",{"_index":3053,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.venuschartinfo.setdatalabel(data",{"_index":3058,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.venuschartinfo.setstorageobject(storageobject",{"_index":3060,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.venuschartinfo.setstorageobject(this.venusstorage.getchartinfo",{"_index":3043,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.venuschartinfo.setstorageobject(venuschartinfo.getdefaultchartinfo",{"_index":3061,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.venuschartinfo.setxaxislabel(xaxis",{"_index":3056,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.venuschartinfo.setyaxislabel(yaxis",{"_index":3057,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.venusdata.addrow(index",{"_index":3062,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.venusdata.getdata",{"_index":3065,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.venusdata.getdataarray",{"_index":3066,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.venusdata.removerow(index",{"_index":3067,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.venusdata.setdata(data",{"_index":3068,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.venusdata.setdata(this.venusstorage.getdata",{"_index":3042,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.venusstorage.savechartinfo(this.venuschartinfo.getstorageobject",{"_index":3054,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.venusstorage.savedata(data",{"_index":3069,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.venusstorage.savedata(this.venusdata.getdata",{"_index":3063,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.xaxislabel",{"_index":785,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["this.yaxislabel",{"_index":786,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["those",{"_index":3445,"title":{},"body":{"license.html":{}}}],["though",{"_index":3827,"title":{},"body":{"license.html":{}}}],["threatened",{"_index":3456,"title":{},"body":{"license.html":{}}}],["three",{"_index":780,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["throttletime",{"_index":1719,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["throttletime(25",{"_index":1735,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["through",{"_index":3303,"title":{},"body":{"index.html":{},"license.html":{}}}],["throw",{"_index":846,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["thus",{"_index":3618,"title":{},"body":{"license.html":{}}}],["tilt",{"_index":1905,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"components/MoonFormComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"miscellaneous/enumerations.html":{}}}],["tiltsubject",{"_index":1925,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["time",{"_index":1572,"title":{},"body":{"injectables/HonorCodeChartService.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["title",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"components/MoonHighchartComponent.html":{},"injectables/MoonService.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"components/SpectrumChartFormComponent.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"components/SpectrumHighchartComponent.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["toggle",{"_index":1041,"title":{},"body":{"modules/CurveModule.html":{},"components/LineFormComponent.html":{},"modules/SpectrumModule.html":{}}}],["tool",{"_index":234,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/ToolsNavbarComponent.html":{},"miscellaneous/functions.html":{}}}],["toolbar",{"_index":1853,"title":{},"body":{"components/MenubarComponent.html":{}}}],["toolinterface",{"_index":578,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"interfaces/MyChart.html":{}}}],["tools",{"_index":101,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"index.html":{},"license.html":{}}}],["tools/curve/curve.component",{"_index":203,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["tools/curve/curve.module",{"_index":2857,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["tools/dual/dual.module",{"_index":2862,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["tools/dual/dual/dual.component",{"_index":207,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["tools/moon/moon.module",{"_index":2858,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["tools/moon/moon/moon.component",{"_index":204,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["tools/scatter/scatter.module",{"_index":2861,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["tools/scatter/scatter/scatter.component",{"_index":206,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["tools/shared/honor",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["tools/spectrum/spectrum.module",{"_index":2863,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["tools/spectrum/spectrum/spectrum.component",{"_index":208,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["tools/venus/venus.module",{"_index":2860,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["tools/venus/venus/venus.component",{"_index":205,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["tools_routes",{"_index":210,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["toolsbar",{"_index":1837,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{}}}],["toolsnav",{"_index":2848,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["toolsnavbarcomponent",{"_index":100,"title":{"components/ToolsNavbarComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toolsnavbarmodule",{"_index":155,"title":{"modules/ToolsNavbarModule.html":{}},"body":{"modules/AppModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"modules.html":{},"overview.html":{}}}],["tooltip",{"_index":977,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["top",{"_index":1824,"title":{},"body":{"components/LineFormComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["trade",{"_index":3851,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":3850,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":3852,"title":{},"body":{"license.html":{}}}],["trailing",{"_index":1737,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["transaction",{"_index":3800,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":3528,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":3801,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":3914,"title":{},"body":{"license.html":{}}}],["transforms",{"_index":2267,"title":{},"body":{"classes/ScatterData.html":{}}}],["transient",{"_index":2874,"title":{},"body":{"components/ToolsNavbarComponent.html":{}}}],["transmission",{"_index":3754,"title":{},"body":{"license.html":{}}}],["treated",{"_index":3826,"title":{},"body":{"license.html":{}}}],["treaty",{"_index":3641,"title":{},"body":{"license.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["trim",{"_index":1492,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["true",{"_index":662,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"interfaces/HeaderRequirement.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/MoonHighchartComponent.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"components/ScatterHighchartComponent.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":1814,"title":{},"body":{"components/LineFormComponent.html":{},"dependencies.html":{}}}],["tslib",{"_index":3195,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":3221,"title":{},"body":{"miscellaneous/functions.html":{}}}],["two",{"_index":778,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["txt",{"_index":1456,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"miscellaneous/enumerations.html":{}}}],["type",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"interfaces/HeaderRequirement.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyData.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"interfaces/MyStorage.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"components/SpectrumComponent.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":4125,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":986,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/SliderUtil.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["types/actions",{"_index":2530,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["types/file",{"_index":3174,"title":{},"body":{"dependencies.html":{}}}],["typical",{"_index":3780,"title":{},"body":{"license.html":{}}}],["typing",{"_index":1627,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["ultimate",{"_index":3284,"title":{},"body":{"index.html":{}}}],["unacceptable",{"_index":3442,"title":{},"body":{"license.html":{}}}],["undefined",{"_index":1407,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"classes/SliderUtil.html":{}}}],["under",{"_index":3290,"title":{},"body":{"index.html":{},"license.html":{}}}],["universe",{"_index":3279,"title":{},"body":{"index.html":{}}}],["unless",{"_index":3789,"title":{},"body":{"license.html":{}}}],["unlimited",{"_index":3606,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":3501,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":3629,"title":{},"body":{"license.html":{}}}],["unpacking",{"_index":3822,"title":{},"body":{"license.html":{}}}],["until",{"_index":3881,"title":{},"body":{"license.html":{}}}],["up",{"_index":3277,"title":{},"body":{"index.html":{}}}],["update",{"_index":3248,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updatechart",{"_index":956,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["updatechartseries",{"_index":957,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["updatecross",{"_index":2291,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["updated",{"_index":3252,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updatedata",{"_index":1249,"title":{},"body":{"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["updateflag",{"_index":949,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["updateline",{"_index":3142,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["updateline(tabledata",{"_index":3239,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updatemodel",{"_index":1959,"title":{},"body":{"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{}}}],["updates",{"_index":3244,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["updatesource",{"_index":1939,"title":{},"body":{"components/MoonFormComponent.html":{},"injectables/MoonService.html":{},"components/ScatterFormComponent.html":{},"injectables/ScatterService.html":{},"miscellaneous/enumerations.html":{}}}],["updatesource.interface",{"_index":1954,"title":{},"body":{"components/MoonFormComponent.html":{},"components/ScatterFormComponent.html":{}}}],["upload",{"_index":2535,"title":{},"body":{"components/SimpleDataButtonComponent.html":{}}}],["uploaddata",{"_index":2511,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{}}}],["uploadhandler",{"_index":2655,"title":{},"body":{"components/SpectrumComponent.html":{}}}],["uploadhandler($event",{"_index":2659,"title":{},"body":{"components/SpectrumComponent.html":{}}}],["url(\"https://code.highcharts.com/css/highcharts.css",{"_index":2981,"title":{},"body":{"components/VenusHighchartComponent.html":{}}}],["use",{"_index":235,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["used",{"_index":3470,"title":{},"body":{"license.html":{}}}],["useful",{"_index":4088,"title":{},"body":{"license.html":{}}}],["user",{"_index":3217,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["user's",{"_index":1536,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["users",{"_index":3363,"title":{},"body":{"license.html":{}}}],["uses",{"_index":3783,"title":{},"body":{"license.html":{}}}],["using",{"_index":3752,"title":{},"body":{"license.html":{}}}],["valid",{"_index":1400,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"license.html":{}}}],["validate",{"_index":1399,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["validateformat",{"_index":2139,"title":{},"body":{"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["validateformat(file",{"_index":1402,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["validators",{"_index":287,"title":{},"body":{"components/AppearanceComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/MoonFormComponent.html":{},"classes/SliderUtil.html":{}}}],["validators.max(750",{"_index":1933,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["validators.max(this.maxvalue",{"_index":1725,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["validators.min(1",{"_index":1932,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["validators.min(this.minvalue",{"_index":1724,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["validators.required",{"_index":303,"title":{},"body":{"components/AppearanceComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/MoonFormComponent.html":{},"classes/SliderUtil.html":{}}}],["value",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/DualChartFormComponent.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"interfaces/HeaderRequirement.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterData.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SimpleDataButtonComponent.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.trim",{"_index":1467,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["value[0",{"_index":1003,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["valuechange",{"_index":1679,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["valuechange(value",{"_index":1706,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["values",{"_index":1464,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"components/ScatterHighchartComponent.html":{},"miscellaneous/functions.html":{}}}],["values[fieldsindices[field",{"_index":1471,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["var",{"_index":30,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["variable",{"_index":2867,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"coverage.html":{}}}],["variables",{"_index":4129,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["venus",{"_index":104,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"modules/VenusModule.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["venus'},{'name",{"_index":106,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["venus.component.html",{"_index":2959,"title":{},"body":{"components/VenusComponent.html":{}}}],["venus.component.scss",{"_index":2958,"title":{},"body":{"components/VenusComponent.html":{}}}],["venus.service",{"_index":2962,"title":{},"body":{"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"modules/VenusModule.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["venus.service.util",{"_index":3041,"title":{},"body":{"injectables/VenusService.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["venus/venus.component",{"_index":3001,"title":{},"body":{"modules/VenusModule.html":{}}}],["venus/venus.service",{"_index":2887,"title":{},"body":{"components/VenusChartFormComponent.html":{}}}],["venuschartformcomponent",{"_index":103,"title":{"components/VenusChartFormComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"modules/VenusModule.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["venuschartinfo",{"_index":2888,"title":{"classes/VenusChartInfo.html":{}},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"coverage.html":{}}}],["venuschartinfo.getdefaultchartinfo",{"_index":2921,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["venuschartinfo.getdefaultchartinfo().charttitle",{"_index":2915,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["venuschartinfo.getdefaultchartinfo().datalabel",{"_index":2916,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["venuschartinfo.getdefaultchartinfo().xaxislabel",{"_index":2917,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["venuschartinfo.getdefaultchartinfo().yaxislabel",{"_index":2918,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["venuschartinfostorageobject",{"_index":2898,"title":{"interfaces/VenusChartInfoStorageObject.html":{}},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"coverage.html":{}}}],["venuscomponent",{"_index":105,"title":{"components/VenusComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"modules/VenusModule.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["venusdata",{"_index":2907,"title":{"classes/VenusData.html":{}},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"coverage.html":{}}}],["venusdata.getdefaultdata",{"_index":2908,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["venusdatadict",{"_index":2906,"title":{"interfaces/VenusDataDict.html":{}},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"coverage.html":{}}}],["venushighchartcomponent",{"_index":107,"title":{"components/VenusHighchartComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"modules/VenusModule.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["venusmodels",{"_index":2923,"title":{"classes/VenusModels.html":{}},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"coverage.html":{}}}],["venusmodule",{"_index":2859,"title":{"modules/VenusModule.html":{}},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"modules/VenusModule.html":{},"modules.html":{},"overview.html":{}}}],["venusservice",{"_index":2886,"title":{"injectables/VenusService.html":{}},"body":{"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"modules/VenusModule.html":{},"injectables/VenusService.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["venusstorage",{"_index":2919,"title":{"classes/VenusStorage.html":{}},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"coverage.html":{}}}],["venustable",{"_index":3083,"title":{"classes/VenusTable.html":{}},"body":{"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"coverage.html":{}}}],["venustable(this.id",{"_index":3088,"title":{},"body":{"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["venustablecomponent",{"_index":108,"title":{"components/VenusTableComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"modules/VenusModule.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["verbatim",{"_index":3342,"title":{},"body":{"license.html":{}}}],["version",{"_index":3327,"title":{},"body":{"license.html":{},"properties.html":{}}}],["versions",{"_index":3359,"title":{},"body":{"license.html":{}}}],["versus",{"_index":2945,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["very",{"_index":2336,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["view",{"_index":3314,"title":{},"body":{"index.html":{},"license.html":{}}}],["viewchild",{"_index":1718,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["viewchild(\"input",{"_index":1721,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["viewchild(\"magslider",{"_index":1811,"title":{},"body":{"components/LineFormComponent.html":{}}}],["viewchild(\"savegraphbutton",{"_index":2552,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["viewchild(\"savegraphspinner",{"_index":2553,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["viewchild('input",{"_index":1711,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["viewchild('magslider",{"_index":1806,"title":{},"body":{"components/LineFormComponent.html":{}}}],["viewchild('savegraphbutton",{"_index":2549,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{}}}],["viewchild('savegraphspinner",{"_index":2550,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{}}}],["viewchild('toolsnav",{"_index":2853,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["violates",{"_index":3816,"title":{},"body":{"license.html":{}}}],["violation",{"_index":3877,"title":{},"body":{"license.html":{}}}],["visible",{"_index":2720,"title":{},"body":{"components/SpectrumHighchartComponent.html":{},"license.html":{}}}],["void",{"_index":268,"title":{},"body":{"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"interfaces/HeaderRequirement.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyData.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/SpectrumChartFormComponent.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"components/SpectrumComponent.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"license.html":{}}}],["volume",{"_index":3697,"title":{},"body":{"license.html":{}}}],["w",{"_index":4098,"title":{},"body":{"license.html":{}}}],["waive",{"_index":3650,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":4071,"title":{},"body":{"license.html":{}}}],["want",{"_index":3375,"title":{},"body":{"license.html":{}}}],["warranties",{"_index":3540,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":3414,"title":{},"body":{"license.html":{}}}],["wavelength",{"_index":2603,"title":{},"body":{"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"classes/SpectrumTable.html":{},"components/SpectrumTableComponent.html":{},"index.html":{}}}],["way",{"_index":3366,"title":{},"body":{"license.html":{}}}],["ways",{"_index":3710,"title":{},"body":{"license.html":{}}}],["weather",{"_index":1446,"title":{},"body":{"interfaces/HeaderRequirement.html":{},"classes/MyFileParser.html":{},"classes/MyFileParserDefault.html":{},"interfaces/MyFileParserStrategy.html":{},"classes/MyFileParserTXT.html":{}}}],["webstorage",{"_index":3187,"title":{},"body":{"dependencies.html":{}}}],["welcome",{"_index":4099,"title":{},"body":{"license.html":{}}}],["well",{"_index":3520,"title":{},"body":{"license.html":{}}}],["whatever",{"_index":3919,"title":{},"body":{"license.html":{}}}],["whether",{"_index":3394,"title":{},"body":{"license.html":{}}}],["white",{"_index":2351,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["whole",{"_index":3563,"title":{},"body":{"license.html":{}}}],["whose",{"_index":3762,"title":{},"body":{"license.html":{}}}],["widely",{"_index":3557,"title":{},"body":{"license.html":{}}}],["width",{"_index":332,"title":{},"body":{"components/AppearanceComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumComponent.html":{},"components/SpectrumFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/SpectrumTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["window",{"_index":1591,"title":{},"body":{"components/HonorCodePopupComponent.html":{},"license.html":{}}}],["wipo",{"_index":3640,"title":{},"body":{"license.html":{}}}],["wish",{"_index":3373,"title":{},"body":{"license.html":{}}}],["within",{"_index":3862,"title":{},"body":{"license.html":{}}}],["without",{"_index":3504,"title":{},"body":{"license.html":{}}}],["wl",{"_index":2682,"title":{},"body":{"components/SpectrumComponent.html":{}}}],["work",{"_index":2952,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"license.html":{}}}],["work's",{"_index":3582,"title":{},"body":{"license.html":{}}}],["working",{"_index":3558,"title":{},"body":{"license.html":{}}}],["works",{"_index":25,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"license.html":{}}}],["worldwide",{"_index":3950,"title":{},"body":{"license.html":{}}}],["writing",{"_index":4034,"title":{},"body":{"license.html":{}}}],["written",{"_index":3719,"title":{},"body":{"license.html":{}}}],["x",{"_index":668,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"components/SpectrumChartFormComponent.html":{},"components/SpectrumHighchartComponent.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["x\"].concat(this.datalabels",{"_index":789,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["x1",{"_index":1162,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{}}}],["x1:0",{"_index":1167,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["x1:1",{"_index":1170,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["x1:2",{"_index":1173,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["x1:3",{"_index":1176,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["x1:4",{"_index":1179,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["x1:5",{"_index":1183,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["x1:6",{"_index":1186,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["x1:7",{"_index":1189,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["x1:8",{"_index":1191,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["x1:9",{"_index":1194,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["x1:null",{"_index":1198,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["x2",{"_index":1163,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{}}}],["xaxis",{"_index":567,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/DualChartInfo.html":{},"injectables/DualService.html":{},"classes/MoonChartInfo.html":{},"injectables/MoonService.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["xaxislabel",{"_index":724,"title":{},"body":{"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"components/SpectrumChartFormComponent.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["xkey",{"_index":3241,"title":{},"body":{"miscellaneous/functions.html":{}}}],["xx1",{"_index":2666,"title":{},"body":{"components/SpectrumComponent.html":{}}}],["y",{"_index":675,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"components/SpectrumChartFormComponent.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"miscellaneous/functions.html":{}}}],["y1",{"_index":772,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["y1:1",{"_index":1180,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y1:16",{"_index":1171,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y1:25",{"_index":1168,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y1:36",{"_index":1195,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y1:4",{"_index":1177,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y1:9",{"_index":1174,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y1:null",{"_index":1199,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y2",{"_index":773,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["y2:10",{"_index":1169,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y2:14.1421356237309",{"_index":1172,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y2:17.3205080756887",{"_index":1175,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y2:20",{"_index":1178,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y2:22.3606797749978",{"_index":1182,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y2:24.4948974278317",{"_index":1185,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y2:26.4575131106459",{"_index":1188,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y2:28.2842712474619",{"_index":1190,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y2:30",{"_index":1193,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y2:31.6227766016837",{"_index":1197,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y2:33.166247903554",{"_index":1201,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y2:34.6410161513775",{"_index":1203,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y2:36.0555127546398",{"_index":1205,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y2:37.4165738677394",{"_index":1207,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y2:38.7298334620741",{"_index":1209,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y2:40",{"_index":1211,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y2:41.2310562561766",{"_index":1213,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y3",{"_index":774,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"miscellaneous/enumerations.html":{}}}],["y4",{"_index":775,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"miscellaneous/enumerations.html":{}}}],["yaxis",{"_index":570,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/DualChartInfo.html":{},"injectables/DualService.html":{},"classes/MoonChartInfo.html":{},"injectables/MoonService.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"injectables/SpectrumService.html":{},"classes/SpectrumStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["yaxislabel",{"_index":726,"title":{},"body":{"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"components/SpectrumChartFormComponent.html":{},"classes/SpectrumChartInfo.html":{},"interfaces/SpectrumChartInfoStorageObject.html":{},"classes/SpectrumData.html":{},"interfaces/SpectrumDataDict.html":{},"interfaces/SpectrumInterface.html":{},"classes/SpectrumInterfaceImpl.html":{},"classes/SpectrumStorage.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["years",{"_index":3720,"title":{},"body":{"license.html":{}}}],["yellow",{"_index":2350,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["ykey",{"_index":3242,"title":{},"body":{"miscellaneous/functions.html":{}}}],["yourself",{"_index":1624,"title":{},"body":{"components/HonorCodePopupComponent.html":{},"license.html":{}}}],["yy1",{"_index":2667,"title":{},"body":{"components/SpectrumComponent.html":{}}}],["yyyy:mm:dd",{"_index":3237,"title":{},"body":{"miscellaneous/functions.html":{}}}],["z",{"_index":2558,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{}}}],["zone.js",{"_index":3197,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/InterfaceUtilModule.html":{},"modules/MenubarModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules/SettingsModule.html":{},"modules/SimpleDataButtonModule.html":{},"modules/SimpleGraphButtonModule.html":{},"components/SpectrumComponent.html":{},"modules/SpectrumModule.html":{},"modules/ToolsNavbarModule.html":{},"modules/VenusModule.html":{},"overview.html":{}}}],["zooming",{"_index":2717,"title":{},"body":{"components/SpectrumHighchartComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/about/about.component.ts\n\n\n\n    \n        Description\n    \n    \n        The About page component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n\n\n            \n                styleUrls\n                ./about.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component} from '@angular/core';\n\n/**\n * The About page component\n */\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent {\n\n}\n\n    \n\n    \n        about works!\n\n    \n\n    \n                \n                    ./about.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'about works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        App Component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(appearanceService: AppearanceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appearanceService\n                                                  \n                                                        \n                                                                        AppearanceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'skynet-plotting-neo'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n            \n                \n                    Default title of the site\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {AppearanceService} from \"./shared/settings/appearance/service/appearance.service\";\n\n/**\n * App Component\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  /**\n   * Default title of the site\n   */\n  title = 'skynet-plotting-neo';\n\n  constructor(private appearanceService: AppearanceService) {\n    this.appearanceService.intialize();\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppearanceComponent\n\nAppearanceComponent\n\nAppModule -->\n\nAppearanceComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nHonorCodePopupModule\n\nHonorCodePopupModule\n\nAppModule -->\n\nHonorCodePopupModule->AppModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nAppModule -->\n\nSettingsModule->AppModule\n\n\n\n\n\nToolsNavbarModule\n\nToolsNavbarModule\n\nAppModule -->\n\nToolsNavbarModule->AppModule\n\n\n\n\n\nAppearanceService\n\nAppearanceService\n\nAppModule -->\n\nAppearanceService->AppModule\n\n\n\n\n\nAppearanceStorageService\n\nAppearanceStorageService\n\nAppModule -->\n\nAppearanceStorageService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            AppearanceComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            PageNotFoundComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AppearanceService\n                        \n                        \n                            AppearanceStorageService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            HonorCodePopupModule\n                        \n                        \n                            SettingsModule\n                        \n                        \n                            ToolsNavbarModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {ToolsNavbarModule} from './shared/tools-navbar/tools-navbar.component';\nimport {registerAllModules} from 'handsontable/registry';\nimport {HomeComponent} from \"./shared/home/home.component\";\nimport {AboutComponent} from \"./shared/about/about.component\";\nimport {PageNotFoundComponent} from \"./shared/page-not-found/page-not-found.component\";\nimport {HonorCodePopupModule} from \"./tools/shared/honor-code-popup/honor-code-popup.module\";\nimport {SettingsModule} from './shared/settings/settings.component';\nimport {AppearanceComponent} from './shared/settings/appearance/appearance.component';\nimport {MatLegacyInputModule as MatInputModule} from \"@angular/material/legacy-input\";\nimport {MatLegacySelectModule as MatSelectModule} from \"@angular/material/legacy-select\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {AppearanceStorageService} from \"./shared/settings/appearance/service/appearance-storage.service\";\nimport {MatLegacyButtonModule as MatButtonModule} from \"@angular/material/legacy-button\";\nimport {AppearanceService} from \"./shared/settings/appearance/service/appearance.service\";\n\n\nregisterAllModules();\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ToolsNavbarModule,\n    HonorCodePopupModule,\n    SettingsModule,\n    MatInputModule,\n    MatSelectModule,\n    ReactiveFormsModule,\n    MatButtonModule\n  ],\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    AboutComponent,\n    PageNotFoundComponent,\n    AppearanceComponent,\n  ],\n  providers: [AppearanceStorageService, AppearanceService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {CurveComponent} from \"./tools/curve/curve.component\";\nimport {HomeComponent} from \"./shared/home/home.component\";\nimport {AboutComponent} from \"./shared/about/about.component\";\nimport {PageNotFoundComponent} from \"./shared/page-not-found/page-not-found.component\";\nimport {SettingsComponent} from \"./shared/settings/settings.component\";\nimport {AppearanceComponent} from \"./shared/settings/appearance/appearance.component\";\nimport {MoonComponent} from \"./tools/moon/moon/moon.component\";\nimport {VenusComponent} from \"./tools/venus/venus/venus.component\";\nimport {ScatterComponent} from \"./tools/scatter/scatter/scatter.component\";\nimport {DualComponent} from \"./tools/dual/dual/dual.component\";\nimport {SpectrumComponent} from \"./tools/spectrum/spectrum/spectrum.component\";\n\n/**\n * Routes for the site\n */\nconst TOOLS_ROUTES: Routes = [\n  {path: \"home\", component: HomeComponent, data: {title: \"getToolSiteName($localize`:home:Home`)\"}},\n  {path: \"about\", component: AboutComponent, data: {title: \"getToolSiteName($localize`:about:About`)\"}},\n  {path: \"curve\", component: CurveComponent, data: {title: \"getToolSiteName($localize`:curve:Curve`)\"}},\n  {path: \"moon\", component: MoonComponent, data: {title: \"getToolSiteName($localize`:moon:Moon`)\"}},\n  {path: \"venus\", component: VenusComponent, data: {title: \"getToolSiteName($localize`:venus:Venus`)\"}},\n  {path: \"scatter\", component: ScatterComponent, data: {title: \"getToolSiteName($localize`:scatter:Scatter`)\"}},\n  {path: \"spectrum\", component: SpectrumComponent, data: {title: \"getToolSiteName($localize`:spectrum:Spectrum`)\"}},\n  {path: \"dual\", component: DualComponent, data: {title: \"getToolSiteName($localize`:dual:Dual`)\"}},\n  {\n    path: \"settings\", component: SettingsComponent, data: {title: \"getToolSiteName($localize`:settings:Settings`)\"},\n    children: [\n      {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'appearance'\n      },\n      {\n        path: 'appearance',\n        component: AppearanceComponent,\n        data: {title: 'Appearance Settings'},\n      },]\n  },\n  {path: '', redirectTo: '/home', pathMatch: 'full'},\n  {path: '**', component: PageNotFoundComponent, data: {title: $localize`:page-not-found:Page Not Found`}}\n]\n\n/**\n * Generate name of the site based on the graphing tool in use.\n * @param tool the graphing tool in use\n * @returns\n */\nfunction getToolSiteName(tool: string): string {\n  return $localize`:site-name:Skynet Plotting Neo` + tool;\n}\n\n@NgModule({\n  imports: [RouterModule.forRoot(TOOLS_ROUTES)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppearanceComponent.html":{"url":"components/AppearanceComponent.html","title":"component - AppearanceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppearanceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/settings/appearance/appearance.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-appearance\n            \n\n\n\n            \n                styleUrls\n                ./appearance.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./appearance.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                ColorThemesList\n                            \n                            \n                                    Protected\n                                    Readonly\n                                FontList\n                            \n                            \n                                    Protected\n                                    Readonly\n                                FontSizesList\n                            \n                            \n                                    Protected\n                                    Readonly\n                                FontStylesList\n                            \n                            \n                                    Protected\n                                formGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getFormGroup\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                resetDefault\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(appearanceService: AppearanceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/settings/appearance/appearance.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appearanceService\n                                                  \n                                                        \n                                                                        AppearanceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getFormGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormGroup(colorTheme: string, fontFamily: string, fontStyle: string, fontSize: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/appearance.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    colorTheme\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fontFamily\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fontStyle\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fontSize\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/appearance.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        resetDefault\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetDefault()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/appearance.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        ColorThemesList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MyColorTheme[]\n\n                    \n                \n                \n                    \n                        Default value : ColorThemeSettings.getThemeLists()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/appearance.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        FontList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MyFontFamily[]\n\n                    \n                \n                \n                    \n                        Default value : ColorThemeSettings.getFontFamilyLists()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/appearance.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        FontSizesList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MyFontSize[]\n\n                    \n                \n                \n                    \n                        Default value : ColorThemeSettings.getFontSizeLists()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/appearance.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        FontStylesList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MyFontStyle[]\n\n                    \n                \n                \n                    \n                        Default value : ColorThemeSettings.getFontStyleLists()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/appearance.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/appearance.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {\n  ColorThemeSettings,\n  DefaultAppearanceSettings,\n  MyColorTheme,\n  MyFontFamily,\n  MyFontSize,\n  MyFontStyle\n} from \"./service/appearance.utils\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {AppearanceService} from \"./service/appearance.service\";\n\n@Component({\n  selector: 'app-appearance',\n  templateUrl: './appearance.component.html',\n  styleUrls: ['./appearance.component.scss']\n})\nexport class AppearanceComponent implements OnInit {\n\n  protected readonly ColorThemesList: MyColorTheme[] = ColorThemeSettings.getThemeLists();\n  protected readonly FontStylesList: MyFontStyle[] = ColorThemeSettings.getFontStyleLists();\n  protected readonly FontSizesList: MyFontSize[] = ColorThemeSettings.getFontSizeLists();\n  protected readonly FontList: MyFontFamily[] = ColorThemeSettings.getFontFamilyLists();\n\n  protected formGroup!: FormGroup;\n\n  constructor(private appearanceService: AppearanceService) {\n    this.getFormGroup(appearanceService.getColorTheme(),\n      appearanceService.getFontFamily(),\n      appearanceService.getFontStyle(),\n      appearanceService.getFontSize());\n  }\n\n  ngOnInit(): void {\n  }\n\n  protected resetDefault(): void {\n    this.appearanceService.setColorTheme(DefaultAppearanceSettings.theme);\n    this.appearanceService.setFontStyle(DefaultAppearanceSettings.fontStyle);\n    this.appearanceService.setFontSize(DefaultAppearanceSettings.fontSize);\n    this.getFormGroup(DefaultAppearanceSettings.theme,\n      DefaultAppearanceSettings.fontFamily,\n      DefaultAppearanceSettings.fontStyle,\n      DefaultAppearanceSettings.fontSize);\n  }\n\n  private getFormGroup(colorTheme: string,\n                       fontFamily: string,\n                       fontStyle: string,\n                       fontSize: string): void {\n    this.formGroup = new FormGroup({\n      colorTheme: new FormControl(colorTheme, [Validators.required]),\n      fontFamily: new FormControl(fontFamily, [Validators.required]),\n      fontStyle: new FormControl(fontStyle, [Validators.required],\n      ),\n      fontSize: new FormControl(fontSize, [Validators.required])\n    });\n    this.formGroup.get(\"colorTheme\")?.valueChanges.subscribe(value => {\n      this.appearanceService.setColorTheme(value);\n    });\n    this.formGroup.get(\"fontFamily\")?.valueChanges.subscribe(value => {\n      this.appearanceService.setFontFamily(value);\n    });\n    this.formGroup.get(\"fontStyle\")?.valueChanges.subscribe(value => {\n      this.appearanceService.setFontStyle(value);\n    });\n    this.formGroup.get(\"fontSize\")?.valueChanges.subscribe(value => {\n      this.appearanceService.setFontSize(value);\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Color Theme\n        \n          {{color.displayName}}\n        \n      \n    \n    \n      \n        Font Family\n        \n          {{family.displayName}}\n        \n      \n    \n    \n      \n        Font Style\n        \n          {{style.displayName}}\n        \n      \n    \n    \n      \n        Font Size\n        \n          {{size.displayName}}\n        \n      \n    \n    \n      Reset Default\n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./appearance.component.scss\n                \n                \n.setting-container {\n  padding: 20px;\n}\n\nmat-form-field {\n  width: 250px;\n}\n\nbutton {\n  width: 250px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Color Theme                  {{color.displayName}}                                    Font Family                  {{family.displayName}}                                    Font Style                  {{style.displayName}}                                    Font Size                  {{size.displayName}}                            Reset Default            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppearanceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppearanceService.html":{"url":"injectables/AppearanceService.html","title":"injectable - AppearanceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppearanceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/settings/appearance/service/appearance.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                renderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getChartBackgroundColor\n                            \n                            \n                                    Private\n                                getChartColorMode\n                            \n                            \n                                    Public\n                                getChartFontColor\n                            \n                            \n                                    Public\n                                getColorTheme\n                            \n                            \n                                    Public\n                                getFontFamily\n                            \n                            \n                                    Private\n                                getFontFamilyClassname\n                            \n                            \n                                    Public\n                                getFontSize\n                            \n                            \n                                    Private\n                                getFontSizeClassname\n                            \n                            \n                                    Public\n                                getFontStyle\n                            \n                            \n                                    Private\n                                getFontStyleClassname\n                            \n                            \n                                    Public\n                                intialize\n                            \n                            \n                                    Public\n                                setColorTheme\n                            \n                            \n                                    Public\n                                setFontFamily\n                            \n                            \n                                    Public\n                                setFontSize\n                            \n                            \n                                    Public\n                                setFontStyle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: AppearanceStorageService, rendererFactory: RendererFactory2)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/settings/appearance/service/appearance.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        AppearanceStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rendererFactory\n                                                  \n                                                        \n                                                                    RendererFactory2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getChartBackgroundColor\n                        \n                    \n                \n            \n            \n                \n                    \n                    getChartBackgroundColor()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getChartColorMode\n                        \n                    \n                \n            \n            \n                \n                    \n                    getChartColorMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ChartColorMode\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getChartFontColor\n                        \n                    \n                \n            \n            \n                \n                    \n                    getChartFontColor()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getColorTheme\n                        \n                    \n                \n            \n            \n                \n                    \n                    getColorTheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ColorThemes\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getFontFamily\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFontFamily()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FontFamily\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getFontFamilyClassname\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFontFamilyClassname(font: FontFamily)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    font\n                                    \n                                                FontFamily\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getFontSize\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFontSize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FontSizes\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getFontSizeClassname\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFontSizeClassname(fontSize: FontSizes)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fontSize\n                                    \n                                                FontSizes\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getFontStyle\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFontStyle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FontStyles\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getFontStyleClassname\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFontStyleClassname(fontStyle: FontStyles)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fontStyle\n                                    \n                                                FontStyles\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        intialize\n                        \n                    \n                \n            \n            \n                \n                    \n                    intialize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setColorTheme\n                        \n                    \n                \n            \n            \n                \n                    \n                    setColorTheme(colorTheme: ColorThemes)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    colorTheme\n                                    \n                                                ColorThemes\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setFontFamily\n                        \n                    \n                \n            \n            \n                \n                    \n                    setFontFamily(fontFamily: FontFamily)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fontFamily\n                                    \n                                                FontFamily\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setFontSize\n                        \n                    \n                \n            \n            \n                \n                    \n                    setFontSize(fontSize: FontSizes)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fontSize\n                                    \n                                                FontSizes\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setFontStyle\n                        \n                    \n                \n            \n            \n                \n                    \n                    setFontStyle(fontStyle: FontStyles)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fontStyle\n                                    \n                                                FontStyles\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        renderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Renderer2\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable, Renderer2, RendererFactory2} from '@angular/core';\nimport {\n  ChartColor,\n  ChartColorMode,\n  ColorThemes,\n  DefaultAppearanceSettings,\n  FontFamily,\n  FontSizes,\n  FontStyles\n} from \"./appearance.utils\";\nimport {AppearanceStorageService} from \"./appearance-storage.service\";\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AppearanceService {\n  private renderer: Renderer2;\n\n  constructor(private storageService: AppearanceStorageService, private rendererFactory: RendererFactory2) {\n    this.renderer = rendererFactory.createRenderer(document.body, null);\n  }\n\n  public intialize(): void {\n    this.setColorTheme(this.getColorTheme());\n    this.setFontFamily(this.getFontFamily());\n    this.setFontSize(this.getFontSize());\n    this.setFontStyle(this.getFontStyle());\n  }\n\n\n  public setFontSize(fontSize: FontSizes): void {\n    this.renderer.removeClass(document.body, this.getFontSizeClassname(this.getFontSize()));\n    this.renderer.addClass(document.body, this.getFontSizeClassname(fontSize));\n    this.storageService.setFontSize(fontSize);\n  }\n\n  public getFontSize(): FontSizes {\n    return this.storageService.getFontSize();\n  }\n\n  public setColorTheme(colorTheme: ColorThemes): void {\n    this.renderer.removeClass(document.body, this.getColorTheme());\n    this.renderer.addClass(document.body, colorTheme);\n    this.storageService.setColorTheme(colorTheme);\n  }\n\n  public getColorTheme(): ColorThemes {\n    return this.storageService.getColorTheme();\n  }\n\n  public setFontStyle(fontStyle: FontStyles): void {\n    this.renderer.removeClass(document.body, this.getFontStyleClassname(this.getFontStyle()));\n    this.renderer.addClass(document.body, this.getFontStyleClassname(fontStyle));\n    this.storageService.setFontStyle(fontStyle);\n  }\n\n  public getFontStyle(): FontStyles {\n    return this.storageService.getFontStyle();\n  }\n\n  public setFontFamily(fontFamily: FontFamily): void {\n    this.renderer.removeClass(document.body, this.getFontFamilyClassname(this.getFontFamily()));\n    this.renderer.addClass(document.body, this.getFontFamilyClassname(fontFamily));\n    this.storageService.setFont(fontFamily);\n  }\n\n  public getFontFamily(): FontFamily {\n    return this.storageService.getFont();\n  }\n\n  public getChartFontColor(): string {\n    return ChartColor.getFontColor(this.getChartColorMode());\n  }\n\n  public getChartBackgroundColor(): string {\n    return ChartColor.getBackgroundColor(this.getChartColorMode());\n  }\n\n  private getFontSizeClassname(fontSize: FontSizes): string {\n    return 'fontSize-' + fontSize;\n  }\n\n  private getFontStyleClassname(fontStyle: FontStyles): string {\n    return 'fontStyle-' + fontStyle;\n  }\n\n  private getFontFamilyClassname(font: FontFamily): string {\n    return 'fontFamily-' + font;\n  }\n\n  private getChartColorMode(): ChartColorMode {\n    if (this.getColorTheme() === ColorThemes.LIGHT)\n      return ChartColorMode.LIGHT;\n    else if (this.getColorTheme() === ColorThemes.DARK)\n      return ChartColorMode.DARK;\n    else\n      return DefaultAppearanceSettings.chartColorMode;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppearanceStorageService.html":{"url":"injectables/AppearanceStorageService.html","title":"injectable - AppearanceStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppearanceStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/settings/appearance/service/appearance-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chartColorMode\n                            \n                            \n                                    Private\n                                    Readonly\n                                chartColorModeKey\n                            \n                            \n                                    Private\n                                colorTheme\n                            \n                            \n                                    Private\n                                    Readonly\n                                colorThemeKey\n                            \n                            \n                                    Private\n                                font\n                            \n                            \n                                    Private\n                                    Readonly\n                                fontKey\n                            \n                            \n                                    Private\n                                fontSize\n                            \n                            \n                                    Private\n                                    Readonly\n                                fontSizeKey\n                            \n                            \n                                    Private\n                                fontStyle\n                            \n                            \n                                    Private\n                                    Readonly\n                                fontStyleKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getColorTheme\n                            \n                            \n                                    Public\n                                getFont\n                            \n                            \n                                    Public\n                                getFontSize\n                            \n                            \n                                    Public\n                                getFontStyle\n                            \n                            \n                                    Public\n                                setColorTheme\n                            \n                            \n                                    Public\n                                setFont\n                            \n                            \n                                    Public\n                                setFontSize\n                            \n                            \n                                    Public\n                                setFontStyle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:24\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getColorTheme\n                        \n                    \n                \n            \n            \n                \n                    \n                    getColorTheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ColorThemes\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getFont\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFont()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FontFamily\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getFontSize\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFontSize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FontSizes\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getFontStyle\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFontStyle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FontStyles\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setColorTheme\n                        \n                    \n                \n            \n            \n                \n                    \n                    setColorTheme(colorTheme: ColorThemes)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    colorTheme\n                                    \n                                                ColorThemes\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setFont\n                        \n                    \n                \n            \n            \n                \n                    \n                    setFont(font: FontFamily)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    font\n                                    \n                                                FontFamily\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setFontSize\n                        \n                    \n                \n            \n            \n                \n                    \n                    setFontSize(fontSize: FontSizes)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fontSize\n                                    \n                                                FontSizes\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setFontStyle\n                        \n                    \n                \n            \n            \n                \n                    \n                    setFontStyle(fontStyle: FontStyles)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fontStyle\n                                    \n                                                FontStyles\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartColorMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChartColorMode\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        chartColorModeKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"chartColorMode\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        colorTheme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ColorThemes\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        colorThemeKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"colorTheme\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        font\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FontFamily\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        fontKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"font\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fontSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FontSizes\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        fontSizeKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"fontSize\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fontStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FontStyles\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        fontStyleKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"fontStyle\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {\n  ChartColorMode,\n  ColorThemes,\n  DefaultAppearanceSettings,\n  FontFamily,\n  FontSizes,\n  FontStyles\n} from \"./appearance.utils\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppearanceStorageService {\n  private colorTheme!: ColorThemes;\n  private fontStyle!: FontStyles;\n  private fontSize!: FontSizes;\n  private font!: FontFamily;\n  private chartColorMode!: ChartColorMode;\n  private readonly colorThemeKey = \"colorTheme\";\n  private readonly fontStyleKey = \"fontStyle\";\n  private readonly fontSizeKey = \"fontSize\";\n  private readonly fontKey = \"font\";\n  private readonly chartColorModeKey = \"chartColorMode\";\n\n  constructor() {\n  }\n\n  public setColorTheme(colorTheme: ColorThemes): void {\n    localStorage.setItem(this.colorThemeKey, JSON.stringify(colorTheme));\n  }\n\n  public getColorTheme(): ColorThemes {\n    if (localStorage.getItem(this.colorThemeKey) !== null) {\n      this.colorTheme = JSON.parse(localStorage.getItem(this.colorThemeKey) as string);\n    } else {\n      this.colorTheme = DefaultAppearanceSettings.theme;\n    }\n    return this.colorTheme;\n  }\n\n  public setFontStyle(fontStyle: FontStyles): void {\n    localStorage.setItem(this.fontStyleKey, JSON.stringify(fontStyle));\n  }\n\n  public getFontStyle(): FontStyles {\n    if (localStorage.getItem(this.fontStyleKey) !== null) {\n      this.fontStyle = JSON.parse(localStorage.getItem(this.fontStyleKey) as string);\n    } else {\n      this.fontStyle = DefaultAppearanceSettings.fontStyle;\n    }\n    return this.fontStyle;\n  }\n\n  public setFontSize(fontSize: FontSizes): void {\n    localStorage.setItem(this.fontSizeKey, JSON.stringify(fontSize));\n  }\n\n  public getFontSize(): FontSizes {\n    if (localStorage.getItem(this.fontSizeKey) !== null) {\n      this.fontSize = JSON.parse(localStorage.getItem(this.fontSizeKey) as string);\n    } else {\n      this.fontSize = DefaultAppearanceSettings.fontSize;\n    }\n    return this.fontSize;\n  }\n\n  public setFont(font: FontFamily): void {\n    localStorage.setItem(this.fontKey, JSON.stringify(font));\n  }\n\n  public getFont(): FontFamily {\n    if (localStorage.getItem(this.fontKey) !== null) {\n      this.font = JSON.parse(localStorage.getItem(this.fontKey) as string);\n    } else {\n      this.font = DefaultAppearanceSettings.fontFamily;\n    }\n    return this.font;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChartColor.html":{"url":"classes/ChartColor.html","title":"class - ChartColor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChartColor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/settings/appearance/service/appearance.utils.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                lineColorDarkArray\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                lineColorLightArray\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getBackgroundColor\n                            \n                            \n                                    Static\n                                getFontColor\n                            \n                            \n                                    Static\n                                getLineColor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        lineColorDarkArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\"red\", \"orange\", \"green\", \"blue\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        lineColorLightArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\"red\", \"orange\", \"green\", \"blue\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:97\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getBackgroundColor\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBackgroundColor(mode: ChartColorMode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mode\n                                    \n                                                ChartColorMode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getFontColor\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFontColor(mode: ChartColorMode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mode\n                                    \n                                                ChartColorMode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getLineColor\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLineColor(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface MyColorTheme {\n  key: string;\n  displayName: string;\n}\n\nexport enum ColorThemes {\n  LIGHT = 'LIGHT_THEME',\n  DARK = 'DARK_THEME',\n  // HIGH_CONTRAST = 'HC_THEME',\n  HIGH_CONTRAST_DARK = 'HC_DARK_THEME'\n}\n\nexport interface MyFontStyle {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontStyles {\n  DEFAULT = 'normal',\n  BOLD = 'bold',\n  EXTRA_BOLD = 'bolder',\n}\n\nexport interface MyFontSize {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontSizes {\n  SMALL = \"small\",\n  DEFAULT = \"default\",\n  LARGE = \"large\",\n  LARGER = \"larger\",\n}\n\nexport enum FontFamily {\n  ROBOTO = 'Roboto',\n  COMIC_NEUE = 'Comic-Neue',\n}\n\nexport interface MyFontFamily {\n  key: string;\n  displayName: string;\n}\n\nexport class ColorThemeSettings {\n  public static getThemeLists(): MyColorTheme[] {\n    return [\n      {key: ColorThemes.LIGHT, displayName: 'Light'},\n      {key: ColorThemes.DARK, displayName: 'Dark'},\n      // {key: ColorThemes.HIGH_CONTRAST, displayName: 'High Contrast'},\n      {key: ColorThemes.HIGH_CONTRAST_DARK, displayName: 'High Contrast Dark'}\n    ];\n  }\n\n  public static getFontStyleLists(): MyFontStyle[] {\n    return [\n      {key: FontStyles.DEFAULT, displayName: 'Default'},\n      {key: FontStyles.BOLD, displayName: 'Bold'},\n      {key: FontStyles.EXTRA_BOLD, displayName: 'Extra Bold'}\n    ]\n  }\n\n  public static getFontSizeLists(): MyFontSize[] {\n    return [\n      {key: FontSizes.SMALL, displayName: 'Small'},\n      {key: FontSizes.DEFAULT, displayName: 'Default'},\n      {key: FontSizes.LARGE, displayName: 'Large'},\n      {key: FontSizes.LARGER, displayName: 'Larger'}\n    ]\n  }\n\n  public static getFontFamilyLists(): MyFontFamily[] {\n    return [\n      {key: FontFamily.ROBOTO, displayName: 'Roboto'},\n      {key: FontFamily.COMIC_NEUE, displayName: 'Comic Neue'}\n    ]\n  }\n}\n\nexport enum ChartColorMode {\n  LIGHT = 'LIGHT',\n  DARK = 'DARK'\n}\n\n\nexport class DefaultAppearanceSettings {\n  public static theme: ColorThemes = ColorThemes.LIGHT;\n  public static fontStyle: FontStyles = FontStyles.DEFAULT;\n  public static fontSize: FontSizes = FontSizes.DEFAULT;\n  public static fontFamily: FontFamily = FontFamily.ROBOTO;\n  public static chartColorMode: ChartColorMode = ChartColorMode.LIGHT;\n}\n\n\nexport class ChartColor {\n  private static readonly lineColorLightArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n  private static readonly lineColorDarkArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n\n  public static getFontColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#2b4162' : '#f5f0f6';\n  }\n\n  public static getBackgroundColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#C3CFD4' : '#325769';\n  }\n\n  public static getLineColor(index: number): string {\n    if (index = this.lineColorLightArray.length)\n      return 'black';\n    else\n      // return mode === ChartColorMode.LIGHT ? this.lineColorLightArray[index] : this.lineColorDarkArray[index];\n      return this.lineColorLightArray[index];\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChartInfo.html":{"url":"interfaces/ChartInfo.html","title":"interface - ChartInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChartInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/shared/charts/chart.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getChartTitle\n                                    \n                                \n                                \n                                    \n                                        getDataLabel\n                                    \n                                \n                                \n                                    \n                                        getStorageObject\n                                    \n                                \n                                \n                                    \n                                        getXAxisLabel\n                                    \n                                \n                                \n                                    \n                                        getYAxisLabel\n                                    \n                                \n                                \n                                    \n                                        setChartTitle\n                                    \n                                \n                                \n                                    \n                                        setDataLabel\n                                    \n                                \n                                \n                                    \n                                        setStorageObject\n                                    \n                                \n                                \n                                    \n                                        setXAxisLabel\n                                    \n                                \n                                \n                                    \n                                        setYAxisLabel\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getChartTitle\n                        \n                    \n                \n            \n            \n                \ngetChartTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/charts/chart.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataLabel\n                        \n                    \n                \n            \n            \n                \ngetDataLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/charts/chart.interface.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStorageObject\n                        \n                    \n                \n            \n            \n                \ngetStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/charts/chart.interface.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getXAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetXAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/charts/chart.interface.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getYAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetYAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/charts/chart.interface.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setChartTitle\n                        \n                    \n                \n            \n            \n                \nsetChartTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/charts/chart.interface.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDataLabel\n                        \n                    \n                \n            \n            \n                \nsetDataLabel(data: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/charts/chart.interface.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStorageObject\n                        \n                    \n                \n            \n            \n                \nsetStorageObject(storageObject: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/charts/chart.interface.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storageObject\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setXAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetXAxisLabel(xAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/charts/chart.interface.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    xAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setYAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetYAxisLabel(yAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/charts/chart.interface.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    yAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {ChartConfiguration, ChartOptions} from \"chart.js\";\nimport {MyData} from \"../data/data.interface\";\n\nexport interface ChartInfo {\n  getChartTitle(): string;\n\n  getXAxisLabel(): string;\n\n  getYAxisLabel(): string;\n\n  getDataLabel(): string;\n\n  getStorageObject(): any;\n\n  setChartTitle(title: string): void;\n\n  setXAxisLabel(xAxis: string): void;\n\n  setYAxisLabel(yAxis: string): void;\n\n  setDataLabel(data: string): void;\n\n  setStorageObject(storageObject: any): void;\n\n}\n\nexport interface MyChart {\n  generateChartConfig(data: MyData, chartInfo: ChartInfo, toolInterface: any): ChartConfiguration['data'];\n\n  generateChartOptions(chartInfo: ChartInfo, toolInterface: any): ChartOptions;\n\n  renderChart(): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ColorThemeSettings.html":{"url":"classes/ColorThemeSettings.html","title":"class - ColorThemeSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ColorThemeSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/settings/appearance/service/appearance.utils.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getFontFamilyLists\n                            \n                            \n                                    Static\n                                getFontSizeLists\n                            \n                            \n                                    Static\n                                getFontStyleLists\n                            \n                            \n                                    Static\n                                getThemeLists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getFontFamilyLists\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFontFamilyLists()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MyFontFamily[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getFontSizeLists\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFontSizeLists()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MyFontSize[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getFontStyleLists\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFontStyleLists()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MyFontStyle[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getThemeLists\n                        \n                    \n                \n            \n            \n                \n                    \n                    getThemeLists()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MyColorTheme[]\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface MyColorTheme {\n  key: string;\n  displayName: string;\n}\n\nexport enum ColorThemes {\n  LIGHT = 'LIGHT_THEME',\n  DARK = 'DARK_THEME',\n  // HIGH_CONTRAST = 'HC_THEME',\n  HIGH_CONTRAST_DARK = 'HC_DARK_THEME'\n}\n\nexport interface MyFontStyle {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontStyles {\n  DEFAULT = 'normal',\n  BOLD = 'bold',\n  EXTRA_BOLD = 'bolder',\n}\n\nexport interface MyFontSize {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontSizes {\n  SMALL = \"small\",\n  DEFAULT = \"default\",\n  LARGE = \"large\",\n  LARGER = \"larger\",\n}\n\nexport enum FontFamily {\n  ROBOTO = 'Roboto',\n  COMIC_NEUE = 'Comic-Neue',\n}\n\nexport interface MyFontFamily {\n  key: string;\n  displayName: string;\n}\n\nexport class ColorThemeSettings {\n  public static getThemeLists(): MyColorTheme[] {\n    return [\n      {key: ColorThemes.LIGHT, displayName: 'Light'},\n      {key: ColorThemes.DARK, displayName: 'Dark'},\n      // {key: ColorThemes.HIGH_CONTRAST, displayName: 'High Contrast'},\n      {key: ColorThemes.HIGH_CONTRAST_DARK, displayName: 'High Contrast Dark'}\n    ];\n  }\n\n  public static getFontStyleLists(): MyFontStyle[] {\n    return [\n      {key: FontStyles.DEFAULT, displayName: 'Default'},\n      {key: FontStyles.BOLD, displayName: 'Bold'},\n      {key: FontStyles.EXTRA_BOLD, displayName: 'Extra Bold'}\n    ]\n  }\n\n  public static getFontSizeLists(): MyFontSize[] {\n    return [\n      {key: FontSizes.SMALL, displayName: 'Small'},\n      {key: FontSizes.DEFAULT, displayName: 'Default'},\n      {key: FontSizes.LARGE, displayName: 'Large'},\n      {key: FontSizes.LARGER, displayName: 'Larger'}\n    ]\n  }\n\n  public static getFontFamilyLists(): MyFontFamily[] {\n    return [\n      {key: FontFamily.ROBOTO, displayName: 'Roboto'},\n      {key: FontFamily.COMIC_NEUE, displayName: 'Comic Neue'}\n    ]\n  }\n}\n\nexport enum ChartColorMode {\n  LIGHT = 'LIGHT',\n  DARK = 'DARK'\n}\n\n\nexport class DefaultAppearanceSettings {\n  public static theme: ColorThemes = ColorThemes.LIGHT;\n  public static fontStyle: FontStyles = FontStyles.DEFAULT;\n  public static fontSize: FontSizes = FontSizes.DEFAULT;\n  public static fontFamily: FontFamily = FontFamily.ROBOTO;\n  public static chartColorMode: ChartColorMode = ChartColorMode.LIGHT;\n}\n\n\nexport class ChartColor {\n  private static readonly lineColorLightArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n  private static readonly lineColorDarkArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n\n  public static getFontColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#2b4162' : '#f5f0f6';\n  }\n\n  public static getBackgroundColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#C3CFD4' : '#325769';\n  }\n\n  public static getLineColor(index: number): string {\n    if (index = this.lineColorLightArray.length)\n      return 'black';\n    else\n      // return mode === ChartColorMode.LIGHT ? this.lineColorLightArray[index] : this.lineColorDarkArray[index];\n      return this.lineColorLightArray[index];\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CurveChart.html":{"url":"classes/CurveChart.html","title":"class - CurveChart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CurveChart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/curve/curve-chart/curve-chart.component.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyChart\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                generateChartConfig\n                            \n                            \n                                    Public\n                                generateChartOptions\n                            \n                            \n                                    Private\n                                generateCurveChartConfig\n                            \n                            \n                                    Private\n                                makeRawData\n                            \n                            \n                                    Public\n                                renderChart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:88\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:88\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        generateChartConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateChartConfig(data: MyData, chartInfo: ChartInfo, toolInterface: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                MyData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    chartInfo\n                                    \n                                                ChartInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    toolInterface\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        generateChartOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateChartOptions(chartInfo: ChartInfo, toolInterface: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartInfo\n                                    \n                                                ChartInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    toolInterface\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ChartOptions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generateCurveChartConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCurveChartConfig(chartData: CurveDataDict[], curveCount: number, labels: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartData\n                                    \n                                                CurveDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    curveCount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    labels\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        makeRawData\n                        \n                    \n                \n            \n            \n                \n                    \n                    makeRawData(dataDict: CurveDataDict[], curveCount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dataDict\n                                    \n                                                CurveDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    curveCount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [][]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        renderChart\n                        \n                    \n                \n            \n            \n                \n                    \n                    renderChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {AfterViewInit, Component, OnDestroy} from '@angular/core';\nimport {Chart} from \"chart.js\";\nimport {ChartConfiguration, ChartOptions} from \"chart.js/dist/types\";\nimport {CurveService} from \"../curve.service\";\nimport {ChartInfo, MyChart} from \"../../shared/charts/chart.interface\";\nimport {MyData} from \"../../shared/data/data.interface\";\nimport {CurveChartInfo, CurveCounts, CurveDataDict, CurveInterface} from \"../curve.service.util\";\nimport {AppearanceService} from \"../../../shared/settings/appearance/service/appearance.service\";\nimport {ChartColor} from \"../../../shared/settings/appearance/service/appearance.utils\";\nimport {Subject, takeUntil} from 'rxjs';\n\n/**\n * Chart for the curve graphing tools.\n *\n */\n@Component({\n  selector: 'app-curve-chart',\n  templateUrl: './curve-chart.component.html',\n  styleUrls: ['./curve-chart.component.scss'],\n})\nexport class CurveChartComponent implements AfterViewInit, OnDestroy {\n  /**\n   * Chart.js object id\n   */\n  id!: string;\n  /**\n   * Custom Chart object\n   */\n  chart!: CurveChart;\n  /**\n   * Chart.js object data configuration\n   */\n  lineChartData!: ChartConfiguration['data'];\n  /**\n   * Chart.js object options configuration\n   */\n  lineChartOptions!: ChartOptions;\n  private destroy$: Subject = new Subject();\n\n  constructor(private service: CurveService, private appearanceService: AppearanceService) {\n    this.id = \"curve-chart\";\n    Chart.defaults.color = this.appearanceService.getChartFontColor();\n    Chart.defaults.borderColor = this.appearanceService.getChartBackgroundColor();\n    this.chart = new CurveChart(this.id);\n    this.lineChartData = this.chart.generateChartConfig(\n      this.service.getDataObject(),\n      this.service.getChartInfoObject(),\n      this.service.getInterfaceObject());\n    this.lineChartOptions = this.chart.generateChartOptions(\n      this.service.getChartInfoObject(),\n      this.service.getInterfaceObject()\n    );\n  }\n\n\n  ngAfterViewInit(): void {\n    this.service.data$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      () => {\n        this.lineChartData = this.chart.generateChartConfig(\n          this.service.getDataObject(),\n          this.service.getChartInfoObject(),\n          this.service.getInterfaceObject());\n        this.chart.renderChart();\n      }\n    )\n    this.service.chartInfo$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      () => {\n        this.lineChartOptions = this.chart.generateChartOptions(\n          this.service.getChartInfoObject(),\n          this.service.getInterfaceObject()\n        );\n        this.chart.renderChart();\n      }\n    )\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n  }\n}\n\nclass CurveChart implements MyChart {\n  private readonly id: string;\n\n  constructor(id: string) {\n    this.id = id;\n  }\n\n  public generateChartConfig(data: MyData, chartInfo: ChartInfo, toolInterface: any): ChartConfiguration['data'] {\n    return this.generateCurveChartConfig(\n      data.getData(),\n      (toolInterface as CurveInterface).getCurveCount(),\n      (chartInfo as CurveChartInfo).getTableLabels());\n  }\n\n  public generateChartOptions(chartInfo: ChartInfo, toolInterface: any): ChartOptions {\n    return {\n      responsive: true,\n      maintainAspectRatio: false,\n      hover: {mode: 'nearest'},\n      scales: {\n        x: {\n          title: {text: (chartInfo as CurveChartInfo).getXAxisLabel(), display: true},\n          type: 'linear',\n          position: 'bottom',\n        },\n        y: {\n          title: {text: (chartInfo as CurveChartInfo).getYAxisLabel(), display: true},\n          reverse: (toolInterface as CurveInterface).getIsMagnitudeOn(),\n        }\n      },\n      plugins: {\n        title: {\n          text: (chartInfo as CurveChartInfo).getChartTitle(),\n          display: true,\n        },\n        colors: {\n          forceOverride: true,\n        }\n      },\n      animation: {\n        duration: 0,\n      }\n    };\n  }\n\n  public renderChart(): void {\n    Chart.getChart(this.id)?.update('none');\n  }\n\n  private generateCurveChartConfig(chartData: CurveDataDict[], curveCount: number, labels: string[]): ChartConfiguration['data'] {\n    let result: any = {datasets: []};\n    const data = this.makeRawData(chartData, curveCount);\n    for (let i = 0; i = CurveCounts.ONE && data[i].y1 != null)\n        result[0].push({x: data[i].x, y: data[i].y1});\n      if (curveCount >= CurveCounts.TWO && data[i].y2 != null)\n        result[1].push({x: data[i].x, y: data[i].y2});\n      if (curveCount >= CurveCounts.THREE && data[i].y3 != null)\n        result[2].push({x: data[i].x, y: data[i].y3});\n      if (curveCount >= CurveCounts.FOUR && data[i].y4 != null)\n        result[3].push({x: data[i].x, y: data[i].y4});\n    }\n    return result;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CurveChartComponent.html":{"url":"components/CurveChartComponent.html","title":"component - CurveChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CurveChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/curve/curve-chart/curve-chart.component.ts\n\n\n\n    \n        Description\n    \n    \n        Chart for the curve graphing tools.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-curve-chart\n            \n\n\n\n            \n                styleUrls\n                ./curve-chart.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./curve-chart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chart\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                id\n                            \n                            \n                                lineChartData\n                            \n                            \n                                lineChartOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: CurveService, appearanceService: AppearanceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        CurveService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appearanceService\n                                                  \n                                                        \n                                                                        AppearanceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CurveChart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:29\n                        \n                    \n\n            \n                \n                    Custom Chart object\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:25\n                        \n                    \n\n            \n                \n                    Chart.js object id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lineChartData\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:33\n                        \n                    \n\n            \n                \n                    Chart.js object data configuration\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lineChartOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ChartOptions\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:37\n                        \n                    \n\n            \n                \n                    Chart.js object options configuration\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnDestroy} from '@angular/core';\nimport {Chart} from \"chart.js\";\nimport {ChartConfiguration, ChartOptions} from \"chart.js/dist/types\";\nimport {CurveService} from \"../curve.service\";\nimport {ChartInfo, MyChart} from \"../../shared/charts/chart.interface\";\nimport {MyData} from \"../../shared/data/data.interface\";\nimport {CurveChartInfo, CurveCounts, CurveDataDict, CurveInterface} from \"../curve.service.util\";\nimport {AppearanceService} from \"../../../shared/settings/appearance/service/appearance.service\";\nimport {ChartColor} from \"../../../shared/settings/appearance/service/appearance.utils\";\nimport {Subject, takeUntil} from 'rxjs';\n\n/**\n * Chart for the curve graphing tools.\n *\n */\n@Component({\n  selector: 'app-curve-chart',\n  templateUrl: './curve-chart.component.html',\n  styleUrls: ['./curve-chart.component.scss'],\n})\nexport class CurveChartComponent implements AfterViewInit, OnDestroy {\n  /**\n   * Chart.js object id\n   */\n  id!: string;\n  /**\n   * Custom Chart object\n   */\n  chart!: CurveChart;\n  /**\n   * Chart.js object data configuration\n   */\n  lineChartData!: ChartConfiguration['data'];\n  /**\n   * Chart.js object options configuration\n   */\n  lineChartOptions!: ChartOptions;\n  private destroy$: Subject = new Subject();\n\n  constructor(private service: CurveService, private appearanceService: AppearanceService) {\n    this.id = \"curve-chart\";\n    Chart.defaults.color = this.appearanceService.getChartFontColor();\n    Chart.defaults.borderColor = this.appearanceService.getChartBackgroundColor();\n    this.chart = new CurveChart(this.id);\n    this.lineChartData = this.chart.generateChartConfig(\n      this.service.getDataObject(),\n      this.service.getChartInfoObject(),\n      this.service.getInterfaceObject());\n    this.lineChartOptions = this.chart.generateChartOptions(\n      this.service.getChartInfoObject(),\n      this.service.getInterfaceObject()\n    );\n  }\n\n\n  ngAfterViewInit(): void {\n    this.service.data$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      () => {\n        this.lineChartData = this.chart.generateChartConfig(\n          this.service.getDataObject(),\n          this.service.getChartInfoObject(),\n          this.service.getInterfaceObject());\n        this.chart.renderChart();\n      }\n    )\n    this.service.chartInfo$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      () => {\n        this.lineChartOptions = this.chart.generateChartOptions(\n          this.service.getChartInfoObject(),\n          this.service.getInterfaceObject()\n        );\n        this.chart.renderChart();\n      }\n    )\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n  }\n}\n\nclass CurveChart implements MyChart {\n  private readonly id: string;\n\n  constructor(id: string) {\n    this.id = id;\n  }\n\n  public generateChartConfig(data: MyData, chartInfo: ChartInfo, toolInterface: any): ChartConfiguration['data'] {\n    return this.generateCurveChartConfig(\n      data.getData(),\n      (toolInterface as CurveInterface).getCurveCount(),\n      (chartInfo as CurveChartInfo).getTableLabels());\n  }\n\n  public generateChartOptions(chartInfo: ChartInfo, toolInterface: any): ChartOptions {\n    return {\n      responsive: true,\n      maintainAspectRatio: false,\n      hover: {mode: 'nearest'},\n      scales: {\n        x: {\n          title: {text: (chartInfo as CurveChartInfo).getXAxisLabel(), display: true},\n          type: 'linear',\n          position: 'bottom',\n        },\n        y: {\n          title: {text: (chartInfo as CurveChartInfo).getYAxisLabel(), display: true},\n          reverse: (toolInterface as CurveInterface).getIsMagnitudeOn(),\n        }\n      },\n      plugins: {\n        title: {\n          text: (chartInfo as CurveChartInfo).getChartTitle(),\n          display: true,\n        },\n        colors: {\n          forceOverride: true,\n        }\n      },\n      animation: {\n        duration: 0,\n      }\n    };\n  }\n\n  public renderChart(): void {\n    Chart.getChart(this.id)?.update('none');\n  }\n\n  private generateCurveChartConfig(chartData: CurveDataDict[], curveCount: number, labels: string[]): ChartConfiguration['data'] {\n    let result: any = {datasets: []};\n    const data = this.makeRawData(chartData, curveCount);\n    for (let i = 0; i = CurveCounts.ONE && data[i].y1 != null)\n        result[0].push({x: data[i].x, y: data[i].y1});\n      if (curveCount >= CurveCounts.TWO && data[i].y2 != null)\n        result[1].push({x: data[i].x, y: data[i].y2});\n      if (curveCount >= CurveCounts.THREE && data[i].y3 != null)\n        result[2].push({x: data[i].x, y: data[i].y3});\n      if (curveCount >= CurveCounts.FOUR && data[i].y4 != null)\n        result[3].push({x: data[i].x, y: data[i].y4});\n    }\n    return result;\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./curve-chart.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CurveChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CurveChartFormComponent.html":{"url":"components/CurveChartFormComponent.html","title":"component - CurveChartFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CurveChartFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/curve/curve-chart-form/curve-chart-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-curve-chart-form\n            \n\n\n\n            \n                styleUrls\n                ./curve-chart-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./curve-chart-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Public\n                                formGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: CurveService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/curve/curve-chart-form/curve-chart-form.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        CurveService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-chart-form/curve-chart-form.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-chart-form/curve-chart-form.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-chart-form/curve-chart-form.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnDestroy} from '@angular/core';\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {CurveService} from \"../curve.service\";\nimport {debounceTime, Subject, takeUntil} from \"rxjs\";\n\n@Component({\n  selector: 'app-curve-chart-form',\n  templateUrl: './curve-chart-form.component.html',\n  styleUrls: ['./curve-chart-form.component.scss']\n})\nexport class CurveChartFormComponent implements OnDestroy {\n  public formGroup!: FormGroup;\n  private destroy$: Subject = new Subject();\n\n  constructor(private service: CurveService) {\n    this.service.chartInfo$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(info => {\n      this.formGroup = new FormGroup({\n        chartTitle: new FormControl(this.service.getChartTitle()),\n        dataLabel: new FormControl(this.service.getDataLabel()),\n        xAxisLabel: new FormControl(this.service.getXAxisLabel()),\n        yAxisLabel: new FormControl(this.service.getYAxisLabel()),\n      })\n      this.formGroup.controls['chartTitle'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(title => {\n        this.service.setChartTitle(title);\n      });\n      this.formGroup.controls['dataLabel'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(labels => {\n        this.service.setDataLabel(labels);\n      });\n      this.formGroup.controls['xAxisLabel'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(label => {\n        this.service.setXAxisLabel(label);\n      });\n      this.formGroup.controls['yAxisLabel'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(label => {\n        this.service.setYAxisLabel(label);\n      });\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n  }\n\n}\n\n\n    \n\n    \n        \n  \n    \n      \n        Title\n        \n      \n    \n    \n      \n        Data\n        \n      \n    \n  \n  \n    \n      \n        X Axis\n        \n      \n    \n    \n      \n        Y Axis\n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./curve-chart-form.component.scss\n                \n                mat-form-field {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Title                                    Data                                        X Axis                                    Y Axis                    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CurveChartFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CurveChartInfo.html":{"url":"classes/CurveChartInfo.html","title":"class - CurveChartInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CurveChartInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/curve/curve.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ChartInfo\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chartTitle\n                            \n                            \n                                    Private\n                                dataLabels\n                            \n                            \n                                    Private\n                                xAxisLabel\n                            \n                            \n                                    Private\n                                yAxisLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getChartTitle\n                            \n                            \n                                getDataLabel\n                            \n                            \n                                getDataLabelByCurveCount\n                            \n                            \n                                    Static\n                                getDefaultStorageObject\n                            \n                            \n                                getStorageObject\n                            \n                            \n                                getTableLabels\n                            \n                            \n                                getXAxisLabel\n                            \n                            \n                                getYAxisLabel\n                            \n                            \n                                setChartTitle\n                            \n                            \n                                setDataLabel\n                            \n                            \n                                setStorageObject\n                            \n                            \n                                setXAxisLabel\n                            \n                            \n                                setYAxisLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/curve/curve.service.util.ts:39\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.util.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataLabels\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.util.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        xAxisLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.util.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        yAxisLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.util.ts:38\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getChartTitle\n                        \n                    \n                \n            \n            \n                \ngetChartTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataLabel\n                        \n                    \n                \n            \n            \n                \ngetDataLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataLabelByCurveCount\n                        \n                    \n                \n            \n            \n                \ngetDataLabelByCurveCount(curveCount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    curveCount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getDefaultStorageObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         CurveChartInfoStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStorageObject\n                        \n                    \n                \n            \n            \n                \ngetStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         CurveChartInfoStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTableLabels\n                        \n                    \n                \n            \n            \n                \ngetTableLabels()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getXAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetXAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getYAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetYAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setChartTitle\n                        \n                    \n                \n            \n            \n                \nsetChartTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDataLabel\n                        \n                    \n                \n            \n            \n                \nsetDataLabel(dataLabel: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dataLabel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStorageObject\n                        \n                    \n                \n            \n            \n                \nsetStorageObject(storageObject: CurveChartInfoStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storageObject\n                                    \n                                                CurveChartInfoStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setXAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetXAxisLabel(xAxisLabel: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    xAxisLabel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setYAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetYAxisLabel(yAxisLabel: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    yAxisLabel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\n\nexport enum CurveParam {\n  X = 'x',\n  Y1 = 'y1',\n  Y2 = 'y2',\n  Y3 = 'y3',\n  Y4 = 'y4'\n}\n\nexport enum CurveCounts {\n  ONE = 1,\n  TWO = 2,\n  THREE = 3,\n  FOUR = 4\n}\n\nexport interface CurveDataDict {\n  x: number | null;\n  y1: number | null;\n  y2?: number | null;\n  y3?: number | null;\n  y4?: number | null;\n}\n\nexport interface CurveChartInfoStorageObject {\n  chartTitle: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n  dataLabels: string;\n}\n\nexport class CurveChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n  private dataLabels: string[];\n\n  constructor() {\n    this.chartTitle = \"Title\";\n    this.xAxisLabel = \"x\";\n    this.yAxisLabel = \"y\";\n    this.dataLabels = [\"y1\", \"y2\", \"y3\", \"y4\"];\n  }\n\n  static getDefaultStorageObject(): CurveChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n      dataLabels: \"y1, y2, y3, y4\"\n    };\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabels.join(\", \");\n  }\n\n  getTableLabels(): string[] {\n    return [\"x\"].concat(this.dataLabels);\n  }\n\n  getDataLabelByCurveCount(curveCount: number): string {\n    const result = this.dataLabels;\n    return result.slice(0, curveCount).join(\", \");\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(dataLabel: string): void {\n    const dataLabelArray = dataLabel.split(\",\").map((label) => label.trim());\n    for (let i = 0; i = CurveCounts.TWO) {\n        row.y2 = entry.y2;\n      }\n      if (curveCount >= CurveCounts.THREE) {\n        row.y3 = entry.y3;\n      }\n      if (curveCount >= CurveCounts.FOUR) {\n        row.y4 = entry.y4;\n      }\n      result.push(row);\n    }\n    return result;\n  }\n\n  public getDataArray(): any[] {\n    let result: any[] = [[], [], [], []];\n    for (const entry of this.curveDataDict) {\n      result[0].push([entry.x, entry.y1]);\n      result[1].push([entry.x, entry.y2]);\n      result[2].push([entry.x, entry.y3]);\n      result[3].push([entry.x, entry.y4]);\n    }\n    return result;\n  }\n\n  public setData(data: CurveDataDict[]): void {\n    this.curveDataDict = data;\n    // this.sortDataByX();\n  }\n\n\n  addRow(index: number, amount: number) {\n    if (index > 0) {\n      for (let i = 0; i  {\n      this.setDataByCell(newValue, row, col);\n    });\n  }\n\n  private setDataByCell(value: number | null, row: number, col: string): void {\n    switch (col) {\n      case CurveParam.X:\n        this.curveDataDict[row][CurveParam.X] = value;\n        break;\n      case CurveParam.Y1:\n        this.curveDataDict[row][CurveParam.Y1] = value;\n        break;\n      case CurveParam.Y2:\n        this.curveDataDict[row][CurveParam.Y2] = value;\n        break;\n      case CurveParam.Y3:\n        this.curveDataDict[row][CurveParam.Y3] = value;\n        break;\n      case CurveParam.Y4:\n        this.curveDataDict[row][CurveParam.Y4] = value;\n        break;\n    }\n    // this.sortDataByX();\n  }\n\n  // private sortDataByX(): void {\n  //   this.curveDataDict = this.curveDataDict.sort(\n  //     (a, b) => {\n  //       if (a['x'] === null)\n  //         return 1;\n  //       if (b['x'] === null)\n  //         return -1;\n  //       if (a['x']  b['x'])\n  //         return 1;\n  //       else\n  //         return 0;\n  //     }\n  //   );\n  // }\n}\n\n\nexport interface CurveInterface {\n  getCurveCount(): number;\n\n  setCurveCount(curveCount: number): void;\n\n  getIsMagnitudeOn(): boolean;\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void;\n}\n\n\nexport interface CurveInterfaceStorageObject {\n  curveCount: CurveCounts;\n  isMagnitudeOn: boolean;\n}\n\n\nexport class CurveImpl implements CurveInterface {\n  private curveCount: number = CurveCounts.ONE;\n  private isMagnitudeOn: boolean = false;\n\n  public static getDefaultStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: CurveCounts.ONE, isMagnitudeOn: false};\n  }\n\n  getCurveCount(): number {\n    return this.curveCount;\n  }\n\n  getIsMagnitudeOn(): boolean {\n    return this.isMagnitudeOn;\n  }\n\n  setCurveCount(curveCount: number): void {\n    if (curveCount in CurveCounts)\n      this.curveCount = curveCount;\n    else\n      throw new Error(\"Invalid curve count\");\n  }\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void {\n    this.isMagnitudeOn = isMagnitudeOn;\n  }\n\n  public getStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: this.curveCount, isMagnitudeOn: this.isMagnitudeOn};\n  }\n\n  public setStorageObject(curveInterfaceStorageObject: CurveInterfaceStorageObject): void {\n    this.curveCount = curveInterfaceStorageObject.curveCount;\n    this.isMagnitudeOn = curveInterfaceStorageObject.isMagnitudeOn;\n  }\n\n}\n\n\nexport class CurveStorage implements MyStorage {\n  private readonly dataKey: string = \"curve-data\";\n  private readonly interfaceKey: string = \"curve-interface\";\n  private readonly chartInfoKey: string = \"curve-chart-info\";\n  private readonly defaultData: CurveDataDict[]\n  private readonly defaultChartInfo!: CurveChartInfoStorageObject\n  private readonly defaultInterface!: CurveInterfaceStorageObject\n\n  constructor(defaultData: CurveDataDict[], defaultChartInfo: CurveChartInfoStorageObject, defaultInterface: CurveInterfaceStorageObject) {\n    this.defaultData = defaultData;\n    this.defaultChartInfo = defaultChartInfo;\n    this.defaultInterface = defaultInterface;\n  }\n\n  getChartInfo(): CurveChartInfoStorageObject {\n    if (localStorage.getItem(this.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(this.chartInfoKey)!);\n    } else\n      return this.defaultChartInfo;\n  }\n\n  getData(): CurveDataDict[] {\n    if (localStorage.getItem(this.dataKey)) {\n      return JSON.parse(localStorage.getItem(this.dataKey)!);\n    } else\n      return this.defaultData;\n  }\n\n  getInterface(): any {\n    if (localStorage.getItem(this.interfaceKey)) {\n      return JSON.parse(localStorage.getItem(this.interfaceKey)!);\n    } else\n      return this.defaultInterface;\n  }\n\n  saveChartInfo(chartInfoObject: CurveChartInfoStorageObject): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(chartInfoObject));\n  }\n\n  saveData(data: CurveDataDict[]): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: any): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(interfaceInfo));\n  }\n\n  resetChartInfo(): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(this.defaultChartInfo));\n  }\n\n  resetData(): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(this.defaultData));\n  }\n\n  resetInterface(): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(this.defaultInterface));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CurveChartInfoStorageObject.html":{"url":"interfaces/CurveChartInfoStorageObject.html","title":"interface - CurveChartInfoStorageObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CurveChartInfoStorageObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/curve/curve.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            chartTitle\n                                        \n                                \n                                \n                                        \n                                            dataLabels\n                                        \n                                \n                                \n                                        \n                                            xAxisLabel\n                                        \n                                \n                                \n                                        \n                                            yAxisLabel\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chartTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chartTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataLabels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dataLabels:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xAxisLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        xAxisLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yAxisLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        yAxisLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\n\nexport enum CurveParam {\n  X = 'x',\n  Y1 = 'y1',\n  Y2 = 'y2',\n  Y3 = 'y3',\n  Y4 = 'y4'\n}\n\nexport enum CurveCounts {\n  ONE = 1,\n  TWO = 2,\n  THREE = 3,\n  FOUR = 4\n}\n\nexport interface CurveDataDict {\n  x: number | null;\n  y1: number | null;\n  y2?: number | null;\n  y3?: number | null;\n  y4?: number | null;\n}\n\nexport interface CurveChartInfoStorageObject {\n  chartTitle: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n  dataLabels: string;\n}\n\nexport class CurveChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n  private dataLabels: string[];\n\n  constructor() {\n    this.chartTitle = \"Title\";\n    this.xAxisLabel = \"x\";\n    this.yAxisLabel = \"y\";\n    this.dataLabels = [\"y1\", \"y2\", \"y3\", \"y4\"];\n  }\n\n  static getDefaultStorageObject(): CurveChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n      dataLabels: \"y1, y2, y3, y4\"\n    };\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabels.join(\", \");\n  }\n\n  getTableLabels(): string[] {\n    return [\"x\"].concat(this.dataLabels);\n  }\n\n  getDataLabelByCurveCount(curveCount: number): string {\n    const result = this.dataLabels;\n    return result.slice(0, curveCount).join(\", \");\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(dataLabel: string): void {\n    const dataLabelArray = dataLabel.split(\",\").map((label) => label.trim());\n    for (let i = 0; i = CurveCounts.TWO) {\n        row.y2 = entry.y2;\n      }\n      if (curveCount >= CurveCounts.THREE) {\n        row.y3 = entry.y3;\n      }\n      if (curveCount >= CurveCounts.FOUR) {\n        row.y4 = entry.y4;\n      }\n      result.push(row);\n    }\n    return result;\n  }\n\n  public getDataArray(): any[] {\n    let result: any[] = [[], [], [], []];\n    for (const entry of this.curveDataDict) {\n      result[0].push([entry.x, entry.y1]);\n      result[1].push([entry.x, entry.y2]);\n      result[2].push([entry.x, entry.y3]);\n      result[3].push([entry.x, entry.y4]);\n    }\n    return result;\n  }\n\n  public setData(data: CurveDataDict[]): void {\n    this.curveDataDict = data;\n    // this.sortDataByX();\n  }\n\n\n  addRow(index: number, amount: number) {\n    if (index > 0) {\n      for (let i = 0; i  {\n      this.setDataByCell(newValue, row, col);\n    });\n  }\n\n  private setDataByCell(value: number | null, row: number, col: string): void {\n    switch (col) {\n      case CurveParam.X:\n        this.curveDataDict[row][CurveParam.X] = value;\n        break;\n      case CurveParam.Y1:\n        this.curveDataDict[row][CurveParam.Y1] = value;\n        break;\n      case CurveParam.Y2:\n        this.curveDataDict[row][CurveParam.Y2] = value;\n        break;\n      case CurveParam.Y3:\n        this.curveDataDict[row][CurveParam.Y3] = value;\n        break;\n      case CurveParam.Y4:\n        this.curveDataDict[row][CurveParam.Y4] = value;\n        break;\n    }\n    // this.sortDataByX();\n  }\n\n  // private sortDataByX(): void {\n  //   this.curveDataDict = this.curveDataDict.sort(\n  //     (a, b) => {\n  //       if (a['x'] === null)\n  //         return 1;\n  //       if (b['x'] === null)\n  //         return -1;\n  //       if (a['x']  b['x'])\n  //         return 1;\n  //       else\n  //         return 0;\n  //     }\n  //   );\n  // }\n}\n\n\nexport interface CurveInterface {\n  getCurveCount(): number;\n\n  setCurveCount(curveCount: number): void;\n\n  getIsMagnitudeOn(): boolean;\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void;\n}\n\n\nexport interface CurveInterfaceStorageObject {\n  curveCount: CurveCounts;\n  isMagnitudeOn: boolean;\n}\n\n\nexport class CurveImpl implements CurveInterface {\n  private curveCount: number = CurveCounts.ONE;\n  private isMagnitudeOn: boolean = false;\n\n  public static getDefaultStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: CurveCounts.ONE, isMagnitudeOn: false};\n  }\n\n  getCurveCount(): number {\n    return this.curveCount;\n  }\n\n  getIsMagnitudeOn(): boolean {\n    return this.isMagnitudeOn;\n  }\n\n  setCurveCount(curveCount: number): void {\n    if (curveCount in CurveCounts)\n      this.curveCount = curveCount;\n    else\n      throw new Error(\"Invalid curve count\");\n  }\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void {\n    this.isMagnitudeOn = isMagnitudeOn;\n  }\n\n  public getStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: this.curveCount, isMagnitudeOn: this.isMagnitudeOn};\n  }\n\n  public setStorageObject(curveInterfaceStorageObject: CurveInterfaceStorageObject): void {\n    this.curveCount = curveInterfaceStorageObject.curveCount;\n    this.isMagnitudeOn = curveInterfaceStorageObject.isMagnitudeOn;\n  }\n\n}\n\n\nexport class CurveStorage implements MyStorage {\n  private readonly dataKey: string = \"curve-data\";\n  private readonly interfaceKey: string = \"curve-interface\";\n  private readonly chartInfoKey: string = \"curve-chart-info\";\n  private readonly defaultData: CurveDataDict[]\n  private readonly defaultChartInfo!: CurveChartInfoStorageObject\n  private readonly defaultInterface!: CurveInterfaceStorageObject\n\n  constructor(defaultData: CurveDataDict[], defaultChartInfo: CurveChartInfoStorageObject, defaultInterface: CurveInterfaceStorageObject) {\n    this.defaultData = defaultData;\n    this.defaultChartInfo = defaultChartInfo;\n    this.defaultInterface = defaultInterface;\n  }\n\n  getChartInfo(): CurveChartInfoStorageObject {\n    if (localStorage.getItem(this.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(this.chartInfoKey)!);\n    } else\n      return this.defaultChartInfo;\n  }\n\n  getData(): CurveDataDict[] {\n    if (localStorage.getItem(this.dataKey)) {\n      return JSON.parse(localStorage.getItem(this.dataKey)!);\n    } else\n      return this.defaultData;\n  }\n\n  getInterface(): any {\n    if (localStorage.getItem(this.interfaceKey)) {\n      return JSON.parse(localStorage.getItem(this.interfaceKey)!);\n    } else\n      return this.defaultInterface;\n  }\n\n  saveChartInfo(chartInfoObject: CurveChartInfoStorageObject): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(chartInfoObject));\n  }\n\n  saveData(data: CurveDataDict[]): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: any): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(interfaceInfo));\n  }\n\n  resetChartInfo(): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(this.defaultChartInfo));\n  }\n\n  resetData(): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(this.defaultData));\n  }\n\n  resetInterface(): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(this.defaultInterface));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CurveComponent.html":{"url":"components/CurveComponent.html","title":"component - CurveComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CurveComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/curve/curve.component.ts\n\n\n\n    \n        Description\n    \n    \n        Curve Component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-curve\n            \n\n\n\n            \n                styleUrls\n                ./curve.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./curve.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                actionHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: CurveService, honorCodeService: HonorCodePopupService, chartService: HonorCodeChartService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/curve/curve.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        CurveService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        honorCodeService\n                                                  \n                                                        \n                                                                        HonorCodePopupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chartService\n                                                  \n                                                        \n                                                                        HonorCodeChartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        actionHandler\n                        \n                    \n                \n            \n            \n                \nactionHandler(actions: MyAction[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    actions\n                                    \n                                                MyAction[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component,} from '@angular/core';\nimport {MyAction} from \"../shared/types/actions\";\nimport {CurveService} from \"./curve.service\";\nimport {HonorCodePopupService} from \"../shared/honor-code-popup/honor-code-popup.service\";\nimport {HonorCodeChartService} from \"../shared/honor-code-popup/honor-code-chart.service\";\n\n/**\n * Curve Component\n */\n@Component({\n  selector: 'app-curve',\n  templateUrl: './curve.component.html',\n  styleUrls: ['./curve.component.scss'],\n  providers: [],\n})\nexport class CurveComponent {\n  constructor(private service: CurveService,\n              private honorCodeService: HonorCodePopupService,\n              private chartService: HonorCodeChartService) {\n  }\n\n  actionHandler(actions: MyAction[]) {\n    actions.forEach((action) => {\n      if (action.action === \"addRow\") {\n        this.service.addRow(-1, 1);\n      } else if (action.action === \"saveGraph\") {\n        this.honorCodeService.honored().subscribe((name: string) => {\n          this.chartService.saveImageHighChartOffline(this.service.getHighChart(), \"curve\", name);\n        })\n      } else if (action.action === \"resetData\") {\n        this.service.resetData();\n      } else if (action.action === \"resetChartInfo\") {\n        this.service.resetChartInfo();\n      }\n    })\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n  \n    \n      -->\n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./curve.component.scss\n                \n                .container-row {\n  height: 80%;\n  padding: 20px 100px 20px 100px;\n  width: 100%;\n}\n\n.col-4, .col-8 {\n  display: flex;\n  flex-flow: column;\n}\n\n.data-form-row, data-button-row, chart-form-row, chart-button-row {\n  height: fit-content;\n  flex: 0 1 auto;\n}\n\n.data-table-row, .chart-row {\n  flex: 1 1 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                          -->                                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CurveComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CurveData.html":{"url":"classes/CurveData.html","title":"class - CurveData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CurveData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/curve/curve.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyData\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                curveDataDict\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRow\n                            \n                            \n                                    Public\n                                getCurveData\n                            \n                            \n                                    Public\n                                getData\n                            \n                            \n                                    Public\n                                getDataArray\n                            \n                            \n                                    Static\n                                getDefaultData\n                            \n                            \n                                removeRow\n                            \n                            \n                                    Public\n                                setData\n                            \n                            \n                                    Private\n                                setDataByCell\n                            \n                            \n                                setDataByCellOnTableChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/curve/curve.service.util.ts:121\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        curveDataDict\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CurveDataDict[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.util.ts:121\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRow\n                        \n                    \n                \n            \n            \n                \naddRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:182\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCurveData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurveData(curveCount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    curveCount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CurveDataDict[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getDataArray\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDataArray()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getDefaultData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         CurveDataDict[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRow\n                        \n                    \n                \n            \n            \n                \nremoveRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:191\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setData\n                        \n                    \n                \n            \n            \n                \n                    \n                    setData(data: CurveDataDict[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:176\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CurveDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setDataByCell\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDataByCell(value: number | null, row: number, col: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:205\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            number | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    row\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    col\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDataByCellOnTableChange\n                        \n                    \n                \n            \n            \n                \nsetDataByCellOnTableChange(changes: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:199\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\n\nexport enum CurveParam {\n  X = 'x',\n  Y1 = 'y1',\n  Y2 = 'y2',\n  Y3 = 'y3',\n  Y4 = 'y4'\n}\n\nexport enum CurveCounts {\n  ONE = 1,\n  TWO = 2,\n  THREE = 3,\n  FOUR = 4\n}\n\nexport interface CurveDataDict {\n  x: number | null;\n  y1: number | null;\n  y2?: number | null;\n  y3?: number | null;\n  y4?: number | null;\n}\n\nexport interface CurveChartInfoStorageObject {\n  chartTitle: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n  dataLabels: string;\n}\n\nexport class CurveChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n  private dataLabels: string[];\n\n  constructor() {\n    this.chartTitle = \"Title\";\n    this.xAxisLabel = \"x\";\n    this.yAxisLabel = \"y\";\n    this.dataLabels = [\"y1\", \"y2\", \"y3\", \"y4\"];\n  }\n\n  static getDefaultStorageObject(): CurveChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n      dataLabels: \"y1, y2, y3, y4\"\n    };\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabels.join(\", \");\n  }\n\n  getTableLabels(): string[] {\n    return [\"x\"].concat(this.dataLabels);\n  }\n\n  getDataLabelByCurveCount(curveCount: number): string {\n    const result = this.dataLabels;\n    return result.slice(0, curveCount).join(\", \");\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(dataLabel: string): void {\n    const dataLabelArray = dataLabel.split(\",\").map((label) => label.trim());\n    for (let i = 0; i = CurveCounts.TWO) {\n        row.y2 = entry.y2;\n      }\n      if (curveCount >= CurveCounts.THREE) {\n        row.y3 = entry.y3;\n      }\n      if (curveCount >= CurveCounts.FOUR) {\n        row.y4 = entry.y4;\n      }\n      result.push(row);\n    }\n    return result;\n  }\n\n  public getDataArray(): any[] {\n    let result: any[] = [[], [], [], []];\n    for (const entry of this.curveDataDict) {\n      result[0].push([entry.x, entry.y1]);\n      result[1].push([entry.x, entry.y2]);\n      result[2].push([entry.x, entry.y3]);\n      result[3].push([entry.x, entry.y4]);\n    }\n    return result;\n  }\n\n  public setData(data: CurveDataDict[]): void {\n    this.curveDataDict = data;\n    // this.sortDataByX();\n  }\n\n\n  addRow(index: number, amount: number) {\n    if (index > 0) {\n      for (let i = 0; i  {\n      this.setDataByCell(newValue, row, col);\n    });\n  }\n\n  private setDataByCell(value: number | null, row: number, col: string): void {\n    switch (col) {\n      case CurveParam.X:\n        this.curveDataDict[row][CurveParam.X] = value;\n        break;\n      case CurveParam.Y1:\n        this.curveDataDict[row][CurveParam.Y1] = value;\n        break;\n      case CurveParam.Y2:\n        this.curveDataDict[row][CurveParam.Y2] = value;\n        break;\n      case CurveParam.Y3:\n        this.curveDataDict[row][CurveParam.Y3] = value;\n        break;\n      case CurveParam.Y4:\n        this.curveDataDict[row][CurveParam.Y4] = value;\n        break;\n    }\n    // this.sortDataByX();\n  }\n\n  // private sortDataByX(): void {\n  //   this.curveDataDict = this.curveDataDict.sort(\n  //     (a, b) => {\n  //       if (a['x'] === null)\n  //         return 1;\n  //       if (b['x'] === null)\n  //         return -1;\n  //       if (a['x']  b['x'])\n  //         return 1;\n  //       else\n  //         return 0;\n  //     }\n  //   );\n  // }\n}\n\n\nexport interface CurveInterface {\n  getCurveCount(): number;\n\n  setCurveCount(curveCount: number): void;\n\n  getIsMagnitudeOn(): boolean;\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void;\n}\n\n\nexport interface CurveInterfaceStorageObject {\n  curveCount: CurveCounts;\n  isMagnitudeOn: boolean;\n}\n\n\nexport class CurveImpl implements CurveInterface {\n  private curveCount: number = CurveCounts.ONE;\n  private isMagnitudeOn: boolean = false;\n\n  public static getDefaultStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: CurveCounts.ONE, isMagnitudeOn: false};\n  }\n\n  getCurveCount(): number {\n    return this.curveCount;\n  }\n\n  getIsMagnitudeOn(): boolean {\n    return this.isMagnitudeOn;\n  }\n\n  setCurveCount(curveCount: number): void {\n    if (curveCount in CurveCounts)\n      this.curveCount = curveCount;\n    else\n      throw new Error(\"Invalid curve count\");\n  }\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void {\n    this.isMagnitudeOn = isMagnitudeOn;\n  }\n\n  public getStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: this.curveCount, isMagnitudeOn: this.isMagnitudeOn};\n  }\n\n  public setStorageObject(curveInterfaceStorageObject: CurveInterfaceStorageObject): void {\n    this.curveCount = curveInterfaceStorageObject.curveCount;\n    this.isMagnitudeOn = curveInterfaceStorageObject.isMagnitudeOn;\n  }\n\n}\n\n\nexport class CurveStorage implements MyStorage {\n  private readonly dataKey: string = \"curve-data\";\n  private readonly interfaceKey: string = \"curve-interface\";\n  private readonly chartInfoKey: string = \"curve-chart-info\";\n  private readonly defaultData: CurveDataDict[]\n  private readonly defaultChartInfo!: CurveChartInfoStorageObject\n  private readonly defaultInterface!: CurveInterfaceStorageObject\n\n  constructor(defaultData: CurveDataDict[], defaultChartInfo: CurveChartInfoStorageObject, defaultInterface: CurveInterfaceStorageObject) {\n    this.defaultData = defaultData;\n    this.defaultChartInfo = defaultChartInfo;\n    this.defaultInterface = defaultInterface;\n  }\n\n  getChartInfo(): CurveChartInfoStorageObject {\n    if (localStorage.getItem(this.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(this.chartInfoKey)!);\n    } else\n      return this.defaultChartInfo;\n  }\n\n  getData(): CurveDataDict[] {\n    if (localStorage.getItem(this.dataKey)) {\n      return JSON.parse(localStorage.getItem(this.dataKey)!);\n    } else\n      return this.defaultData;\n  }\n\n  getInterface(): any {\n    if (localStorage.getItem(this.interfaceKey)) {\n      return JSON.parse(localStorage.getItem(this.interfaceKey)!);\n    } else\n      return this.defaultInterface;\n  }\n\n  saveChartInfo(chartInfoObject: CurveChartInfoStorageObject): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(chartInfoObject));\n  }\n\n  saveData(data: CurveDataDict[]): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: any): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(interfaceInfo));\n  }\n\n  resetChartInfo(): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(this.defaultChartInfo));\n  }\n\n  resetData(): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(this.defaultData));\n  }\n\n  resetInterface(): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(this.defaultInterface));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CurveDataDict.html":{"url":"interfaces/CurveDataDict.html","title":"interface - CurveDataDict","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CurveDataDict\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/curve/curve.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y1\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            y2\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            y3\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            y4\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y1\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y1:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y2\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y2:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y3\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y3:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y4\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y4:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\n\nexport enum CurveParam {\n  X = 'x',\n  Y1 = 'y1',\n  Y2 = 'y2',\n  Y3 = 'y3',\n  Y4 = 'y4'\n}\n\nexport enum CurveCounts {\n  ONE = 1,\n  TWO = 2,\n  THREE = 3,\n  FOUR = 4\n}\n\nexport interface CurveDataDict {\n  x: number | null;\n  y1: number | null;\n  y2?: number | null;\n  y3?: number | null;\n  y4?: number | null;\n}\n\nexport interface CurveChartInfoStorageObject {\n  chartTitle: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n  dataLabels: string;\n}\n\nexport class CurveChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n  private dataLabels: string[];\n\n  constructor() {\n    this.chartTitle = \"Title\";\n    this.xAxisLabel = \"x\";\n    this.yAxisLabel = \"y\";\n    this.dataLabels = [\"y1\", \"y2\", \"y3\", \"y4\"];\n  }\n\n  static getDefaultStorageObject(): CurveChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n      dataLabels: \"y1, y2, y3, y4\"\n    };\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabels.join(\", \");\n  }\n\n  getTableLabels(): string[] {\n    return [\"x\"].concat(this.dataLabels);\n  }\n\n  getDataLabelByCurveCount(curveCount: number): string {\n    const result = this.dataLabels;\n    return result.slice(0, curveCount).join(\", \");\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(dataLabel: string): void {\n    const dataLabelArray = dataLabel.split(\",\").map((label) => label.trim());\n    for (let i = 0; i = CurveCounts.TWO) {\n        row.y2 = entry.y2;\n      }\n      if (curveCount >= CurveCounts.THREE) {\n        row.y3 = entry.y3;\n      }\n      if (curveCount >= CurveCounts.FOUR) {\n        row.y4 = entry.y4;\n      }\n      result.push(row);\n    }\n    return result;\n  }\n\n  public getDataArray(): any[] {\n    let result: any[] = [[], [], [], []];\n    for (const entry of this.curveDataDict) {\n      result[0].push([entry.x, entry.y1]);\n      result[1].push([entry.x, entry.y2]);\n      result[2].push([entry.x, entry.y3]);\n      result[3].push([entry.x, entry.y4]);\n    }\n    return result;\n  }\n\n  public setData(data: CurveDataDict[]): void {\n    this.curveDataDict = data;\n    // this.sortDataByX();\n  }\n\n\n  addRow(index: number, amount: number) {\n    if (index > 0) {\n      for (let i = 0; i  {\n      this.setDataByCell(newValue, row, col);\n    });\n  }\n\n  private setDataByCell(value: number | null, row: number, col: string): void {\n    switch (col) {\n      case CurveParam.X:\n        this.curveDataDict[row][CurveParam.X] = value;\n        break;\n      case CurveParam.Y1:\n        this.curveDataDict[row][CurveParam.Y1] = value;\n        break;\n      case CurveParam.Y2:\n        this.curveDataDict[row][CurveParam.Y2] = value;\n        break;\n      case CurveParam.Y3:\n        this.curveDataDict[row][CurveParam.Y3] = value;\n        break;\n      case CurveParam.Y4:\n        this.curveDataDict[row][CurveParam.Y4] = value;\n        break;\n    }\n    // this.sortDataByX();\n  }\n\n  // private sortDataByX(): void {\n  //   this.curveDataDict = this.curveDataDict.sort(\n  //     (a, b) => {\n  //       if (a['x'] === null)\n  //         return 1;\n  //       if (b['x'] === null)\n  //         return -1;\n  //       if (a['x']  b['x'])\n  //         return 1;\n  //       else\n  //         return 0;\n  //     }\n  //   );\n  // }\n}\n\n\nexport interface CurveInterface {\n  getCurveCount(): number;\n\n  setCurveCount(curveCount: number): void;\n\n  getIsMagnitudeOn(): boolean;\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void;\n}\n\n\nexport interface CurveInterfaceStorageObject {\n  curveCount: CurveCounts;\n  isMagnitudeOn: boolean;\n}\n\n\nexport class CurveImpl implements CurveInterface {\n  private curveCount: number = CurveCounts.ONE;\n  private isMagnitudeOn: boolean = false;\n\n  public static getDefaultStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: CurveCounts.ONE, isMagnitudeOn: false};\n  }\n\n  getCurveCount(): number {\n    return this.curveCount;\n  }\n\n  getIsMagnitudeOn(): boolean {\n    return this.isMagnitudeOn;\n  }\n\n  setCurveCount(curveCount: number): void {\n    if (curveCount in CurveCounts)\n      this.curveCount = curveCount;\n    else\n      throw new Error(\"Invalid curve count\");\n  }\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void {\n    this.isMagnitudeOn = isMagnitudeOn;\n  }\n\n  public getStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: this.curveCount, isMagnitudeOn: this.isMagnitudeOn};\n  }\n\n  public setStorageObject(curveInterfaceStorageObject: CurveInterfaceStorageObject): void {\n    this.curveCount = curveInterfaceStorageObject.curveCount;\n    this.isMagnitudeOn = curveInterfaceStorageObject.isMagnitudeOn;\n  }\n\n}\n\n\nexport class CurveStorage implements MyStorage {\n  private readonly dataKey: string = \"curve-data\";\n  private readonly interfaceKey: string = \"curve-interface\";\n  private readonly chartInfoKey: string = \"curve-chart-info\";\n  private readonly defaultData: CurveDataDict[]\n  private readonly defaultChartInfo!: CurveChartInfoStorageObject\n  private readonly defaultInterface!: CurveInterfaceStorageObject\n\n  constructor(defaultData: CurveDataDict[], defaultChartInfo: CurveChartInfoStorageObject, defaultInterface: CurveInterfaceStorageObject) {\n    this.defaultData = defaultData;\n    this.defaultChartInfo = defaultChartInfo;\n    this.defaultInterface = defaultInterface;\n  }\n\n  getChartInfo(): CurveChartInfoStorageObject {\n    if (localStorage.getItem(this.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(this.chartInfoKey)!);\n    } else\n      return this.defaultChartInfo;\n  }\n\n  getData(): CurveDataDict[] {\n    if (localStorage.getItem(this.dataKey)) {\n      return JSON.parse(localStorage.getItem(this.dataKey)!);\n    } else\n      return this.defaultData;\n  }\n\n  getInterface(): any {\n    if (localStorage.getItem(this.interfaceKey)) {\n      return JSON.parse(localStorage.getItem(this.interfaceKey)!);\n    } else\n      return this.defaultInterface;\n  }\n\n  saveChartInfo(chartInfoObject: CurveChartInfoStorageObject): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(chartInfoObject));\n  }\n\n  saveData(data: CurveDataDict[]): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: any): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(interfaceInfo));\n  }\n\n  resetChartInfo(): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(this.defaultChartInfo));\n  }\n\n  resetData(): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(this.defaultData));\n  }\n\n  resetInterface(): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(this.defaultInterface));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CurveHighChartComponent.html":{"url":"components/CurveHighChartComponent.html","title":"component - CurveHighChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CurveHighChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/curve/curve-highchart/curve-high-chart.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-curve-highchart\n            \n\n\n\n            \n                styleUrls\n                ./curve-high-chart.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./curve-high-chart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chartConstructor\n                            \n                            \n                                chartObject\n                            \n                            \n                                chartOptions\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                Highcharts\n                            \n                            \n                                updateFlag\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                chartInitialized\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                processData\n                            \n                            \n                                    Private\n                                reverseYAxis\n                            \n                            \n                                    Private\n                                setChartSeries\n                            \n                            \n                                    Private\n                                setChartTitle\n                            \n                            \n                                    Private\n                                setChartXAxis\n                            \n                            \n                                    Private\n                                setChartYAxis\n                            \n                            \n                                    Private\n                                updateChart\n                            \n                            \n                                    Private\n                                updateChartSeries\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: CurveService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        CurveService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        chartInitialized\n                        \n                    \n                \n            \n            \n                \nchartInitialized($event: Highcharts.Chart)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                            Highcharts.Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        processData\n                        \n                    \n                \n            \n            \n                \n                    \n                    processData(data: number[][])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            number[][]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [][]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        reverseYAxis\n                        \n                    \n                \n            \n            \n                \n                    \n                    reverseYAxis()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setChartSeries\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChartSeries()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setChartTitle\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChartTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setChartXAxis\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChartXAxis()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setChartYAxis\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChartYAxis()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateChart\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateChartSeries\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateChartSeries()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chartConstructor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : \"chart\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartObject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Highcharts.Chart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Highcharts.Options\n\n                    \n                \n                \n                    \n                        Default value : {\n    chart: {\n      animation: false,\n      styledMode: true,\n    },\n    legend: {\n      align: 'center',\n    },\n    tooltip: {\n      enabled: true,\n      shared: true,\n    },\n    exporting: {\n      buttons: {\n        contextButton: {\n          enabled: false,\n        }\n      }\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Highcharts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Highcharts\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFlag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnDestroy} from '@angular/core';\nimport * as Highcharts from 'highcharts';\nimport {CurveService} from \"../curve.service\";\nimport {ChartInfo} from \"../../shared/charts/chart.interface\";\nimport {Subject, takeUntil} from 'rxjs';\n\n@Component({\n  selector: 'app-curve-highchart',\n  templateUrl: './curve-high-chart.component.html',\n  styleUrls: ['./curve-high-chart.component.scss']\n})\nexport class CurveHighChartComponent implements AfterViewInit, OnDestroy {\n  Highcharts: typeof Highcharts = Highcharts;\n  updateFlag: boolean = true;\n  chartConstructor: any = \"chart\";\n  chartObject!: Highcharts.Chart;\n  chartOptions: Highcharts.Options = {\n    chart: {\n      animation: false,\n      styledMode: true,\n    },\n    legend: {\n      align: 'center',\n    },\n    tooltip: {\n      enabled: true,\n      shared: true,\n    },\n    exporting: {\n      buttons: {\n        contextButton: {\n          enabled: false,\n        }\n      }\n    }\n  };\n  private destroy$: Subject = new Subject();\n\n  constructor(private service: CurveService) {\n    this.setChartTitle();\n    this.setChartXAxis();\n    this.setChartYAxis();\n  }\n\n  chartInitialized($event: Highcharts.Chart) {\n    this.chartObject = $event;\n\n  }\n\n  ngAfterViewInit(): void {\n    this.setChartSeries();\n    this.service.setHighChart(this.chartObject);\n    this.service.chartInfo$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe((info: ChartInfo) => {\n      this.setChartYAxis();\n      this.setChartXAxis();\n      this.setChartTitle();\n      this.updateChart();\n    });\n    this.service.data$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe((data) => {\n      this.updateChartSeries();\n      this.updateChart();\n    });\n    this.service.interface$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(() => {\n      this.reverseYAxis();\n      this.updateChart();\n    });\n    this.service.dataKeys$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(() => {\n      this.updateChartSeries();\n      this.updateChart();\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n  }\n\n  private updateChart(): void {\n    this.updateFlag = true;\n  }\n\n  private setChartTitle(): void {\n    this.chartOptions.title = {text: this.service.getChartTitle()};\n  }\n\n  private setChartSeries(): void {\n    for (let count = 0; count  {\n      // return true;\n      return (value[0] !== null);\n    }).sort((a: number[], b: number[]) => {\n      return a[0] - b[0];\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n\n\n    \n\n    \n                \n                    ./curve-high-chart.component.scss\n                \n                .chart-container {\n  width: 100%;\n  height: 100%;\n  padding: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CurveHighChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CurveImpl.html":{"url":"classes/CurveImpl.html","title":"class - CurveImpl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CurveImpl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/curve/curve.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            CurveInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                curveCount\n                            \n                            \n                                    Private\n                                isMagnitudeOn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurveCount\n                            \n                            \n                                    Static\n                                getDefaultStorageObject\n                            \n                            \n                                getIsMagnitudeOn\n                            \n                            \n                                    Public\n                                getStorageObject\n                            \n                            \n                                setCurveCount\n                            \n                            \n                                setIsMagnitudeOn\n                            \n                            \n                                    Public\n                                setStorageObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        curveCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : CurveCounts.ONE\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.util.ts:263\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isMagnitudeOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.util.ts:264\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurveCount\n                        \n                    \n                \n            \n            \n                \ngetCurveCount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:270\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getDefaultStorageObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:266\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         CurveInterfaceStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIsMagnitudeOn\n                        \n                    \n                \n            \n            \n                \ngetIsMagnitudeOn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:274\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getStorageObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:289\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         CurveInterfaceStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCurveCount\n                        \n                    \n                \n            \n            \n                \nsetCurveCount(curveCount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:278\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    curveCount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setIsMagnitudeOn\n                        \n                    \n                \n            \n            \n                \nsetIsMagnitudeOn(isMagnitudeOn: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:285\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isMagnitudeOn\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setStorageObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    setStorageObject(curveInterfaceStorageObject: CurveInterfaceStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:293\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    curveInterfaceStorageObject\n                                    \n                                                CurveInterfaceStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\n\nexport enum CurveParam {\n  X = 'x',\n  Y1 = 'y1',\n  Y2 = 'y2',\n  Y3 = 'y3',\n  Y4 = 'y4'\n}\n\nexport enum CurveCounts {\n  ONE = 1,\n  TWO = 2,\n  THREE = 3,\n  FOUR = 4\n}\n\nexport interface CurveDataDict {\n  x: number | null;\n  y1: number | null;\n  y2?: number | null;\n  y3?: number | null;\n  y4?: number | null;\n}\n\nexport interface CurveChartInfoStorageObject {\n  chartTitle: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n  dataLabels: string;\n}\n\nexport class CurveChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n  private dataLabels: string[];\n\n  constructor() {\n    this.chartTitle = \"Title\";\n    this.xAxisLabel = \"x\";\n    this.yAxisLabel = \"y\";\n    this.dataLabels = [\"y1\", \"y2\", \"y3\", \"y4\"];\n  }\n\n  static getDefaultStorageObject(): CurveChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n      dataLabels: \"y1, y2, y3, y4\"\n    };\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabels.join(\", \");\n  }\n\n  getTableLabels(): string[] {\n    return [\"x\"].concat(this.dataLabels);\n  }\n\n  getDataLabelByCurveCount(curveCount: number): string {\n    const result = this.dataLabels;\n    return result.slice(0, curveCount).join(\", \");\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(dataLabel: string): void {\n    const dataLabelArray = dataLabel.split(\",\").map((label) => label.trim());\n    for (let i = 0; i = CurveCounts.TWO) {\n        row.y2 = entry.y2;\n      }\n      if (curveCount >= CurveCounts.THREE) {\n        row.y3 = entry.y3;\n      }\n      if (curveCount >= CurveCounts.FOUR) {\n        row.y4 = entry.y4;\n      }\n      result.push(row);\n    }\n    return result;\n  }\n\n  public getDataArray(): any[] {\n    let result: any[] = [[], [], [], []];\n    for (const entry of this.curveDataDict) {\n      result[0].push([entry.x, entry.y1]);\n      result[1].push([entry.x, entry.y2]);\n      result[2].push([entry.x, entry.y3]);\n      result[3].push([entry.x, entry.y4]);\n    }\n    return result;\n  }\n\n  public setData(data: CurveDataDict[]): void {\n    this.curveDataDict = data;\n    // this.sortDataByX();\n  }\n\n\n  addRow(index: number, amount: number) {\n    if (index > 0) {\n      for (let i = 0; i  {\n      this.setDataByCell(newValue, row, col);\n    });\n  }\n\n  private setDataByCell(value: number | null, row: number, col: string): void {\n    switch (col) {\n      case CurveParam.X:\n        this.curveDataDict[row][CurveParam.X] = value;\n        break;\n      case CurveParam.Y1:\n        this.curveDataDict[row][CurveParam.Y1] = value;\n        break;\n      case CurveParam.Y2:\n        this.curveDataDict[row][CurveParam.Y2] = value;\n        break;\n      case CurveParam.Y3:\n        this.curveDataDict[row][CurveParam.Y3] = value;\n        break;\n      case CurveParam.Y4:\n        this.curveDataDict[row][CurveParam.Y4] = value;\n        break;\n    }\n    // this.sortDataByX();\n  }\n\n  // private sortDataByX(): void {\n  //   this.curveDataDict = this.curveDataDict.sort(\n  //     (a, b) => {\n  //       if (a['x'] === null)\n  //         return 1;\n  //       if (b['x'] === null)\n  //         return -1;\n  //       if (a['x']  b['x'])\n  //         return 1;\n  //       else\n  //         return 0;\n  //     }\n  //   );\n  // }\n}\n\n\nexport interface CurveInterface {\n  getCurveCount(): number;\n\n  setCurveCount(curveCount: number): void;\n\n  getIsMagnitudeOn(): boolean;\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void;\n}\n\n\nexport interface CurveInterfaceStorageObject {\n  curveCount: CurveCounts;\n  isMagnitudeOn: boolean;\n}\n\n\nexport class CurveImpl implements CurveInterface {\n  private curveCount: number = CurveCounts.ONE;\n  private isMagnitudeOn: boolean = false;\n\n  public static getDefaultStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: CurveCounts.ONE, isMagnitudeOn: false};\n  }\n\n  getCurveCount(): number {\n    return this.curveCount;\n  }\n\n  getIsMagnitudeOn(): boolean {\n    return this.isMagnitudeOn;\n  }\n\n  setCurveCount(curveCount: number): void {\n    if (curveCount in CurveCounts)\n      this.curveCount = curveCount;\n    else\n      throw new Error(\"Invalid curve count\");\n  }\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void {\n    this.isMagnitudeOn = isMagnitudeOn;\n  }\n\n  public getStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: this.curveCount, isMagnitudeOn: this.isMagnitudeOn};\n  }\n\n  public setStorageObject(curveInterfaceStorageObject: CurveInterfaceStorageObject): void {\n    this.curveCount = curveInterfaceStorageObject.curveCount;\n    this.isMagnitudeOn = curveInterfaceStorageObject.isMagnitudeOn;\n  }\n\n}\n\n\nexport class CurveStorage implements MyStorage {\n  private readonly dataKey: string = \"curve-data\";\n  private readonly interfaceKey: string = \"curve-interface\";\n  private readonly chartInfoKey: string = \"curve-chart-info\";\n  private readonly defaultData: CurveDataDict[]\n  private readonly defaultChartInfo!: CurveChartInfoStorageObject\n  private readonly defaultInterface!: CurveInterfaceStorageObject\n\n  constructor(defaultData: CurveDataDict[], defaultChartInfo: CurveChartInfoStorageObject, defaultInterface: CurveInterfaceStorageObject) {\n    this.defaultData = defaultData;\n    this.defaultChartInfo = defaultChartInfo;\n    this.defaultInterface = defaultInterface;\n  }\n\n  getChartInfo(): CurveChartInfoStorageObject {\n    if (localStorage.getItem(this.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(this.chartInfoKey)!);\n    } else\n      return this.defaultChartInfo;\n  }\n\n  getData(): CurveDataDict[] {\n    if (localStorage.getItem(this.dataKey)) {\n      return JSON.parse(localStorage.getItem(this.dataKey)!);\n    } else\n      return this.defaultData;\n  }\n\n  getInterface(): any {\n    if (localStorage.getItem(this.interfaceKey)) {\n      return JSON.parse(localStorage.getItem(this.interfaceKey)!);\n    } else\n      return this.defaultInterface;\n  }\n\n  saveChartInfo(chartInfoObject: CurveChartInfoStorageObject): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(chartInfoObject));\n  }\n\n  saveData(data: CurveDataDict[]): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: any): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(interfaceInfo));\n  }\n\n  resetChartInfo(): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(this.defaultChartInfo));\n  }\n\n  resetData(): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(this.defaultData));\n  }\n\n  resetInterface(): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(this.defaultInterface));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CurveInterface.html":{"url":"interfaces/CurveInterface.html","title":"interface - CurveInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CurveInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/curve/curve.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getCurveCount\n                                    \n                                \n                                \n                                    \n                                        getIsMagnitudeOn\n                                    \n                                \n                                \n                                    \n                                        setCurveCount\n                                    \n                                \n                                \n                                    \n                                        setIsMagnitudeOn\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurveCount\n                        \n                    \n                \n            \n            \n                \ngetCurveCount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:246\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIsMagnitudeOn\n                        \n                    \n                \n            \n            \n                \ngetIsMagnitudeOn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:250\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCurveCount\n                        \n                    \n                \n            \n            \n                \nsetCurveCount(curveCount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:248\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    curveCount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setIsMagnitudeOn\n                        \n                    \n                \n            \n            \n                \nsetIsMagnitudeOn(isMagnitudeOn: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:252\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isMagnitudeOn\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\n\nexport enum CurveParam {\n  X = 'x',\n  Y1 = 'y1',\n  Y2 = 'y2',\n  Y3 = 'y3',\n  Y4 = 'y4'\n}\n\nexport enum CurveCounts {\n  ONE = 1,\n  TWO = 2,\n  THREE = 3,\n  FOUR = 4\n}\n\nexport interface CurveDataDict {\n  x: number | null;\n  y1: number | null;\n  y2?: number | null;\n  y3?: number | null;\n  y4?: number | null;\n}\n\nexport interface CurveChartInfoStorageObject {\n  chartTitle: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n  dataLabels: string;\n}\n\nexport class CurveChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n  private dataLabels: string[];\n\n  constructor() {\n    this.chartTitle = \"Title\";\n    this.xAxisLabel = \"x\";\n    this.yAxisLabel = \"y\";\n    this.dataLabels = [\"y1\", \"y2\", \"y3\", \"y4\"];\n  }\n\n  static getDefaultStorageObject(): CurveChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n      dataLabels: \"y1, y2, y3, y4\"\n    };\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabels.join(\", \");\n  }\n\n  getTableLabels(): string[] {\n    return [\"x\"].concat(this.dataLabels);\n  }\n\n  getDataLabelByCurveCount(curveCount: number): string {\n    const result = this.dataLabels;\n    return result.slice(0, curveCount).join(\", \");\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(dataLabel: string): void {\n    const dataLabelArray = dataLabel.split(\",\").map((label) => label.trim());\n    for (let i = 0; i = CurveCounts.TWO) {\n        row.y2 = entry.y2;\n      }\n      if (curveCount >= CurveCounts.THREE) {\n        row.y3 = entry.y3;\n      }\n      if (curveCount >= CurveCounts.FOUR) {\n        row.y4 = entry.y4;\n      }\n      result.push(row);\n    }\n    return result;\n  }\n\n  public getDataArray(): any[] {\n    let result: any[] = [[], [], [], []];\n    for (const entry of this.curveDataDict) {\n      result[0].push([entry.x, entry.y1]);\n      result[1].push([entry.x, entry.y2]);\n      result[2].push([entry.x, entry.y3]);\n      result[3].push([entry.x, entry.y4]);\n    }\n    return result;\n  }\n\n  public setData(data: CurveDataDict[]): void {\n    this.curveDataDict = data;\n    // this.sortDataByX();\n  }\n\n\n  addRow(index: number, amount: number) {\n    if (index > 0) {\n      for (let i = 0; i  {\n      this.setDataByCell(newValue, row, col);\n    });\n  }\n\n  private setDataByCell(value: number | null, row: number, col: string): void {\n    switch (col) {\n      case CurveParam.X:\n        this.curveDataDict[row][CurveParam.X] = value;\n        break;\n      case CurveParam.Y1:\n        this.curveDataDict[row][CurveParam.Y1] = value;\n        break;\n      case CurveParam.Y2:\n        this.curveDataDict[row][CurveParam.Y2] = value;\n        break;\n      case CurveParam.Y3:\n        this.curveDataDict[row][CurveParam.Y3] = value;\n        break;\n      case CurveParam.Y4:\n        this.curveDataDict[row][CurveParam.Y4] = value;\n        break;\n    }\n    // this.sortDataByX();\n  }\n\n  // private sortDataByX(): void {\n  //   this.curveDataDict = this.curveDataDict.sort(\n  //     (a, b) => {\n  //       if (a['x'] === null)\n  //         return 1;\n  //       if (b['x'] === null)\n  //         return -1;\n  //       if (a['x']  b['x'])\n  //         return 1;\n  //       else\n  //         return 0;\n  //     }\n  //   );\n  // }\n}\n\n\nexport interface CurveInterface {\n  getCurveCount(): number;\n\n  setCurveCount(curveCount: number): void;\n\n  getIsMagnitudeOn(): boolean;\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void;\n}\n\n\nexport interface CurveInterfaceStorageObject {\n  curveCount: CurveCounts;\n  isMagnitudeOn: boolean;\n}\n\n\nexport class CurveImpl implements CurveInterface {\n  private curveCount: number = CurveCounts.ONE;\n  private isMagnitudeOn: boolean = false;\n\n  public static getDefaultStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: CurveCounts.ONE, isMagnitudeOn: false};\n  }\n\n  getCurveCount(): number {\n    return this.curveCount;\n  }\n\n  getIsMagnitudeOn(): boolean {\n    return this.isMagnitudeOn;\n  }\n\n  setCurveCount(curveCount: number): void {\n    if (curveCount in CurveCounts)\n      this.curveCount = curveCount;\n    else\n      throw new Error(\"Invalid curve count\");\n  }\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void {\n    this.isMagnitudeOn = isMagnitudeOn;\n  }\n\n  public getStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: this.curveCount, isMagnitudeOn: this.isMagnitudeOn};\n  }\n\n  public setStorageObject(curveInterfaceStorageObject: CurveInterfaceStorageObject): void {\n    this.curveCount = curveInterfaceStorageObject.curveCount;\n    this.isMagnitudeOn = curveInterfaceStorageObject.isMagnitudeOn;\n  }\n\n}\n\n\nexport class CurveStorage implements MyStorage {\n  private readonly dataKey: string = \"curve-data\";\n  private readonly interfaceKey: string = \"curve-interface\";\n  private readonly chartInfoKey: string = \"curve-chart-info\";\n  private readonly defaultData: CurveDataDict[]\n  private readonly defaultChartInfo!: CurveChartInfoStorageObject\n  private readonly defaultInterface!: CurveInterfaceStorageObject\n\n  constructor(defaultData: CurveDataDict[], defaultChartInfo: CurveChartInfoStorageObject, defaultInterface: CurveInterfaceStorageObject) {\n    this.defaultData = defaultData;\n    this.defaultChartInfo = defaultChartInfo;\n    this.defaultInterface = defaultInterface;\n  }\n\n  getChartInfo(): CurveChartInfoStorageObject {\n    if (localStorage.getItem(this.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(this.chartInfoKey)!);\n    } else\n      return this.defaultChartInfo;\n  }\n\n  getData(): CurveDataDict[] {\n    if (localStorage.getItem(this.dataKey)) {\n      return JSON.parse(localStorage.getItem(this.dataKey)!);\n    } else\n      return this.defaultData;\n  }\n\n  getInterface(): any {\n    if (localStorage.getItem(this.interfaceKey)) {\n      return JSON.parse(localStorage.getItem(this.interfaceKey)!);\n    } else\n      return this.defaultInterface;\n  }\n\n  saveChartInfo(chartInfoObject: CurveChartInfoStorageObject): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(chartInfoObject));\n  }\n\n  saveData(data: CurveDataDict[]): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: any): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(interfaceInfo));\n  }\n\n  resetChartInfo(): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(this.defaultChartInfo));\n  }\n\n  resetData(): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(this.defaultData));\n  }\n\n  resetInterface(): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(this.defaultInterface));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CurveInterfaceStorageObject.html":{"url":"interfaces/CurveInterfaceStorageObject.html","title":"interface - CurveInterfaceStorageObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CurveInterfaceStorageObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/curve/curve.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            curveCount\n                                        \n                                \n                                \n                                        \n                                            isMagnitudeOn\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        curveCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        curveCount:         CurveCounts\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CurveCounts\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isMagnitudeOn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isMagnitudeOn:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\n\nexport enum CurveParam {\n  X = 'x',\n  Y1 = 'y1',\n  Y2 = 'y2',\n  Y3 = 'y3',\n  Y4 = 'y4'\n}\n\nexport enum CurveCounts {\n  ONE = 1,\n  TWO = 2,\n  THREE = 3,\n  FOUR = 4\n}\n\nexport interface CurveDataDict {\n  x: number | null;\n  y1: number | null;\n  y2?: number | null;\n  y3?: number | null;\n  y4?: number | null;\n}\n\nexport interface CurveChartInfoStorageObject {\n  chartTitle: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n  dataLabels: string;\n}\n\nexport class CurveChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n  private dataLabels: string[];\n\n  constructor() {\n    this.chartTitle = \"Title\";\n    this.xAxisLabel = \"x\";\n    this.yAxisLabel = \"y\";\n    this.dataLabels = [\"y1\", \"y2\", \"y3\", \"y4\"];\n  }\n\n  static getDefaultStorageObject(): CurveChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n      dataLabels: \"y1, y2, y3, y4\"\n    };\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabels.join(\", \");\n  }\n\n  getTableLabels(): string[] {\n    return [\"x\"].concat(this.dataLabels);\n  }\n\n  getDataLabelByCurveCount(curveCount: number): string {\n    const result = this.dataLabels;\n    return result.slice(0, curveCount).join(\", \");\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(dataLabel: string): void {\n    const dataLabelArray = dataLabel.split(\",\").map((label) => label.trim());\n    for (let i = 0; i = CurveCounts.TWO) {\n        row.y2 = entry.y2;\n      }\n      if (curveCount >= CurveCounts.THREE) {\n        row.y3 = entry.y3;\n      }\n      if (curveCount >= CurveCounts.FOUR) {\n        row.y4 = entry.y4;\n      }\n      result.push(row);\n    }\n    return result;\n  }\n\n  public getDataArray(): any[] {\n    let result: any[] = [[], [], [], []];\n    for (const entry of this.curveDataDict) {\n      result[0].push([entry.x, entry.y1]);\n      result[1].push([entry.x, entry.y2]);\n      result[2].push([entry.x, entry.y3]);\n      result[3].push([entry.x, entry.y4]);\n    }\n    return result;\n  }\n\n  public setData(data: CurveDataDict[]): void {\n    this.curveDataDict = data;\n    // this.sortDataByX();\n  }\n\n\n  addRow(index: number, amount: number) {\n    if (index > 0) {\n      for (let i = 0; i  {\n      this.setDataByCell(newValue, row, col);\n    });\n  }\n\n  private setDataByCell(value: number | null, row: number, col: string): void {\n    switch (col) {\n      case CurveParam.X:\n        this.curveDataDict[row][CurveParam.X] = value;\n        break;\n      case CurveParam.Y1:\n        this.curveDataDict[row][CurveParam.Y1] = value;\n        break;\n      case CurveParam.Y2:\n        this.curveDataDict[row][CurveParam.Y2] = value;\n        break;\n      case CurveParam.Y3:\n        this.curveDataDict[row][CurveParam.Y3] = value;\n        break;\n      case CurveParam.Y4:\n        this.curveDataDict[row][CurveParam.Y4] = value;\n        break;\n    }\n    // this.sortDataByX();\n  }\n\n  // private sortDataByX(): void {\n  //   this.curveDataDict = this.curveDataDict.sort(\n  //     (a, b) => {\n  //       if (a['x'] === null)\n  //         return 1;\n  //       if (b['x'] === null)\n  //         return -1;\n  //       if (a['x']  b['x'])\n  //         return 1;\n  //       else\n  //         return 0;\n  //     }\n  //   );\n  // }\n}\n\n\nexport interface CurveInterface {\n  getCurveCount(): number;\n\n  setCurveCount(curveCount: number): void;\n\n  getIsMagnitudeOn(): boolean;\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void;\n}\n\n\nexport interface CurveInterfaceStorageObject {\n  curveCount: CurveCounts;\n  isMagnitudeOn: boolean;\n}\n\n\nexport class CurveImpl implements CurveInterface {\n  private curveCount: number = CurveCounts.ONE;\n  private isMagnitudeOn: boolean = false;\n\n  public static getDefaultStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: CurveCounts.ONE, isMagnitudeOn: false};\n  }\n\n  getCurveCount(): number {\n    return this.curveCount;\n  }\n\n  getIsMagnitudeOn(): boolean {\n    return this.isMagnitudeOn;\n  }\n\n  setCurveCount(curveCount: number): void {\n    if (curveCount in CurveCounts)\n      this.curveCount = curveCount;\n    else\n      throw new Error(\"Invalid curve count\");\n  }\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void {\n    this.isMagnitudeOn = isMagnitudeOn;\n  }\n\n  public getStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: this.curveCount, isMagnitudeOn: this.isMagnitudeOn};\n  }\n\n  public setStorageObject(curveInterfaceStorageObject: CurveInterfaceStorageObject): void {\n    this.curveCount = curveInterfaceStorageObject.curveCount;\n    this.isMagnitudeOn = curveInterfaceStorageObject.isMagnitudeOn;\n  }\n\n}\n\n\nexport class CurveStorage implements MyStorage {\n  private readonly dataKey: string = \"curve-data\";\n  private readonly interfaceKey: string = \"curve-interface\";\n  private readonly chartInfoKey: string = \"curve-chart-info\";\n  private readonly defaultData: CurveDataDict[]\n  private readonly defaultChartInfo!: CurveChartInfoStorageObject\n  private readonly defaultInterface!: CurveInterfaceStorageObject\n\n  constructor(defaultData: CurveDataDict[], defaultChartInfo: CurveChartInfoStorageObject, defaultInterface: CurveInterfaceStorageObject) {\n    this.defaultData = defaultData;\n    this.defaultChartInfo = defaultChartInfo;\n    this.defaultInterface = defaultInterface;\n  }\n\n  getChartInfo(): CurveChartInfoStorageObject {\n    if (localStorage.getItem(this.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(this.chartInfoKey)!);\n    } else\n      return this.defaultChartInfo;\n  }\n\n  getData(): CurveDataDict[] {\n    if (localStorage.getItem(this.dataKey)) {\n      return JSON.parse(localStorage.getItem(this.dataKey)!);\n    } else\n      return this.defaultData;\n  }\n\n  getInterface(): any {\n    if (localStorage.getItem(this.interfaceKey)) {\n      return JSON.parse(localStorage.getItem(this.interfaceKey)!);\n    } else\n      return this.defaultInterface;\n  }\n\n  saveChartInfo(chartInfoObject: CurveChartInfoStorageObject): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(chartInfoObject));\n  }\n\n  saveData(data: CurveDataDict[]): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: any): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(interfaceInfo));\n  }\n\n  resetChartInfo(): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(this.defaultChartInfo));\n  }\n\n  resetData(): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(this.defaultData));\n  }\n\n  resetInterface(): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(this.defaultInterface));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CurveModule.html":{"url":"modules/CurveModule.html","title":"module - CurveModule","body":"\n                   \n\n\n\n\n    Modules\n    CurveModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CurveModule\n\n\n\ncluster_CurveModule_exports\n\n\n\ncluster_CurveModule_providers\n\n\n\ncluster_CurveModule_declarations\n\n\n\ncluster_CurveModule_imports\n\n\n\n\nCurveChartComponent\n\nCurveChartComponent\n\n\n\nCurveModule\n\nCurveModule\n\nCurveModule -->\n\nCurveChartComponent->CurveModule\n\n\n\n\n\nCurveChartFormComponent\n\nCurveChartFormComponent\n\nCurveModule -->\n\nCurveChartFormComponent->CurveModule\n\n\n\n\n\nCurveComponent\n\nCurveComponent\n\nCurveModule -->\n\nCurveComponent->CurveModule\n\n\n\n\n\nCurveHighChartComponent\n\nCurveHighChartComponent\n\nCurveModule -->\n\nCurveHighChartComponent->CurveModule\n\n\n\n\n\nCurveTableComponent\n\nCurveTableComponent\n\nCurveModule -->\n\nCurveTableComponent->CurveModule\n\n\n\n\n\nLineFormComponent\n\nLineFormComponent\n\nCurveModule -->\n\nLineFormComponent->CurveModule\n\n\n\n\n\nCurveComponent \n\nCurveComponent \n\nCurveComponent  -->\n\nCurveModule->CurveComponent \n\n\n\n\n\nSimpleDataButtonModule\n\nSimpleDataButtonModule\n\nCurveModule -->\n\nSimpleDataButtonModule->CurveModule\n\n\n\n\n\nSimpleGraphButtonModule\n\nSimpleGraphButtonModule\n\nCurveModule -->\n\nSimpleGraphButtonModule->CurveModule\n\n\n\n\n\nCurveService\n\nCurveService\n\nCurveModule -->\n\nCurveService->CurveModule\n\n\n\n\n\nHonorCodePopupService\n\nHonorCodePopupService\n\nCurveModule -->\n\nHonorCodePopupService->CurveModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tools/curve/curve.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module encapsulating CurveComponent\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CurveChartComponent\n                        \n                        \n                            CurveChartFormComponent\n                        \n                        \n                            CurveComponent\n                        \n                        \n                            CurveHighChartComponent\n                        \n                        \n                            CurveTableComponent\n                        \n                        \n                            LineFormComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            CurveService\n                        \n                        \n                            HonorCodePopupService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SimpleDataButtonModule\n                        \n                        \n                            SimpleGraphButtonModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CurveComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from \"@angular/core\";\nimport {CurveComponent} from \"./curve.component\";\nimport {SimpleDataButtonModule} from \"../shared/simple-data-button/simple-data-button.component\";\nimport {SimpleGraphButtonModule} from \"../shared/simple-graph-button/simple-graph-button.component\";\nimport {LineFormComponent} from \"./line-form/line-form.component\";\nimport {MatButtonToggleModule} from \"@angular/material/button-toggle\";\nimport {MatLegacyInputModule as MatInputModule} from \"@angular/material/legacy-input\";\nimport {MatLegacySelectModule as MatSelectModule} from \"@angular/material/legacy-select\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {MatLegacyFormFieldModule as MatFormFieldModule} from \"@angular/material/legacy-form-field\";\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport {CurveTableComponent} from './curve-table/curve-table.component';\nimport {HotTableModule} from \"@handsontable/angular\";\nimport {CurveService} from \"./curve.service\";\nimport {CurveChartComponent} from \"./curve-chart/curve-chart.component\";\nimport {NgChartsModule} from \"ng2-charts\";\nimport {CurveChartFormComponent} from './curve-chart-form/curve-chart-form.component';\nimport {MatLegacyButtonModule as MatButtonModule} from \"@angular/material/legacy-button\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatLegacySlideToggleModule as MatSlideToggleModule} from \"@angular/material/legacy-slide-toggle\";\nimport {CurveHighChartComponent} from './curve-highchart/curve-high-chart.component';\nimport {HighchartsChartModule} from \"highcharts-angular\";\nimport {HonorCodePopupService} from \"../shared/honor-code-popup/honor-code-popup.service\";\n\n/**\n * Module encapsulating {@link CurveComponent}\n */\n@NgModule({\n  imports: [\n    NgChartsModule,\n    SimpleDataButtonModule,\n    SimpleGraphButtonModule,\n    MatButtonToggleModule,\n    MatInputModule,\n    MatSelectModule,\n    FormsModule,\n    MatFormFieldModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    HotTableModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSlideToggleModule,\n    HighchartsChartModule,\n  ],\n  declarations: [\n    CurveComponent,\n    LineFormComponent,\n    CurveTableComponent,\n    CurveChartComponent,\n    CurveChartFormComponent,\n    CurveHighChartComponent,\n  ],\n  exports: [CurveComponent],\n  providers: [CurveService, HonorCodePopupService],\n})\nexport class CurveModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CurveStorage.html":{"url":"classes/CurveStorage.html","title":"class - CurveStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CurveStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/curve/curve.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyStorage\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                chartInfoKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                dataKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                defaultChartInfo\n                            \n                            \n                                    Private\n                                    Readonly\n                                defaultData\n                            \n                            \n                                    Private\n                                    Readonly\n                                defaultInterface\n                            \n                            \n                                    Private\n                                    Readonly\n                                interfaceKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getChartInfo\n                            \n                            \n                                getData\n                            \n                            \n                                getInterface\n                            \n                            \n                                resetChartInfo\n                            \n                            \n                                resetData\n                            \n                            \n                                resetInterface\n                            \n                            \n                                saveChartInfo\n                            \n                            \n                                saveData\n                            \n                            \n                                saveInterface\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(defaultData: CurveDataDict[], defaultChartInfo: CurveChartInfoStorageObject, defaultInterface: CurveInterfaceStorageObject)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/curve/curve.service.util.ts:307\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        defaultData\n                                                  \n                                                        \n                                                                        CurveDataDict[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        defaultChartInfo\n                                                  \n                                                        \n                                                                        CurveChartInfoStorageObject\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        defaultInterface\n                                                  \n                                                        \n                                                                        CurveInterfaceStorageObject\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        chartInfoKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"curve-chart-info\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.util.ts:304\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dataKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"curve-data\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.util.ts:302\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        defaultChartInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CurveChartInfoStorageObject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.util.ts:306\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        defaultData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CurveDataDict[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.util.ts:305\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        defaultInterface\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CurveInterfaceStorageObject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.util.ts:307\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        interfaceKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"curve-interface\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.util.ts:303\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getChartInfo\n                        \n                    \n                \n            \n            \n                \ngetChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:315\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         CurveChartInfoStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:322\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         CurveDataDict[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInterface\n                        \n                    \n                \n            \n            \n                \ngetInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:329\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetChartInfo\n                        \n                    \n                \n            \n            \n                \nresetChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:348\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetData\n                        \n                    \n                \n            \n            \n                \nresetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:352\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetInterface\n                        \n                    \n                \n            \n            \n                \nresetInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:356\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveChartInfo\n                        \n                    \n                \n            \n            \n                \nsaveChartInfo(chartInfoObject: CurveChartInfoStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:336\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartInfoObject\n                                    \n                                                CurveChartInfoStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveData\n                        \n                    \n                \n            \n            \n                \nsaveData(data: CurveDataDict[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:340\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CurveDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveInterface\n                        \n                    \n                \n            \n            \n                \nsaveInterface(interfaceInfo: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:344\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    interfaceInfo\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\n\nexport enum CurveParam {\n  X = 'x',\n  Y1 = 'y1',\n  Y2 = 'y2',\n  Y3 = 'y3',\n  Y4 = 'y4'\n}\n\nexport enum CurveCounts {\n  ONE = 1,\n  TWO = 2,\n  THREE = 3,\n  FOUR = 4\n}\n\nexport interface CurveDataDict {\n  x: number | null;\n  y1: number | null;\n  y2?: number | null;\n  y3?: number | null;\n  y4?: number | null;\n}\n\nexport interface CurveChartInfoStorageObject {\n  chartTitle: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n  dataLabels: string;\n}\n\nexport class CurveChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n  private dataLabels: string[];\n\n  constructor() {\n    this.chartTitle = \"Title\";\n    this.xAxisLabel = \"x\";\n    this.yAxisLabel = \"y\";\n    this.dataLabels = [\"y1\", \"y2\", \"y3\", \"y4\"];\n  }\n\n  static getDefaultStorageObject(): CurveChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n      dataLabels: \"y1, y2, y3, y4\"\n    };\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabels.join(\", \");\n  }\n\n  getTableLabels(): string[] {\n    return [\"x\"].concat(this.dataLabels);\n  }\n\n  getDataLabelByCurveCount(curveCount: number): string {\n    const result = this.dataLabels;\n    return result.slice(0, curveCount).join(\", \");\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(dataLabel: string): void {\n    const dataLabelArray = dataLabel.split(\",\").map((label) => label.trim());\n    for (let i = 0; i = CurveCounts.TWO) {\n        row.y2 = entry.y2;\n      }\n      if (curveCount >= CurveCounts.THREE) {\n        row.y3 = entry.y3;\n      }\n      if (curveCount >= CurveCounts.FOUR) {\n        row.y4 = entry.y4;\n      }\n      result.push(row);\n    }\n    return result;\n  }\n\n  public getDataArray(): any[] {\n    let result: any[] = [[], [], [], []];\n    for (const entry of this.curveDataDict) {\n      result[0].push([entry.x, entry.y1]);\n      result[1].push([entry.x, entry.y2]);\n      result[2].push([entry.x, entry.y3]);\n      result[3].push([entry.x, entry.y4]);\n    }\n    return result;\n  }\n\n  public setData(data: CurveDataDict[]): void {\n    this.curveDataDict = data;\n    // this.sortDataByX();\n  }\n\n\n  addRow(index: number, amount: number) {\n    if (index > 0) {\n      for (let i = 0; i  {\n      this.setDataByCell(newValue, row, col);\n    });\n  }\n\n  private setDataByCell(value: number | null, row: number, col: string): void {\n    switch (col) {\n      case CurveParam.X:\n        this.curveDataDict[row][CurveParam.X] = value;\n        break;\n      case CurveParam.Y1:\n        this.curveDataDict[row][CurveParam.Y1] = value;\n        break;\n      case CurveParam.Y2:\n        this.curveDataDict[row][CurveParam.Y2] = value;\n        break;\n      case CurveParam.Y3:\n        this.curveDataDict[row][CurveParam.Y3] = value;\n        break;\n      case CurveParam.Y4:\n        this.curveDataDict[row][CurveParam.Y4] = value;\n        break;\n    }\n    // this.sortDataByX();\n  }\n\n  // private sortDataByX(): void {\n  //   this.curveDataDict = this.curveDataDict.sort(\n  //     (a, b) => {\n  //       if (a['x'] === null)\n  //         return 1;\n  //       if (b['x'] === null)\n  //         return -1;\n  //       if (a['x']  b['x'])\n  //         return 1;\n  //       else\n  //         return 0;\n  //     }\n  //   );\n  // }\n}\n\n\nexport interface CurveInterface {\n  getCurveCount(): number;\n\n  setCurveCount(curveCount: number): void;\n\n  getIsMagnitudeOn(): boolean;\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void;\n}\n\n\nexport interface CurveInterfaceStorageObject {\n  curveCount: CurveCounts;\n  isMagnitudeOn: boolean;\n}\n\n\nexport class CurveImpl implements CurveInterface {\n  private curveCount: number = CurveCounts.ONE;\n  private isMagnitudeOn: boolean = false;\n\n  public static getDefaultStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: CurveCounts.ONE, isMagnitudeOn: false};\n  }\n\n  getCurveCount(): number {\n    return this.curveCount;\n  }\n\n  getIsMagnitudeOn(): boolean {\n    return this.isMagnitudeOn;\n  }\n\n  setCurveCount(curveCount: number): void {\n    if (curveCount in CurveCounts)\n      this.curveCount = curveCount;\n    else\n      throw new Error(\"Invalid curve count\");\n  }\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void {\n    this.isMagnitudeOn = isMagnitudeOn;\n  }\n\n  public getStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: this.curveCount, isMagnitudeOn: this.isMagnitudeOn};\n  }\n\n  public setStorageObject(curveInterfaceStorageObject: CurveInterfaceStorageObject): void {\n    this.curveCount = curveInterfaceStorageObject.curveCount;\n    this.isMagnitudeOn = curveInterfaceStorageObject.isMagnitudeOn;\n  }\n\n}\n\n\nexport class CurveStorage implements MyStorage {\n  private readonly dataKey: string = \"curve-data\";\n  private readonly interfaceKey: string = \"curve-interface\";\n  private readonly chartInfoKey: string = \"curve-chart-info\";\n  private readonly defaultData: CurveDataDict[]\n  private readonly defaultChartInfo!: CurveChartInfoStorageObject\n  private readonly defaultInterface!: CurveInterfaceStorageObject\n\n  constructor(defaultData: CurveDataDict[], defaultChartInfo: CurveChartInfoStorageObject, defaultInterface: CurveInterfaceStorageObject) {\n    this.defaultData = defaultData;\n    this.defaultChartInfo = defaultChartInfo;\n    this.defaultInterface = defaultInterface;\n  }\n\n  getChartInfo(): CurveChartInfoStorageObject {\n    if (localStorage.getItem(this.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(this.chartInfoKey)!);\n    } else\n      return this.defaultChartInfo;\n  }\n\n  getData(): CurveDataDict[] {\n    if (localStorage.getItem(this.dataKey)) {\n      return JSON.parse(localStorage.getItem(this.dataKey)!);\n    } else\n      return this.defaultData;\n  }\n\n  getInterface(): any {\n    if (localStorage.getItem(this.interfaceKey)) {\n      return JSON.parse(localStorage.getItem(this.interfaceKey)!);\n    } else\n      return this.defaultInterface;\n  }\n\n  saveChartInfo(chartInfoObject: CurveChartInfoStorageObject): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(chartInfoObject));\n  }\n\n  saveData(data: CurveDataDict[]): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: any): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(interfaceInfo));\n  }\n\n  resetChartInfo(): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(this.defaultChartInfo));\n  }\n\n  resetData(): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(this.defaultData));\n  }\n\n  resetInterface(): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(this.defaultInterface));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CurveTable.html":{"url":"classes/CurveTable.html","title":"class - CurveTable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CurveTable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/curve/curve-table/curve-table.component.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyTable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hotRegisterer\n                            \n                            \n                                    Private\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                            \n                                getTable\n                            \n                            \n                                renderTable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/curve/curve-table/curve-table.component.ts:70\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hotRegisterer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HotTableRegisterer()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-table/curve-table.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-table/curve-table.component.ts:69\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-table/curve-table.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTable\n                        \n                    \n                \n            \n            \n                \ngetTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-table/curve-table.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Handsontable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderTable\n                        \n                    \n                \n            \n            \n                \nrenderTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-table/curve-table.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {AfterViewInit, Component, OnDestroy} from '@angular/core';\nimport {CurveService} from \"../curve.service\";\n\nimport {CurveDataDict} from \"../curve.service.util\";\nimport {MyTable} from \"../../shared/tables/table-interface\";\nimport Handsontable from \"handsontable\";\nimport {HotTableRegisterer} from \"@handsontable/angular\";\nimport {Subject, takeUntil} from 'rxjs';\n\n@Component({\n  selector: 'app-curve-table',\n  templateUrl: './curve-table.component.html',\n  styleUrls: ['./curve-table.component.scss']\n})\nexport class CurveTableComponent implements AfterViewInit, OnDestroy {\n  colNames: any;\n  dataSet: any;\n  id: string = \"curve-table\";\n  table: CurveTable = new CurveTable(this.id);\n  private destroy$: Subject = new Subject();\n\n  constructor(private dataService: CurveService) {\n    this.colNames = this.dataService.getDataLabelArray();\n    this.dataSet = this.dataService.getData();\n  }\n\n  ngAfterViewInit(): void {\n    this.dataService.data$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      (data: CurveDataDict[]) => {\n        this.dataSet = this.dataService.getData();\n        this.table.renderTable();\n      });\n    this.dataService.dataKeys$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      (keys: string[]) => {\n        this.colNames = keys;\n        this.table.renderTable();\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n  }\n\n  public onChange = (changes: any, source: any) => {\n    if (changes) {\n      this.dataService.setData(this.table.getData());\n    }\n  }\n\n  public onRemove = (index: number, amount: number) => {\n    this.dataService.removeRow(index, amount);\n  }\n\n  public onInsert = (index: number, amount: number) => {\n    this.dataService.addRow(index, amount);\n  }\n\n\n}\n\n\nclass CurveTable implements MyTable {\n  private readonly id: string;\n  private hotRegisterer = new HotTableRegisterer();\n\n  constructor(id: string) {\n    this.id = id;\n  }\n\n  getTable(): Handsontable {\n    return this.hotRegisterer.getInstance(this.id);\n  }\n\n  renderTable(): void {\n    this.getTable().render();\n  }\n\n  getData(): any[] {\n    return this.getTable().getSourceData();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CurveTableComponent.html":{"url":"components/CurveTableComponent.html","title":"component - CurveTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CurveTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/curve/curve-table/curve-table.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-curve-table\n            \n\n\n\n            \n                styleUrls\n                ./curve-table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./curve-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                colNames\n                            \n                            \n                                dataSet\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                id\n                            \n                            \n                                    Public\n                                onChange\n                            \n                            \n                                    Public\n                                onInsert\n                            \n                            \n                                    Public\n                                onRemove\n                            \n                            \n                                table\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: CurveService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/curve/curve-table/curve-table.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        CurveService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-table/curve-table.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-table/curve-table.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        colNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-table/curve-table.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-table/curve-table.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-table/curve-table.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"curve-table\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-table/curve-table.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-table/curve-table.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onInsert\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-table/curve-table.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onRemove\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-table/curve-table.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        table\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CurveTable\n\n                    \n                \n                \n                    \n                        Default value : new CurveTable(this.id)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-table/curve-table.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnDestroy} from '@angular/core';\nimport {CurveService} from \"../curve.service\";\n\nimport {CurveDataDict} from \"../curve.service.util\";\nimport {MyTable} from \"../../shared/tables/table-interface\";\nimport Handsontable from \"handsontable\";\nimport {HotTableRegisterer} from \"@handsontable/angular\";\nimport {Subject, takeUntil} from 'rxjs';\n\n@Component({\n  selector: 'app-curve-table',\n  templateUrl: './curve-table.component.html',\n  styleUrls: ['./curve-table.component.scss']\n})\nexport class CurveTableComponent implements AfterViewInit, OnDestroy {\n  colNames: any;\n  dataSet: any;\n  id: string = \"curve-table\";\n  table: CurveTable = new CurveTable(this.id);\n  private destroy$: Subject = new Subject();\n\n  constructor(private dataService: CurveService) {\n    this.colNames = this.dataService.getDataLabelArray();\n    this.dataSet = this.dataService.getData();\n  }\n\n  ngAfterViewInit(): void {\n    this.dataService.data$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      (data: CurveDataDict[]) => {\n        this.dataSet = this.dataService.getData();\n        this.table.renderTable();\n      });\n    this.dataService.dataKeys$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      (keys: string[]) => {\n        this.colNames = keys;\n        this.table.renderTable();\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n  }\n\n  public onChange = (changes: any, source: any) => {\n    if (changes) {\n      this.dataService.setData(this.table.getData());\n    }\n  }\n\n  public onRemove = (index: number, amount: number) => {\n    this.dataService.removeRow(index, amount);\n  }\n\n  public onInsert = (index: number, amount: number) => {\n    this.dataService.addRow(index, amount);\n  }\n\n\n}\n\n\nclass CurveTable implements MyTable {\n  private readonly id: string;\n  private hotRegisterer = new HotTableRegisterer();\n\n  constructor(id: string) {\n    this.id = id;\n  }\n\n  getTable(): Handsontable {\n    return this.hotRegisterer.getInstance(this.id);\n  }\n\n  renderTable(): void {\n    this.getTable().render();\n  }\n\n  getData(): any[] {\n    return this.getTable().getSourceData();\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./curve-table.component.scss\n                \n                .container {\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CurveTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultAppearanceSettings.html":{"url":"classes/DefaultAppearanceSettings.html","title":"class - DefaultAppearanceSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultAppearanceSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/settings/appearance/service/appearance.utils.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                chartColorMode\n                            \n                            \n                                    Static\n                                fontFamily\n                            \n                            \n                                    Static\n                                fontSize\n                            \n                            \n                                    Static\n                                fontStyle\n                            \n                            \n                                    Static\n                                theme\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        chartColorMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChartColorMode\n\n                    \n                \n                \n                    \n                        Default value : ChartColorMode.LIGHT\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fontFamily\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FontFamily\n\n                    \n                \n                \n                    \n                        Default value : FontFamily.ROBOTO\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fontSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FontSizes\n\n                    \n                \n                \n                    \n                        Default value : FontSizes.DEFAULT\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fontStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FontStyles\n\n                    \n                \n                \n                    \n                        Default value : FontStyles.DEFAULT\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ColorThemes\n\n                    \n                \n                \n                    \n                        Default value : ColorThemes.LIGHT\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:88\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface MyColorTheme {\n  key: string;\n  displayName: string;\n}\n\nexport enum ColorThemes {\n  LIGHT = 'LIGHT_THEME',\n  DARK = 'DARK_THEME',\n  // HIGH_CONTRAST = 'HC_THEME',\n  HIGH_CONTRAST_DARK = 'HC_DARK_THEME'\n}\n\nexport interface MyFontStyle {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontStyles {\n  DEFAULT = 'normal',\n  BOLD = 'bold',\n  EXTRA_BOLD = 'bolder',\n}\n\nexport interface MyFontSize {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontSizes {\n  SMALL = \"small\",\n  DEFAULT = \"default\",\n  LARGE = \"large\",\n  LARGER = \"larger\",\n}\n\nexport enum FontFamily {\n  ROBOTO = 'Roboto',\n  COMIC_NEUE = 'Comic-Neue',\n}\n\nexport interface MyFontFamily {\n  key: string;\n  displayName: string;\n}\n\nexport class ColorThemeSettings {\n  public static getThemeLists(): MyColorTheme[] {\n    return [\n      {key: ColorThemes.LIGHT, displayName: 'Light'},\n      {key: ColorThemes.DARK, displayName: 'Dark'},\n      // {key: ColorThemes.HIGH_CONTRAST, displayName: 'High Contrast'},\n      {key: ColorThemes.HIGH_CONTRAST_DARK, displayName: 'High Contrast Dark'}\n    ];\n  }\n\n  public static getFontStyleLists(): MyFontStyle[] {\n    return [\n      {key: FontStyles.DEFAULT, displayName: 'Default'},\n      {key: FontStyles.BOLD, displayName: 'Bold'},\n      {key: FontStyles.EXTRA_BOLD, displayName: 'Extra Bold'}\n    ]\n  }\n\n  public static getFontSizeLists(): MyFontSize[] {\n    return [\n      {key: FontSizes.SMALL, displayName: 'Small'},\n      {key: FontSizes.DEFAULT, displayName: 'Default'},\n      {key: FontSizes.LARGE, displayName: 'Large'},\n      {key: FontSizes.LARGER, displayName: 'Larger'}\n    ]\n  }\n\n  public static getFontFamilyLists(): MyFontFamily[] {\n    return [\n      {key: FontFamily.ROBOTO, displayName: 'Roboto'},\n      {key: FontFamily.COMIC_NEUE, displayName: 'Comic Neue'}\n    ]\n  }\n}\n\nexport enum ChartColorMode {\n  LIGHT = 'LIGHT',\n  DARK = 'DARK'\n}\n\n\nexport class DefaultAppearanceSettings {\n  public static theme: ColorThemes = ColorThemes.LIGHT;\n  public static fontStyle: FontStyles = FontStyles.DEFAULT;\n  public static fontSize: FontSizes = FontSizes.DEFAULT;\n  public static fontFamily: FontFamily = FontFamily.ROBOTO;\n  public static chartColorMode: ChartColorMode = ChartColorMode.LIGHT;\n}\n\n\nexport class ChartColor {\n  private static readonly lineColorLightArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n  private static readonly lineColorDarkArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n\n  public static getFontColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#2b4162' : '#f5f0f6';\n  }\n\n  public static getBackgroundColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#C3CFD4' : '#325769';\n  }\n\n  public static getLineColor(index: number): string {\n    if (index = this.lineColorLightArray.length)\n      return 'black';\n    else\n      // return mode === ChartColorMode.LIGHT ? this.lineColorLightArray[index] : this.lineColorDarkArray[index];\n      return this.lineColorLightArray[index];\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DualChartFormComponent.html":{"url":"components/DualChartFormComponent.html","title":"component - DualChartFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DualChartFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/dual/dual-chart-form/dual-chart-form.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dual-chart-form\n            \n\n\n\n            \n                styleUrls\n                ./dual-chart-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dual-chart-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Public\n                                formGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: DualService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/dual/dual-chart-form/dual-chart-form.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        DualService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual-chart-form/dual-chart-form.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual-chart-form/dual-chart-form.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual-chart-form/dual-chart-form.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {debounceTime, Subject, takeUntil} from \"rxjs\";\nimport {DualService} from \"../dual.service\";\n\n@Component({\n  selector: 'app-dual-chart-form',\n  templateUrl: './dual-chart-form.component.html',\n  styleUrls: ['./dual-chart-form.component.scss']\n})\nexport class DualChartFormComponent {\n  public formGroup!: FormGroup;\n  private destroy$: Subject = new Subject();\n\n  constructor(private service: DualService) {\n    this.service.chartInfo$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(info => {\n      this.formGroup = new FormGroup({\n        chartTitle: new FormControl(this.service.getChartTitle()),\n        dataLabel: new FormControl(this.service.getDataLabel()),\n        xAxisLabel: new FormControl(this.service.getXAxisLabel()),\n        yAxisLabel: new FormControl(this.service.getYAxisLabel()),\n      })\n      this.formGroup.controls['chartTitle'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(title => {\n        this.service.setChartTitle(title);\n      });\n      this.formGroup.controls['dataLabel'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(labels => {\n        this.service.setDataLabel(labels);\n      });\n      this.formGroup.controls['xAxisLabel'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(label => {\n        this.service.setXAxisLabel(label);\n      });\n      this.formGroup.controls['yAxisLabel'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(label => {\n        this.service.setYAxisLabel(label);\n      });\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        Title\n        \n      \n    \n    \n      \n        Data\n        \n      \n    \n  \n  \n    \n      \n        X Axis\n        \n      \n    \n    \n      \n        Y Axis\n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./dual-chart-form.component.scss\n                \n                mat-form-field {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Title                                    Data                                        X Axis                                    Y Axis                    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DualChartFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DualChartInfo.html":{"url":"classes/DualChartInfo.html","title":"class - DualChartInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DualChartInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/dual/dual.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ChartInfo\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chartTitle\n                            \n                            \n                                    Private\n                                dataLabel\n                            \n                            \n                                    Private\n                                xAxisLabel\n                            \n                            \n                                    Private\n                                yAxisLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getChartTitle\n                            \n                            \n                                getDataLabel\n                            \n                            \n                                getDataLabelArray\n                            \n                            \n                                    Static\n                                getDefaultChartInfo\n                            \n                            \n                                getStorageObject\n                            \n                            \n                                getXAxisLabel\n                            \n                            \n                                getYAxisLabel\n                            \n                            \n                                setChartTitle\n                            \n                            \n                                setDataLabel\n                            \n                            \n                                setStorageObject\n                            \n                            \n                                setXAxisLabel\n                            \n                            \n                                setYAxisLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/dual/dual.service.util.ts:95\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual.service.util.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual.service.util.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        xAxisLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual.service.util.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        yAxisLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual.service.util.ts:95\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getChartTitle\n                        \n                    \n                \n            \n            \n                \ngetChartTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataLabel\n                        \n                    \n                \n            \n            \n                \ngetDataLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataLabelArray\n                        \n                    \n                \n            \n            \n                \ngetDataLabelArray()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getDefaultChartInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         DualChartInfoStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStorageObject\n                        \n                    \n                \n            \n            \n                \ngetStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         DualChartInfoStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getXAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetXAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getYAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetYAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setChartTitle\n                        \n                    \n                \n            \n            \n                \nsetChartTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDataLabel\n                        \n                    \n                \n            \n            \n                \nsetDataLabel(data: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStorageObject\n                        \n                    \n                \n            \n            \n                \nsetStorageObject(storageObject: DualChartInfoStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storageObject\n                                    \n                                                DualChartInfoStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setXAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetXAxisLabel(xAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    xAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setYAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetYAxisLabel(yAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    yAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\n\nexport interface DualDataDict {\n  x1: number | null;\n  y1: number | null;\n  x2: number | null;\n  y2: number | null;\n}\n\nexport class DualData implements MyData {\n  private dataDict: DualDataDict[];\n\n  constructor() {\n    this.dataDict = DualData.getDefaultData();\n  }\n\n  public static getDefaultData(): DualDataDict[] {\n    return [\n      {x1:0, y1:25, x2: 1, y2:10},\n      {x1:1, y1:16, x2: 2, y2:14.1421356237309},\n      {x1:2, y1:9, x2: 3, y2:17.3205080756887},\n      {x1:3, y1:4, x2: 4, y2:20},\n      {x1:4, y1:1, x2: 5, y2:22.3606797749978},\n      {x1:5, y1:4, x2: 6, y2:24.4948974278317},\n      {x1:6, y1:9, x2: 7, y2:26.4575131106459},\n      {x1:7, y1:16, x2: 8, y2:28.2842712474619},\n      {x1:8, y1:25, x2: 9, y2:30},\n      {x1:9, y1:36, x2: 10, y2:31.6227766016837},\n      {x1:null, y1:null, x2: 11, y2:33.166247903554},\n      {x1:null, y1:null, x2: 12, y2:34.6410161513775},\n      {x1:null, y1:null, x2: 13, y2:36.0555127546398},\n      {x1:null, y1:null, x2: 14, y2:37.4165738677394},\n      {x1:null, y1:null, x2: 15, y2:38.7298334620741},\n      {x1:null, y1:null, x2: 16, y2:40},\n      {x1:null, y1:null, x2: 17, y2:41.2310562561766},\n    ];\n  }\n\n  addRow(index: number, amount: number): void {\n    if (index > 0) {\n      for (let i = 0; i  {\n        return entry.x1 !== null && entry.y1 !== null;\n      }).map(\n        (entry: DualDataDict) => {\n          return [entry.x1, entry.y1];\n        }) as number[][],\n      this.dataDict.filter((entry: DualDataDict) => {\n        return entry.x2 !== null && entry.y2 !== null;\n      }).map(\n        (entry: DualDataDict) => {\n          return [entry.x2, entry.y2];\n        }) as number[][]\n    ]\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: DualDataDict[]): void {\n    this.dataDict = data;\n  }\n\n}\n\n\nexport interface DualChartInfoStorageObject {\n  chartTitle: string;\n  dataLabel: string[];\n  xAxisLabel: string;\n  yAxisLabel: string;\n}\n\n\nexport class DualChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private dataLabel: string[];\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n\n  constructor() {\n    this.chartTitle = DualChartInfo.getDefaultChartInfo().chartTitle;\n    this.dataLabel = DualChartInfo.getDefaultChartInfo().dataLabel;\n    this.xAxisLabel = DualChartInfo.getDefaultChartInfo().xAxisLabel;\n    this.yAxisLabel = DualChartInfo.getDefaultChartInfo().yAxisLabel;\n  }\n\n  public static getDefaultChartInfo(): DualChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      dataLabel: [\"y1\", \"y2\"],\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\"\n    }\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    if (this.dataLabel[0] === \"\" && this.dataLabel[1] === \"\") {\n      return \"\";\n    } else {\n      return this.dataLabel.join(\", \");\n    }\n  }\n\n  getStorageObject(): DualChartInfoStorageObject {\n    return {\n      chartTitle: this.chartTitle,\n      dataLabel: this.dataLabel,\n      xAxisLabel: this.xAxisLabel,\n      yAxisLabel: this.yAxisLabel\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    if (data.trim() === \"\") {\n      this.dataLabel = [\"\", \"\"];\n      return;\n    }\n    const inputLabels = data.split(\",\").map((label: string) => {\n      return label.trim();\n    });\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DualChartInfoStorageObject.html":{"url":"interfaces/DualChartInfoStorageObject.html","title":"interface - DualChartInfoStorageObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DualChartInfoStorageObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/dual/dual.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            chartTitle\n                                        \n                                \n                                \n                                        \n                                            dataLabel\n                                        \n                                \n                                \n                                        \n                                            xAxisLabel\n                                        \n                                \n                                \n                                        \n                                            yAxisLabel\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chartTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chartTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dataLabel:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xAxisLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        xAxisLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yAxisLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        yAxisLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\n\nexport interface DualDataDict {\n  x1: number | null;\n  y1: number | null;\n  x2: number | null;\n  y2: number | null;\n}\n\nexport class DualData implements MyData {\n  private dataDict: DualDataDict[];\n\n  constructor() {\n    this.dataDict = DualData.getDefaultData();\n  }\n\n  public static getDefaultData(): DualDataDict[] {\n    return [\n      {x1:0, y1:25, x2: 1, y2:10},\n      {x1:1, y1:16, x2: 2, y2:14.1421356237309},\n      {x1:2, y1:9, x2: 3, y2:17.3205080756887},\n      {x1:3, y1:4, x2: 4, y2:20},\n      {x1:4, y1:1, x2: 5, y2:22.3606797749978},\n      {x1:5, y1:4, x2: 6, y2:24.4948974278317},\n      {x1:6, y1:9, x2: 7, y2:26.4575131106459},\n      {x1:7, y1:16, x2: 8, y2:28.2842712474619},\n      {x1:8, y1:25, x2: 9, y2:30},\n      {x1:9, y1:36, x2: 10, y2:31.6227766016837},\n      {x1:null, y1:null, x2: 11, y2:33.166247903554},\n      {x1:null, y1:null, x2: 12, y2:34.6410161513775},\n      {x1:null, y1:null, x2: 13, y2:36.0555127546398},\n      {x1:null, y1:null, x2: 14, y2:37.4165738677394},\n      {x1:null, y1:null, x2: 15, y2:38.7298334620741},\n      {x1:null, y1:null, x2: 16, y2:40},\n      {x1:null, y1:null, x2: 17, y2:41.2310562561766},\n    ];\n  }\n\n  addRow(index: number, amount: number): void {\n    if (index > 0) {\n      for (let i = 0; i  {\n        return entry.x1 !== null && entry.y1 !== null;\n      }).map(\n        (entry: DualDataDict) => {\n          return [entry.x1, entry.y1];\n        }) as number[][],\n      this.dataDict.filter((entry: DualDataDict) => {\n        return entry.x2 !== null && entry.y2 !== null;\n      }).map(\n        (entry: DualDataDict) => {\n          return [entry.x2, entry.y2];\n        }) as number[][]\n    ]\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: DualDataDict[]): void {\n    this.dataDict = data;\n  }\n\n}\n\n\nexport interface DualChartInfoStorageObject {\n  chartTitle: string;\n  dataLabel: string[];\n  xAxisLabel: string;\n  yAxisLabel: string;\n}\n\n\nexport class DualChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private dataLabel: string[];\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n\n  constructor() {\n    this.chartTitle = DualChartInfo.getDefaultChartInfo().chartTitle;\n    this.dataLabel = DualChartInfo.getDefaultChartInfo().dataLabel;\n    this.xAxisLabel = DualChartInfo.getDefaultChartInfo().xAxisLabel;\n    this.yAxisLabel = DualChartInfo.getDefaultChartInfo().yAxisLabel;\n  }\n\n  public static getDefaultChartInfo(): DualChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      dataLabel: [\"y1\", \"y2\"],\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\"\n    }\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    if (this.dataLabel[0] === \"\" && this.dataLabel[1] === \"\") {\n      return \"\";\n    } else {\n      return this.dataLabel.join(\", \");\n    }\n  }\n\n  getStorageObject(): DualChartInfoStorageObject {\n    return {\n      chartTitle: this.chartTitle,\n      dataLabel: this.dataLabel,\n      xAxisLabel: this.xAxisLabel,\n      yAxisLabel: this.yAxisLabel\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    if (data.trim() === \"\") {\n      this.dataLabel = [\"\", \"\"];\n      return;\n    }\n    const inputLabels = data.split(\",\").map((label: string) => {\n      return label.trim();\n    });\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DualComponent.html":{"url":"components/DualComponent.html","title":"component - DualComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DualComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/dual/dual/dual.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dual\n            \n\n\n\n            \n                styleUrls\n                ./dual.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dual.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                actionHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: DualService, honorCodeService: HonorCodePopupService, chartService: HonorCodeChartService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/dual/dual/dual.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        DualService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        honorCodeService\n                                                  \n                                                        \n                                                                        HonorCodePopupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chartService\n                                                  \n                                                        \n                                                                        HonorCodeChartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        actionHandler\n                        \n                    \n                \n            \n            \n                \nactionHandler(actions: ChartAction[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual/dual.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    actions\n                                    \n                                                ChartAction[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {ChartAction} from \"../../shared/types/actions\";\nimport {HonorCodePopupService} from \"../../shared/honor-code-popup/honor-code-popup.service\";\nimport {HonorCodeChartService} from \"../../shared/honor-code-popup/honor-code-chart.service\";\nimport {DualService} from \"../dual.service\";\n\n@Component({\n  selector: 'app-dual',\n  templateUrl: './dual.component.html',\n  styleUrls: ['./dual.component.scss']\n})\nexport class DualComponent {\n  constructor(private service: DualService,\n              private honorCodeService: HonorCodePopupService,\n              private chartService: HonorCodeChartService) {\n  }\n\n  actionHandler(actions: ChartAction[]) {\n    actions.forEach((action) => {\n      if (action.action === \"addRow\") {\n        this.service.addRow(-1, 1);\n      } else if (action.action === \"saveGraph\") {\n        this.honorCodeService.honored().subscribe((name: string) => {\n          this.chartService.saveImageHighChartOffline(this.service.getHighChart(), \"dual\", name);\n        })\n      } else if (action.action === \"resetData\") {\n        this.service.resetData();\n      } else if (action.action === \"resetChartInfo\") {\n        this.service.resetChartInfo();\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n      \n    \n  \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./dual.component.scss\n                \n                .container-row {\n  height: 80%;\n  padding: 20px 100px 20px 100px;\n  width: 100%;\n}\n\n.col-4, .col-8 {\n  display: flex;\n  flex-flow: column;\n}\n\n.data-form-row, data-button-row, chart-form-row, chart-button-row {\n  height: fit-content;\n  flex: 0 1 auto;\n}\n\n.data-table-row, .chart-row {\n  flex: 1 1 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DualComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DualData.html":{"url":"classes/DualData.html","title":"class - DualData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DualData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/dual/dual.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyData\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dataDict\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRow\n                            \n                            \n                                getData\n                            \n                            \n                                getDataArray\n                            \n                            \n                                    Static\n                                getDefaultData\n                            \n                            \n                                removeRow\n                            \n                            \n                                setData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/dual/dual.service.util.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataDict\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DualDataDict[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual.service.util.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRow\n                        \n                    \n                \n            \n            \n                \naddRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         DualDataDict[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataArray\n                        \n                    \n                \n            \n            \n                \ngetDataArray()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     [][]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getDefaultData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         DualDataDict[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRow\n                        \n                    \n                \n            \n            \n                \nremoveRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setData\n                        \n                    \n                \n            \n            \n                \nsetData(data: DualDataDict[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DualDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\n\nexport interface DualDataDict {\n  x1: number | null;\n  y1: number | null;\n  x2: number | null;\n  y2: number | null;\n}\n\nexport class DualData implements MyData {\n  private dataDict: DualDataDict[];\n\n  constructor() {\n    this.dataDict = DualData.getDefaultData();\n  }\n\n  public static getDefaultData(): DualDataDict[] {\n    return [\n      {x1:0, y1:25, x2: 1, y2:10},\n      {x1:1, y1:16, x2: 2, y2:14.1421356237309},\n      {x1:2, y1:9, x2: 3, y2:17.3205080756887},\n      {x1:3, y1:4, x2: 4, y2:20},\n      {x1:4, y1:1, x2: 5, y2:22.3606797749978},\n      {x1:5, y1:4, x2: 6, y2:24.4948974278317},\n      {x1:6, y1:9, x2: 7, y2:26.4575131106459},\n      {x1:7, y1:16, x2: 8, y2:28.2842712474619},\n      {x1:8, y1:25, x2: 9, y2:30},\n      {x1:9, y1:36, x2: 10, y2:31.6227766016837},\n      {x1:null, y1:null, x2: 11, y2:33.166247903554},\n      {x1:null, y1:null, x2: 12, y2:34.6410161513775},\n      {x1:null, y1:null, x2: 13, y2:36.0555127546398},\n      {x1:null, y1:null, x2: 14, y2:37.4165738677394},\n      {x1:null, y1:null, x2: 15, y2:38.7298334620741},\n      {x1:null, y1:null, x2: 16, y2:40},\n      {x1:null, y1:null, x2: 17, y2:41.2310562561766},\n    ];\n  }\n\n  addRow(index: number, amount: number): void {\n    if (index > 0) {\n      for (let i = 0; i  {\n        return entry.x1 !== null && entry.y1 !== null;\n      }).map(\n        (entry: DualDataDict) => {\n          return [entry.x1, entry.y1];\n        }) as number[][],\n      this.dataDict.filter((entry: DualDataDict) => {\n        return entry.x2 !== null && entry.y2 !== null;\n      }).map(\n        (entry: DualDataDict) => {\n          return [entry.x2, entry.y2];\n        }) as number[][]\n    ]\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: DualDataDict[]): void {\n    this.dataDict = data;\n  }\n\n}\n\n\nexport interface DualChartInfoStorageObject {\n  chartTitle: string;\n  dataLabel: string[];\n  xAxisLabel: string;\n  yAxisLabel: string;\n}\n\n\nexport class DualChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private dataLabel: string[];\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n\n  constructor() {\n    this.chartTitle = DualChartInfo.getDefaultChartInfo().chartTitle;\n    this.dataLabel = DualChartInfo.getDefaultChartInfo().dataLabel;\n    this.xAxisLabel = DualChartInfo.getDefaultChartInfo().xAxisLabel;\n    this.yAxisLabel = DualChartInfo.getDefaultChartInfo().yAxisLabel;\n  }\n\n  public static getDefaultChartInfo(): DualChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      dataLabel: [\"y1\", \"y2\"],\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\"\n    }\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    if (this.dataLabel[0] === \"\" && this.dataLabel[1] === \"\") {\n      return \"\";\n    } else {\n      return this.dataLabel.join(\", \");\n    }\n  }\n\n  getStorageObject(): DualChartInfoStorageObject {\n    return {\n      chartTitle: this.chartTitle,\n      dataLabel: this.dataLabel,\n      xAxisLabel: this.xAxisLabel,\n      yAxisLabel: this.yAxisLabel\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    if (data.trim() === \"\") {\n      this.dataLabel = [\"\", \"\"];\n      return;\n    }\n    const inputLabels = data.split(\",\").map((label: string) => {\n      return label.trim();\n    });\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DualDataDict.html":{"url":"interfaces/DualDataDict.html","title":"interface - DualDataDict","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DualDataDict\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/dual/dual.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x1\n                                        \n                                \n                                \n                                        \n                                            x2\n                                        \n                                \n                                \n                                        \n                                            y1\n                                        \n                                \n                                \n                                        \n                                            y2\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x1\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x1:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x2\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x2:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y1\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y1:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y2\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y2:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\n\nexport interface DualDataDict {\n  x1: number | null;\n  y1: number | null;\n  x2: number | null;\n  y2: number | null;\n}\n\nexport class DualData implements MyData {\n  private dataDict: DualDataDict[];\n\n  constructor() {\n    this.dataDict = DualData.getDefaultData();\n  }\n\n  public static getDefaultData(): DualDataDict[] {\n    return [\n      {x1:0, y1:25, x2: 1, y2:10},\n      {x1:1, y1:16, x2: 2, y2:14.1421356237309},\n      {x1:2, y1:9, x2: 3, y2:17.3205080756887},\n      {x1:3, y1:4, x2: 4, y2:20},\n      {x1:4, y1:1, x2: 5, y2:22.3606797749978},\n      {x1:5, y1:4, x2: 6, y2:24.4948974278317},\n      {x1:6, y1:9, x2: 7, y2:26.4575131106459},\n      {x1:7, y1:16, x2: 8, y2:28.2842712474619},\n      {x1:8, y1:25, x2: 9, y2:30},\n      {x1:9, y1:36, x2: 10, y2:31.6227766016837},\n      {x1:null, y1:null, x2: 11, y2:33.166247903554},\n      {x1:null, y1:null, x2: 12, y2:34.6410161513775},\n      {x1:null, y1:null, x2: 13, y2:36.0555127546398},\n      {x1:null, y1:null, x2: 14, y2:37.4165738677394},\n      {x1:null, y1:null, x2: 15, y2:38.7298334620741},\n      {x1:null, y1:null, x2: 16, y2:40},\n      {x1:null, y1:null, x2: 17, y2:41.2310562561766},\n    ];\n  }\n\n  addRow(index: number, amount: number): void {\n    if (index > 0) {\n      for (let i = 0; i  {\n        return entry.x1 !== null && entry.y1 !== null;\n      }).map(\n        (entry: DualDataDict) => {\n          return [entry.x1, entry.y1];\n        }) as number[][],\n      this.dataDict.filter((entry: DualDataDict) => {\n        return entry.x2 !== null && entry.y2 !== null;\n      }).map(\n        (entry: DualDataDict) => {\n          return [entry.x2, entry.y2];\n        }) as number[][]\n    ]\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: DualDataDict[]): void {\n    this.dataDict = data;\n  }\n\n}\n\n\nexport interface DualChartInfoStorageObject {\n  chartTitle: string;\n  dataLabel: string[];\n  xAxisLabel: string;\n  yAxisLabel: string;\n}\n\n\nexport class DualChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private dataLabel: string[];\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n\n  constructor() {\n    this.chartTitle = DualChartInfo.getDefaultChartInfo().chartTitle;\n    this.dataLabel = DualChartInfo.getDefaultChartInfo().dataLabel;\n    this.xAxisLabel = DualChartInfo.getDefaultChartInfo().xAxisLabel;\n    this.yAxisLabel = DualChartInfo.getDefaultChartInfo().yAxisLabel;\n  }\n\n  public static getDefaultChartInfo(): DualChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      dataLabel: [\"y1\", \"y2\"],\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\"\n    }\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    if (this.dataLabel[0] === \"\" && this.dataLabel[1] === \"\") {\n      return \"\";\n    } else {\n      return this.dataLabel.join(\", \");\n    }\n  }\n\n  getStorageObject(): DualChartInfoStorageObject {\n    return {\n      chartTitle: this.chartTitle,\n      dataLabel: this.dataLabel,\n      xAxisLabel: this.xAxisLabel,\n      yAxisLabel: this.yAxisLabel\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    if (data.trim() === \"\") {\n      this.dataLabel = [\"\", \"\"];\n      return;\n    }\n    const inputLabels = data.split(\",\").map((label: string) => {\n      return label.trim();\n    });\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DualHighchartComponent.html":{"url":"components/DualHighchartComponent.html","title":"component - DualHighchartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DualHighchartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/dual/dual-highchart/dual-highchart.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dual-highchart\n            \n\n\n\n            \n                styleUrls\n                ./dual-highchart.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dual-highchart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chartConstructor\n                            \n                            \n                                chartObject\n                            \n                            \n                                chartOptions\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                Highcharts\n                            \n                            \n                                updateFlag\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                chartInitialized\n                            \n                            \n                                initChartSeries\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                setChartTitle\n                            \n                            \n                                    Private\n                                setChartXAxis\n                            \n                            \n                                    Private\n                                setChartYAxis\n                            \n                            \n                                setData\n                            \n                            \n                                    Private\n                                updateChart\n                            \n                            \n                                updateData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: DualService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/dual/dual-highchart/dual-highchart.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        DualService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        chartInitialized\n                        \n                    \n                \n            \n            \n                \nchartInitialized($event: Highcharts.Chart)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual-highchart/dual-highchart.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                            Highcharts.Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initChartSeries\n                        \n                    \n                \n            \n            \n                \ninitChartSeries()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual-highchart/dual-highchart.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual-highchart/dual-highchart.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual-highchart/dual-highchart.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setChartTitle\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChartTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual-highchart/dual-highchart.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setChartXAxis\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChartXAxis()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual-highchart/dual-highchart.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setChartYAxis\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChartYAxis()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual-highchart/dual-highchart.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setData\n                        \n                    \n                \n            \n            \n                \nsetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual-highchart/dual-highchart.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateChart\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual-highchart/dual-highchart.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateData\n                        \n                    \n                \n            \n            \n                \nupdateData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual-highchart/dual-highchart.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chartConstructor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : \"chart\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual-highchart/dual-highchart.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartObject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Highcharts.Chart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual-highchart/dual-highchart.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Highcharts.Options\n\n                    \n                \n                \n                    \n                        Default value : {\n    chart: {\n      animation: false,\n      styledMode: true,\n    },\n    legend: {\n      align: 'center',\n    },\n    tooltip: {\n      enabled: true,\n      shared: false,\n    },\n    exporting: {\n      buttons: {\n        contextButton: {\n          enabled: false,\n        }\n      }\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual-highchart/dual-highchart.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual-highchart/dual-highchart.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Highcharts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Highcharts\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual-highchart/dual-highchart.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFlag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual-highchart/dual-highchart.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnDestroy} from '@angular/core';\nimport {Subject, takeUntil} from \"rxjs\";\nimport * as Highcharts from \"highcharts\";\nimport {DualService} from \"../dual.service\";\n\n@Component({\n  selector: 'app-dual-highchart',\n  templateUrl: './dual-highchart.component.html',\n  styleUrls: ['./dual-highchart.component.scss']\n})\nexport class DualHighchartComponent implements AfterViewInit, OnDestroy {\n  Highcharts: typeof Highcharts = Highcharts;\n  updateFlag: boolean = true;\n  chartConstructor: any = \"chart\";\n  chartObject!: Highcharts.Chart;\n  chartOptions: Highcharts.Options = {\n    chart: {\n      animation: false,\n      styledMode: true,\n    },\n    legend: {\n      align: 'center',\n    },\n    tooltip: {\n      enabled: true,\n      shared: false,\n    },\n    exporting: {\n      buttons: {\n        contextButton: {\n          enabled: false,\n        }\n      }\n    }\n  };\n  private destroy$: Subject = new Subject();\n\n  constructor(private service: DualService) {\n    this.setChartTitle();\n    this.setChartXAxis();\n    this.setChartYAxis();\n  }\n\n  chartInitialized($event: Highcharts.Chart) {\n    this.chartObject = $event;\n    this.service.setHighChart(this.chartObject);\n\n  }\n\n  ngAfterViewInit(): void {\n    this.initChartSeries();\n    this.service.data$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(() => {\n      this.updateData();\n      this.updateChart();\n    });\n    this.service.chartInfo$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(() => {\n      this.setChartTitle();\n      this.setChartXAxis();\n      this.setChartYAxis();\n      this.updateChart();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n  }\n\n  initChartSeries() {\n    this.setData();\n  }\n\n  setData() {\n    const labels: string[] = this.service.getDataLabelArray();\n    const data: number[][][] = this.service.getDataArray();\n    for (let i = 0; i \n    \n\n    \n        \n  \n\n\n\n\n    \n\n    \n                \n                    ./dual-highchart.component.scss\n                \n                .chart-container {\n  width: 100%;\n  height: 100%;\n  padding: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DualHighchartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DualModule.html":{"url":"modules/DualModule.html","title":"module - DualModule","body":"\n                   \n\n\n\n\n    Modules\n    DualModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DualModule\n\n\n\ncluster_DualModule_imports\n\n\n\ncluster_DualModule_providers\n\n\n\ncluster_DualModule_declarations\n\n\n\n\nDualChartFormComponent\n\nDualChartFormComponent\n\n\n\nDualModule\n\nDualModule\n\nDualModule -->\n\nDualChartFormComponent->DualModule\n\n\n\n\n\nDualComponent\n\nDualComponent\n\nDualModule -->\n\nDualComponent->DualModule\n\n\n\n\n\nDualHighchartComponent\n\nDualHighchartComponent\n\nDualModule -->\n\nDualHighchartComponent->DualModule\n\n\n\n\n\nDualTableComponent\n\nDualTableComponent\n\nDualModule -->\n\nDualTableComponent->DualModule\n\n\n\n\n\nSimpleDataButtonModule\n\nSimpleDataButtonModule\n\nDualModule -->\n\nSimpleDataButtonModule->DualModule\n\n\n\n\n\nSimpleGraphButtonModule\n\nSimpleGraphButtonModule\n\nDualModule -->\n\nSimpleGraphButtonModule->DualModule\n\n\n\n\n\nDualService\n\nDualService\n\nDualModule -->\n\nDualService->DualModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tools/dual/dual.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DualChartFormComponent\n                        \n                        \n                            DualComponent\n                        \n                        \n                            DualHighchartComponent\n                        \n                        \n                            DualTableComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            DualService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SimpleDataButtonModule\n                        \n                        \n                            SimpleGraphButtonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DualComponent} from './dual/dual.component';\nimport {SimpleDataButtonModule} from \"../shared/simple-data-button/simple-data-button.component\";\nimport {SimpleGraphButtonModule} from \"../shared/simple-graph-button/simple-graph-button.component\";\nimport {DualService} from \"./dual.service\";\nimport {DualTableComponent} from './dual-table/dual-table.component';\nimport {HotTableModule} from \"@handsontable/angular\";\nimport {DualChartFormComponent} from './dual-chart-form/dual-chart-form.component';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {MatLegacyFormFieldModule} from \"@angular/material/legacy-form-field\";\nimport {MatLegacyInputModule} from \"@angular/material/legacy-input\";\nimport {DualHighchartComponent} from './dual-highchart/dual-highchart.component';\nimport {HighchartsChartModule} from \"highcharts-angular\";\n\n\n@NgModule({\n  declarations: [\n    DualComponent,\n    DualTableComponent,\n    DualChartFormComponent,\n    DualHighchartComponent\n  ],\n  imports: [\n    CommonModule,\n    SimpleDataButtonModule,\n    SimpleGraphButtonModule,\n    HotTableModule,\n    FormsModule,\n    MatLegacyFormFieldModule,\n    MatLegacyInputModule,\n    ReactiveFormsModule,\n    HighchartsChartModule\n  ],\n  providers: [DualService]\n})\nexport class DualModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DualService.html":{"url":"injectables/DualService.html","title":"injectable - DualService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DualService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/dual/dual.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                chartInfo$\n                            \n                            \n                                    Private\n                                chartInfoSubject\n                            \n                            \n                                    Public\n                                data$\n                            \n                            \n                                    Private\n                                dataSubject\n                            \n                            \n                                    Private\n                                dualChartInfo\n                            \n                            \n                                    Private\n                                dualData\n                            \n                            \n                                    Private\n                                dualStorage\n                            \n                            \n                                    Private\n                                highChart\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRow\n                            \n                            \n                                getChartTitle\n                            \n                            \n                                getData\n                            \n                            \n                                getDataArray\n                            \n                            \n                                getDataLabel\n                            \n                            \n                                getDataLabelArray\n                            \n                            \n                                getHighChart\n                            \n                            \n                                getStorageObject\n                            \n                            \n                                getXAxisLabel\n                            \n                            \n                                getYAxisLabel\n                            \n                            \n                                removeRow\n                            \n                            \n                                resetChartInfo\n                            \n                            \n                                resetData\n                            \n                            \n                                setChartTitle\n                            \n                            \n                                setData\n                            \n                            \n                                setDataLabel\n                            \n                            \n                                setHighChart\n                            \n                            \n                                setStorageObject\n                            \n                            \n                                setXAxisLabel\n                            \n                            \n                                setYAxisLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/dual/dual.service.ts:21\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRow\n                        \n                    \n                \n            \n            \n                \naddRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.ts:94\n                \n            \n\n\n            \n                \n                    MyData interface implementation\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChartTitle\n                        \n                    \n                \n            \n            \n                \ngetChartTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.ts:30\n                \n            \n\n\n            \n                \n                    ChartInfo interface implementation\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         DualDataDict[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataArray\n                        \n                    \n                \n            \n            \n                \ngetDataArray()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     [][]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataLabel\n                        \n                    \n                \n            \n            \n                \ngetDataLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataLabelArray\n                        \n                    \n                \n            \n            \n                \ngetDataLabelArray()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHighChart\n                        \n                    \n                \n            \n            \n                \ngetHighChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Highcharts.Chart\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStorageObject\n                        \n                    \n                \n            \n            \n                \ngetStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         DualChartInfoStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getXAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetXAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getYAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetYAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRow\n                        \n                    \n                \n            \n            \n                \nremoveRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetChartInfo\n                        \n                    \n                \n            \n            \n                \nresetChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetData\n                        \n                    \n                \n            \n            \n                \nresetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setChartTitle\n                        \n                    \n                \n            \n            \n                \nsetChartTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setData\n                        \n                    \n                \n            \n            \n                \nsetData(data: DualDataDict[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DualDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDataLabel\n                        \n                    \n                \n            \n            \n                \nsetDataLabel(data: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setHighChart\n                        \n                    \n                \n            \n            \n                \nsetHighChart(highChart: Highcharts.Chart)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    highChart\n                                    \n                                            Highcharts.Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStorageObject\n                        \n                    \n                \n            \n            \n                \nsetStorageObject(storageObject: DualChartInfoStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storageObject\n                                    \n                                                DualChartInfoStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setXAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetXAxisLabel(xAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    xAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setYAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetYAxisLabel(yAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    yAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chartInfo$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.chartInfoSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartInfoSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(this.dualChartInfo)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.dataSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(this.dualData)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dualChartInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DualChartInfo\n\n                    \n                \n                \n                    \n                        Default value : new DualChartInfo()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dualData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DualData\n\n                    \n                \n                \n                    \n                        Default value : new DualData()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dualStorage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DualStorage\n\n                    \n                \n                \n                    \n                        Default value : new DualStorage()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        highChart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Highcharts.Chart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {DualChartInfo, DualChartInfoStorageObject, DualData, DualDataDict, DualStorage} from \"./dual.service.util\";\nimport {BehaviorSubject, Observable} from \"rxjs\";\nimport {MyData} from \"../shared/data/data.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\nimport * as Highcharts from \"highcharts\";\n\n@Injectable()\nexport class DualService implements MyData, ChartInfo {\n\n  private dualData: DualData = new DualData();\n  private dualChartInfo: DualChartInfo = new DualChartInfo();\n\n  private dualStorage: DualStorage = new DualStorage();\n\n  private dataSubject: BehaviorSubject = new BehaviorSubject(this.dualData);\n  public data$: Observable = this.dataSubject.asObservable();\n  private chartInfoSubject: BehaviorSubject = new BehaviorSubject(this.dualChartInfo);\n  public chartInfo$: Observable = this.chartInfoSubject.asObservable();\n\n  private highChart!: Highcharts.Chart;\n\n  constructor() {\n    this.dualData.setData(this.dualStorage.getData());\n    this.dualChartInfo.setStorageObject(this.dualStorage.getChartInfo());\n  }\n\n  /**ChartInfo interface implementation**/\n\n  getChartTitle(): string {\n    return this.dualChartInfo.getChartTitle();\n  }\n\n  getDataLabel(): string {\n    return this.dualChartInfo.getDataLabel();\n  }\n\n  getDataLabelArray(): string[] {\n    return this.dualChartInfo.getDataLabelArray();\n  }\n\n  getStorageObject(): DualChartInfoStorageObject {\n    return this.dualChartInfo.getStorageObject();\n  }\n\n  getXAxisLabel(): string {\n    return this.dualChartInfo.getXAxisLabel();\n  }\n\n  getYAxisLabel(): string {\n    return this.dualChartInfo.getYAxisLabel();\n  }\n\n  setChartTitle(title: string): void {\n    this.dualChartInfo.setChartTitle(title);\n    this.dualStorage.saveChartInfo(this.dualChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.dualChartInfo);\n  }\n\n  setDataLabel(data: string): void {\n    this.dualChartInfo.setDataLabel(data);\n    this.dualStorage.saveChartInfo(this.dualChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.dualChartInfo);\n    this.dataSubject.next(this.dualData);\n  }\n\n  setStorageObject(storageObject: DualChartInfoStorageObject): void {\n    this.dualChartInfo.setStorageObject(storageObject);\n    this.dualStorage.saveChartInfo(this.dualChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.dualChartInfo);\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.dualChartInfo.setXAxisLabel(xAxis);\n    this.dualStorage.saveChartInfo(this.dualChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.dualChartInfo);\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.dualChartInfo.setYAxisLabel(yAxis);\n    this.dualStorage.saveChartInfo(this.dualChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.dualChartInfo);\n  }\n\n  resetChartInfo() {\n    this.dualChartInfo.setStorageObject(DualChartInfo.getDefaultChartInfo());\n    this.dualStorage.saveChartInfo(this.dualChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.dualChartInfo);\n  }\n\n\n  /**MyData interface implementation**/\n\n  addRow(index: number, amount: number): void {\n    this.dualData.addRow(index, amount);\n    this.dualStorage.saveData(this.dualData.getData());\n    this.dataSubject.next(this.dualData);\n  }\n\n  getData(): DualDataDict[] {\n    return this.dualData.getData();\n  }\n\n  getDataArray(): number[][][] {\n    return this.dualData.getDataArray();\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dualData.removeRow(index, amount);\n    this.dualStorage.saveData(this.dualData.getData());\n    this.dataSubject.next(this.dualData);\n  }\n\n  setData(data: DualDataDict[]): void {\n    this.dualData.setData(data);\n    this.dualStorage.saveData(this.dualData.getData());\n    this.dataSubject.next(this.dualData);\n  }\n\n  resetData() {\n    this.dualData.setData(DualData.getDefaultData());\n    this.dualStorage.saveData(this.dualData.getData());\n    this.dataSubject.next(this.dualData);\n  }\n\n  setHighChart(highChart: Highcharts.Chart) {\n    this.highChart = highChart;\n  }\n\n  getHighChart(): Highcharts.Chart {\n    return this.highChart;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DualStorage.html":{"url":"classes/DualStorage.html","title":"class - DualStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DualStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/dual/dual.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyStorage\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chartInfoKey\n                            \n                            \n                                    Private\n                                dataKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getChartInfo\n                            \n                            \n                                getData\n                            \n                            \n                                getInterface\n                            \n                            \n                                resetChartInfo\n                            \n                            \n                                resetData\n                            \n                            \n                                resetInterface\n                            \n                            \n                                saveChartInfo\n                            \n                            \n                                saveData\n                            \n                            \n                                saveInterface\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartInfoKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'dualChartInfo'\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual.service.util.ts:182\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'dualData'\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual.service.util.ts:181\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getChartInfo\n                        \n                    \n                \n            \n            \n                \ngetChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:184\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         DualChartInfoStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         DualDataDict[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInterface\n                        \n                    \n                \n            \n            \n                \ngetInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:200\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetChartInfo\n                        \n                    \n                \n            \n            \n                \nresetChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:203\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetData\n                        \n                    \n                \n            \n            \n                \nresetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:207\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetInterface\n                        \n                    \n                \n            \n            \n                \nresetInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:211\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveChartInfo\n                        \n                    \n                \n            \n            \n                \nsaveChartInfo(chartInfo: DualChartInfoStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:214\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartInfo\n                                    \n                                                DualChartInfoStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveData\n                        \n                    \n                \n            \n            \n                \nsaveData(data: DualDataDict[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:218\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DualDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveInterface\n                        \n                    \n                \n            \n            \n                \nsaveInterface(interfaceInfo: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:222\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    interfaceInfo\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\n\nexport interface DualDataDict {\n  x1: number | null;\n  y1: number | null;\n  x2: number | null;\n  y2: number | null;\n}\n\nexport class DualData implements MyData {\n  private dataDict: DualDataDict[];\n\n  constructor() {\n    this.dataDict = DualData.getDefaultData();\n  }\n\n  public static getDefaultData(): DualDataDict[] {\n    return [\n      {x1:0, y1:25, x2: 1, y2:10},\n      {x1:1, y1:16, x2: 2, y2:14.1421356237309},\n      {x1:2, y1:9, x2: 3, y2:17.3205080756887},\n      {x1:3, y1:4, x2: 4, y2:20},\n      {x1:4, y1:1, x2: 5, y2:22.3606797749978},\n      {x1:5, y1:4, x2: 6, y2:24.4948974278317},\n      {x1:6, y1:9, x2: 7, y2:26.4575131106459},\n      {x1:7, y1:16, x2: 8, y2:28.2842712474619},\n      {x1:8, y1:25, x2: 9, y2:30},\n      {x1:9, y1:36, x2: 10, y2:31.6227766016837},\n      {x1:null, y1:null, x2: 11, y2:33.166247903554},\n      {x1:null, y1:null, x2: 12, y2:34.6410161513775},\n      {x1:null, y1:null, x2: 13, y2:36.0555127546398},\n      {x1:null, y1:null, x2: 14, y2:37.4165738677394},\n      {x1:null, y1:null, x2: 15, y2:38.7298334620741},\n      {x1:null, y1:null, x2: 16, y2:40},\n      {x1:null, y1:null, x2: 17, y2:41.2310562561766},\n    ];\n  }\n\n  addRow(index: number, amount: number): void {\n    if (index > 0) {\n      for (let i = 0; i  {\n        return entry.x1 !== null && entry.y1 !== null;\n      }).map(\n        (entry: DualDataDict) => {\n          return [entry.x1, entry.y1];\n        }) as number[][],\n      this.dataDict.filter((entry: DualDataDict) => {\n        return entry.x2 !== null && entry.y2 !== null;\n      }).map(\n        (entry: DualDataDict) => {\n          return [entry.x2, entry.y2];\n        }) as number[][]\n    ]\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: DualDataDict[]): void {\n    this.dataDict = data;\n  }\n\n}\n\n\nexport interface DualChartInfoStorageObject {\n  chartTitle: string;\n  dataLabel: string[];\n  xAxisLabel: string;\n  yAxisLabel: string;\n}\n\n\nexport class DualChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private dataLabel: string[];\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n\n  constructor() {\n    this.chartTitle = DualChartInfo.getDefaultChartInfo().chartTitle;\n    this.dataLabel = DualChartInfo.getDefaultChartInfo().dataLabel;\n    this.xAxisLabel = DualChartInfo.getDefaultChartInfo().xAxisLabel;\n    this.yAxisLabel = DualChartInfo.getDefaultChartInfo().yAxisLabel;\n  }\n\n  public static getDefaultChartInfo(): DualChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      dataLabel: [\"y1\", \"y2\"],\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\"\n    }\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    if (this.dataLabel[0] === \"\" && this.dataLabel[1] === \"\") {\n      return \"\";\n    } else {\n      return this.dataLabel.join(\", \");\n    }\n  }\n\n  getStorageObject(): DualChartInfoStorageObject {\n    return {\n      chartTitle: this.chartTitle,\n      dataLabel: this.dataLabel,\n      xAxisLabel: this.xAxisLabel,\n      yAxisLabel: this.yAxisLabel\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    if (data.trim() === \"\") {\n      this.dataLabel = [\"\", \"\"];\n      return;\n    }\n    const inputLabels = data.split(\",\").map((label: string) => {\n      return label.trim();\n    });\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DualTable.html":{"url":"classes/DualTable.html","title":"class - DualTable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DualTable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/dual/dual-table/dual-table.component.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyTable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hotRegisterer\n                            \n                            \n                                    Private\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                            \n                                getTable\n                            \n                            \n                                renderTable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/dual/dual-table/dual-table.component.ts:80\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hotRegisterer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HotTableRegisterer()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual-table/dual-table.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual-table/dual-table.component.ts:79\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual-table/dual-table.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTable\n                        \n                    \n                \n            \n            \n                \ngetTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual-table/dual-table.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Handsontable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderTable\n                        \n                    \n                \n            \n            \n                \nrenderTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual-table/dual-table.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Component} from '@angular/core';\nimport {Subject, takeUntil} from \"rxjs\";\nimport {DualDataDict} from \"../dual.service.util\";\nimport {DualService} from \"../dual.service\";\nimport {MyTable} from \"../../shared/tables/table-interface\";\nimport {HotTableRegisterer} from \"@handsontable/angular\";\nimport Handsontable from \"handsontable\";\n\n@Component({\n  selector: 'app-dual-table',\n  templateUrl: './dual-table.component.html',\n  styleUrls: ['./dual-table.component.scss']\n})\nexport class DualTableComponent {\n  id: string = \"moon-table\";\n  table: DualTable = new DualTable(this.id);\n  colNames: string[] = this.service.getDataLabelArray();\n  dataSet: DualDataDict[];\n  private destroy$: Subject = new Subject();\n\n  constructor(private service: DualService) {\n    this.dataSet = this.service.getData();\n  }\n\n  ngAfterViewInit(): void {\n    this.service.data$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      () => {\n        this.dataSet = this.limitPrecision(this.service.getData(), 2);\n        this.table.renderTable();\n      }\n    );\n    this.service.chartInfo$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      () => {\n        this.colNames = this.service.getDataLabelArray();\n        this.table.renderTable();\n      }\n    )\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  public onChange = (changes: any, source: any) => {\n    if (changes) {\n      this.service.setData(this.table.getData());\n    }\n  }\n\n  public onRemove = (index: number, amount: number) => {\n    this.service.removeRow(index, amount);\n  }\n\n  public onInsert = (index: number, amount: number) => {\n    this.service.addRow(index, amount);\n  }\n\n  private limitPrecision(data: DualDataDict[], precision: number): DualDataDict[] {\n    return data.map(\n      (row: DualDataDict) => {\n        return {\n          x1: row.x1 ? parseFloat(row.x1.toFixed(precision)) : row.x1,\n          y1: row.y1 ? parseFloat(row.y1.toFixed(precision)) : row.y1,\n          x2: row.x2 ? parseFloat(row.x2.toFixed(precision)) : row.x2,\n          y2: row.y2 ? parseFloat(row.y2.toFixed(precision)) : row.y2,\n\n        }\n      }\n    );\n  }\n}\n\nclass DualTable implements MyTable {\n  private readonly id: string;\n  private hotRegisterer = new HotTableRegisterer();\n\n  constructor(id: string) {\n    this.id = id;\n  }\n\n  getTable(): Handsontable {\n    return this.hotRegisterer.getInstance(this.id);\n  }\n\n  renderTable(): void {\n    this.getTable().render();\n  }\n\n  getData(): any[] {\n    return this.getTable().getSourceData();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DualTableComponent.html":{"url":"components/DualTableComponent.html","title":"component - DualTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DualTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/dual/dual-table/dual-table.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dual-table\n            \n\n\n\n            \n                styleUrls\n                ./dual-table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dual-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                colNames\n                            \n                            \n                                dataSet\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                id\n                            \n                            \n                                    Public\n                                onChange\n                            \n                            \n                                    Public\n                                onInsert\n                            \n                            \n                                    Public\n                                onRemove\n                            \n                            \n                                table\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                limitPrecision\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: DualService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/dual/dual-table/dual-table.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        DualService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        limitPrecision\n                        \n                    \n                \n            \n            \n                \n                    \n                    limitPrecision(data: DualDataDict[], precision: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual-table/dual-table.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DualDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    precision\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DualDataDict[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual-table/dual-table.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual-table/dual-table.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        colNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : this.service.getDataLabelArray()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual-table/dual-table.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DualDataDict[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual-table/dual-table.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual-table/dual-table.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"moon-table\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual-table/dual-table.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual-table/dual-table.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onInsert\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual-table/dual-table.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onRemove\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual-table/dual-table.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        table\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DualTable\n\n                    \n                \n                \n                    \n                        Default value : new DualTable(this.id)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual-table/dual-table.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {Subject, takeUntil} from \"rxjs\";\nimport {DualDataDict} from \"../dual.service.util\";\nimport {DualService} from \"../dual.service\";\nimport {MyTable} from \"../../shared/tables/table-interface\";\nimport {HotTableRegisterer} from \"@handsontable/angular\";\nimport Handsontable from \"handsontable\";\n\n@Component({\n  selector: 'app-dual-table',\n  templateUrl: './dual-table.component.html',\n  styleUrls: ['./dual-table.component.scss']\n})\nexport class DualTableComponent {\n  id: string = \"moon-table\";\n  table: DualTable = new DualTable(this.id);\n  colNames: string[] = this.service.getDataLabelArray();\n  dataSet: DualDataDict[];\n  private destroy$: Subject = new Subject();\n\n  constructor(private service: DualService) {\n    this.dataSet = this.service.getData();\n  }\n\n  ngAfterViewInit(): void {\n    this.service.data$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      () => {\n        this.dataSet = this.limitPrecision(this.service.getData(), 2);\n        this.table.renderTable();\n      }\n    );\n    this.service.chartInfo$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      () => {\n        this.colNames = this.service.getDataLabelArray();\n        this.table.renderTable();\n      }\n    )\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  public onChange = (changes: any, source: any) => {\n    if (changes) {\n      this.service.setData(this.table.getData());\n    }\n  }\n\n  public onRemove = (index: number, amount: number) => {\n    this.service.removeRow(index, amount);\n  }\n\n  public onInsert = (index: number, amount: number) => {\n    this.service.addRow(index, amount);\n  }\n\n  private limitPrecision(data: DualDataDict[], precision: number): DualDataDict[] {\n    return data.map(\n      (row: DualDataDict) => {\n        return {\n          x1: row.x1 ? parseFloat(row.x1.toFixed(precision)) : row.x1,\n          y1: row.y1 ? parseFloat(row.y1.toFixed(precision)) : row.y1,\n          x2: row.x2 ? parseFloat(row.x2.toFixed(precision)) : row.x2,\n          y2: row.y2 ? parseFloat(row.y2.toFixed(precision)) : row.y2,\n\n        }\n      }\n    );\n  }\n}\n\nclass DualTable implements MyTable {\n  private readonly id: string;\n  private hotRegisterer = new HotTableRegisterer();\n\n  constructor(id: string) {\n    this.id = id;\n  }\n\n  getTable(): Handsontable {\n    return this.hotRegisterer.getInstance(this.id);\n  }\n\n  renderTable(): void {\n    this.getTable().render();\n  }\n\n  getData(): any[] {\n    return this.getTable().getSourceData();\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n\n    \n\n    \n                \n                    ./dual-table.component.scss\n                \n                .container {\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DualTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HeaderRequirement.html":{"url":"interfaces/HeaderRequirement.html","title":"interface - HeaderRequirement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HeaderRequirement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/shared/data/FileParser.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Subject} from \"rxjs\";\n\n\nexport enum MyFileParserErrors {\n  FORMAT = \"format\",\n  FIELD = \"field\",\n  HEADER = \"header\",\n  DATA = \"data\",\n  STRATEGY = \"strategy\",\n}\n\nexport interface HeaderRequirement {\n  key: string;\n  value?: string;\n}\n\nexport interface MyFileParserStrategy {\n  /**\n   * Validate the format of the file\n   * @param file\n   * @return true if the format is valid, false otherwise\n   */\n  validateFormat(file: File): boolean;\n\n  /**\n   * Get the headers of the file as a dictionary\n   * @param fileText\n   * @param headerRequirements\n   * @return the headers of the file as a dictionary or undefined if the headers are not found\n   */\n  getHeaders(fileText: string,\n             headerRequirements: HeaderRequirement[])\n    : { [key: string]: string } | undefined;\n\n  /**\n   * Get the indices of the fields in the file\n   * Emits an error if one or more fields are not found\n   * @param fileText\n   * @param dataKeys\n   * @return the indices of the fields in the file or undefined if one or more fields are not found\n   */\n  getFieldsIndices(fileText: string,\n                   dataKeys: string[])\n    : { [key: string]: number } | undefined;\n\n  /**\n   * Get the data from the file\n   * Emits an error if the data is invalid\n   * Emits the data if the data is valid\n   * @param fileText\n   * @param fields\n   * @param fieldsIndices\n   * @return the data from the file or undefined if the data is invalid\n   */\n  getData(fileText: string,\n          fields: string[],\n          fieldsIndices: { [key: string]: number },)\n    : any[] | undefined;\n\n  /**\n   * Read the file\n   * Emits an error if the file is invalid\n   * Emits the data if the file is valid\n   * @param file\n   * @param headerRequirements\n   * @param dataKeys\n   * @param errorSubject\n   * @param dataSubject\n   * @param headerSubject\n   */\n  readFile(file: File,\n           headerRequirements: HeaderRequirement[],\n           dataKeys: string[],\n           errorSubject: Subject,\n           dataSubject: Subject | undefined,\n           headerSubject: Subject | undefined): void;\n}\n\nexport class MyFileParser {\n  private readonly strategy!: MyFileParserStrategy;\n  private readonly headerRequirements: HeaderRequirement[];\n  private readonly dataKeys: string[];\n\n  private errorSubject: Subject = new Subject();\n  public error$ = this.errorSubject.asObservable();\n  private headerSubject: Subject\n    = new Subject();\n  public header$ = this.headerSubject.asObservable();\n  private dataSubject: Subject = new Subject();\n  public data$ = this.dataSubject.asObservable();\n\n  constructor(fileType: FileType,\n              dataKeys: string[],\n              headerRequirements: HeaderRequirement[] = [],) {\n    if (fileType === FileType.GBO_SPECTRUM_TXT) {\n      this.strategy = new MyFileParserTXT();\n    } else {\n      this.strategy = new MyFileParserDefault();\n    }\n    this.headerRequirements = headerRequirements;\n    this.dataKeys = dataKeys;\n  }\n\n  /**\n   * Validate the format of a file\n   * @param file\n   * @return true if the format is valid, false otherwise\n   */\n  public validateFormat(file: File): boolean {\n    return this.strategy.validateFormat(file);\n  }\n\n  /**\n   * Get the headers of a file as a dictionary\n   * Emit the headers if the headers are found\n   * @param file\n   * @param isEmitError\n   */\n  public getHeaders(file: File, isEmitError: false): void {\n    if (this.validateFormat(file)) {\n      const fileReader = new FileReader();\n      fileReader.onload = () => {\n        const fileText = fileReader.result as string;\n        const headers = this.strategy.getHeaders(fileText, this.headerRequirements);\n        if (headers === undefined && isEmitError) {\n          this.errorSubject.next(MyFileParserErrors.HEADER);\n        } else {\n          this.headerSubject.next(headers);\n        }\n      }\n      fileReader.readAsText(file);\n    }\n  }\n\n  /**\n   * Read a file, with options weather to emit the data and/or the headers\n   * @param file\n   * @param isEmitData\n   * @param isEmitHeaders\n   */\n  public readFile(file: File, isEmitData: boolean = true, isEmitHeaders: boolean = false): void {\n    this.strategy.readFile(file, this.headerRequirements, this.dataKeys, this.errorSubject,\n      isEmitData ? this.dataSubject : undefined,\n      isEmitHeaders ? this.headerSubject : undefined);\n  }\n\n\n}\n\nexport enum FileType {\n  GBO_SPECTRUM_TXT = \"gbo-spectrum-txt\",\n}\n\n\nclass MyFileParserTXT implements MyFileParserStrategy {\n  getData(fileText: string,\n          fields: string[],\n          fieldsIndices: { [p: string]: number }): any[] | undefined {\n    if (fields.length === 0 || (fields.length !== Object.keys(fieldsIndices).length)) {\n      return undefined;\n    }\n\n    const resultData: any[] = [];\n    fileText.split(\"\\n\").filter((line: string) => !line.startsWith(\"#\"))\n      .map((line: string) => {\n        const data: any = {};\n        const values: string[] = line.split(/\\s+/)\n          .map((value: string) => value.trim())\n          .filter((value: string) => value !== \"\");\n        fields.forEach((field: string) => {\n          data[field] = values[fieldsIndices[field]];\n        });\n        resultData.push(data);\n      });\n    return resultData;\n  }\n\n  getFieldsIndices(fileText: string, dataKeys: string[])\n    : { [p: string]: number } | undefined {\n    const lines = fileText.split(\"\\n\");\n    const nonDataLines = lines.filter((line: string) => line.startsWith(\"#\"));\n    const cols: string[] = nonDataLines[nonDataLines.length - 1]\n      .replace(\"#\", \"\").split(/\\s+/)\n      .map((col: string) => col.trim()).filter((col: string) => col !== \"\");\n    const keyFieldMap: { [key: string]: number } = {};\n    let isDataKeyMissing: boolean = false;\n    dataKeys.forEach((dataKey: string) => {\n      keyFieldMap[dataKey] = cols.indexOf(dataKey);\n      if (keyFieldMap[dataKey] === -1) {\n        isDataKeyMissing = true;\n      }\n    });\n    return isDataKeyMissing ? undefined : keyFieldMap;\n  }\n\n  getHeaders(fileText: string, headerRequirements: HeaderRequirement[])\n    : { [p: string]: string } | undefined {\n    const lines = fileText.split(\"\\n\");\n    const headerLines = lines.filter((line: string) => line.startsWith(\"#\") && line.includes(\"=\"));\n    const headers: { [key: string]: string } = {};\n    headerLines.map((line: string): any => {\n      headers[line.split(\"=\")[0].replace(\"#\", \"\").trim()]\n        = line.split(\"=\")[1].trim();\n    });\n\n    const headerKeys = Object.keys(headers);\n    let isHeaderValid = true;\n    headerRequirements.forEach((headerRequirement: HeaderRequirement) => {\n      if (!headerKeys.includes(headerRequirement.key) ||\n        (headerRequirement.value !== undefined &&\n          headers[headerRequirement.key] !== headerRequirement.value)) {\n        isHeaderValid = false;\n      }\n    });\n    return isHeaderValid ? headers : undefined;\n  }\n\n  readFile(file: File, headerRequirements: HeaderRequirement[], dataKeys: string[],\n           errorSubject: Subject,\n           dataSubject: Subject | undefined,\n           headerSubject: Subject | undefined): void {\n    if (!this.validateFormat(file)) {\n      errorSubject.next(MyFileParserErrors.FORMAT);\n      return;\n    }\n\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      const fileText = fileReader.result as string;\n      const headers = this.getHeaders(fileText, headerRequirements);\n      if (headers === undefined) {\n        errorSubject.next(MyFileParserErrors.HEADER);\n        return;\n      }\n      if (headerSubject !== undefined) {\n        headerSubject.next(headers);\n      }\n      const fieldsIndices = this.getFieldsIndices(fileText, dataKeys);\n      if (fieldsIndices === undefined) {\n        errorSubject.next(MyFileParserErrors.FIELD);\n        return;\n      }\n\n      const data = this.getData(fileText, dataKeys, fieldsIndices);\n      if (data === undefined) {\n        errorSubject.next(MyFileParserErrors.DATA);\n        return;\n      }\n      if (dataSubject !== undefined) {\n        dataSubject.next(data);\n      }\n    }\n    fileReader.readAsText(file);\n  }\n\n  validateFormat(file: File): boolean {\n    return !(!file.type.match(\"text/plain\") || !file.name.endsWith(\".txt\"));\n  }\n}\n\nclass MyFileParserDefault implements MyFileParserStrategy {\n  getData(fileText: string, fields: string[],\n          fieldsIndices: { [value: string]: number }): any[] | undefined {\n    return undefined;\n  }\n\n  getFieldsIndices(fileText: string, dataKeys: string[]): { [p: string]: number } | undefined {\n    return undefined;\n  }\n\n  getHeaders(fileText: string, headerRequirements: HeaderRequirement[]): { [p: string]: string } | undefined {\n    return undefined;\n  }\n\n  readFile(file: File, headerRequirements: HeaderRequirement[], dataKeys: string[],\n           errorSubject: Subject,\n           dataSubject: Subject | undefined,\n           headerSubject: Subject | undefined): void {\n    errorSubject.next(MyFileParserErrors.STRATEGY);\n  }\n\n  validateFormat(file: File): boolean {\n    return false;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/home/home.component.ts\n\n\n\n    \n        Description\n    \n    \n        Home page of the site\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component} from '@angular/core';\n\n/**\n * Home page of the site\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent {\n\n}\n\n    \n\n    \n        home works!\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'home works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HonorCodeChartService.html":{"url":"injectables/HonorCodeChartService.html","title":"injectable - HonorCodeChartService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HonorCodeChartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/shared/honor-code-popup/honor-code-chart.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Services for charts to perform\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateFileName\n                            \n                            \n                                    Private\n                                generateSignature\n                            \n                            \n                                saveImage\n                            \n                            \n                                    Public\n                                saveImageHighChart\n                            \n                            \n                                    Public\n                                saveImageHighChartOffline\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/shared/honor-code-popup/honor-code-chart.service.ts:15\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generateFileName\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateFileName(chartType: string, signature: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/honor-code-popup/honor-code-chart.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    signature\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generateSignature\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateSignature(signature: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/honor-code-popup/honor-code-chart.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signature\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveImage\n                        \n                    \n                \n            \n            \n                \nsaveImage(chart: Chart, signature: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/honor-code-popup/honor-code-chart.service.ts:27\n                \n            \n\n\n            \n                \n                    Save image to user's device as jpg.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    chart\n                                    \n                                            Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The chart.js that needs to be saved\n\n                                    \n                                \n                                \n                                    signature\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User's signature\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        saveImageHighChart\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveImageHighChart(chart: Highcharts.Chart, chartType: string, signature: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/honor-code-popup/honor-code-chart.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chart\n                                    \n                                            Highcharts.Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    chartType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    signature\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        saveImageHighChartOffline\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveImageHighChartOffline(chart: Highcharts.Chart, ChartType: string, signature: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/honor-code-popup/honor-code-chart.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chart\n                                    \n                                            Highcharts.Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ChartType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    signature\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Chart} from \"chart.js/dist/types\";\nimport {addEXIFToImage, dataURLtoBlob, formatTime, getDateString} from \"../charts/utils\";\nimport {saveAs} from 'file-saver';\nimport * as Highcharts from 'highcharts';\nimport HC_exporting from \"highcharts/modules/exporting\";\nimport HC_offline_exporting from \"highcharts/modules/offline-exporting\";\n\n/**\n * Services for charts to perform\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class HonorCodeChartService {\n\n  constructor() {\n    HC_exporting(Highcharts);\n    HC_offline_exporting(Highcharts);\n  }\n\n  /**\n   * Save image to user's device as jpg.\n   * @param chart The chart.js that needs to be saved\n   * @param signature User's signature\n   */\n  saveImage(chart: Chart, signature: string): void {\n    const destCanvas = document.createElement('canvas');\n    const canvas = chart.canvas;\n    destCanvas.width = canvas.width;\n    destCanvas.height = canvas.height;\n    const destCtx = destCanvas.getContext('2d');\n    if (!destCtx)\n      return;\n    destCtx.fillStyle = '#FFFFFF';\n    destCtx.fillRect(0, 0, destCanvas.width, destCanvas.height);\n    destCtx.drawImage(canvas, 0, 0);\n    const time = getDateString();\n    const exifImage = addEXIFToImage(destCanvas.toDataURL('image/jpeg', 1.0), signature, time);\n    //create image\n    saveAs(dataURLtoBlob(exifImage), 'chart-' + formatTime(time) + '.jpg');\n  }\n\n  public saveImageHighChart(chart: Highcharts.Chart, chartType: string, signature: string): void {\n    if (chartType && signature) {\n      chart.exportChart(\n        {\n          filename: this.generateFileName(chartType, signature),\n          type: 'image/jpeg',\n        },\n        {credits: {text: this.generateSignature(signature)}});\n    }\n  }\n\n  public saveImageHighChartOffline(chart: Highcharts.Chart, ChartType: string, signature: string): void {\n    if (ChartType && signature) {\n      chart.exportChartLocal(\n        {\n          filename: this.generateFileName(ChartType, signature),\n          type: 'image/jpeg',\n        },\n        {credits: {text: this.generateSignature(signature)}});\n    }\n  }\n\n  private generateFileName(chartType: string, signature: string): string {\n    return chartType + '-' + formatTime(getDateString()) + '-' + signature;\n  }\n\n  private generateSignature(signature: string): string {\n    return \"Created by \" + signature + \" at skynet.unc.edu\";\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HonorCodePopupComponent.html":{"url":"components/HonorCodePopupComponent.html","title":"component - HonorCodePopupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HonorCodePopupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/shared/honor-code-popup/honor-code-popup.component.ts\n\n\n\n    \n        Description\n    \n    \n        Popup window to collect signature before initiating graph downloading.\nDeclared in HonorCodePopupModule\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-honor-code-popup\n            \n\n\n\n            \n                styleUrls\n                ./honor-code-popup.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./honor-code-popup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dismiss\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matDialogRef: MatDialogRef, formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/shared/honor-code-popup/honor-code-popup.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matDialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        dismiss\n                        \n                    \n                \n            \n            \n                \n                    \n                    dismiss()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/honor-code-popup/honor-code-popup.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/honor-code-popup/honor-code-popup.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        submit\n                        \n                    \n                \n            \n            \n                \n                    \n                    submit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/honor-code-popup/honor-code-popup.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/shared/honor-code-popup/honor-code-popup.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {MatLegacyDialogRef as MatDialogRef} from \"@angular/material/legacy-dialog\";\n\n/**\n * Popup window to collect signature before initiating graph downloading.\n *\n * Declared in {@link HonorCodePopupModule}\n */\n@Component({\n  selector: 'app-honor-code-popup',\n  templateUrl: './honor-code-popup.component.html',\n  styleUrls: ['./honor-code-popup.component.scss']\n})\nexport class HonorCodePopupComponent implements OnInit {\n  form!: FormGroup;\n\n  constructor(private matDialogRef: MatDialogRef, private formBuilder: FormBuilder) {\n  }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      signature: ['', Validators.required]\n    });\n  }\n\n  public dismiss() {\n    this.matDialogRef.close();\n  }\n\n  public submit() {\n    if (this.form.valid) {\n      this.matDialogRef.close(this.form.value.signature);\n    }\n  }\n\n}\n\n    \n\n    \n        \n  Honor Code Pledge\n  \n    close\n  \n\n\n  \n    REQUIRED FOR RECEIVING CREDIT\n    \n      Sign your name to attest to the fact that you made this graph yourself:\n      \n      Click to start typing\n    \n  \n  \n    Submit\n    \n  \n\n\n    \n\n    \n                \n                    ./honor-code-popup.component.scss\n                \n                h2 {\n  margin-bottom: 0;\n}\n\nmat-form-field {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Honor Code Pledge      close        REQUIRED FOR RECEIVING CREDIT          Sign your name to attest to the fact that you made this graph yourself:            Click to start typing            Submit      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HonorCodePopupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HonorCodePopupModule.html":{"url":"modules/HonorCodePopupModule.html","title":"module - HonorCodePopupModule","body":"\n                   \n\n\n\n\n    Modules\n    HonorCodePopupModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HonorCodePopupModule\n\n\n\ncluster_HonorCodePopupModule_declarations\n\n\n\n\nHonorCodePopupComponent\n\nHonorCodePopupComponent\n\n\n\nHonorCodePopupModule\n\nHonorCodePopupModule\n\nHonorCodePopupModule -->\n\nHonorCodePopupComponent->HonorCodePopupModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tools/shared/honor-code-popup/honor-code-popup.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module encapsulating HonorCodePopupComponent\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HonorCodePopupComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from \"@angular/core\";\nimport {HonorCodePopupComponent} from \"./honor-code-popup.component\";\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {MatLegacyButtonModule as MatButtonModule} from \"@angular/material/legacy-button\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatLegacyInputModule as MatInputModule} from \"@angular/material/legacy-input\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {MatLegacyDialogModule as MatDialogModule} from \"@angular/material/legacy-dialog\";\n\n/**\n * Module encapsulating {@link HonorCodePopupComponent}\n */\n@NgModule({\n  imports: [\n    NgbModule,\n    MatButtonModule,\n    MatIconModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatDialogModule,\n  ],\n  declarations: [HonorCodePopupComponent]\n})\nexport class HonorCodePopupModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HonorCodePopupService.html":{"url":"injectables/HonorCodePopupService.html","title":"injectable - HonorCodePopupService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HonorCodePopupService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/shared/honor-code-popup/honor-code-popup.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                saveGraphButton\n                            \n                            \n                                    Private\n                                saveGraphSpinner\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                disableSaveGraph\n                            \n                            \n                                    Public\n                                enableSaveGraph\n                            \n                            \n                                    Public\n                                honored\n                            \n                            \n                                    Public\n                                registerSaveGraphButton\n                            \n                            \n                                    Public\n                                registerSaveGraphSpinner\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/shared/honor-code-popup/honor-code-popup.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        disableSaveGraph\n                        \n                    \n                \n            \n            \n                \n                    \n                    disableSaveGraph()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/honor-code-popup/honor-code-popup.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        enableSaveGraph\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableSaveGraph()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/honor-code-popup/honor-code-popup.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        honored\n                        \n                    \n                \n            \n            \n                \n                    \n                    honored()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/honor-code-popup/honor-code-popup.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        registerSaveGraphButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerSaveGraphButton(button: MatButton)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/honor-code-popup/honor-code-popup.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    button\n                                    \n                                            MatButton\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        registerSaveGraphSpinner\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerSaveGraphSpinner(spinner: MatProgressSpinner)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/honor-code-popup/honor-code-popup.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    spinner\n                                    \n                                            MatProgressSpinner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        saveGraphButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatButton\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/shared/honor-code-popup/honor-code-popup.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        saveGraphSpinner\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatProgressSpinner\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/shared/honor-code-popup/honor-code-popup.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HonorCodePopupComponent} from \"./honor-code-popup.component\";\nimport {MatLegacyDialog as MatDialog} from \"@angular/material/legacy-dialog\";\nimport {Observable} from \"rxjs\";\nimport {MatButton} from \"@angular/material/button\";\nimport {MatProgressSpinner} from \"@angular/material/progress-spinner\";\n\n@Injectable()\nexport class HonorCodePopupService {\n  private saveGraphButton!: MatButton;\n  private saveGraphSpinner!: MatProgressSpinner;\n\n  constructor(private dialog: MatDialog) {\n  }\n\n  public registerSaveGraphButton(button: MatButton): void {\n    this.saveGraphButton = button;\n  }\n\n  public registerSaveGraphSpinner(spinner: MatProgressSpinner): void {\n    this.saveGraphSpinner = spinner;\n  }\n\n  public disableSaveGraph(): void {\n    this.saveGraphButton.disabled = true;\n  }\n\n  public enableSaveGraph(): void {\n    this.saveGraphButton.disabled = false;\n  }\n\n  public honored(): Observable {\n    const modalRef = this.dialog.open(HonorCodePopupComponent,\n      {width: '500px',});\n    return modalRef.afterClosed();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputSliderComponent.html":{"url":"components/InputSliderComponent.html","title":"component - InputSliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InputSliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/shared/interface/input-slider/input-slider.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                my-input-slider\n            \n\n\n\n            \n                styleUrls\n                ./input-slider.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./input-slider.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Protected\n                                formControl\n                            \n                            \n                                    \n                                inputChild\n                            \n                            \n                                    Private\n                                slider$\n                            \n                            \n                                    Protected\n                                sliderSubject\n                            \n                            \n                                    Protected\n                                    Readonly\n                                SliderUtil\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                defaultValue\n                            \n                            \n                                isLog\n                            \n                            \n                                label\n                            \n                            \n                                maxValue\n                            \n                            \n                                minValue\n                            \n                            \n                                name\n                            \n                            \n                                numOverride\n                            \n                            \n                                step\n                            \n                            \n                                stepValue\n                            \n                            \n                                value$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:31\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        defaultValue\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isLog\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxValue\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minValue\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        numOverride\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        step\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        stepValue\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.01\n                    \n                \n                        \n                            \n                                    Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value$\n                    \n                \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:23\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valueChange\n                        \n                    \n                \n            \n            \n                \nvalueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        formControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        inputChild\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatInput\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('input')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        slider$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.sliderSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        sliderSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        SliderUtil\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SliderUtil\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, EventEmitter, Input, OnDestroy, Output, ViewChild} from '@angular/core';\nimport {FormControl, Validators} from \"@angular/forms\";\nimport {debounceTime, Subject, takeUntil, throttleTime} from \"rxjs\";\nimport {MatInput} from \"@angular/material/input\";\n\n@Component({\n  selector: 'my-input-slider',\n  templateUrl: './input-slider.component.html',\n  styleUrls: ['./input-slider.component.scss'],\n})\nexport class InputSliderComponent implements OnDestroy, AfterViewInit {\n\n  @Input() minValue!: number;\n  @Input() maxValue!: number;\n  @Input() defaultValue!: number;\n  @Input() step!: number;\n  @Input() stepValue: number = 0.01;\n  @Input() isLog: boolean = false;\n  @Input() numOverride: boolean = false;\n  @Input() name!: string;\n  @Input() label!: string;\n  @Input() value$!: Subject;\n  @Output() value: EventEmitter = new EventEmitter();\n\n\n  @ViewChild(\"input\") inputChild!: MatInput;\n  protected sliderSubject: Subject = new Subject();\n  protected readonly SliderUtil = SliderUtil;\n  protected formControl!: FormControl;\n  private slider$ = this.sliderSubject.asObservable();\n  private destroy$ = new Subject();\n\n  constructor() {\n    this.formControl = new FormControl(\n      this.defaultValue,\n      [Validators.min(this.minValue), Validators.max(this.maxValue)],\n    );\n  }\n\n  ngAfterViewInit(): void {\n    this.formControl = new FormControl(\n      this.defaultValue,\n      [Validators.min(this.minValue), Validators.max(this.maxValue), Validators.required],\n    );\n    this.formControl.statusChanges.pipe(\n      takeUntil(this.destroy$),\n      debounceTime(2000)\n    ).subscribe(\n      (status) => {\n        if (status === \"INVALID\") {\n          if (this.formControl.hasError('min') && !this.numOverride) {\n            this.formControl.setValue(this.minValue);\n          } else if (this.formControl.hasError('max') && !this.numOverride) {\n            this.formControl.setValue(this.maxValue);\n          }\n        }\n      }\n    )\n    this.formControl.valueChanges.pipe(\n      takeUntil(this.destroy$),\n      throttleTime(25, undefined, {leading: false, trailing: true}),\n    ).subscribe(\n      (value) => {\n        this.valueChange(value);\n      });\n    this.slider$.pipe(\n      takeUntil(this.destroy$),\n      throttleTime(25, undefined, {leading: false, trailing: true}),\n    ).subscribe(\n      (value) => {\n        this.formControl.setValue(value);\n        this.valueChange(this.formControl.value);\n      });\n    this.value$?.pipe(\n      takeUntil(this.destroy$),\n    ).subscribe(\n      (value) => {\n        this.formControl.setValue(value);\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  valueChange(value: any) {\n    this.value.emit({key: this.name, value: value});\n  }\n}\n\nexport interface InputSliderValue {\n  key: string;\n  value: any;\n}\n\nclass SliderUtil {\n  public static inputToSlider(input: string | number, isLog: boolean) {\n    const value = typeof input === 'number' ? input : parseFloat(input);\n    if (isLog) {\n      return Math.log(value);\n    } else {\n      return value;\n    }\n  }\n\n  public static sliderToInput($event: Event, isLog: boolean) {\n    const slider = parseFloat(($event.target as HTMLInputElement).value);\n    if (isLog) {\n      return String(SliderUtil.myRound(Math.exp(slider), 2));\n    } else {\n      return String(SliderUtil.myRound(slider, 2));\n    }\n  }\n\n  public static getSliderMin(min: string | number, isLog: boolean) {\n    const minNum = typeof min === 'number' ? min : parseFloat(min);\n    return SliderUtil.inputToSlider(minNum, isLog);\n  }\n\n  public static getSliderMax(max: string | number, isLog: boolean) {\n    const maxNum = typeof max === 'number' ? max : parseFloat(max);\n    return SliderUtil.inputToSlider(maxNum, isLog);\n  }\n\n  public static getSliderStep(min: string | number, max: string | number, step: number | string, isLog: boolean): number {\n    const minNum = typeof min === 'number' ? min : parseFloat(min);\n    const maxNum = typeof max === 'number' ? max : parseFloat(max);\n    const stepNum = typeof step === 'number' ? step : parseFloat(step);\n    if (!isLog) {\n      return stepNum;\n    } else {\n      return ((Math.log(maxNum) - Math.log(minNum)) / ((maxNum - minNum) / stepNum))\n    }\n  }\n\n  private static myRound(value: number, precision: number) {\n    const multiplier = Math.pow(10, precision);\n    return Math.round(value * multiplier) / multiplier;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{label}}\n      \n      range: {{minValue}}-{{maxValue}}\n    \n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./input-slider.component.scss\n                \n                mat-form-field {\n  width: 100%;\n}\n\nmat-slider {\n  width: 90%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{label}}            range: {{minValue}}-{{maxValue}}                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InputSliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InputSliderValue.html":{"url":"interfaces/InputSliderValue.html","title":"interface - InputSliderValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InputSliderValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/shared/interface/input-slider/input-slider.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {AfterViewInit, Component, EventEmitter, Input, OnDestroy, Output, ViewChild} from '@angular/core';\nimport {FormControl, Validators} from \"@angular/forms\";\nimport {debounceTime, Subject, takeUntil, throttleTime} from \"rxjs\";\nimport {MatInput} from \"@angular/material/input\";\n\n@Component({\n  selector: 'my-input-slider',\n  templateUrl: './input-slider.component.html',\n  styleUrls: ['./input-slider.component.scss'],\n})\nexport class InputSliderComponent implements OnDestroy, AfterViewInit {\n\n  @Input() minValue!: number;\n  @Input() maxValue!: number;\n  @Input() defaultValue!: number;\n  @Input() step!: number;\n  @Input() stepValue: number = 0.01;\n  @Input() isLog: boolean = false;\n  @Input() numOverride: boolean = false;\n  @Input() name!: string;\n  @Input() label!: string;\n  @Input() value$!: Subject;\n  @Output() value: EventEmitter = new EventEmitter();\n\n\n  @ViewChild(\"input\") inputChild!: MatInput;\n  protected sliderSubject: Subject = new Subject();\n  protected readonly SliderUtil = SliderUtil;\n  protected formControl!: FormControl;\n  private slider$ = this.sliderSubject.asObservable();\n  private destroy$ = new Subject();\n\n  constructor() {\n    this.formControl = new FormControl(\n      this.defaultValue,\n      [Validators.min(this.minValue), Validators.max(this.maxValue)],\n    );\n  }\n\n  ngAfterViewInit(): void {\n    this.formControl = new FormControl(\n      this.defaultValue,\n      [Validators.min(this.minValue), Validators.max(this.maxValue), Validators.required],\n    );\n    this.formControl.statusChanges.pipe(\n      takeUntil(this.destroy$),\n      debounceTime(2000)\n    ).subscribe(\n      (status) => {\n        if (status === \"INVALID\") {\n          if (this.formControl.hasError('min') && !this.numOverride) {\n            this.formControl.setValue(this.minValue);\n          } else if (this.formControl.hasError('max') && !this.numOverride) {\n            this.formControl.setValue(this.maxValue);\n          }\n        }\n      }\n    )\n    this.formControl.valueChanges.pipe(\n      takeUntil(this.destroy$),\n      throttleTime(25, undefined, {leading: false, trailing: true}),\n    ).subscribe(\n      (value) => {\n        this.valueChange(value);\n      });\n    this.slider$.pipe(\n      takeUntil(this.destroy$),\n      throttleTime(25, undefined, {leading: false, trailing: true}),\n    ).subscribe(\n      (value) => {\n        this.formControl.setValue(value);\n        this.valueChange(this.formControl.value);\n      });\n    this.value$?.pipe(\n      takeUntil(this.destroy$),\n    ).subscribe(\n      (value) => {\n        this.formControl.setValue(value);\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  valueChange(value: any) {\n    this.value.emit({key: this.name, value: value});\n  }\n}\n\nexport interface InputSliderValue {\n  key: string;\n  value: any;\n}\n\nclass SliderUtil {\n  public static inputToSlider(input: string | number, isLog: boolean) {\n    const value = typeof input === 'number' ? input : parseFloat(input);\n    if (isLog) {\n      return Math.log(value);\n    } else {\n      return value;\n    }\n  }\n\n  public static sliderToInput($event: Event, isLog: boolean) {\n    const slider = parseFloat(($event.target as HTMLInputElement).value);\n    if (isLog) {\n      return String(SliderUtil.myRound(Math.exp(slider), 2));\n    } else {\n      return String(SliderUtil.myRound(slider, 2));\n    }\n  }\n\n  public static getSliderMin(min: string | number, isLog: boolean) {\n    const minNum = typeof min === 'number' ? min : parseFloat(min);\n    return SliderUtil.inputToSlider(minNum, isLog);\n  }\n\n  public static getSliderMax(max: string | number, isLog: boolean) {\n    const maxNum = typeof max === 'number' ? max : parseFloat(max);\n    return SliderUtil.inputToSlider(maxNum, isLog);\n  }\n\n  public static getSliderStep(min: string | number, max: string | number, step: number | string, isLog: boolean): number {\n    const minNum = typeof min === 'number' ? min : parseFloat(min);\n    const maxNum = typeof max === 'number' ? max : parseFloat(max);\n    const stepNum = typeof step === 'number' ? step : parseFloat(step);\n    if (!isLog) {\n      return stepNum;\n    } else {\n      return ((Math.log(maxNum) - Math.log(minNum)) / ((maxNum - minNum) / stepNum))\n    }\n  }\n\n  private static myRound(value: number, precision: number) {\n    const multiplier = Math.pow(10, precision);\n    return Math.round(value * multiplier) / multiplier;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InterfaceUtilModule.html":{"url":"modules/InterfaceUtilModule.html","title":"module - InterfaceUtilModule","body":"\n                   \n\n\n\n\n    Modules\n    InterfaceUtilModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_InterfaceUtilModule\n\n\n\ncluster_InterfaceUtilModule_exports\n\n\n\ncluster_InterfaceUtilModule_declarations\n\n\n\n\nInputSliderComponent\n\nInputSliderComponent\n\n\n\nInterfaceUtilModule\n\nInterfaceUtilModule\n\nInterfaceUtilModule -->\n\nInputSliderComponent->InterfaceUtilModule\n\n\n\n\n\nInputSliderComponent \n\nInputSliderComponent \n\nInputSliderComponent  -->\n\nInterfaceUtilModule->InputSliderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tools/shared/interface/util.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            InputSliderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            InputSliderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from \"@angular/core\";\nimport {InputSliderComponent} from \"./input-slider/input-slider.component\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatSliderModule} from \"@angular/material/slider\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\n\n@NgModule({\n  imports: [\n    MatInputModule,\n    MatSliderModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  exports: [\n    InputSliderComponent\n  ],\n  declarations: [InputSliderComponent]\n})\nexport class InterfaceUtilModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LineFormComponent.html":{"url":"components/LineFormComponent.html","title":"component - LineFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LineFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/curve/line-form/line-form.component.ts\n\n\n\n    \n        Description\n    \n    \n        Data form for the CurveComponent\nContains one selector for number of curves; and a toggle button for magnitude to flip Y axis.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-line-form\n            \n\n\n\n            \n                styleUrls\n                ./line-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./line-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                curveCounts\n                            \n                            \n                                curveCountsKeys\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                form\n                            \n                            \n                                magnitude\n                            \n                            \n                                    \n                                magSlider\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onCurveNumChange\n                            \n                            \n                                onMagnitude\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: CurveService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/curve/line-form/line-form.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        CurveService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/line-form/line-form.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/line-form/line-form.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCurveNumChange\n                        \n                    \n                \n            \n            \n                \nonCurveNumChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/line-form/line-form.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMagnitude\n                        \n                    \n                \n            \n            \n                \nonMagnitude(value: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/line-form/line-form.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        curveCounts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    [CurveCounts.ONE]: CurveCounts.ONE,\n    [CurveCounts.TWO]: CurveCounts.TWO,\n    [CurveCounts.THREE]: CurveCounts.THREE,\n    [CurveCounts.FOUR]: CurveCounts.FOUR,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/line-form/line-form.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        curveCountsKeys\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(this.curveCounts)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/line-form/line-form.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/line-form/line-form.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(CurveCounts.ONE)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/line-form/line-form.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        magnitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : this.service.getIsMagnitudeOn()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/line-form/line-form.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        magSlider\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSlideToggle\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('magSlider')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/line-form/line-form.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnDestroy, ViewChild} from '@angular/core';\nimport {FormControl} from \"@angular/forms\";\nimport {CurveService} from \"../curve.service\";\nimport {CurveCounts} from \"../curve.service.util\";\nimport {MatLegacySlideToggle as MatSlideToggle} from \"@angular/material/legacy-slide-toggle\";\nimport {Subject, takeUntil} from 'rxjs';\n\n/**\n * Type for passing/parsing number of curve to be plotted to the @LineFormComponent\n */\n\n/**\n * Data form for the {@link CurveComponent}\n *\n * Contains one selector for number of curves; and a toggle button for magnitude to flip Y axis.\n */\n@Component({\n  selector: 'app-line-form',\n  templateUrl: './line-form.component.html',\n  styleUrls: ['./line-form.component.scss'],\n})\nexport class LineFormComponent implements AfterViewInit, OnDestroy {\n  curveCounts = {\n    [CurveCounts.ONE]: CurveCounts.ONE,\n    [CurveCounts.TWO]: CurveCounts.TWO,\n    [CurveCounts.THREE]: CurveCounts.THREE,\n    [CurveCounts.FOUR]: CurveCounts.FOUR,\n  };\n  curveCountsKeys = Object.values(this.curveCounts);\n  form = new FormControl(CurveCounts.ONE);\n  @ViewChild(\"magSlider\") magSlider!: MatSlideToggle;\n  magnitude: boolean = this.service.getIsMagnitudeOn();\n  private destroy$: Subject = new Subject();\n\n  constructor(private service: CurveService) {\n    this.form.setValue(this.service.getCurveCount());\n    this.magnitude = this.service.getIsMagnitudeOn();\n  }\n\n  onCurveNumChange() {\n    // @ts-ignore\n    this.service.setCurveCount(this.form.value);\n  };\n\n  onMagnitude(value: boolean) {\n    this.service.setIsMagnitudeOn(value);\n  }\n\n  ngAfterViewInit(): void {\n    this.service.interface$.pipe(takeUntil(this.destroy$)\n    ).subscribe((curveInterface) => {\n      this.form.setValue(curveInterface.getCurveCount());\n      this.magSlider.checked = curveInterface.getIsMagnitudeOn();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n  }\n\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          Number of Curves\n          \n            \n              {{count}}\n            \n          \n        \n      \n    \n    \n      \n        Magnitude\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./line-form.component.scss\n                \n                mat-form-field {\n  width: 100%;\n}\n\nmat-slide-toggle {\n  margin-left: 10px;\n  margin-top: 15px;\n  font-size: large;\n}\n\np {\n  margin-top: 15px;\n  //font-size: medium;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              Number of Curves                                    {{count}}                                                          Magnitude            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LineFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenubarComponent.html":{"url":"components/MenubarComponent.html","title":"component - MenubarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MenubarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/menubar/menubar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Menu bar for the entire app\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-menubar\n            \n\n\n\n            \n                styleUrls\n                ./menubar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menubar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openToolNavbar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                navbar\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        navbar\n                    \n                \n                \n                    \n                        Type :         ToolsNavbarComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/menubar/menubar.component.ts:20\n                            \n                        \n                \n                    \n                        Toolsbar component to select different interface\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        openToolNavbar\n                        \n                    \n                \n            \n            \n                \nopenToolNavbar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/menubar/menubar.component.ts:25\n                \n            \n\n\n            \n                \n                    function for opening the tool navigation bar\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, NgModule} from '@angular/core';\nimport {ToolsNavbarComponent} from \"../tools-navbar/tools-navbar.component\";\nimport {AppRoutingModule} from \"../../app-routing.module\";\nimport {MatLegacyButtonModule as MatButtonModule} from \"@angular/material/legacy-button\";\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\nimport {MatIconModule} from \"@angular/material/icon\";\n\n/**\n * Menu bar for the entire app\n */\n@Component({\n  selector: 'app-menubar',\n  templateUrl: './menubar.component.html',\n  styleUrls: ['./menubar.component.scss']\n})\nexport class MenubarComponent {\n  /**\n   * Toolsbar component to select different interface\n   */\n  @Input() navbar!: ToolsNavbarComponent\n\n  /**\n   * function for opening the tool navigation bar\n   */\n  openToolNavbar() {\n    this.navbar.open();\n  }\n\n}\n\n/**\n * Encapsution for {@link MenubarComponent}\n */\n@NgModule({\n  imports: [\n    AppRoutingModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n  ],\n  declarations: [\n    MenubarComponent\n  ],\n  exports: [MenubarComponent],\n})\nexport class MenubarModule {\n}\n\n\n    \n\n    \n        \n  \n    menu\n  \n  \n    Skynet Graphing Tool neo\n  \n  \n    settings\n  \n  \n    info\n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./menubar.component.scss\n                \n                .cursive {\n  font-family: \"Brush Script MT\", serif;\n}\n\n.mat-flat-button {\n  font-size: large;\n}\n\n.toolbar-spacer {\n  flex: 1 1 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      menu        Skynet Graphing Tool neo        settings        info                    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MenubarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MenubarModule.html":{"url":"modules/MenubarModule.html","title":"module - MenubarModule","body":"\n                   \n\n\n\n\n    Modules\n    MenubarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MenubarModule\n\n\n\ncluster_MenubarModule_declarations\n\n\n\ncluster_MenubarModule_imports\n\n\n\ncluster_MenubarModule_exports\n\n\n\n\nMenubarComponent\n\nMenubarComponent\n\n\n\nMenubarModule\n\nMenubarModule\n\nMenubarModule -->\n\nMenubarComponent->MenubarModule\n\n\n\n\n\nMenubarComponent \n\nMenubarComponent \n\nMenubarComponent  -->\n\nMenubarModule->MenubarComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nMenubarModule -->\n\nAppRoutingModule->MenubarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/menubar/menubar.component.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Encapsution for MenubarComponent\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MenubarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MenubarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {Component, Input, NgModule} from '@angular/core';\nimport {ToolsNavbarComponent} from \"../tools-navbar/tools-navbar.component\";\nimport {AppRoutingModule} from \"../../app-routing.module\";\nimport {MatLegacyButtonModule as MatButtonModule} from \"@angular/material/legacy-button\";\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\nimport {MatIconModule} from \"@angular/material/icon\";\n\n/**\n * Menu bar for the entire app\n */\n@Component({\n  selector: 'app-menubar',\n  templateUrl: './menubar.component.html',\n  styleUrls: ['./menubar.component.scss']\n})\nexport class MenubarComponent {\n  /**\n   * Toolsbar component to select different interface\n   */\n  @Input() navbar!: ToolsNavbarComponent\n\n  /**\n   * function for opening the tool navigation bar\n   */\n  openToolNavbar() {\n    this.navbar.open();\n  }\n\n}\n\n/**\n * Encapsution for {@link MenubarComponent}\n */\n@NgModule({\n  imports: [\n    AppRoutingModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n  ],\n  declarations: [\n    MenubarComponent\n  ],\n  exports: [MenubarComponent],\n})\nexport class MenubarModule {\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MoonChartFormComponent.html":{"url":"components/MoonChartFormComponent.html","title":"component - MoonChartFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MoonChartFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/moon/moon-chart-form/moon-chart-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-moon-chart-form\n            \n\n\n\n            \n                styleUrls\n                ./moon-chart-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./moon-chart-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                formGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: MoonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/moon/moon-chart-form/moon-chart-form.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        MoonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-chart-form/moon-chart-form.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-chart-form/moon-chart-form.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-chart-form/moon-chart-form.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnDestroy} from '@angular/core';\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {MoonService} from \"../moon.service\";\nimport {debounceTime, Subject, takeUntil} from \"rxjs\";\n\n@Component({\n  selector: 'app-moon-chart-form',\n  templateUrl: './moon-chart-form.component.html',\n  styleUrls: ['./moon-chart-form.component.scss']\n})\nexport class MoonChartFormComponent implements OnDestroy {\n  formGroup!: FormGroup;\n  private destroy$: Subject = new Subject();\n\n  constructor(private service: MoonService) {\n    this.service.chartInfo$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(info => {\n      this.formGroup = new FormGroup({\n        chartTitle: new FormControl(this.service.getChartTitle()),\n        dataLabel: new FormControl(this.service.getDataLabel()),\n        xAxisLabel: new FormControl(this.service.getXAxisLabel()),\n        yAxisLabel: new FormControl(this.service.getYAxisLabel()),\n      })\n      this.formGroup.controls['chartTitle'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(title => {\n        this.service.setChartTitle(title);\n      });\n      this.formGroup.controls['dataLabel'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(labels => {\n        this.service.setDataLabel(labels);\n      });\n      this.formGroup.controls['xAxisLabel'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(label => {\n        this.service.setXAxisLabel(label);\n      });\n      this.formGroup.controls['yAxisLabel'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(label => {\n        this.service.setYAxisLabel(label);\n      });\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        Title\n        \n      \n    \n    \n      \n        Data\n        \n      \n    \n  \n  \n    \n      \n        X Axis\n        \n      \n    \n    \n      \n        Y Axis\n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./moon-chart-form.component.scss\n                \n                mat-form-field {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Title                                    Data                                        X Axis                                    Y Axis                    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MoonChartFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MoonChartInfo.html":{"url":"classes/MoonChartInfo.html","title":"class - MoonChartInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MoonChartInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/moon/moon.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ChartInfo\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chartTitle\n                            \n                            \n                                    Private\n                                dataLabel\n                            \n                            \n                                    Private\n                                xAxisLabel\n                            \n                            \n                                    Private\n                                yAxisLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getChartTitle\n                            \n                            \n                                getDataLabel\n                            \n                            \n                                    Static\n                                getDefaultChartInfo\n                            \n                            \n                                getStorageObject\n                            \n                            \n                                getXAxisLabel\n                            \n                            \n                                getYAxisLabel\n                            \n                            \n                                setChartTitle\n                            \n                            \n                                setDataLabel\n                            \n                            \n                                setStorageObject\n                            \n                            \n                                setXAxisLabel\n                            \n                            \n                                setYAxisLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/moon/moon.service.util.ts:95\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.util.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.util.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        xAxisLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.util.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        yAxisLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.util.ts:95\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getChartTitle\n                        \n                    \n                \n            \n            \n                \ngetChartTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataLabel\n                        \n                    \n                \n            \n            \n                \ngetDataLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getDefaultChartInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MoonChartInfoStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStorageObject\n                        \n                    \n                \n            \n            \n                \ngetStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MoonChartInfoStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getXAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetXAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getYAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetYAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setChartTitle\n                        \n                    \n                \n            \n            \n                \nsetChartTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDataLabel\n                        \n                    \n                \n            \n            \n                \nsetDataLabel(data: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStorageObject\n                        \n                    \n                \n            \n            \n                \nsetStorageObject(storageObject: MoonChartInfoStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storageObject\n                                    \n                                                MoonChartInfoStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setXAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetXAxisLabel(xAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    xAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setYAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetYAxisLabel(yAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    yAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {rad} from \"../shared/data/utils\";\n\nexport interface MoonDataDict {\n  julianDate: number | null;\n  angularSeparation: number | null;\n}\n\nexport class MoonData implements MyData {\n  private moonDataDict!: MoonDataDict[];\n\n  constructor() {\n    this.setData(MoonData.getDefaultData());\n  }\n\n  /**\n   *  This function returns an array of data points that represent a moon's orbit with randomly\n   *  generated parameters. This function also introduce a 5% noise to all data points.\n   *  @returns    {Array}\n   */\n  public static getDefaultData(): MoonDataDict[] {\n    /**\n     *  ln(750) = 6.62\n     *  ln(1) = 0\n     */\n    const a = Math.exp(Math.random() * 4 + 1.62);\n    const p = Math.random() * 10 + 5;\n    const phase = Math.random() * 360;\n    const tilt = Math.random() * 45;\n\n    const returnData: MoonDataDict[] = [];\n\n    for (let i = 0; i  0) {\n      for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MoonChartInfoStorageObject.html":{"url":"interfaces/MoonChartInfoStorageObject.html","title":"interface - MoonChartInfoStorageObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MoonChartInfoStorageObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/moon/moon.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            chartTitle\n                                        \n                                \n                                \n                                        \n                                            dataLabel\n                                        \n                                \n                                \n                                        \n                                            xAxisLabel\n                                        \n                                \n                                \n                                        \n                                            yAxisLabel\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chartTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chartTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dataLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xAxisLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        xAxisLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yAxisLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        yAxisLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {rad} from \"../shared/data/utils\";\n\nexport interface MoonDataDict {\n  julianDate: number | null;\n  angularSeparation: number | null;\n}\n\nexport class MoonData implements MyData {\n  private moonDataDict!: MoonDataDict[];\n\n  constructor() {\n    this.setData(MoonData.getDefaultData());\n  }\n\n  /**\n   *  This function returns an array of data points that represent a moon's orbit with randomly\n   *  generated parameters. This function also introduce a 5% noise to all data points.\n   *  @returns    {Array}\n   */\n  public static getDefaultData(): MoonDataDict[] {\n    /**\n     *  ln(750) = 6.62\n     *  ln(1) = 0\n     */\n    const a = Math.exp(Math.random() * 4 + 1.62);\n    const p = Math.random() * 10 + 5;\n    const phase = Math.random() * 360;\n    const tilt = Math.random() * 45;\n\n    const returnData: MoonDataDict[] = [];\n\n    for (let i = 0; i  0) {\n      for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MoonComponent.html":{"url":"components/MoonComponent.html","title":"component - MoonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MoonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/moon/moon/moon.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-moon\n            \n\n\n\n            \n                styleUrls\n                ./moon.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./moon.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                actionHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: MoonService, honorCodeService: HonorCodePopupService, chartService: HonorCodeChartService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/moon/moon/moon.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        MoonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        honorCodeService\n                                                  \n                                                        \n                                                                        HonorCodePopupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chartService\n                                                  \n                                                        \n                                                                        HonorCodeChartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        actionHandler\n                        \n                    \n                \n            \n            \n                \nactionHandler(actions: ChartAction[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon/moon.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    actions\n                                    \n                                                ChartAction[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {ChartAction} from \"../../shared/types/actions\";\nimport {MoonService} from \"../moon.service\";\nimport {HonorCodePopupService} from \"../../shared/honor-code-popup/honor-code-popup.service\";\nimport {HonorCodeChartService} from \"../../shared/honor-code-popup/honor-code-chart.service\";\n\n@Component({\n  selector: 'app-moon',\n  templateUrl: './moon.component.html',\n  styleUrls: ['./moon.component.scss'],\n})\nexport class MoonComponent {\n  constructor(private service: MoonService,\n              private honorCodeService: HonorCodePopupService,\n              private chartService: HonorCodeChartService) {\n  }\n\n  actionHandler(actions: ChartAction[]) {\n    actions.forEach((action) => {\n      if (action.action === \"addRow\") {\n        this.service.addRow(-1, 1);\n      } else if (action.action === \"saveGraph\") {\n        this.honorCodeService.honored().subscribe((name: string) => {\n          this.chartService.saveImageHighChartOffline(this.service.getHighChart(), \"moon\", name);\n        })\n      } else if (action.action === \"resetData\") {\n        this.service.resetData();\n      } else if (action.action === \"resetChartInfo\") {\n        this.service.resetChartInfo();\n      } else if (action.action === \"resetModel\") {\n        this.service.resetInterface();\n      }\n    })\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n      \n      \n    \n  \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./moon.component.scss\n                \n                .container-row {\n  height: 80%;\n  padding: 20px 100px 20px 100px;\n  width: 100%;\n}\n\n.col-4, .col-8 {\n  display: flex;\n  flex-flow: column;\n}\n\n.data-form-row, data-button-row, chart-form-row, chart-button-row {\n  height: fit-content;\n  flex: 0 1 auto;\n}\n\n.data-table-row, .chart-row {\n  flex: 1 1 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MoonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MoonData.html":{"url":"classes/MoonData.html","title":"class - MoonData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MoonData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/moon/moon.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyData\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                moonDataDict\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRow\n                            \n                            \n                                getData\n                            \n                            \n                                getDataArray\n                            \n                            \n                                    Static\n                                getDefaultData\n                            \n                            \n                                removeRow\n                            \n                            \n                                setData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/moon/moon.service.util.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        moonDataDict\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MoonDataDict[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.util.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRow\n                        \n                    \n                \n            \n            \n                \naddRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MoonDataDict[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataArray\n                        \n                    \n                \n            \n            \n                \ngetDataArray()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getDefaultData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:23\n                \n            \n\n\n            \n                \n                     This function returns an array of data points that represent a moon's orbit with randomly\n generated parameters. This function also introduce a 5% noise to all data points.\n @returns    {Array}\n\n\n                    \n                    \n                    \n                        Returns :         MoonDataDict[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRow\n                        \n                    \n                \n            \n            \n                \nremoveRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setData\n                        \n                    \n                \n            \n            \n                \nsetData(data: MoonDataDict[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                MoonDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {rad} from \"../shared/data/utils\";\n\nexport interface MoonDataDict {\n  julianDate: number | null;\n  angularSeparation: number | null;\n}\n\nexport class MoonData implements MyData {\n  private moonDataDict!: MoonDataDict[];\n\n  constructor() {\n    this.setData(MoonData.getDefaultData());\n  }\n\n  /**\n   *  This function returns an array of data points that represent a moon's orbit with randomly\n   *  generated parameters. This function also introduce a 5% noise to all data points.\n   *  @returns    {Array}\n   */\n  public static getDefaultData(): MoonDataDict[] {\n    /**\n     *  ln(750) = 6.62\n     *  ln(1) = 0\n     */\n    const a = Math.exp(Math.random() * 4 + 1.62);\n    const p = Math.random() * 10 + 5;\n    const phase = Math.random() * 360;\n    const tilt = Math.random() * 45;\n\n    const returnData: MoonDataDict[] = [];\n\n    for (let i = 0; i  0) {\n      for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MoonDataDict.html":{"url":"interfaces/MoonDataDict.html","title":"interface - MoonDataDict","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MoonDataDict\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/moon/moon.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            angularSeparation\n                                        \n                                \n                                \n                                        \n                                            julianDate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        angularSeparation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        angularSeparation:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        julianDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        julianDate:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {rad} from \"../shared/data/utils\";\n\nexport interface MoonDataDict {\n  julianDate: number | null;\n  angularSeparation: number | null;\n}\n\nexport class MoonData implements MyData {\n  private moonDataDict!: MoonDataDict[];\n\n  constructor() {\n    this.setData(MoonData.getDefaultData());\n  }\n\n  /**\n   *  This function returns an array of data points that represent a moon's orbit with randomly\n   *  generated parameters. This function also introduce a 5% noise to all data points.\n   *  @returns    {Array}\n   */\n  public static getDefaultData(): MoonDataDict[] {\n    /**\n     *  ln(750) = 6.62\n     *  ln(1) = 0\n     */\n    const a = Math.exp(Math.random() * 4 + 1.62);\n    const p = Math.random() * 10 + 5;\n    const phase = Math.random() * 360;\n    const tilt = Math.random() * 45;\n\n    const returnData: MoonDataDict[] = [];\n\n    for (let i = 0; i  0) {\n      for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MoonFormComponent.html":{"url":"components/MoonFormComponent.html","title":"component - MoonFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MoonFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/moon/moon-form/moon-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-moon-form\n            \n\n\n\n            \n                styleUrls\n                ./moon-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./moon-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                amplitudeSubject\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                formGroup\n                            \n                            \n                                    Protected\n                                periodSubject\n                            \n                            \n                                    Protected\n                                phaseSubject\n                            \n                            \n                                    Protected\n                                tiltSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: MoonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/moon/moon-form/moon-form.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        MoonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-form/moon-form.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-form/moon-form.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n            \n                \nonChange($event: InputSliderValue)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-form/moon-form.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                InputSliderValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        amplitudeSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-form/moon-form.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-form/moon-form.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    amplitude: new FormControl(30,\n      [Validators.required, Validators.min(1), Validators.max(750)],\n    ),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-form/moon-form.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        periodSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-form/moon-form.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        phaseSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-form/moon-form.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        tiltSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-form/moon-form.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnDestroy} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {Subject, takeUntil} from \"rxjs\";\nimport {MoonService} from \"../moon.service\";\nimport {InputSliderValue} from \"../../shared/interface/input-slider/input-slider.component\";\nimport {UpdateSource} from \"../moon.service.util\";\n\n@Component({\n  selector: 'app-moon-form',\n  templateUrl: './moon-form.component.html',\n  styleUrls: ['./moon-form.component.scss'],\n})\nexport class MoonFormComponent implements AfterViewInit, OnDestroy {\n  formGroup = new FormGroup({\n    amplitude: new FormControl(30,\n      [Validators.required, Validators.min(1), Validators.max(750)],\n    ),\n  })\n  protected amplitudeSubject: Subject = new Subject();\n  protected periodSubject: Subject = new Subject();\n  protected phaseSubject: Subject = new Subject();\n  protected tiltSubject: Subject = new Subject();\n  private destroy$ = new Subject();\n\n  constructor(private service: MoonService) {\n  }\n\n  onChange($event: InputSliderValue) {\n    if ($event.key === MoonModelParameters.AMPLITUDE) {\n      this.service.setAmplitude($event.value);\n    } else if ($event.key === MoonModelParameters.PERIOD) {\n      this.service.setPeriod($event.value);\n    } else if ($event.key === MoonModelParameters.PHASE) {\n      this.service.setPhase($event.value);\n    } else if ($event.key === MoonModelParameters.TILT) {\n      this.service.setTilt($event.value);\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.amplitudeSubject.next(this.service.getAmplitude());\n    this.periodSubject.next(this.service.getPeriod());\n    this.phaseSubject.next(this.service.getPhase());\n    this.tiltSubject.next(this.service.getTilt());\n\n    this.service.interface$.pipe(\n      takeUntil(this.destroy$),\n    ).subscribe(\n      (source: UpdateSource) => {\n        if (source !== UpdateSource.INTERFACE) {\n          this.amplitudeSubject.next(this.service.getAmplitude());\n          this.periodSubject.next(this.service.getPeriod());\n          this.phaseSubject.next(this.service.getPhase());\n          this.tiltSubject.next(this.service.getTilt());\n        }\n      }\n    )\n  }\n\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n\n\nenum MoonModelParameters {\n  AMPLITUDE = 'amplitude',\n  PERIOD = 'period',\n  PHASE = 'phase',\n  TILT = 'tilt',\n}\n\n\n    \n\n    \n        \n  \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./moon-form.component.scss\n                \n                mat-form-field {\n  width: 100%;\n}\n\nmat-slider {\n  width: 90%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MoonFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MoonHighchartComponent.html":{"url":"components/MoonHighchartComponent.html","title":"component - MoonHighchartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MoonHighchartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/moon/moon-highchart/moon-highchart.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-moon-highchart\n            \n\n\n\n            \n                styleUrls\n                ./moon-highchart.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./moon-highchart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chartConstructor\n                            \n                            \n                                chartObject\n                            \n                            \n                                chartOptions\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                Highcharts\n                            \n                            \n                                updateFlag\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                chartInitialized\n                            \n                            \n                                initChartSeries\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                setChartTitle\n                            \n                            \n                                    Private\n                                setChartXAxis\n                            \n                            \n                                    Private\n                                setChartYAxis\n                            \n                            \n                                setData\n                            \n                            \n                                setModel\n                            \n                            \n                                    Private\n                                updateChart\n                            \n                            \n                                updateData\n                            \n                            \n                                updateModel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: MoonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/moon/moon-highchart/moon-highchart.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        MoonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        chartInitialized\n                        \n                    \n                \n            \n            \n                \nchartInitialized($event: Highcharts.Chart)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-highchart/moon-highchart.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                            Highcharts.Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initChartSeries\n                        \n                    \n                \n            \n            \n                \ninitChartSeries()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-highchart/moon-highchart.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-highchart/moon-highchart.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-highchart/moon-highchart.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setChartTitle\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChartTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-highchart/moon-highchart.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setChartXAxis\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChartXAxis()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-highchart/moon-highchart.component.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setChartYAxis\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChartYAxis()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-highchart/moon-highchart.component.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setData\n                        \n                    \n                \n            \n            \n                \nsetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-highchart/moon-highchart.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setModel\n                        \n                    \n                \n            \n            \n                \nsetModel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-highchart/moon-highchart.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateChart\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-highchart/moon-highchart.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateData\n                        \n                    \n                \n            \n            \n                \nupdateData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-highchart/moon-highchart.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateModel\n                        \n                    \n                \n            \n            \n                \nupdateModel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-highchart/moon-highchart.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chartConstructor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : \"chart\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-highchart/moon-highchart.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartObject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Highcharts.Chart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-highchart/moon-highchart.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Highcharts.Options\n\n                    \n                \n                \n                    \n                        Default value : {\n    chart: {\n      animation: false,\n      styledMode: true,\n    },\n    legend: {\n      align: 'center',\n    },\n    tooltip: {\n      enabled: true,\n      shared: false,\n    },\n    exporting: {\n      buttons: {\n        contextButton: {\n          enabled: false,\n        }\n      }\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-highchart/moon-highchart.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-highchart/moon-highchart.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Highcharts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Highcharts\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-highchart/moon-highchart.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFlag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-highchart/moon-highchart.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnDestroy} from '@angular/core';\nimport * as Highcharts from \"highcharts\";\nimport {MoonService} from \"../moon.service\";\nimport {Subject, takeUntil} from \"rxjs\";\n\n@Component({\n  selector: 'app-moon-highchart',\n  templateUrl: './moon-highchart.component.html',\n  styleUrls: ['./moon-highchart.component.scss']\n})\nexport class MoonHighchartComponent implements AfterViewInit, OnDestroy {\n  Highcharts: typeof Highcharts = Highcharts;\n  updateFlag: boolean = true;\n  chartConstructor: any = \"chart\";\n  chartObject!: Highcharts.Chart;\n  chartOptions: Highcharts.Options = {\n    chart: {\n      animation: false,\n      styledMode: true,\n    },\n    legend: {\n      align: 'center',\n    },\n    tooltip: {\n      enabled: true,\n      shared: false,\n    },\n    exporting: {\n      buttons: {\n        contextButton: {\n          enabled: false,\n        }\n      }\n    }\n  };\n  private destroy$: Subject = new Subject();\n\n  constructor(private service: MoonService) {\n    this.setChartTitle();\n    this.setChartXAxis();\n    this.setChartYAxis();\n  }\n\n  chartInitialized($event: Highcharts.Chart) {\n    this.chartObject = $event;\n    this.service.setHighChart(this.chartObject);\n\n  }\n\n  ngAfterViewInit(): void {\n    this.initChartSeries();\n    this.service.data$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(() => {\n      this.updateData();\n    });\n    this.service.chartInfo$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(() => {\n      this.setChartTitle();\n      this.setChartXAxis();\n      this.setChartYAxis();\n      this.updateChart();\n    });\n    this.service.interface$.pipe(\n      takeUntil(this.destroy$),\n    ).subscribe(\n      () => {\n        this.updateModel();\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n  }\n\n  initChartSeries() {\n    this.setData();\n    this.setModel();\n  }\n\n  setData() {\n    this.chartObject.addSeries({\n      name: this.service.getDataLabel(),\n      data: this.service.getDataArray(),\n      type: 'scatter',\n    })\n  }\n\n  updateData() {\n    this.chartObject.series[0].update({\n      name: this.service.getDataLabel(),\n      data: this.service.getDataArray(),\n      type: 'scatter',\n    });\n  }\n\n  setModel() {\n    this.chartObject.addSeries({\n      name: \"Model\",\n      data: this.service.getMoonModelData(),\n      type: 'line',\n    })\n  }\n\n  updateModel() {\n    this.chartObject.series[1].update({\n      name: \"Model\",\n      data: this.service.getMoonModelData(),\n      type: 'line',\n    });\n  }\n\n\n  private updateChart(): void {\n    this.updateFlag = true;\n  }\n\n  private setChartTitle(): void {\n    this.chartOptions.title = {text: this.service.getChartTitle()};\n  }\n\n  private setChartXAxis(): void {\n    this.chartOptions.xAxis = {\n      title: {text: this.service.getXAxisLabel()}\n    };\n  }\n\n  private setChartYAxis(): void {\n    this.chartOptions.yAxis = {\n      title: {text: this.service.getYAxisLabel()}\n    };\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./moon-highchart.component.scss\n                \n                .chart-container {\n  width: 100%;\n  height: 100%;\n  padding: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MoonHighchartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MoonInterface.html":{"url":"interfaces/MoonInterface.html","title":"interface - MoonInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MoonInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/moon/moon.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getAmplitude\n                                    \n                                \n                                \n                                    \n                                        getPeriod\n                                    \n                                \n                                \n                                    \n                                        getPhase\n                                    \n                                \n                                \n                                    \n                                        getStorageObject\n                                    \n                                \n                                \n                                    \n                                        getTilt\n                                    \n                                \n                                \n                                    \n                                        resetInterface\n                                    \n                                \n                                \n                                    \n                                        setAmplitude\n                                    \n                                \n                                \n                                    \n                                        setPeriod\n                                    \n                                \n                                \n                                    \n                                        setPhase\n                                    \n                                \n                                \n                                    \n                                        setStorageObject\n                                    \n                                \n                                \n                                    \n                                        setTilt\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAmplitude\n                        \n                    \n                \n            \n            \n                \ngetAmplitude()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPeriod\n                        \n                    \n                \n            \n            \n                \ngetPeriod()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPhase\n                        \n                    \n                \n            \n            \n                \ngetPhase()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStorageObject\n                        \n                    \n                \n            \n            \n                \ngetStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MoonInterfaceStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTilt\n                        \n                    \n                \n            \n            \n                \ngetTilt()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetInterface\n                        \n                    \n                \n            \n            \n                \nresetInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAmplitude\n                        \n                    \n                \n            \n            \n                \nsetAmplitude(amplitude: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    amplitude\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPeriod\n                        \n                    \n                \n            \n            \n                \nsetPeriod(period: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    period\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPhase\n                        \n                    \n                \n            \n            \n                \nsetPhase(phase: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phase\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStorageObject\n                        \n                    \n                \n            \n            \n                \nsetStorageObject(storageObject: MoonInterfaceStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storageObject\n                                    \n                                                MoonInterfaceStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTilt\n                        \n                    \n                \n            \n            \n                \nsetTilt(tilt: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tilt\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {rad} from \"../shared/data/utils\";\n\nexport interface MoonDataDict {\n  julianDate: number | null;\n  angularSeparation: number | null;\n}\n\nexport class MoonData implements MyData {\n  private moonDataDict!: MoonDataDict[];\n\n  constructor() {\n    this.setData(MoonData.getDefaultData());\n  }\n\n  /**\n   *  This function returns an array of data points that represent a moon's orbit with randomly\n   *  generated parameters. This function also introduce a 5% noise to all data points.\n   *  @returns    {Array}\n   */\n  public static getDefaultData(): MoonDataDict[] {\n    /**\n     *  ln(750) = 6.62\n     *  ln(1) = 0\n     */\n    const a = Math.exp(Math.random() * 4 + 1.62);\n    const p = Math.random() * 10 + 5;\n    const phase = Math.random() * 360;\n    const tilt = Math.random() * 45;\n\n    const returnData: MoonDataDict[] = [];\n\n    for (let i = 0; i  0) {\n      for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MoonInterfaceImpl.html":{"url":"classes/MoonInterfaceImpl.html","title":"class - MoonInterfaceImpl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MoonInterfaceImpl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/moon/moon.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MoonInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                amplitude\n                            \n                            \n                                    Private\n                                period\n                            \n                            \n                                    Private\n                                phase\n                            \n                            \n                                    Private\n                                tilt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAmplitude\n                            \n                            \n                                getDefaultStorageObject\n                            \n                            \n                                getPeriod\n                            \n                            \n                                getPhase\n                            \n                            \n                                getStorageObject\n                            \n                            \n                                getTilt\n                            \n                            \n                                resetInterface\n                            \n                            \n                                setAmplitude\n                            \n                            \n                                setPeriod\n                            \n                            \n                                setPhase\n                            \n                            \n                                setStorageObject\n                            \n                            \n                                setTilt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        amplitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.util.ts:198\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        period\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.util.ts:199\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        phase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.util.ts:200\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tilt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.util.ts:201\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAmplitude\n                        \n                    \n                \n            \n            \n                \ngetAmplitude()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:203\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDefaultStorageObject\n                        \n                    \n                \n            \n            \n                \ngetDefaultStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:255\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MoonInterfaceStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPeriod\n                        \n                    \n                \n            \n            \n                \ngetPeriod()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:207\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPhase\n                        \n                    \n                \n            \n            \n                \ngetPhase()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:211\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStorageObject\n                        \n                    \n                \n            \n            \n                \ngetStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:239\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MoonInterfaceStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTilt\n                        \n                    \n                \n            \n            \n                \ngetTilt()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:215\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetInterface\n                        \n                    \n                \n            \n            \n                \nresetInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:219\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAmplitude\n                        \n                    \n                \n            \n            \n                \nsetAmplitude(amplitude: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:223\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    amplitude\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPeriod\n                        \n                    \n                \n            \n            \n                \nsetPeriod(period: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:227\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    period\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPhase\n                        \n                    \n                \n            \n            \n                \nsetPhase(phase: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:231\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phase\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStorageObject\n                        \n                    \n                \n            \n            \n                \nsetStorageObject(storageObject: MoonInterfaceStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:248\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storageObject\n                                    \n                                                MoonInterfaceStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTilt\n                        \n                    \n                \n            \n            \n                \nsetTilt(tilt: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:235\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tilt\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {rad} from \"../shared/data/utils\";\n\nexport interface MoonDataDict {\n  julianDate: number | null;\n  angularSeparation: number | null;\n}\n\nexport class MoonData implements MyData {\n  private moonDataDict!: MoonDataDict[];\n\n  constructor() {\n    this.setData(MoonData.getDefaultData());\n  }\n\n  /**\n   *  This function returns an array of data points that represent a moon's orbit with randomly\n   *  generated parameters. This function also introduce a 5% noise to all data points.\n   *  @returns    {Array}\n   */\n  public static getDefaultData(): MoonDataDict[] {\n    /**\n     *  ln(750) = 6.62\n     *  ln(1) = 0\n     */\n    const a = Math.exp(Math.random() * 4 + 1.62);\n    const p = Math.random() * 10 + 5;\n    const phase = Math.random() * 360;\n    const tilt = Math.random() * 45;\n\n    const returnData: MoonDataDict[] = [];\n\n    for (let i = 0; i  0) {\n      for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MoonInterfaceStorageObject.html":{"url":"interfaces/MoonInterfaceStorageObject.html","title":"interface - MoonInterfaceStorageObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MoonInterfaceStorageObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/moon/moon.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amplitude\n                                        \n                                \n                                \n                                        \n                                            period\n                                        \n                                \n                                \n                                        \n                                            phase\n                                        \n                                \n                                \n                                        \n                                            tilt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amplitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amplitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        period\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        period:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phase\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phase:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tilt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tilt:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {rad} from \"../shared/data/utils\";\n\nexport interface MoonDataDict {\n  julianDate: number | null;\n  angularSeparation: number | null;\n}\n\nexport class MoonData implements MyData {\n  private moonDataDict!: MoonDataDict[];\n\n  constructor() {\n    this.setData(MoonData.getDefaultData());\n  }\n\n  /**\n   *  This function returns an array of data points that represent a moon's orbit with randomly\n   *  generated parameters. This function also introduce a 5% noise to all data points.\n   *  @returns    {Array}\n   */\n  public static getDefaultData(): MoonDataDict[] {\n    /**\n     *  ln(750) = 6.62\n     *  ln(1) = 0\n     */\n    const a = Math.exp(Math.random() * 4 + 1.62);\n    const p = Math.random() * 10 + 5;\n    const phase = Math.random() * 360;\n    const tilt = Math.random() * 45;\n\n    const returnData: MoonDataDict[] = [];\n\n    for (let i = 0; i  0) {\n      for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MoonModel.html":{"url":"interfaces/MoonModel.html","title":"interface - MoonModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MoonModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/moon/moon.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getMoonModelData\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMoonModelData\n                        \n                    \n                \n            \n            \n                \ngetMoonModelData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:324\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     [][]\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {rad} from \"../shared/data/utils\";\n\nexport interface MoonDataDict {\n  julianDate: number | null;\n  angularSeparation: number | null;\n}\n\nexport class MoonData implements MyData {\n  private moonDataDict!: MoonDataDict[];\n\n  constructor() {\n    this.setData(MoonData.getDefaultData());\n  }\n\n  /**\n   *  This function returns an array of data points that represent a moon's orbit with randomly\n   *  generated parameters. This function also introduce a 5% noise to all data points.\n   *  @returns    {Array}\n   */\n  public static getDefaultData(): MoonDataDict[] {\n    /**\n     *  ln(750) = 6.62\n     *  ln(1) = 0\n     */\n    const a = Math.exp(Math.random() * 4 + 1.62);\n    const p = Math.random() * 10 + 5;\n    const phase = Math.random() * 360;\n    const tilt = Math.random() * 45;\n\n    const returnData: MoonDataDict[] = [];\n\n    for (let i = 0; i  0) {\n      for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MoonModule.html":{"url":"modules/MoonModule.html","title":"module - MoonModule","body":"\n                   \n\n\n\n\n    Modules\n    MoonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MoonModule\n\n\n\ncluster_MoonModule_imports\n\n\n\ncluster_MoonModule_providers\n\n\n\ncluster_MoonModule_declarations\n\n\n\n\nMoonChartFormComponent\n\nMoonChartFormComponent\n\n\n\nMoonModule\n\nMoonModule\n\nMoonModule -->\n\nMoonChartFormComponent->MoonModule\n\n\n\n\n\nMoonComponent\n\nMoonComponent\n\nMoonModule -->\n\nMoonComponent->MoonModule\n\n\n\n\n\nMoonFormComponent\n\nMoonFormComponent\n\nMoonModule -->\n\nMoonFormComponent->MoonModule\n\n\n\n\n\nMoonHighchartComponent\n\nMoonHighchartComponent\n\nMoonModule -->\n\nMoonHighchartComponent->MoonModule\n\n\n\n\n\nMoonTableComponent\n\nMoonTableComponent\n\nMoonModule -->\n\nMoonTableComponent->MoonModule\n\n\n\n\n\nInterfaceUtilModule\n\nInterfaceUtilModule\n\nMoonModule -->\n\nInterfaceUtilModule->MoonModule\n\n\n\n\n\nNgIf\n\nNgIf\n\nMoonModule -->\n\nNgIf->MoonModule\n\n\n\n\n\nSimpleDataButtonModule\n\nSimpleDataButtonModule\n\nMoonModule -->\n\nSimpleDataButtonModule->MoonModule\n\n\n\n\n\nSimpleGraphButtonModule\n\nSimpleGraphButtonModule\n\nMoonModule -->\n\nSimpleGraphButtonModule->MoonModule\n\n\n\n\n\nHonorCodePopupService\n\nHonorCodePopupService\n\nMoonModule -->\n\nHonorCodePopupService->MoonModule\n\n\n\n\n\nMoonService\n\nMoonService\n\nMoonModule -->\n\nMoonService->MoonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tools/moon/moon.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MoonChartFormComponent\n                        \n                        \n                            MoonComponent\n                        \n                        \n                            MoonFormComponent\n                        \n                        \n                            MoonHighchartComponent\n                        \n                        \n                            MoonTableComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            HonorCodePopupService\n                        \n                        \n                            MoonService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InterfaceUtilModule\n                        \n                        \n                            NgIf\n                        \n                        \n                            SimpleDataButtonModule\n                        \n                        \n                            SimpleGraphButtonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from \"@angular/core\";\nimport {MoonComponent} from \"./moon/moon.component\";\nimport {SimpleDataButtonModule} from \"../shared/simple-data-button/simple-data-button.component\";\nimport {SimpleGraphButtonModule} from \"../shared/simple-graph-button/simple-graph-button.component\";\nimport {MoonTableComponent} from \"./moon-table/moon-table.component\";\nimport {HotTableModule} from \"@handsontable/angular\";\nimport {MoonService} from \"./moon.service\";\nimport {MoonHighchartComponent} from \"./moon-highchart/moon-highchart.component\";\nimport {HighchartsChartModule} from \"highcharts-angular\";\nimport {MoonChartFormComponent} from './moon-chart-form/moon-chart-form.component';\nimport {MatLegacyFormFieldModule} from \"@angular/material/legacy-form-field\";\nimport {MatLegacyInputModule} from \"@angular/material/legacy-input\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {MoonFormComponent} from './moon-form/moon-form.component';\nimport {MatSliderModule} from \"@angular/material/slider\";\nimport {NgIf} from \"@angular/common\";\nimport {HonorCodePopupService} from \"../shared/honor-code-popup/honor-code-popup.service\";\nimport {InterfaceUtilModule} from \"../shared/interface/util\";\n\n@NgModule({\n  declarations: [\n    MoonComponent,\n    MoonTableComponent,\n    MoonHighchartComponent,\n    MoonChartFormComponent,\n    MoonFormComponent,\n  ],\n  imports: [\n    SimpleDataButtonModule,\n    SimpleGraphButtonModule,\n    InterfaceUtilModule,\n    HotTableModule,\n    HighchartsChartModule,\n    MatLegacyFormFieldModule,\n    MatLegacyInputModule,\n    ReactiveFormsModule,\n    MatSliderModule,\n    FormsModule,\n    NgIf,\n  ],\n  providers: [MoonService, HonorCodePopupService],\n})\nexport class MoonModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MoonService.html":{"url":"injectables/MoonService.html","title":"injectable - MoonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MoonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/moon/moon.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                chartInfo$\n                            \n                            \n                                    Private\n                                chartInfoSubject\n                            \n                            \n                                    Private\n                                    Static\n                                CHARTPRECISION\n                            \n                            \n                                    Public\n                                data$\n                            \n                            \n                                    Private\n                                dataSubject\n                            \n                            \n                                    Private\n                                highChart\n                            \n                            \n                                    Public\n                                interface$\n                            \n                            \n                                    Private\n                                interfaceSubject\n                            \n                            \n                                    Private\n                                moonChartInfo\n                            \n                            \n                                    Private\n                                moonData\n                            \n                            \n                                    Private\n                                moonInterface\n                            \n                            \n                                    Private\n                                moonStorage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRow\n                            \n                            \n                                getAmplitude\n                            \n                            \n                                getChartTitle\n                            \n                            \n                                getData\n                            \n                            \n                                getDataArray\n                            \n                            \n                                getDataLabel\n                            \n                            \n                                getHighChart\n                            \n                            \n                                getMoonModelData\n                            \n                            \n                                getPeriod\n                            \n                            \n                                getPhase\n                            \n                            \n                                getStorageObject\n                            \n                            \n                                getTilt\n                            \n                            \n                                getXAxisLabel\n                            \n                            \n                                getYAxisLabel\n                            \n                            \n                                    Private\n                                limitPrecision\n                            \n                            \n                                removeRow\n                            \n                            \n                                    Public\n                                resetChartInfo\n                            \n                            \n                                resetData\n                            \n                            \n                                resetInterface\n                            \n                            \n                                setAmplitude\n                            \n                            \n                                setChartTitle\n                            \n                            \n                                setData\n                            \n                            \n                                setDataLabel\n                            \n                            \n                                    Public\n                                setHighChart\n                            \n                            \n                                setPeriod\n                            \n                            \n                                setPhase\n                            \n                            \n                                setStorageObject\n                            \n                            \n                                setTilt\n                            \n                            \n                                setXAxisLabel\n                            \n                            \n                                setYAxisLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/moon/moon.service.ts:33\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRow\n                        \n                    \n                \n            \n            \n                \naddRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:177\n                \n            \n\n\n            \n                \n                    MyData Methods\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAmplitude\n                        \n                    \n                \n            \n            \n                \ngetAmplitude()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:73\n                \n            \n\n\n            \n                \n                    MoonInterface Methods\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChartTitle\n                        \n                    \n                \n            \n            \n                \ngetChartTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:120\n                \n            \n\n\n            \n                \n                    ChartInfo Methods\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MoonDataDict[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataArray\n                        \n                    \n                \n            \n            \n                \ngetDataArray()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataLabel\n                        \n                    \n                \n            \n            \n                \ngetDataLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHighChart\n                        \n                    \n                \n            \n            \n                \ngetHighChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:213\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Highcharts.Chart\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMoonModelData\n                        \n                    \n                \n            \n            \n                \ngetMoonModelData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:42\n                \n            \n\n\n            \n                \n                    MoonModel Methods\n\n\n                    \n                        Returns :     [][]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPeriod\n                        \n                    \n                \n            \n            \n                \ngetPeriod()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPhase\n                        \n                    \n                \n            \n            \n                \ngetPhase()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStorageObject\n                        \n                    \n                \n            \n            \n                \ngetStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTilt\n                        \n                    \n                \n            \n            \n                \ngetTilt()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getXAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetXAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getYAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetYAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        limitPrecision\n                        \n                    \n                \n            \n            \n                \n                    \n                    limitPrecision(dataArray: number[][], precision: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:217\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dataArray\n                                    \n                                            number[][]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    precision\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [][]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRow\n                        \n                    \n                \n            \n            \n                \nremoveRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:191\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        resetChartInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetData\n                        \n                    \n                \n            \n            \n                \nresetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:203\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetInterface\n                        \n                    \n                \n            \n            \n                \nresetInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAmplitude\n                        \n                    \n                \n            \n            \n                \nsetAmplitude(amplitude: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    amplitude\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setChartTitle\n                        \n                    \n                \n            \n            \n                \nsetChartTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setData\n                        \n                    \n                \n            \n            \n                \nsetData(data: MoonDataDict[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                MoonDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDataLabel\n                        \n                    \n                \n            \n            \n                \nsetDataLabel(data: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setHighChart\n                        \n                    \n                \n            \n            \n                \n                    \n                    setHighChart(highChart: Highcharts.Chart)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:209\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    highChart\n                                    \n                                            Highcharts.Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPeriod\n                        \n                    \n                \n            \n            \n                \nsetPeriod(period: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    period\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPhase\n                        \n                    \n                \n            \n            \n                \nsetPhase(phase: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phase\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStorageObject\n                        \n                    \n                \n            \n            \n                \nsetStorageObject(storageObject: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storageObject\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTilt\n                        \n                    \n                \n            \n            \n                \nsetTilt(tilt: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tilt\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setXAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetXAxisLabel(xAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    xAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setYAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetYAxisLabel(yAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    yAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chartInfo$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.chartInfoSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartInfoSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(this.moonChartInfo)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        CHARTPRECISION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.dataSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(this.getData())\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        highChart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Highcharts.Chart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        interface$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.interfaceSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        interfaceSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(UpdateSource.INIT)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        moonChartInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChartInfo\n\n                    \n                \n                \n                    \n                        Default value : new MoonChartInfo()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        moonData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MyData\n\n                    \n                \n                \n                    \n                        Default value : new MoonData()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        moonInterface\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MoonInterface\n\n                    \n                \n                \n                    \n                        Default value : new MoonInterfaceImpl()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        moonStorage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MoonStorage\n\n                    \n                \n                \n                    \n                        Default value : new MoonStorage()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {MyData} from \"../shared/data/data.interface\";\nimport {\n  MoonChartInfo,\n  MoonData,\n  MoonDataDict,\n  MoonInterface,\n  MoonInterfaceImpl,\n  MoonModel,\n  MoonStorage,\n  UpdateSource\n} from \"./moon.service.util\";\nimport {BehaviorSubject} from \"rxjs\";\nimport * as Highcharts from 'highcharts';\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {rad} from \"../shared/data/utils\";\n\n@Injectable()\nexport class MoonService implements MyData, ChartInfo, MoonInterface, MoonModel {\n  private moonInterface: MoonInterface = new MoonInterfaceImpl();\n  private moonChartInfo: ChartInfo = new MoonChartInfo();\n  private moonData: MyData = new MoonData();\n  private moonStorage: MoonStorage = new MoonStorage();\n  private highChart!: Highcharts.Chart;\n\n  private static CHARTPRECISION: number = 3;\n\n  private interfaceSubject = new BehaviorSubject(UpdateSource.INIT);\n  public interface$ = this.interfaceSubject.asObservable();\n  private chartInfoSubject = new BehaviorSubject(this.moonChartInfo);\n  public chartInfo$ = this.chartInfoSubject.asObservable();\n  private dataSubject = new BehaviorSubject(this.getData());\n  public data$ = this.dataSubject.asObservable();\n\n  constructor() {\n    this.moonInterface.setStorageObject(this.moonStorage.getInterface());\n    this.moonChartInfo.setStorageObject(this.moonStorage.getChartInfo());\n    this.moonData.setData(this.moonStorage.getData());\n  }\n\n  /** MoonModel Methods **/\n  getMoonModelData(): number[][] {\n    const dataSorted: number[][] = this.moonData.getDataArray().filter((entry: number[]) => {\n      return !(isNaN(entry[0]) || isNaN(entry[1]) || entry[0] === null || entry[1] === null)\n    }).sort((a: number[], b: number[]) => {\n      return a[0] - b[0]\n    });\n    if (dataSorted.length  {\n        return row.map((value: number) => {\n          return value ? parseFloat(value.toFixed(precision)) : value;\n        });\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MoonStorage.html":{"url":"classes/MoonStorage.html","title":"class - MoonStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MoonStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/moon/moon.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyStorage\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                chartInfoKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                dataKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                interfaceKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getChartInfo\n                            \n                            \n                                getData\n                            \n                            \n                                getInterface\n                            \n                            \n                                resetChartInfo\n                            \n                            \n                                resetData\n                            \n                            \n                                resetInterface\n                            \n                            \n                                saveChartInfo\n                            \n                            \n                                saveData\n                            \n                            \n                                saveInterface\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        chartInfoKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'moonChartInfo'\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.util.ts:268\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dataKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'moonData'\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.util.ts:269\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        interfaceKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'moonInterface'\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.util.ts:270\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getChartInfo\n                        \n                    \n                \n            \n            \n                \ngetChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:272\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MoonChartInfoStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:280\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MoonDataDict[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInterface\n                        \n                    \n                \n            \n            \n                \ngetInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:288\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MoonInterfaceStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetChartInfo\n                        \n                    \n                \n            \n            \n                \nresetChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:296\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetData\n                        \n                    \n                \n            \n            \n                \nresetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:300\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetInterface\n                        \n                    \n                \n            \n            \n                \nresetInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:304\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveChartInfo\n                        \n                    \n                \n            \n            \n                \nsaveChartInfo(chartInfo: MoonChartInfoStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:308\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartInfo\n                                    \n                                                MoonChartInfoStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveData\n                        \n                    \n                \n            \n            \n                \nsaveData(data: MoonDataDict[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:312\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                MoonDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveInterface\n                        \n                    \n                \n            \n            \n                \nsaveInterface(interfaceInfo: MoonInterfaceStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:316\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    interfaceInfo\n                                    \n                                                MoonInterfaceStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {rad} from \"../shared/data/utils\";\n\nexport interface MoonDataDict {\n  julianDate: number | null;\n  angularSeparation: number | null;\n}\n\nexport class MoonData implements MyData {\n  private moonDataDict!: MoonDataDict[];\n\n  constructor() {\n    this.setData(MoonData.getDefaultData());\n  }\n\n  /**\n   *  This function returns an array of data points that represent a moon's orbit with randomly\n   *  generated parameters. This function also introduce a 5% noise to all data points.\n   *  @returns    {Array}\n   */\n  public static getDefaultData(): MoonDataDict[] {\n    /**\n     *  ln(750) = 6.62\n     *  ln(1) = 0\n     */\n    const a = Math.exp(Math.random() * 4 + 1.62);\n    const p = Math.random() * 10 + 5;\n    const phase = Math.random() * 360;\n    const tilt = Math.random() * 45;\n\n    const returnData: MoonDataDict[] = [];\n\n    for (let i = 0; i  0) {\n      for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MoonTable.html":{"url":"classes/MoonTable.html","title":"class - MoonTable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MoonTable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/moon/moon-table/moon-table.component.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyTable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hotRegisterer\n                            \n                            \n                                    Private\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                            \n                                getTable\n                            \n                            \n                                renderTable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/moon/moon-table/moon-table.component.ts:70\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hotRegisterer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HotTableRegisterer()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-table/moon-table.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-table/moon-table.component.ts:69\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-table/moon-table.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTable\n                        \n                    \n                \n            \n            \n                \ngetTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-table/moon-table.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Handsontable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderTable\n                        \n                    \n                \n            \n            \n                \nrenderTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-table/moon-table.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {AfterViewInit, Component, OnDestroy} from '@angular/core';\nimport {MoonService} from \"../moon.service\";\nimport {MoonDataDict} from \"../moon.service.util\";\nimport {MyTable} from \"../../shared/tables/table-interface\";\nimport {HotTableRegisterer} from \"@handsontable/angular\";\nimport Handsontable from \"handsontable\";\nimport {Subject, takeUntil} from \"rxjs\";\n\n@Component({\n  selector: 'app-moon-table',\n  templateUrl: './moon-table.component.html',\n  styleUrls: ['./moon-table.component.scss']\n})\nexport class MoonTableComponent implements AfterViewInit, OnDestroy {\n  static FLOAT_PRECISION: number = 2;\n  id: string = \"moon-table\";\n  table: MoonTable = new MoonTable(this.id);\n  colNames: string[] = [\"Julian Date\", \"Angular Separation\"];\n  dataSet: any;\n  private destroy$: Subject = new Subject();\n\n  constructor(private service: MoonService) {\n    this.dataSet = this.limitPrecision(this.service.getData(), MoonTableComponent.FLOAT_PRECISION);\n\n  }\n\n  ngAfterViewInit(): void {\n    this.service.data$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe((data: MoonDataDict[]) => {\n      this.dataSet = this.limitPrecision(this.service.getData(), MoonTableComponent.FLOAT_PRECISION);\n      this.table.renderTable();\n    })\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n  }\n\n  public onChange = (changes: any, source: any) => {\n    if (changes) {\n      this.service.setData(this.table.getData());\n    }\n  }\n\n  public onRemove = (index: number, amount: number) => {\n    this.service.removeRow(index, amount);\n  }\n\n  public onInsert = (index: number, amount: number) => {\n    this.service.addRow(index, amount);\n  }\n\n  private limitPrecision(data: MoonDataDict[], precision: number): MoonDataDict[] {\n    return data.map(\n      (row: MoonDataDict) => {\n        return {\n          julianDate: row.julianDate ? parseFloat(row.julianDate.toFixed(precision)) : row.julianDate,\n          angularSeparation: row.angularSeparation ? parseFloat(row.angularSeparation.toFixed(precision)) : row.angularSeparation\n        }\n      }\n    );\n  }\n\n}\n\nclass MoonTable implements MyTable {\n  private readonly id: string;\n  private hotRegisterer = new HotTableRegisterer();\n\n  constructor(id: string) {\n    this.id = id;\n  }\n\n  getTable(): Handsontable {\n    return this.hotRegisterer.getInstance(this.id);\n  }\n\n  renderTable(): void {\n    this.getTable().render();\n  }\n\n  getData(): any[] {\n    return this.getTable().getSourceData();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MoonTableComponent.html":{"url":"components/MoonTableComponent.html","title":"component - MoonTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MoonTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/moon/moon-table/moon-table.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-moon-table\n            \n\n\n\n            \n                styleUrls\n                ./moon-table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./moon-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                colNames\n                            \n                            \n                                dataSet\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Static\n                                FLOAT_PRECISION\n                            \n                            \n                                id\n                            \n                            \n                                    Public\n                                onChange\n                            \n                            \n                                    Public\n                                onInsert\n                            \n                            \n                                    Public\n                                onRemove\n                            \n                            \n                                table\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                limitPrecision\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: MoonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/moon/moon-table/moon-table.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        MoonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        limitPrecision\n                        \n                    \n                \n            \n            \n                \n                    \n                    limitPrecision(data: MoonDataDict[], precision: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-table/moon-table.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                MoonDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    precision\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MoonDataDict[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-table/moon-table.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-table/moon-table.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        colNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\"Julian Date\", \"Angular Separation\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-table/moon-table.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-table/moon-table.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-table/moon-table.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        FLOAT_PRECISION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-table/moon-table.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"moon-table\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-table/moon-table.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-table/moon-table.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onInsert\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-table/moon-table.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onRemove\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-table/moon-table.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        table\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MoonTable\n\n                    \n                \n                \n                    \n                        Default value : new MoonTable(this.id)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-table/moon-table.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnDestroy} from '@angular/core';\nimport {MoonService} from \"../moon.service\";\nimport {MoonDataDict} from \"../moon.service.util\";\nimport {MyTable} from \"../../shared/tables/table-interface\";\nimport {HotTableRegisterer} from \"@handsontable/angular\";\nimport Handsontable from \"handsontable\";\nimport {Subject, takeUntil} from \"rxjs\";\n\n@Component({\n  selector: 'app-moon-table',\n  templateUrl: './moon-table.component.html',\n  styleUrls: ['./moon-table.component.scss']\n})\nexport class MoonTableComponent implements AfterViewInit, OnDestroy {\n  static FLOAT_PRECISION: number = 2;\n  id: string = \"moon-table\";\n  table: MoonTable = new MoonTable(this.id);\n  colNames: string[] = [\"Julian Date\", \"Angular Separation\"];\n  dataSet: any;\n  private destroy$: Subject = new Subject();\n\n  constructor(private service: MoonService) {\n    this.dataSet = this.limitPrecision(this.service.getData(), MoonTableComponent.FLOAT_PRECISION);\n\n  }\n\n  ngAfterViewInit(): void {\n    this.service.data$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe((data: MoonDataDict[]) => {\n      this.dataSet = this.limitPrecision(this.service.getData(), MoonTableComponent.FLOAT_PRECISION);\n      this.table.renderTable();\n    })\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n  }\n\n  public onChange = (changes: any, source: any) => {\n    if (changes) {\n      this.service.setData(this.table.getData());\n    }\n  }\n\n  public onRemove = (index: number, amount: number) => {\n    this.service.removeRow(index, amount);\n  }\n\n  public onInsert = (index: number, amount: number) => {\n    this.service.addRow(index, amount);\n  }\n\n  private limitPrecision(data: MoonDataDict[], precision: number): MoonDataDict[] {\n    return data.map(\n      (row: MoonDataDict) => {\n        return {\n          julianDate: row.julianDate ? parseFloat(row.julianDate.toFixed(precision)) : row.julianDate,\n          angularSeparation: row.angularSeparation ? parseFloat(row.angularSeparation.toFixed(precision)) : row.angularSeparation\n        }\n      }\n    );\n  }\n\n}\n\nclass MoonTable implements MyTable {\n  private readonly id: string;\n  private hotRegisterer = new HotTableRegisterer();\n\n  constructor(id: string) {\n    this.id = id;\n  }\n\n  getTable(): Handsontable {\n    return this.hotRegisterer.getInstance(this.id);\n  }\n\n  renderTable(): void {\n    this.getTable().render();\n  }\n\n  getData(): any[] {\n    return this.getTable().getSourceData();\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./moon-table.component.scss\n                \n                .container {\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MoonTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MyChart.html":{"url":"interfaces/MyChart.html","title":"interface - MyChart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MyChart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/shared/charts/chart.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        generateChartConfig\n                                    \n                                \n                                \n                                    \n                                        generateChartOptions\n                                    \n                                \n                                \n                                    \n                                        renderChart\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateChartConfig\n                        \n                    \n                \n            \n            \n                \ngenerateChartConfig(data: MyData, chartInfo: ChartInfo, toolInterface: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/charts/chart.interface.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                MyData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    chartInfo\n                                    \n                                                ChartInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    toolInterface\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateChartOptions\n                        \n                    \n                \n            \n            \n                \ngenerateChartOptions(chartInfo: ChartInfo, toolInterface: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/charts/chart.interface.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartInfo\n                                    \n                                                ChartInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    toolInterface\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ChartOptions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderChart\n                        \n                    \n                \n            \n            \n                \nrenderChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/charts/chart.interface.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {ChartConfiguration, ChartOptions} from \"chart.js\";\nimport {MyData} from \"../data/data.interface\";\n\nexport interface ChartInfo {\n  getChartTitle(): string;\n\n  getXAxisLabel(): string;\n\n  getYAxisLabel(): string;\n\n  getDataLabel(): string;\n\n  getStorageObject(): any;\n\n  setChartTitle(title: string): void;\n\n  setXAxisLabel(xAxis: string): void;\n\n  setYAxisLabel(yAxis: string): void;\n\n  setDataLabel(data: string): void;\n\n  setStorageObject(storageObject: any): void;\n\n}\n\nexport interface MyChart {\n  generateChartConfig(data: MyData, chartInfo: ChartInfo, toolInterface: any): ChartConfiguration['data'];\n\n  generateChartOptions(chartInfo: ChartInfo, toolInterface: any): ChartOptions;\n\n  renderChart(): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MyColorTheme.html":{"url":"interfaces/MyColorTheme.html","title":"interface - MyColorTheme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MyColorTheme\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/settings/appearance/service/appearance.utils.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            displayName\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MyColorTheme {\n  key: string;\n  displayName: string;\n}\n\nexport enum ColorThemes {\n  LIGHT = 'LIGHT_THEME',\n  DARK = 'DARK_THEME',\n  // HIGH_CONTRAST = 'HC_THEME',\n  HIGH_CONTRAST_DARK = 'HC_DARK_THEME'\n}\n\nexport interface MyFontStyle {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontStyles {\n  DEFAULT = 'normal',\n  BOLD = 'bold',\n  EXTRA_BOLD = 'bolder',\n}\n\nexport interface MyFontSize {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontSizes {\n  SMALL = \"small\",\n  DEFAULT = \"default\",\n  LARGE = \"large\",\n  LARGER = \"larger\",\n}\n\nexport enum FontFamily {\n  ROBOTO = 'Roboto',\n  COMIC_NEUE = 'Comic-Neue',\n}\n\nexport interface MyFontFamily {\n  key: string;\n  displayName: string;\n}\n\nexport class ColorThemeSettings {\n  public static getThemeLists(): MyColorTheme[] {\n    return [\n      {key: ColorThemes.LIGHT, displayName: 'Light'},\n      {key: ColorThemes.DARK, displayName: 'Dark'},\n      // {key: ColorThemes.HIGH_CONTRAST, displayName: 'High Contrast'},\n      {key: ColorThemes.HIGH_CONTRAST_DARK, displayName: 'High Contrast Dark'}\n    ];\n  }\n\n  public static getFontStyleLists(): MyFontStyle[] {\n    return [\n      {key: FontStyles.DEFAULT, displayName: 'Default'},\n      {key: FontStyles.BOLD, displayName: 'Bold'},\n      {key: FontStyles.EXTRA_BOLD, displayName: 'Extra Bold'}\n    ]\n  }\n\n  public static getFontSizeLists(): MyFontSize[] {\n    return [\n      {key: FontSizes.SMALL, displayName: 'Small'},\n      {key: FontSizes.DEFAULT, displayName: 'Default'},\n      {key: FontSizes.LARGE, displayName: 'Large'},\n      {key: FontSizes.LARGER, displayName: 'Larger'}\n    ]\n  }\n\n  public static getFontFamilyLists(): MyFontFamily[] {\n    return [\n      {key: FontFamily.ROBOTO, displayName: 'Roboto'},\n      {key: FontFamily.COMIC_NEUE, displayName: 'Comic Neue'}\n    ]\n  }\n}\n\nexport enum ChartColorMode {\n  LIGHT = 'LIGHT',\n  DARK = 'DARK'\n}\n\n\nexport class DefaultAppearanceSettings {\n  public static theme: ColorThemes = ColorThemes.LIGHT;\n  public static fontStyle: FontStyles = FontStyles.DEFAULT;\n  public static fontSize: FontSizes = FontSizes.DEFAULT;\n  public static fontFamily: FontFamily = FontFamily.ROBOTO;\n  public static chartColorMode: ChartColorMode = ChartColorMode.LIGHT;\n}\n\n\nexport class ChartColor {\n  private static readonly lineColorLightArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n  private static readonly lineColorDarkArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n\n  public static getFontColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#2b4162' : '#f5f0f6';\n  }\n\n  public static getBackgroundColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#C3CFD4' : '#325769';\n  }\n\n  public static getLineColor(index: number): string {\n    if (index = this.lineColorLightArray.length)\n      return 'black';\n    else\n      // return mode === ChartColorMode.LIGHT ? this.lineColorLightArray[index] : this.lineColorDarkArray[index];\n      return this.lineColorLightArray[index];\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MyData.html":{"url":"interfaces/MyData.html","title":"interface - MyData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MyData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/shared/data/data.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        addRow\n                                    \n                                \n                                \n                                    \n                                        getData\n                                    \n                                \n                                \n                                    \n                                        getDataArray\n                                    \n                                \n                                \n                                    \n                                        removeRow\n                                    \n                                \n                                \n                                    \n                                        setData\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRow\n                        \n                    \n                \n            \n            \n                \naddRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/data/data.interface.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/data/data.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataArray\n                        \n                    \n                \n            \n            \n                \ngetDataArray()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/data/data.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRow\n                        \n                    \n                \n            \n            \n                \nremoveRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/data/data.interface.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setData\n                        \n                    \n                \n            \n            \n                \nsetData(data: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/data/data.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface MyData {\n  getData(): any[];\n\n  getDataArray(): any[];\n\n  setData(data: any[]): void;\n\n  addRow(index: number, amount: number): void;\n\n  removeRow(index: number, amount: number): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyFileParser.html":{"url":"classes/MyFileParser.html","title":"class - MyFileParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyFileParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/shared/data/FileParser.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data$\n                            \n                            \n                                    Private\n                                    Readonly\n                                dataKeys\n                            \n                            \n                                    Private\n                                dataSubject\n                            \n                            \n                                    Public\n                                error$\n                            \n                            \n                                    Private\n                                errorSubject\n                            \n                            \n                                    Public\n                                header$\n                            \n                            \n                                    Private\n                                    Readonly\n                                headerRequirements\n                            \n                            \n                                    Private\n                                headerSubject\n                            \n                            \n                                    Private\n                                    Readonly\n                                strategy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getHeaders\n                            \n                            \n                                    Public\n                                readFile\n                            \n                            \n                                    Public\n                                validateFormat\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileType: FileType, dataKeys: string[], headerRequirements: HeaderRequirement[])\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/shared/data/FileParser.ts:90\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileType\n                                                  \n                                                        \n                                                                        FileType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataKeys\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        headerRequirements\n                                                  \n                                                        \n                                                                        HeaderRequirement[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.dataSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/shared/data/FileParser.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dataKeys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/shared/data/FileParser.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/shared/data/FileParser.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        error$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.errorSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/shared/data/FileParser.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        errorSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/shared/data/FileParser.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        header$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.headerSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/shared/data/FileParser.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        headerRequirements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HeaderRequirement[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/shared/data/FileParser.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        headerSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/shared/data/FileParser.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        strategy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MyFileParserStrategy\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/shared/data/FileParser.ts:80\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getHeaders\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHeaders(file: File, isEmitError)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/data/FileParser.ts:119\n                \n            \n\n\n            \n                \n                    Get the headers of a file as a dictionary\nEmit the headers if the headers are found\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isEmitError\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        readFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    readFile(file: File, isEmitData: boolean, isEmitHeaders: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/data/FileParser.ts:141\n                \n            \n\n\n            \n                \n                    Read a file, with options weather to emit the data and/or the headers\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            File\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    isEmitData\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                                \n                                    isEmitHeaders\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        validateFormat\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateFormat(file: File)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/data/FileParser.ts:109\n                \n            \n\n\n            \n                \n                    Validate the format of a file\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the format is valid, false otherwise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Subject} from \"rxjs\";\n\n\nexport enum MyFileParserErrors {\n  FORMAT = \"format\",\n  FIELD = \"field\",\n  HEADER = \"header\",\n  DATA = \"data\",\n  STRATEGY = \"strategy\",\n}\n\nexport interface HeaderRequirement {\n  key: string;\n  value?: string;\n}\n\nexport interface MyFileParserStrategy {\n  /**\n   * Validate the format of the file\n   * @param file\n   * @return true if the format is valid, false otherwise\n   */\n  validateFormat(file: File): boolean;\n\n  /**\n   * Get the headers of the file as a dictionary\n   * @param fileText\n   * @param headerRequirements\n   * @return the headers of the file as a dictionary or undefined if the headers are not found\n   */\n  getHeaders(fileText: string,\n             headerRequirements: HeaderRequirement[])\n    : { [key: string]: string } | undefined;\n\n  /**\n   * Get the indices of the fields in the file\n   * Emits an error if one or more fields are not found\n   * @param fileText\n   * @param dataKeys\n   * @return the indices of the fields in the file or undefined if one or more fields are not found\n   */\n  getFieldsIndices(fileText: string,\n                   dataKeys: string[])\n    : { [key: string]: number } | undefined;\n\n  /**\n   * Get the data from the file\n   * Emits an error if the data is invalid\n   * Emits the data if the data is valid\n   * @param fileText\n   * @param fields\n   * @param fieldsIndices\n   * @return the data from the file or undefined if the data is invalid\n   */\n  getData(fileText: string,\n          fields: string[],\n          fieldsIndices: { [key: string]: number },)\n    : any[] | undefined;\n\n  /**\n   * Read the file\n   * Emits an error if the file is invalid\n   * Emits the data if the file is valid\n   * @param file\n   * @param headerRequirements\n   * @param dataKeys\n   * @param errorSubject\n   * @param dataSubject\n   * @param headerSubject\n   */\n  readFile(file: File,\n           headerRequirements: HeaderRequirement[],\n           dataKeys: string[],\n           errorSubject: Subject,\n           dataSubject: Subject | undefined,\n           headerSubject: Subject | undefined): void;\n}\n\nexport class MyFileParser {\n  private readonly strategy!: MyFileParserStrategy;\n  private readonly headerRequirements: HeaderRequirement[];\n  private readonly dataKeys: string[];\n\n  private errorSubject: Subject = new Subject();\n  public error$ = this.errorSubject.asObservable();\n  private headerSubject: Subject\n    = new Subject();\n  public header$ = this.headerSubject.asObservable();\n  private dataSubject: Subject = new Subject();\n  public data$ = this.dataSubject.asObservable();\n\n  constructor(fileType: FileType,\n              dataKeys: string[],\n              headerRequirements: HeaderRequirement[] = [],) {\n    if (fileType === FileType.GBO_SPECTRUM_TXT) {\n      this.strategy = new MyFileParserTXT();\n    } else {\n      this.strategy = new MyFileParserDefault();\n    }\n    this.headerRequirements = headerRequirements;\n    this.dataKeys = dataKeys;\n  }\n\n  /**\n   * Validate the format of a file\n   * @param file\n   * @return true if the format is valid, false otherwise\n   */\n  public validateFormat(file: File): boolean {\n    return this.strategy.validateFormat(file);\n  }\n\n  /**\n   * Get the headers of a file as a dictionary\n   * Emit the headers if the headers are found\n   * @param file\n   * @param isEmitError\n   */\n  public getHeaders(file: File, isEmitError: false): void {\n    if (this.validateFormat(file)) {\n      const fileReader = new FileReader();\n      fileReader.onload = () => {\n        const fileText = fileReader.result as string;\n        const headers = this.strategy.getHeaders(fileText, this.headerRequirements);\n        if (headers === undefined && isEmitError) {\n          this.errorSubject.next(MyFileParserErrors.HEADER);\n        } else {\n          this.headerSubject.next(headers);\n        }\n      }\n      fileReader.readAsText(file);\n    }\n  }\n\n  /**\n   * Read a file, with options weather to emit the data and/or the headers\n   * @param file\n   * @param isEmitData\n   * @param isEmitHeaders\n   */\n  public readFile(file: File, isEmitData: boolean = true, isEmitHeaders: boolean = false): void {\n    this.strategy.readFile(file, this.headerRequirements, this.dataKeys, this.errorSubject,\n      isEmitData ? this.dataSubject : undefined,\n      isEmitHeaders ? this.headerSubject : undefined);\n  }\n\n\n}\n\nexport enum FileType {\n  GBO_SPECTRUM_TXT = \"gbo-spectrum-txt\",\n}\n\n\nclass MyFileParserTXT implements MyFileParserStrategy {\n  getData(fileText: string,\n          fields: string[],\n          fieldsIndices: { [p: string]: number }): any[] | undefined {\n    if (fields.length === 0 || (fields.length !== Object.keys(fieldsIndices).length)) {\n      return undefined;\n    }\n\n    const resultData: any[] = [];\n    fileText.split(\"\\n\").filter((line: string) => !line.startsWith(\"#\"))\n      .map((line: string) => {\n        const data: any = {};\n        const values: string[] = line.split(/\\s+/)\n          .map((value: string) => value.trim())\n          .filter((value: string) => value !== \"\");\n        fields.forEach((field: string) => {\n          data[field] = values[fieldsIndices[field]];\n        });\n        resultData.push(data);\n      });\n    return resultData;\n  }\n\n  getFieldsIndices(fileText: string, dataKeys: string[])\n    : { [p: string]: number } | undefined {\n    const lines = fileText.split(\"\\n\");\n    const nonDataLines = lines.filter((line: string) => line.startsWith(\"#\"));\n    const cols: string[] = nonDataLines[nonDataLines.length - 1]\n      .replace(\"#\", \"\").split(/\\s+/)\n      .map((col: string) => col.trim()).filter((col: string) => col !== \"\");\n    const keyFieldMap: { [key: string]: number } = {};\n    let isDataKeyMissing: boolean = false;\n    dataKeys.forEach((dataKey: string) => {\n      keyFieldMap[dataKey] = cols.indexOf(dataKey);\n      if (keyFieldMap[dataKey] === -1) {\n        isDataKeyMissing = true;\n      }\n    });\n    return isDataKeyMissing ? undefined : keyFieldMap;\n  }\n\n  getHeaders(fileText: string, headerRequirements: HeaderRequirement[])\n    : { [p: string]: string } | undefined {\n    const lines = fileText.split(\"\\n\");\n    const headerLines = lines.filter((line: string) => line.startsWith(\"#\") && line.includes(\"=\"));\n    const headers: { [key: string]: string } = {};\n    headerLines.map((line: string): any => {\n      headers[line.split(\"=\")[0].replace(\"#\", \"\").trim()]\n        = line.split(\"=\")[1].trim();\n    });\n\n    const headerKeys = Object.keys(headers);\n    let isHeaderValid = true;\n    headerRequirements.forEach((headerRequirement: HeaderRequirement) => {\n      if (!headerKeys.includes(headerRequirement.key) ||\n        (headerRequirement.value !== undefined &&\n          headers[headerRequirement.key] !== headerRequirement.value)) {\n        isHeaderValid = false;\n      }\n    });\n    return isHeaderValid ? headers : undefined;\n  }\n\n  readFile(file: File, headerRequirements: HeaderRequirement[], dataKeys: string[],\n           errorSubject: Subject,\n           dataSubject: Subject | undefined,\n           headerSubject: Subject | undefined): void {\n    if (!this.validateFormat(file)) {\n      errorSubject.next(MyFileParserErrors.FORMAT);\n      return;\n    }\n\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      const fileText = fileReader.result as string;\n      const headers = this.getHeaders(fileText, headerRequirements);\n      if (headers === undefined) {\n        errorSubject.next(MyFileParserErrors.HEADER);\n        return;\n      }\n      if (headerSubject !== undefined) {\n        headerSubject.next(headers);\n      }\n      const fieldsIndices = this.getFieldsIndices(fileText, dataKeys);\n      if (fieldsIndices === undefined) {\n        errorSubject.next(MyFileParserErrors.FIELD);\n        return;\n      }\n\n      const data = this.getData(fileText, dataKeys, fieldsIndices);\n      if (data === undefined) {\n        errorSubject.next(MyFileParserErrors.DATA);\n        return;\n      }\n      if (dataSubject !== undefined) {\n        dataSubject.next(data);\n      }\n    }\n    fileReader.readAsText(file);\n  }\n\n  validateFormat(file: File): boolean {\n    return !(!file.type.match(\"text/plain\") || !file.name.endsWith(\".txt\"));\n  }\n}\n\nclass MyFileParserDefault implements MyFileParserStrategy {\n  getData(fileText: string, fields: string[],\n          fieldsIndices: { [value: string]: number }): any[] | undefined {\n    return undefined;\n  }\n\n  getFieldsIndices(fileText: string, dataKeys: string[]): { [p: string]: number } | undefined {\n    return undefined;\n  }\n\n  getHeaders(fileText: string, headerRequirements: HeaderRequirement[]): { [p: string]: string } | undefined {\n    return undefined;\n  }\n\n  readFile(file: File, headerRequirements: HeaderRequirement[], dataKeys: string[],\n           errorSubject: Subject,\n           dataSubject: Subject | undefined,\n           headerSubject: Subject | undefined): void {\n    errorSubject.next(MyFileParserErrors.STRATEGY);\n  }\n\n  validateFormat(file: File): boolean {\n    return false;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyFileParserDefault.html":{"url":"classes/MyFileParserDefault.html","title":"class - MyFileParserDefault","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyFileParserDefault\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/shared/data/FileParser.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyFileParserStrategy\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                            \n                                getFieldsIndices\n                            \n                            \n                                getHeaders\n                            \n                            \n                                readFile\n                            \n                            \n                                validateFormat\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData(fileText: string, fields: string[], fieldsIndices: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/data/FileParser.ts:262\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fields\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fieldsIndices\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [] | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldsIndices\n                        \n                    \n                \n            \n            \n                \ngetFieldsIndices(fileText: string, dataKeys: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/data/FileParser.ts:267\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dataKeys\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHeaders\n                        \n                    \n                \n            \n            \n                \ngetHeaders(fileText: string, headerRequirements: HeaderRequirement[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/data/FileParser.ts:271\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    headerRequirements\n                                    \n                                                HeaderRequirement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        readFile\n                        \n                    \n                \n            \n            \n                \nreadFile(file: File, headerRequirements: HeaderRequirement[], dataKeys: string[], errorSubject: Subject, dataSubject: Subject | undefined, headerSubject: Subject | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/data/FileParser.ts:275\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    headerRequirements\n                                    \n                                                HeaderRequirement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dataKeys\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    errorSubject\n                                    \n                                                Subject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dataSubject\n                                    \n                                            Subject | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    headerSubject\n                                    \n                                            Subject | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateFormat\n                        \n                    \n                \n            \n            \n                \nvalidateFormat(file: File)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/data/FileParser.ts:282\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Subject} from \"rxjs\";\n\n\nexport enum MyFileParserErrors {\n  FORMAT = \"format\",\n  FIELD = \"field\",\n  HEADER = \"header\",\n  DATA = \"data\",\n  STRATEGY = \"strategy\",\n}\n\nexport interface HeaderRequirement {\n  key: string;\n  value?: string;\n}\n\nexport interface MyFileParserStrategy {\n  /**\n   * Validate the format of the file\n   * @param file\n   * @return true if the format is valid, false otherwise\n   */\n  validateFormat(file: File): boolean;\n\n  /**\n   * Get the headers of the file as a dictionary\n   * @param fileText\n   * @param headerRequirements\n   * @return the headers of the file as a dictionary or undefined if the headers are not found\n   */\n  getHeaders(fileText: string,\n             headerRequirements: HeaderRequirement[])\n    : { [key: string]: string } | undefined;\n\n  /**\n   * Get the indices of the fields in the file\n   * Emits an error if one or more fields are not found\n   * @param fileText\n   * @param dataKeys\n   * @return the indices of the fields in the file or undefined if one or more fields are not found\n   */\n  getFieldsIndices(fileText: string,\n                   dataKeys: string[])\n    : { [key: string]: number } | undefined;\n\n  /**\n   * Get the data from the file\n   * Emits an error if the data is invalid\n   * Emits the data if the data is valid\n   * @param fileText\n   * @param fields\n   * @param fieldsIndices\n   * @return the data from the file or undefined if the data is invalid\n   */\n  getData(fileText: string,\n          fields: string[],\n          fieldsIndices: { [key: string]: number },)\n    : any[] | undefined;\n\n  /**\n   * Read the file\n   * Emits an error if the file is invalid\n   * Emits the data if the file is valid\n   * @param file\n   * @param headerRequirements\n   * @param dataKeys\n   * @param errorSubject\n   * @param dataSubject\n   * @param headerSubject\n   */\n  readFile(file: File,\n           headerRequirements: HeaderRequirement[],\n           dataKeys: string[],\n           errorSubject: Subject,\n           dataSubject: Subject | undefined,\n           headerSubject: Subject | undefined): void;\n}\n\nexport class MyFileParser {\n  private readonly strategy!: MyFileParserStrategy;\n  private readonly headerRequirements: HeaderRequirement[];\n  private readonly dataKeys: string[];\n\n  private errorSubject: Subject = new Subject();\n  public error$ = this.errorSubject.asObservable();\n  private headerSubject: Subject\n    = new Subject();\n  public header$ = this.headerSubject.asObservable();\n  private dataSubject: Subject = new Subject();\n  public data$ = this.dataSubject.asObservable();\n\n  constructor(fileType: FileType,\n              dataKeys: string[],\n              headerRequirements: HeaderRequirement[] = [],) {\n    if (fileType === FileType.GBO_SPECTRUM_TXT) {\n      this.strategy = new MyFileParserTXT();\n    } else {\n      this.strategy = new MyFileParserDefault();\n    }\n    this.headerRequirements = headerRequirements;\n    this.dataKeys = dataKeys;\n  }\n\n  /**\n   * Validate the format of a file\n   * @param file\n   * @return true if the format is valid, false otherwise\n   */\n  public validateFormat(file: File): boolean {\n    return this.strategy.validateFormat(file);\n  }\n\n  /**\n   * Get the headers of a file as a dictionary\n   * Emit the headers if the headers are found\n   * @param file\n   * @param isEmitError\n   */\n  public getHeaders(file: File, isEmitError: false): void {\n    if (this.validateFormat(file)) {\n      const fileReader = new FileReader();\n      fileReader.onload = () => {\n        const fileText = fileReader.result as string;\n        const headers = this.strategy.getHeaders(fileText, this.headerRequirements);\n        if (headers === undefined && isEmitError) {\n          this.errorSubject.next(MyFileParserErrors.HEADER);\n        } else {\n          this.headerSubject.next(headers);\n        }\n      }\n      fileReader.readAsText(file);\n    }\n  }\n\n  /**\n   * Read a file, with options weather to emit the data and/or the headers\n   * @param file\n   * @param isEmitData\n   * @param isEmitHeaders\n   */\n  public readFile(file: File, isEmitData: boolean = true, isEmitHeaders: boolean = false): void {\n    this.strategy.readFile(file, this.headerRequirements, this.dataKeys, this.errorSubject,\n      isEmitData ? this.dataSubject : undefined,\n      isEmitHeaders ? this.headerSubject : undefined);\n  }\n\n\n}\n\nexport enum FileType {\n  GBO_SPECTRUM_TXT = \"gbo-spectrum-txt\",\n}\n\n\nclass MyFileParserTXT implements MyFileParserStrategy {\n  getData(fileText: string,\n          fields: string[],\n          fieldsIndices: { [p: string]: number }): any[] | undefined {\n    if (fields.length === 0 || (fields.length !== Object.keys(fieldsIndices).length)) {\n      return undefined;\n    }\n\n    const resultData: any[] = [];\n    fileText.split(\"\\n\").filter((line: string) => !line.startsWith(\"#\"))\n      .map((line: string) => {\n        const data: any = {};\n        const values: string[] = line.split(/\\s+/)\n          .map((value: string) => value.trim())\n          .filter((value: string) => value !== \"\");\n        fields.forEach((field: string) => {\n          data[field] = values[fieldsIndices[field]];\n        });\n        resultData.push(data);\n      });\n    return resultData;\n  }\n\n  getFieldsIndices(fileText: string, dataKeys: string[])\n    : { [p: string]: number } | undefined {\n    const lines = fileText.split(\"\\n\");\n    const nonDataLines = lines.filter((line: string) => line.startsWith(\"#\"));\n    const cols: string[] = nonDataLines[nonDataLines.length - 1]\n      .replace(\"#\", \"\").split(/\\s+/)\n      .map((col: string) => col.trim()).filter((col: string) => col !== \"\");\n    const keyFieldMap: { [key: string]: number } = {};\n    let isDataKeyMissing: boolean = false;\n    dataKeys.forEach((dataKey: string) => {\n      keyFieldMap[dataKey] = cols.indexOf(dataKey);\n      if (keyFieldMap[dataKey] === -1) {\n        isDataKeyMissing = true;\n      }\n    });\n    return isDataKeyMissing ? undefined : keyFieldMap;\n  }\n\n  getHeaders(fileText: string, headerRequirements: HeaderRequirement[])\n    : { [p: string]: string } | undefined {\n    const lines = fileText.split(\"\\n\");\n    const headerLines = lines.filter((line: string) => line.startsWith(\"#\") && line.includes(\"=\"));\n    const headers: { [key: string]: string } = {};\n    headerLines.map((line: string): any => {\n      headers[line.split(\"=\")[0].replace(\"#\", \"\").trim()]\n        = line.split(\"=\")[1].trim();\n    });\n\n    const headerKeys = Object.keys(headers);\n    let isHeaderValid = true;\n    headerRequirements.forEach((headerRequirement: HeaderRequirement) => {\n      if (!headerKeys.includes(headerRequirement.key) ||\n        (headerRequirement.value !== undefined &&\n          headers[headerRequirement.key] !== headerRequirement.value)) {\n        isHeaderValid = false;\n      }\n    });\n    return isHeaderValid ? headers : undefined;\n  }\n\n  readFile(file: File, headerRequirements: HeaderRequirement[], dataKeys: string[],\n           errorSubject: Subject,\n           dataSubject: Subject | undefined,\n           headerSubject: Subject | undefined): void {\n    if (!this.validateFormat(file)) {\n      errorSubject.next(MyFileParserErrors.FORMAT);\n      return;\n    }\n\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      const fileText = fileReader.result as string;\n      const headers = this.getHeaders(fileText, headerRequirements);\n      if (headers === undefined) {\n        errorSubject.next(MyFileParserErrors.HEADER);\n        return;\n      }\n      if (headerSubject !== undefined) {\n        headerSubject.next(headers);\n      }\n      const fieldsIndices = this.getFieldsIndices(fileText, dataKeys);\n      if (fieldsIndices === undefined) {\n        errorSubject.next(MyFileParserErrors.FIELD);\n        return;\n      }\n\n      const data = this.getData(fileText, dataKeys, fieldsIndices);\n      if (data === undefined) {\n        errorSubject.next(MyFileParserErrors.DATA);\n        return;\n      }\n      if (dataSubject !== undefined) {\n        dataSubject.next(data);\n      }\n    }\n    fileReader.readAsText(file);\n  }\n\n  validateFormat(file: File): boolean {\n    return !(!file.type.match(\"text/plain\") || !file.name.endsWith(\".txt\"));\n  }\n}\n\nclass MyFileParserDefault implements MyFileParserStrategy {\n  getData(fileText: string, fields: string[],\n          fieldsIndices: { [value: string]: number }): any[] | undefined {\n    return undefined;\n  }\n\n  getFieldsIndices(fileText: string, dataKeys: string[]): { [p: string]: number } | undefined {\n    return undefined;\n  }\n\n  getHeaders(fileText: string, headerRequirements: HeaderRequirement[]): { [p: string]: string } | undefined {\n    return undefined;\n  }\n\n  readFile(file: File, headerRequirements: HeaderRequirement[], dataKeys: string[],\n           errorSubject: Subject,\n           dataSubject: Subject | undefined,\n           headerSubject: Subject | undefined): void {\n    errorSubject.next(MyFileParserErrors.STRATEGY);\n  }\n\n  validateFormat(file: File): boolean {\n    return false;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MyFileParserStrategy.html":{"url":"interfaces/MyFileParserStrategy.html","title":"interface - MyFileParserStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MyFileParserStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/shared/data/FileParser.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getData\n                                    \n                                \n                                \n                                    \n                                        getFieldsIndices\n                                    \n                                \n                                \n                                    \n                                        getHeaders\n                                    \n                                \n                                \n                                    \n                                        readFile\n                                    \n                                \n                                \n                                    \n                                        validateFormat\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData(fileText: string, fields: string[], fieldsIndices: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/data/FileParser.ts:55\n                \n            \n\n\n            \n                \n                    Get the data from the file\nEmits an error if the data is invalid\nEmits the data if the data is valid\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fields\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fieldsIndices\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [] | undefined\n\n                    \n                    \n                        the data from the file or undefined if the data is invalid\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldsIndices\n                        \n                    \n                \n            \n            \n                \ngetFieldsIndices(fileText: string, dataKeys: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/data/FileParser.ts:42\n                \n            \n\n\n            \n                \n                    Get the indices of the fields in the file\nEmits an error if one or more fields are not found\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dataKeys\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | undefined\n\n                    \n                    \n                        the indices of the fields in the file or undefined if one or more fields are not found\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHeaders\n                        \n                    \n                \n            \n            \n                \ngetHeaders(fileText: string, headerRequirements: HeaderRequirement[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/data/FileParser.ts:31\n                \n            \n\n\n            \n                \n                    Get the headers of the file as a dictionary\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    headerRequirements\n                                    \n                                                HeaderRequirement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | undefined\n\n                    \n                    \n                        the headers of the file as a dictionary or undefined if the headers are not found\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        readFile\n                        \n                    \n                \n            \n            \n                \nreadFile(file: File, headerRequirements: HeaderRequirement[], dataKeys: string[], errorSubject: Subject, dataSubject: Subject | undefined, headerSubject: Subject | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/data/FileParser.ts:71\n                \n            \n\n\n            \n                \n                    Read the file\nEmits an error if the file is invalid\nEmits the data if the file is valid\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    headerRequirements\n                                    \n                                                HeaderRequirement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dataKeys\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    errorSubject\n                                    \n                                                Subject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dataSubject\n                                    \n                                            Subject | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    headerSubject\n                                    \n                                            Subject | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateFormat\n                        \n                    \n                \n            \n            \n                \nvalidateFormat(file: File)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/data/FileParser.ts:23\n                \n            \n\n\n            \n                \n                    Validate the format of the file\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the format is valid, false otherwise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Subject} from \"rxjs\";\n\n\nexport enum MyFileParserErrors {\n  FORMAT = \"format\",\n  FIELD = \"field\",\n  HEADER = \"header\",\n  DATA = \"data\",\n  STRATEGY = \"strategy\",\n}\n\nexport interface HeaderRequirement {\n  key: string;\n  value?: string;\n}\n\nexport interface MyFileParserStrategy {\n  /**\n   * Validate the format of the file\n   * @param file\n   * @return true if the format is valid, false otherwise\n   */\n  validateFormat(file: File): boolean;\n\n  /**\n   * Get the headers of the file as a dictionary\n   * @param fileText\n   * @param headerRequirements\n   * @return the headers of the file as a dictionary or undefined if the headers are not found\n   */\n  getHeaders(fileText: string,\n             headerRequirements: HeaderRequirement[])\n    : { [key: string]: string } | undefined;\n\n  /**\n   * Get the indices of the fields in the file\n   * Emits an error if one or more fields are not found\n   * @param fileText\n   * @param dataKeys\n   * @return the indices of the fields in the file or undefined if one or more fields are not found\n   */\n  getFieldsIndices(fileText: string,\n                   dataKeys: string[])\n    : { [key: string]: number } | undefined;\n\n  /**\n   * Get the data from the file\n   * Emits an error if the data is invalid\n   * Emits the data if the data is valid\n   * @param fileText\n   * @param fields\n   * @param fieldsIndices\n   * @return the data from the file or undefined if the data is invalid\n   */\n  getData(fileText: string,\n          fields: string[],\n          fieldsIndices: { [key: string]: number },)\n    : any[] | undefined;\n\n  /**\n   * Read the file\n   * Emits an error if the file is invalid\n   * Emits the data if the file is valid\n   * @param file\n   * @param headerRequirements\n   * @param dataKeys\n   * @param errorSubject\n   * @param dataSubject\n   * @param headerSubject\n   */\n  readFile(file: File,\n           headerRequirements: HeaderRequirement[],\n           dataKeys: string[],\n           errorSubject: Subject,\n           dataSubject: Subject | undefined,\n           headerSubject: Subject | undefined): void;\n}\n\nexport class MyFileParser {\n  private readonly strategy!: MyFileParserStrategy;\n  private readonly headerRequirements: HeaderRequirement[];\n  private readonly dataKeys: string[];\n\n  private errorSubject: Subject = new Subject();\n  public error$ = this.errorSubject.asObservable();\n  private headerSubject: Subject\n    = new Subject();\n  public header$ = this.headerSubject.asObservable();\n  private dataSubject: Subject = new Subject();\n  public data$ = this.dataSubject.asObservable();\n\n  constructor(fileType: FileType,\n              dataKeys: string[],\n              headerRequirements: HeaderRequirement[] = [],) {\n    if (fileType === FileType.GBO_SPECTRUM_TXT) {\n      this.strategy = new MyFileParserTXT();\n    } else {\n      this.strategy = new MyFileParserDefault();\n    }\n    this.headerRequirements = headerRequirements;\n    this.dataKeys = dataKeys;\n  }\n\n  /**\n   * Validate the format of a file\n   * @param file\n   * @return true if the format is valid, false otherwise\n   */\n  public validateFormat(file: File): boolean {\n    return this.strategy.validateFormat(file);\n  }\n\n  /**\n   * Get the headers of a file as a dictionary\n   * Emit the headers if the headers are found\n   * @param file\n   * @param isEmitError\n   */\n  public getHeaders(file: File, isEmitError: false): void {\n    if (this.validateFormat(file)) {\n      const fileReader = new FileReader();\n      fileReader.onload = () => {\n        const fileText = fileReader.result as string;\n        const headers = this.strategy.getHeaders(fileText, this.headerRequirements);\n        if (headers === undefined && isEmitError) {\n          this.errorSubject.next(MyFileParserErrors.HEADER);\n        } else {\n          this.headerSubject.next(headers);\n        }\n      }\n      fileReader.readAsText(file);\n    }\n  }\n\n  /**\n   * Read a file, with options weather to emit the data and/or the headers\n   * @param file\n   * @param isEmitData\n   * @param isEmitHeaders\n   */\n  public readFile(file: File, isEmitData: boolean = true, isEmitHeaders: boolean = false): void {\n    this.strategy.readFile(file, this.headerRequirements, this.dataKeys, this.errorSubject,\n      isEmitData ? this.dataSubject : undefined,\n      isEmitHeaders ? this.headerSubject : undefined);\n  }\n\n\n}\n\nexport enum FileType {\n  GBO_SPECTRUM_TXT = \"gbo-spectrum-txt\",\n}\n\n\nclass MyFileParserTXT implements MyFileParserStrategy {\n  getData(fileText: string,\n          fields: string[],\n          fieldsIndices: { [p: string]: number }): any[] | undefined {\n    if (fields.length === 0 || (fields.length !== Object.keys(fieldsIndices).length)) {\n      return undefined;\n    }\n\n    const resultData: any[] = [];\n    fileText.split(\"\\n\").filter((line: string) => !line.startsWith(\"#\"))\n      .map((line: string) => {\n        const data: any = {};\n        const values: string[] = line.split(/\\s+/)\n          .map((value: string) => value.trim())\n          .filter((value: string) => value !== \"\");\n        fields.forEach((field: string) => {\n          data[field] = values[fieldsIndices[field]];\n        });\n        resultData.push(data);\n      });\n    return resultData;\n  }\n\n  getFieldsIndices(fileText: string, dataKeys: string[])\n    : { [p: string]: number } | undefined {\n    const lines = fileText.split(\"\\n\");\n    const nonDataLines = lines.filter((line: string) => line.startsWith(\"#\"));\n    const cols: string[] = nonDataLines[nonDataLines.length - 1]\n      .replace(\"#\", \"\").split(/\\s+/)\n      .map((col: string) => col.trim()).filter((col: string) => col !== \"\");\n    const keyFieldMap: { [key: string]: number } = {};\n    let isDataKeyMissing: boolean = false;\n    dataKeys.forEach((dataKey: string) => {\n      keyFieldMap[dataKey] = cols.indexOf(dataKey);\n      if (keyFieldMap[dataKey] === -1) {\n        isDataKeyMissing = true;\n      }\n    });\n    return isDataKeyMissing ? undefined : keyFieldMap;\n  }\n\n  getHeaders(fileText: string, headerRequirements: HeaderRequirement[])\n    : { [p: string]: string } | undefined {\n    const lines = fileText.split(\"\\n\");\n    const headerLines = lines.filter((line: string) => line.startsWith(\"#\") && line.includes(\"=\"));\n    const headers: { [key: string]: string } = {};\n    headerLines.map((line: string): any => {\n      headers[line.split(\"=\")[0].replace(\"#\", \"\").trim()]\n        = line.split(\"=\")[1].trim();\n    });\n\n    const headerKeys = Object.keys(headers);\n    let isHeaderValid = true;\n    headerRequirements.forEach((headerRequirement: HeaderRequirement) => {\n      if (!headerKeys.includes(headerRequirement.key) ||\n        (headerRequirement.value !== undefined &&\n          headers[headerRequirement.key] !== headerRequirement.value)) {\n        isHeaderValid = false;\n      }\n    });\n    return isHeaderValid ? headers : undefined;\n  }\n\n  readFile(file: File, headerRequirements: HeaderRequirement[], dataKeys: string[],\n           errorSubject: Subject,\n           dataSubject: Subject | undefined,\n           headerSubject: Subject | undefined): void {\n    if (!this.validateFormat(file)) {\n      errorSubject.next(MyFileParserErrors.FORMAT);\n      return;\n    }\n\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      const fileText = fileReader.result as string;\n      const headers = this.getHeaders(fileText, headerRequirements);\n      if (headers === undefined) {\n        errorSubject.next(MyFileParserErrors.HEADER);\n        return;\n      }\n      if (headerSubject !== undefined) {\n        headerSubject.next(headers);\n      }\n      const fieldsIndices = this.getFieldsIndices(fileText, dataKeys);\n      if (fieldsIndices === undefined) {\n        errorSubject.next(MyFileParserErrors.FIELD);\n        return;\n      }\n\n      const data = this.getData(fileText, dataKeys, fieldsIndices);\n      if (data === undefined) {\n        errorSubject.next(MyFileParserErrors.DATA);\n        return;\n      }\n      if (dataSubject !== undefined) {\n        dataSubject.next(data);\n      }\n    }\n    fileReader.readAsText(file);\n  }\n\n  validateFormat(file: File): boolean {\n    return !(!file.type.match(\"text/plain\") || !file.name.endsWith(\".txt\"));\n  }\n}\n\nclass MyFileParserDefault implements MyFileParserStrategy {\n  getData(fileText: string, fields: string[],\n          fieldsIndices: { [value: string]: number }): any[] | undefined {\n    return undefined;\n  }\n\n  getFieldsIndices(fileText: string, dataKeys: string[]): { [p: string]: number } | undefined {\n    return undefined;\n  }\n\n  getHeaders(fileText: string, headerRequirements: HeaderRequirement[]): { [p: string]: string } | undefined {\n    return undefined;\n  }\n\n  readFile(file: File, headerRequirements: HeaderRequirement[], dataKeys: string[],\n           errorSubject: Subject,\n           dataSubject: Subject | undefined,\n           headerSubject: Subject | undefined): void {\n    errorSubject.next(MyFileParserErrors.STRATEGY);\n  }\n\n  validateFormat(file: File): boolean {\n    return false;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyFileParserTXT.html":{"url":"classes/MyFileParserTXT.html","title":"class - MyFileParserTXT","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyFileParserTXT\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/shared/data/FileParser.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyFileParserStrategy\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                            \n                                getFieldsIndices\n                            \n                            \n                                getHeaders\n                            \n                            \n                                readFile\n                            \n                            \n                                validateFormat\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData(fileText: string, fields: string[], fieldsIndices: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/data/FileParser.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fields\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fieldsIndices\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [] | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldsIndices\n                        \n                    \n                \n            \n            \n                \ngetFieldsIndices(fileText: string, dataKeys: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/data/FileParser.ts:178\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dataKeys\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHeaders\n                        \n                    \n                \n            \n            \n                \ngetHeaders(fileText: string, headerRequirements: HeaderRequirement[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/data/FileParser.ts:196\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    headerRequirements\n                                    \n                                                HeaderRequirement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        readFile\n                        \n                    \n                \n            \n            \n                \nreadFile(file: File, headerRequirements: HeaderRequirement[], dataKeys: string[], errorSubject: Subject, dataSubject: Subject | undefined, headerSubject: Subject | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/data/FileParser.ts:218\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    headerRequirements\n                                    \n                                                HeaderRequirement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dataKeys\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    errorSubject\n                                    \n                                                Subject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dataSubject\n                                    \n                                            Subject | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    headerSubject\n                                    \n                                            Subject | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateFormat\n                        \n                    \n                \n            \n            \n                \nvalidateFormat(file: File)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/data/FileParser.ts:256\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Subject} from \"rxjs\";\n\n\nexport enum MyFileParserErrors {\n  FORMAT = \"format\",\n  FIELD = \"field\",\n  HEADER = \"header\",\n  DATA = \"data\",\n  STRATEGY = \"strategy\",\n}\n\nexport interface HeaderRequirement {\n  key: string;\n  value?: string;\n}\n\nexport interface MyFileParserStrategy {\n  /**\n   * Validate the format of the file\n   * @param file\n   * @return true if the format is valid, false otherwise\n   */\n  validateFormat(file: File): boolean;\n\n  /**\n   * Get the headers of the file as a dictionary\n   * @param fileText\n   * @param headerRequirements\n   * @return the headers of the file as a dictionary or undefined if the headers are not found\n   */\n  getHeaders(fileText: string,\n             headerRequirements: HeaderRequirement[])\n    : { [key: string]: string } | undefined;\n\n  /**\n   * Get the indices of the fields in the file\n   * Emits an error if one or more fields are not found\n   * @param fileText\n   * @param dataKeys\n   * @return the indices of the fields in the file or undefined if one or more fields are not found\n   */\n  getFieldsIndices(fileText: string,\n                   dataKeys: string[])\n    : { [key: string]: number } | undefined;\n\n  /**\n   * Get the data from the file\n   * Emits an error if the data is invalid\n   * Emits the data if the data is valid\n   * @param fileText\n   * @param fields\n   * @param fieldsIndices\n   * @return the data from the file or undefined if the data is invalid\n   */\n  getData(fileText: string,\n          fields: string[],\n          fieldsIndices: { [key: string]: number },)\n    : any[] | undefined;\n\n  /**\n   * Read the file\n   * Emits an error if the file is invalid\n   * Emits the data if the file is valid\n   * @param file\n   * @param headerRequirements\n   * @param dataKeys\n   * @param errorSubject\n   * @param dataSubject\n   * @param headerSubject\n   */\n  readFile(file: File,\n           headerRequirements: HeaderRequirement[],\n           dataKeys: string[],\n           errorSubject: Subject,\n           dataSubject: Subject | undefined,\n           headerSubject: Subject | undefined): void;\n}\n\nexport class MyFileParser {\n  private readonly strategy!: MyFileParserStrategy;\n  private readonly headerRequirements: HeaderRequirement[];\n  private readonly dataKeys: string[];\n\n  private errorSubject: Subject = new Subject();\n  public error$ = this.errorSubject.asObservable();\n  private headerSubject: Subject\n    = new Subject();\n  public header$ = this.headerSubject.asObservable();\n  private dataSubject: Subject = new Subject();\n  public data$ = this.dataSubject.asObservable();\n\n  constructor(fileType: FileType,\n              dataKeys: string[],\n              headerRequirements: HeaderRequirement[] = [],) {\n    if (fileType === FileType.GBO_SPECTRUM_TXT) {\n      this.strategy = new MyFileParserTXT();\n    } else {\n      this.strategy = new MyFileParserDefault();\n    }\n    this.headerRequirements = headerRequirements;\n    this.dataKeys = dataKeys;\n  }\n\n  /**\n   * Validate the format of a file\n   * @param file\n   * @return true if the format is valid, false otherwise\n   */\n  public validateFormat(file: File): boolean {\n    return this.strategy.validateFormat(file);\n  }\n\n  /**\n   * Get the headers of a file as a dictionary\n   * Emit the headers if the headers are found\n   * @param file\n   * @param isEmitError\n   */\n  public getHeaders(file: File, isEmitError: false): void {\n    if (this.validateFormat(file)) {\n      const fileReader = new FileReader();\n      fileReader.onload = () => {\n        const fileText = fileReader.result as string;\n        const headers = this.strategy.getHeaders(fileText, this.headerRequirements);\n        if (headers === undefined && isEmitError) {\n          this.errorSubject.next(MyFileParserErrors.HEADER);\n        } else {\n          this.headerSubject.next(headers);\n        }\n      }\n      fileReader.readAsText(file);\n    }\n  }\n\n  /**\n   * Read a file, with options weather to emit the data and/or the headers\n   * @param file\n   * @param isEmitData\n   * @param isEmitHeaders\n   */\n  public readFile(file: File, isEmitData: boolean = true, isEmitHeaders: boolean = false): void {\n    this.strategy.readFile(file, this.headerRequirements, this.dataKeys, this.errorSubject,\n      isEmitData ? this.dataSubject : undefined,\n      isEmitHeaders ? this.headerSubject : undefined);\n  }\n\n\n}\n\nexport enum FileType {\n  GBO_SPECTRUM_TXT = \"gbo-spectrum-txt\",\n}\n\n\nclass MyFileParserTXT implements MyFileParserStrategy {\n  getData(fileText: string,\n          fields: string[],\n          fieldsIndices: { [p: string]: number }): any[] | undefined {\n    if (fields.length === 0 || (fields.length !== Object.keys(fieldsIndices).length)) {\n      return undefined;\n    }\n\n    const resultData: any[] = [];\n    fileText.split(\"\\n\").filter((line: string) => !line.startsWith(\"#\"))\n      .map((line: string) => {\n        const data: any = {};\n        const values: string[] = line.split(/\\s+/)\n          .map((value: string) => value.trim())\n          .filter((value: string) => value !== \"\");\n        fields.forEach((field: string) => {\n          data[field] = values[fieldsIndices[field]];\n        });\n        resultData.push(data);\n      });\n    return resultData;\n  }\n\n  getFieldsIndices(fileText: string, dataKeys: string[])\n    : { [p: string]: number } | undefined {\n    const lines = fileText.split(\"\\n\");\n    const nonDataLines = lines.filter((line: string) => line.startsWith(\"#\"));\n    const cols: string[] = nonDataLines[nonDataLines.length - 1]\n      .replace(\"#\", \"\").split(/\\s+/)\n      .map((col: string) => col.trim()).filter((col: string) => col !== \"\");\n    const keyFieldMap: { [key: string]: number } = {};\n    let isDataKeyMissing: boolean = false;\n    dataKeys.forEach((dataKey: string) => {\n      keyFieldMap[dataKey] = cols.indexOf(dataKey);\n      if (keyFieldMap[dataKey] === -1) {\n        isDataKeyMissing = true;\n      }\n    });\n    return isDataKeyMissing ? undefined : keyFieldMap;\n  }\n\n  getHeaders(fileText: string, headerRequirements: HeaderRequirement[])\n    : { [p: string]: string } | undefined {\n    const lines = fileText.split(\"\\n\");\n    const headerLines = lines.filter((line: string) => line.startsWith(\"#\") && line.includes(\"=\"));\n    const headers: { [key: string]: string } = {};\n    headerLines.map((line: string): any => {\n      headers[line.split(\"=\")[0].replace(\"#\", \"\").trim()]\n        = line.split(\"=\")[1].trim();\n    });\n\n    const headerKeys = Object.keys(headers);\n    let isHeaderValid = true;\n    headerRequirements.forEach((headerRequirement: HeaderRequirement) => {\n      if (!headerKeys.includes(headerRequirement.key) ||\n        (headerRequirement.value !== undefined &&\n          headers[headerRequirement.key] !== headerRequirement.value)) {\n        isHeaderValid = false;\n      }\n    });\n    return isHeaderValid ? headers : undefined;\n  }\n\n  readFile(file: File, headerRequirements: HeaderRequirement[], dataKeys: string[],\n           errorSubject: Subject,\n           dataSubject: Subject | undefined,\n           headerSubject: Subject | undefined): void {\n    if (!this.validateFormat(file)) {\n      errorSubject.next(MyFileParserErrors.FORMAT);\n      return;\n    }\n\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      const fileText = fileReader.result as string;\n      const headers = this.getHeaders(fileText, headerRequirements);\n      if (headers === undefined) {\n        errorSubject.next(MyFileParserErrors.HEADER);\n        return;\n      }\n      if (headerSubject !== undefined) {\n        headerSubject.next(headers);\n      }\n      const fieldsIndices = this.getFieldsIndices(fileText, dataKeys);\n      if (fieldsIndices === undefined) {\n        errorSubject.next(MyFileParserErrors.FIELD);\n        return;\n      }\n\n      const data = this.getData(fileText, dataKeys, fieldsIndices);\n      if (data === undefined) {\n        errorSubject.next(MyFileParserErrors.DATA);\n        return;\n      }\n      if (dataSubject !== undefined) {\n        dataSubject.next(data);\n      }\n    }\n    fileReader.readAsText(file);\n  }\n\n  validateFormat(file: File): boolean {\n    return !(!file.type.match(\"text/plain\") || !file.name.endsWith(\".txt\"));\n  }\n}\n\nclass MyFileParserDefault implements MyFileParserStrategy {\n  getData(fileText: string, fields: string[],\n          fieldsIndices: { [value: string]: number }): any[] | undefined {\n    return undefined;\n  }\n\n  getFieldsIndices(fileText: string, dataKeys: string[]): { [p: string]: number } | undefined {\n    return undefined;\n  }\n\n  getHeaders(fileText: string, headerRequirements: HeaderRequirement[]): { [p: string]: string } | undefined {\n    return undefined;\n  }\n\n  readFile(file: File, headerRequirements: HeaderRequirement[], dataKeys: string[],\n           errorSubject: Subject,\n           dataSubject: Subject | undefined,\n           headerSubject: Subject | undefined): void {\n    errorSubject.next(MyFileParserErrors.STRATEGY);\n  }\n\n  validateFormat(file: File): boolean {\n    return false;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MyFontFamily.html":{"url":"interfaces/MyFontFamily.html","title":"interface - MyFontFamily","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MyFontFamily\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/settings/appearance/service/appearance.utils.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            displayName\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MyColorTheme {\n  key: string;\n  displayName: string;\n}\n\nexport enum ColorThemes {\n  LIGHT = 'LIGHT_THEME',\n  DARK = 'DARK_THEME',\n  // HIGH_CONTRAST = 'HC_THEME',\n  HIGH_CONTRAST_DARK = 'HC_DARK_THEME'\n}\n\nexport interface MyFontStyle {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontStyles {\n  DEFAULT = 'normal',\n  BOLD = 'bold',\n  EXTRA_BOLD = 'bolder',\n}\n\nexport interface MyFontSize {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontSizes {\n  SMALL = \"small\",\n  DEFAULT = \"default\",\n  LARGE = \"large\",\n  LARGER = \"larger\",\n}\n\nexport enum FontFamily {\n  ROBOTO = 'Roboto',\n  COMIC_NEUE = 'Comic-Neue',\n}\n\nexport interface MyFontFamily {\n  key: string;\n  displayName: string;\n}\n\nexport class ColorThemeSettings {\n  public static getThemeLists(): MyColorTheme[] {\n    return [\n      {key: ColorThemes.LIGHT, displayName: 'Light'},\n      {key: ColorThemes.DARK, displayName: 'Dark'},\n      // {key: ColorThemes.HIGH_CONTRAST, displayName: 'High Contrast'},\n      {key: ColorThemes.HIGH_CONTRAST_DARK, displayName: 'High Contrast Dark'}\n    ];\n  }\n\n  public static getFontStyleLists(): MyFontStyle[] {\n    return [\n      {key: FontStyles.DEFAULT, displayName: 'Default'},\n      {key: FontStyles.BOLD, displayName: 'Bold'},\n      {key: FontStyles.EXTRA_BOLD, displayName: 'Extra Bold'}\n    ]\n  }\n\n  public static getFontSizeLists(): MyFontSize[] {\n    return [\n      {key: FontSizes.SMALL, displayName: 'Small'},\n      {key: FontSizes.DEFAULT, displayName: 'Default'},\n      {key: FontSizes.LARGE, displayName: 'Large'},\n      {key: FontSizes.LARGER, displayName: 'Larger'}\n    ]\n  }\n\n  public static getFontFamilyLists(): MyFontFamily[] {\n    return [\n      {key: FontFamily.ROBOTO, displayName: 'Roboto'},\n      {key: FontFamily.COMIC_NEUE, displayName: 'Comic Neue'}\n    ]\n  }\n}\n\nexport enum ChartColorMode {\n  LIGHT = 'LIGHT',\n  DARK = 'DARK'\n}\n\n\nexport class DefaultAppearanceSettings {\n  public static theme: ColorThemes = ColorThemes.LIGHT;\n  public static fontStyle: FontStyles = FontStyles.DEFAULT;\n  public static fontSize: FontSizes = FontSizes.DEFAULT;\n  public static fontFamily: FontFamily = FontFamily.ROBOTO;\n  public static chartColorMode: ChartColorMode = ChartColorMode.LIGHT;\n}\n\n\nexport class ChartColor {\n  private static readonly lineColorLightArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n  private static readonly lineColorDarkArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n\n  public static getFontColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#2b4162' : '#f5f0f6';\n  }\n\n  public static getBackgroundColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#C3CFD4' : '#325769';\n  }\n\n  public static getLineColor(index: number): string {\n    if (index = this.lineColorLightArray.length)\n      return 'black';\n    else\n      // return mode === ChartColorMode.LIGHT ? this.lineColorLightArray[index] : this.lineColorDarkArray[index];\n      return this.lineColorLightArray[index];\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MyFontSize.html":{"url":"interfaces/MyFontSize.html","title":"interface - MyFontSize","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MyFontSize\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/settings/appearance/service/appearance.utils.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            displayName\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MyColorTheme {\n  key: string;\n  displayName: string;\n}\n\nexport enum ColorThemes {\n  LIGHT = 'LIGHT_THEME',\n  DARK = 'DARK_THEME',\n  // HIGH_CONTRAST = 'HC_THEME',\n  HIGH_CONTRAST_DARK = 'HC_DARK_THEME'\n}\n\nexport interface MyFontStyle {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontStyles {\n  DEFAULT = 'normal',\n  BOLD = 'bold',\n  EXTRA_BOLD = 'bolder',\n}\n\nexport interface MyFontSize {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontSizes {\n  SMALL = \"small\",\n  DEFAULT = \"default\",\n  LARGE = \"large\",\n  LARGER = \"larger\",\n}\n\nexport enum FontFamily {\n  ROBOTO = 'Roboto',\n  COMIC_NEUE = 'Comic-Neue',\n}\n\nexport interface MyFontFamily {\n  key: string;\n  displayName: string;\n}\n\nexport class ColorThemeSettings {\n  public static getThemeLists(): MyColorTheme[] {\n    return [\n      {key: ColorThemes.LIGHT, displayName: 'Light'},\n      {key: ColorThemes.DARK, displayName: 'Dark'},\n      // {key: ColorThemes.HIGH_CONTRAST, displayName: 'High Contrast'},\n      {key: ColorThemes.HIGH_CONTRAST_DARK, displayName: 'High Contrast Dark'}\n    ];\n  }\n\n  public static getFontStyleLists(): MyFontStyle[] {\n    return [\n      {key: FontStyles.DEFAULT, displayName: 'Default'},\n      {key: FontStyles.BOLD, displayName: 'Bold'},\n      {key: FontStyles.EXTRA_BOLD, displayName: 'Extra Bold'}\n    ]\n  }\n\n  public static getFontSizeLists(): MyFontSize[] {\n    return [\n      {key: FontSizes.SMALL, displayName: 'Small'},\n      {key: FontSizes.DEFAULT, displayName: 'Default'},\n      {key: FontSizes.LARGE, displayName: 'Large'},\n      {key: FontSizes.LARGER, displayName: 'Larger'}\n    ]\n  }\n\n  public static getFontFamilyLists(): MyFontFamily[] {\n    return [\n      {key: FontFamily.ROBOTO, displayName: 'Roboto'},\n      {key: FontFamily.COMIC_NEUE, displayName: 'Comic Neue'}\n    ]\n  }\n}\n\nexport enum ChartColorMode {\n  LIGHT = 'LIGHT',\n  DARK = 'DARK'\n}\n\n\nexport class DefaultAppearanceSettings {\n  public static theme: ColorThemes = ColorThemes.LIGHT;\n  public static fontStyle: FontStyles = FontStyles.DEFAULT;\n  public static fontSize: FontSizes = FontSizes.DEFAULT;\n  public static fontFamily: FontFamily = FontFamily.ROBOTO;\n  public static chartColorMode: ChartColorMode = ChartColorMode.LIGHT;\n}\n\n\nexport class ChartColor {\n  private static readonly lineColorLightArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n  private static readonly lineColorDarkArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n\n  public static getFontColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#2b4162' : '#f5f0f6';\n  }\n\n  public static getBackgroundColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#C3CFD4' : '#325769';\n  }\n\n  public static getLineColor(index: number): string {\n    if (index = this.lineColorLightArray.length)\n      return 'black';\n    else\n      // return mode === ChartColorMode.LIGHT ? this.lineColorLightArray[index] : this.lineColorDarkArray[index];\n      return this.lineColorLightArray[index];\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MyFontStyle.html":{"url":"interfaces/MyFontStyle.html","title":"interface - MyFontStyle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MyFontStyle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/settings/appearance/service/appearance.utils.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            displayName\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MyColorTheme {\n  key: string;\n  displayName: string;\n}\n\nexport enum ColorThemes {\n  LIGHT = 'LIGHT_THEME',\n  DARK = 'DARK_THEME',\n  // HIGH_CONTRAST = 'HC_THEME',\n  HIGH_CONTRAST_DARK = 'HC_DARK_THEME'\n}\n\nexport interface MyFontStyle {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontStyles {\n  DEFAULT = 'normal',\n  BOLD = 'bold',\n  EXTRA_BOLD = 'bolder',\n}\n\nexport interface MyFontSize {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontSizes {\n  SMALL = \"small\",\n  DEFAULT = \"default\",\n  LARGE = \"large\",\n  LARGER = \"larger\",\n}\n\nexport enum FontFamily {\n  ROBOTO = 'Roboto',\n  COMIC_NEUE = 'Comic-Neue',\n}\n\nexport interface MyFontFamily {\n  key: string;\n  displayName: string;\n}\n\nexport class ColorThemeSettings {\n  public static getThemeLists(): MyColorTheme[] {\n    return [\n      {key: ColorThemes.LIGHT, displayName: 'Light'},\n      {key: ColorThemes.DARK, displayName: 'Dark'},\n      // {key: ColorThemes.HIGH_CONTRAST, displayName: 'High Contrast'},\n      {key: ColorThemes.HIGH_CONTRAST_DARK, displayName: 'High Contrast Dark'}\n    ];\n  }\n\n  public static getFontStyleLists(): MyFontStyle[] {\n    return [\n      {key: FontStyles.DEFAULT, displayName: 'Default'},\n      {key: FontStyles.BOLD, displayName: 'Bold'},\n      {key: FontStyles.EXTRA_BOLD, displayName: 'Extra Bold'}\n    ]\n  }\n\n  public static getFontSizeLists(): MyFontSize[] {\n    return [\n      {key: FontSizes.SMALL, displayName: 'Small'},\n      {key: FontSizes.DEFAULT, displayName: 'Default'},\n      {key: FontSizes.LARGE, displayName: 'Large'},\n      {key: FontSizes.LARGER, displayName: 'Larger'}\n    ]\n  }\n\n  public static getFontFamilyLists(): MyFontFamily[] {\n    return [\n      {key: FontFamily.ROBOTO, displayName: 'Roboto'},\n      {key: FontFamily.COMIC_NEUE, displayName: 'Comic Neue'}\n    ]\n  }\n}\n\nexport enum ChartColorMode {\n  LIGHT = 'LIGHT',\n  DARK = 'DARK'\n}\n\n\nexport class DefaultAppearanceSettings {\n  public static theme: ColorThemes = ColorThemes.LIGHT;\n  public static fontStyle: FontStyles = FontStyles.DEFAULT;\n  public static fontSize: FontSizes = FontSizes.DEFAULT;\n  public static fontFamily: FontFamily = FontFamily.ROBOTO;\n  public static chartColorMode: ChartColorMode = ChartColorMode.LIGHT;\n}\n\n\nexport class ChartColor {\n  private static readonly lineColorLightArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n  private static readonly lineColorDarkArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n\n  public static getFontColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#2b4162' : '#f5f0f6';\n  }\n\n  public static getBackgroundColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#C3CFD4' : '#325769';\n  }\n\n  public static getLineColor(index: number): string {\n    if (index = this.lineColorLightArray.length)\n      return 'black';\n    else\n      // return mode === ChartColorMode.LIGHT ? this.lineColorLightArray[index] : this.lineColorDarkArray[index];\n      return this.lineColorLightArray[index];\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MyStorage.html":{"url":"interfaces/MyStorage.html","title":"interface - MyStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MyStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/shared/storage/storage.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getChartInfo\n                                    \n                                \n                                \n                                    \n                                        getData\n                                    \n                                \n                                \n                                    \n                                        getInterface\n                                    \n                                \n                                \n                                    \n                                        resetChartInfo\n                                    \n                                \n                                \n                                    \n                                        resetData\n                                    \n                                \n                                \n                                    \n                                        resetInterface\n                                    \n                                \n                                \n                                    \n                                        saveChartInfo\n                                    \n                                \n                                \n                                    \n                                        saveData\n                                    \n                                \n                                \n                                    \n                                        saveInterface\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getChartInfo\n                        \n                    \n                \n            \n            \n                \ngetChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/storage/storage.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/storage/storage.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInterface\n                        \n                    \n                \n            \n            \n                \ngetInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/storage/storage.interface.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetChartInfo\n                        \n                    \n                \n            \n            \n                \nresetChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/storage/storage.interface.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetData\n                        \n                    \n                \n            \n            \n                \nresetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/storage/storage.interface.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetInterface\n                        \n                    \n                \n            \n            \n                \nresetInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/storage/storage.interface.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveChartInfo\n                        \n                    \n                \n            \n            \n                \nsaveChartInfo(chartInfo: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/storage/storage.interface.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartInfo\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveData\n                        \n                    \n                \n            \n            \n                \nsaveData(data: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/storage/storage.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveInterface\n                        \n                    \n                \n            \n            \n                \nsaveInterface(interfaceInfo: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/storage/storage.interface.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    interfaceInfo\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface MyStorage {\n  getData(): any[];\n\n  saveData(data: any[]): void;\n\n  getChartInfo(): any;\n\n  saveChartInfo(chartInfo: any): void;\n\n  getInterface(): any;\n\n  saveInterface(interfaceInfo: any): void;\n\n  resetData(): void;\n\n  resetInterface(): void;\n\n  resetChartInfo(): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MyTable.html":{"url":"interfaces/MyTable.html","title":"interface - MyTable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MyTable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/shared/tables/table-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getData\n                                    \n                                \n                                \n                                    \n                                        getTable\n                                    \n                                \n                                \n                                    \n                                        renderTable\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/tables/table-interface.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTable\n                        \n                    \n                \n            \n            \n                \ngetTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/tables/table-interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Handsontable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderTable\n                        \n                    \n                \n            \n            \n                \nrenderTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/tables/table-interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import Handsontable from \"handsontable\";\n\nexport interface MyTable {\n  getTable(): Handsontable;\n\n  renderTable(): void;\n\n  getData(): any[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/page-not-found/page-not-found.component.ts\n\n\n\n    \n        Description\n    \n    \n        Page not found\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n\n\n            \n                styleUrls\n                ./page-not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component} from '@angular/core';\n\n/**\n * Page not found\n */\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent {\n\n}\n\n    \n\n    \n        page-not-found works!\n\n    \n\n    \n                \n                    ./page-not-found.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'page-not-found works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScatterChartFormComponent.html":{"url":"components/ScatterChartFormComponent.html","title":"component - ScatterChartFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ScatterChartFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/scatter/scatter-chart-form/scatter-chart-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-scatter-chart-form\n            \n\n\n\n            \n                styleUrls\n                ./scatter-chart-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./scatter-chart-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                formGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: ScatterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/scatter/scatter-chart-form/scatter-chart-form.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ScatterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-chart-form/scatter-chart-form.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-chart-form/scatter-chart-form.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-chart-form/scatter-chart-form.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnDestroy} from '@angular/core';\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {debounceTime, Subject, takeUntil} from \"rxjs\";\nimport {ScatterService} from \"../scatter.service\";\n\n@Component({\n  selector: 'app-scatter-chart-form',\n  templateUrl: './scatter-chart-form.component.html',\n  styleUrls: ['./scatter-chart-form.component.scss']\n})\nexport class ScatterChartFormComponent implements OnDestroy {\n  formGroup!: FormGroup;\n  private destroy$: Subject = new Subject();\n\n  constructor(private service: ScatterService) {\n    this.service.chartInfo$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(info => {\n      this.formGroup = new FormGroup({\n        chartTitle: new FormControl(this.service.getChartTitle()),\n        dataLabel: new FormControl(this.service.getDataLabel()),\n        xAxisLabel: new FormControl(this.service.getXAxisLabel()),\n        yAxisLabel: new FormControl(this.service.getYAxisLabel()),\n      })\n      this.formGroup.controls['chartTitle'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(title => {\n        this.service.setChartTitle(title);\n      });\n      this.formGroup.controls['dataLabel'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(labels => {\n        this.service.setDataLabel(labels);\n      });\n      this.formGroup.controls['xAxisLabel'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(label => {\n        this.service.setXAxisLabel(label);\n      });\n      this.formGroup.controls['yAxisLabel'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(label => {\n        this.service.setYAxisLabel(label);\n      });\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        Title\n        \n      \n    \n    \n      \n        Data\n        \n      \n    \n  \n  \n    \n      \n        X Axis\n        \n      \n    \n    \n      \n        Y Axis\n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./scatter-chart-form.component.scss\n                \n                mat-form-field {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Title                                    Data                                        X Axis                                    Y Axis                    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ScatterChartFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ScatterChartInfo.html":{"url":"classes/ScatterChartInfo.html","title":"class - ScatterChartInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ScatterChartInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/scatter/scatter.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ChartInfo\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chartTitle\n                            \n                            \n                                    Private\n                                dataLabel\n                            \n                            \n                                    Private\n                                xAxisLabel\n                            \n                            \n                                    Private\n                                yAxisLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getChartTitle\n                            \n                            \n                                getDataLabel\n                            \n                            \n                                    Static\n                                getDefaultStorageObject\n                            \n                            \n                                getStorageObject\n                            \n                            \n                                getXAxisLabel\n                            \n                            \n                                getYAxisLabel\n                            \n                            \n                                setChartTitle\n                            \n                            \n                                setDataLabel\n                            \n                            \n                                setStorageObject\n                            \n                            \n                                setXAxisLabel\n                            \n                            \n                                setYAxisLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/scatter/scatter.service.util.ts:88\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.util.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.util.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        xAxisLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.util.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        yAxisLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.util.ts:88\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getChartTitle\n                        \n                    \n                \n            \n            \n                \ngetChartTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataLabel\n                        \n                    \n                \n            \n            \n                \ngetDataLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getDefaultStorageObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ScatterChartInfoStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStorageObject\n                        \n                    \n                \n            \n            \n                \ngetStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ScatterChartInfoStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getXAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetXAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getYAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetYAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setChartTitle\n                        \n                    \n                \n            \n            \n                \nsetChartTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDataLabel\n                        \n                    \n                \n            \n            \n                \nsetDataLabel(data: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStorageObject\n                        \n                    \n                \n            \n            \n                \nsetStorageObject(storageObject: ScatterChartInfoStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storageObject\n                                    \n                                                ScatterChartInfoStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setXAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetXAxisLabel(xAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    xAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setYAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetYAxisLabel(yAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    yAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\n\nexport interface ScatterDataDict {\n  longitude: number | null;\n  latitude: number | null;\n  distance: number | null;\n}\n\nexport class ScatterData implements MyData {\n  private dataDict: ScatterDataDict[];\n  private static readonly FLOAT_PRECISION = 3;\n\n  constructor() {\n    this.dataDict = ScatterData.getDefaultDataDict();\n  }\n\n  public static getDefaultDataDict(): ScatterDataDict[] {\n    const result: ScatterDataDict[] = [];\n    for (let i = 0; i  0) {\n      for (let i = 0; i  {\n        return scatterDataDict.longitude !== null\n          && scatterDataDict.latitude !== null\n          && scatterDataDict.distance !== null;\n      }\n    ).map(\n      (entry: ScatterDataDict) => {\n        return [\n          parseFloat((Math.cos(entry.latitude! / 180 * Math.PI) * entry.distance! * Math.cos(entry.longitude! / 180 * Math.PI)).toFixed(ScatterData.FLOAT_PRECISION)),\n          parseFloat((Math.cos(entry.latitude! / 180 * Math.PI) * entry.distance! * Math.sin(entry.longitude! / 180 * Math.PI)).toFixed(ScatterData.FLOAT_PRECISION)),\n        ];\n      }\n    );\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: ScatterDataDict[]): void {\n    this.dataDict = data;\n  }\n\n}\n\n\nexport interface ScatterChartInfoStorageObject {\n  chartTitle: string;\n  dataLabel: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n}\n\nexport class ScatterChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private dataLabel: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n\n  constructor() {\n    this.chartTitle = ScatterChartInfo.getDefaultStorageObject().chartTitle;\n    this.dataLabel = ScatterChartInfo.getDefaultStorageObject().dataLabel;\n    this.xAxisLabel = ScatterChartInfo.getDefaultStorageObject().xAxisLabel;\n    this.yAxisLabel = ScatterChartInfo.getDefaultStorageObject().yAxisLabel;\n  }\n\n\n  public static getDefaultStorageObject(): ScatterChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      dataLabel: \"Data\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n    }\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabel;\n  }\n\n  getStorageObject(): ScatterChartInfoStorageObject {\n    return {\n      chartTitle: this.chartTitle,\n      dataLabel: this.dataLabel,\n      xAxisLabel: this.xAxisLabel,\n      yAxisLabel: this.yAxisLabel,\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    this.dataLabel = data;\n  }\n\n  setStorageObject(storageObject: ScatterChartInfoStorageObject): void {\n    this.chartTitle = storageObject.chartTitle;\n    this.dataLabel = storageObject.dataLabel;\n    this.xAxisLabel = storageObject.xAxisLabel;\n    this.yAxisLabel = storageObject.yAxisLabel;\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.xAxisLabel = xAxis;\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.yAxisLabel = yAxis;\n  }\n\n}\n\n\nexport interface ScatterInterfaceStorageObject {\n  distance: number;\n  diameter: number;\n}\n\n\nexport interface ScatterModel {\n  getDistance(): number;\n\n  getDiameter(): number;\n\n  setDistance(distance: number): void;\n\n  setDiameter(diameter: number): void;\n\n  getModelStorageObject(): ScatterInterfaceStorageObject;\n\n  setModelStorageObject(storageObject: ScatterInterfaceStorageObject): void;\n\n  getModel(): number[][];\n}\n\n\nexport class ScatterModelInterface implements ScatterModel {\n  private distance: number;\n  private diameter: number;\n\n  constructor() {\n    this.distance = ScatterModelInterface.getDefaultStorageObject().distance;\n    this.diameter = ScatterModelInterface.getDefaultStorageObject().diameter;\n  }\n\n  public static getDefaultStorageObject(): ScatterInterfaceStorageObject {\n    return {\n      distance: 0,\n      diameter: 10,\n    }\n  }\n\n  getDiameter(): number {\n    return this.diameter\n  }\n\n  getDistance(): number {\n    return this.distance;\n  }\n\n  /**\n   * A circle with x of this.distance, y of 0, and diameter of this.diameter\n   */\n  getModel(): number[][] {\n    let modelData: number[][] = [];\n    const x = this.getDistance();\n    const y = 0;\n    const diameter = this.getDiameter();\n    const steps = 500;\n\n    let step = 2 * Math.PI / steps;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ScatterChartInfoStorageObject.html":{"url":"interfaces/ScatterChartInfoStorageObject.html","title":"interface - ScatterChartInfoStorageObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ScatterChartInfoStorageObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/scatter/scatter.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            chartTitle\n                                        \n                                \n                                \n                                        \n                                            dataLabel\n                                        \n                                \n                                \n                                        \n                                            xAxisLabel\n                                        \n                                \n                                \n                                        \n                                            yAxisLabel\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chartTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chartTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dataLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xAxisLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        xAxisLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yAxisLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        yAxisLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\n\nexport interface ScatterDataDict {\n  longitude: number | null;\n  latitude: number | null;\n  distance: number | null;\n}\n\nexport class ScatterData implements MyData {\n  private dataDict: ScatterDataDict[];\n  private static readonly FLOAT_PRECISION = 3;\n\n  constructor() {\n    this.dataDict = ScatterData.getDefaultDataDict();\n  }\n\n  public static getDefaultDataDict(): ScatterDataDict[] {\n    const result: ScatterDataDict[] = [];\n    for (let i = 0; i  0) {\n      for (let i = 0; i  {\n        return scatterDataDict.longitude !== null\n          && scatterDataDict.latitude !== null\n          && scatterDataDict.distance !== null;\n      }\n    ).map(\n      (entry: ScatterDataDict) => {\n        return [\n          parseFloat((Math.cos(entry.latitude! / 180 * Math.PI) * entry.distance! * Math.cos(entry.longitude! / 180 * Math.PI)).toFixed(ScatterData.FLOAT_PRECISION)),\n          parseFloat((Math.cos(entry.latitude! / 180 * Math.PI) * entry.distance! * Math.sin(entry.longitude! / 180 * Math.PI)).toFixed(ScatterData.FLOAT_PRECISION)),\n        ];\n      }\n    );\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: ScatterDataDict[]): void {\n    this.dataDict = data;\n  }\n\n}\n\n\nexport interface ScatterChartInfoStorageObject {\n  chartTitle: string;\n  dataLabel: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n}\n\nexport class ScatterChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private dataLabel: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n\n  constructor() {\n    this.chartTitle = ScatterChartInfo.getDefaultStorageObject().chartTitle;\n    this.dataLabel = ScatterChartInfo.getDefaultStorageObject().dataLabel;\n    this.xAxisLabel = ScatterChartInfo.getDefaultStorageObject().xAxisLabel;\n    this.yAxisLabel = ScatterChartInfo.getDefaultStorageObject().yAxisLabel;\n  }\n\n\n  public static getDefaultStorageObject(): ScatterChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      dataLabel: \"Data\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n    }\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabel;\n  }\n\n  getStorageObject(): ScatterChartInfoStorageObject {\n    return {\n      chartTitle: this.chartTitle,\n      dataLabel: this.dataLabel,\n      xAxisLabel: this.xAxisLabel,\n      yAxisLabel: this.yAxisLabel,\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    this.dataLabel = data;\n  }\n\n  setStorageObject(storageObject: ScatterChartInfoStorageObject): void {\n    this.chartTitle = storageObject.chartTitle;\n    this.dataLabel = storageObject.dataLabel;\n    this.xAxisLabel = storageObject.xAxisLabel;\n    this.yAxisLabel = storageObject.yAxisLabel;\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.xAxisLabel = xAxis;\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.yAxisLabel = yAxis;\n  }\n\n}\n\n\nexport interface ScatterInterfaceStorageObject {\n  distance: number;\n  diameter: number;\n}\n\n\nexport interface ScatterModel {\n  getDistance(): number;\n\n  getDiameter(): number;\n\n  setDistance(distance: number): void;\n\n  setDiameter(diameter: number): void;\n\n  getModelStorageObject(): ScatterInterfaceStorageObject;\n\n  setModelStorageObject(storageObject: ScatterInterfaceStorageObject): void;\n\n  getModel(): number[][];\n}\n\n\nexport class ScatterModelInterface implements ScatterModel {\n  private distance: number;\n  private diameter: number;\n\n  constructor() {\n    this.distance = ScatterModelInterface.getDefaultStorageObject().distance;\n    this.diameter = ScatterModelInterface.getDefaultStorageObject().diameter;\n  }\n\n  public static getDefaultStorageObject(): ScatterInterfaceStorageObject {\n    return {\n      distance: 0,\n      diameter: 10,\n    }\n  }\n\n  getDiameter(): number {\n    return this.diameter\n  }\n\n  getDistance(): number {\n    return this.distance;\n  }\n\n  /**\n   * A circle with x of this.distance, y of 0, and diameter of this.diameter\n   */\n  getModel(): number[][] {\n    let modelData: number[][] = [];\n    const x = this.getDistance();\n    const y = 0;\n    const diameter = this.getDiameter();\n    const steps = 500;\n\n    let step = 2 * Math.PI / steps;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScatterComponent.html":{"url":"components/ScatterComponent.html","title":"component - ScatterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ScatterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/scatter/scatter/scatter.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-scatter\n            \n\n\n\n            \n                styleUrls\n                ./scatter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./scatter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                actionHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: ScatterService, honorCodeService: HonorCodePopupService, chartService: HonorCodeChartService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/scatter/scatter/scatter.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ScatterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        honorCodeService\n                                                  \n                                                        \n                                                                        HonorCodePopupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chartService\n                                                  \n                                                        \n                                                                        HonorCodeChartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        actionHandler\n                        \n                    \n                \n            \n            \n                \nactionHandler(actions: ChartAction[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter/scatter.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    actions\n                                    \n                                                ChartAction[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {ChartAction} from \"../../shared/types/actions\";\nimport {ScatterService} from \"../scatter.service\";\nimport {HonorCodePopupService} from \"../../shared/honor-code-popup/honor-code-popup.service\";\nimport {HonorCodeChartService} from \"../../shared/honor-code-popup/honor-code-chart.service\";\n\n@Component({\n  selector: 'app-scatter',\n  templateUrl: './scatter.component.html',\n  styleUrls: ['./scatter.component.scss']\n})\nexport class ScatterComponent {\n  constructor(private service: ScatterService,\n              private honorCodeService: HonorCodePopupService,\n              private chartService: HonorCodeChartService) {\n  }\n\n  actionHandler(actions: ChartAction[]) {\n    actions.forEach((action) => {\n      if (action.action === \"addRow\") {\n        this.service.addRow(-1, 1);\n      } else if (action.action === \"saveGraph\") {\n        this.honorCodeService.honored().subscribe((name: string) => {\n          this.chartService.saveImageHighChartOffline(this.service.getHighChart(), \"scatter\", name);\n        })\n      } else if (action.action === \"resetData\") {\n        this.service.resetData();\n      } else if (action.action === \"resetChartInfo\") {\n        this.service.resetChartInfo();\n      } else if (action.action === \"resetModel\") {\n        this.service.resetModel();\n      }\n    })\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n      \n      \n    \n  \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./scatter.component.scss\n                \n                .container-row {\n  height: 80%;\n  padding: 20px 100px 20px 100px;\n  width: 100%;\n}\n\n.col-4, .col-8 {\n  display: flex;\n  flex-flow: column;\n}\n\n.data-form-row, data-button-row, chart-form-row, chart-button-row {\n  height: fit-content;\n  flex: 0 1 auto;\n}\n\n.data-table-row, .chart-row {\n  flex: 1 1 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ScatterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ScatterData.html":{"url":"classes/ScatterData.html","title":"class - ScatterData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ScatterData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/scatter/scatter.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyData\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dataDict\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                FLOAT_PRECISION\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRow\n                            \n                            \n                                getData\n                            \n                            \n                                getDataArray\n                            \n                            \n                                    Static\n                                getDefaultDataDict\n                            \n                            \n                                removeRow\n                            \n                            \n                                setData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/scatter/scatter.service.util.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataDict\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScatterDataDict[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.util.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        FLOAT_PRECISION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.util.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRow\n                        \n                    \n                \n            \n            \n                \naddRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataArray\n                        \n                    \n                \n            \n            \n                \ngetDataArray()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:49\n                \n            \n\n\n            \n                \n                    Transforms longitude, latitude and distance to x and y\n coordinates to be rendered in the chart\n\n\n                    \n                        Returns :     [][]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getDefaultDataDict\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultDataDict()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ScatterDataDict[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRow\n                        \n                    \n                \n            \n            \n                \nremoveRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setData\n                        \n                    \n                \n            \n            \n                \nsetData(data: ScatterDataDict[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ScatterDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\n\nexport interface ScatterDataDict {\n  longitude: number | null;\n  latitude: number | null;\n  distance: number | null;\n}\n\nexport class ScatterData implements MyData {\n  private dataDict: ScatterDataDict[];\n  private static readonly FLOAT_PRECISION = 3;\n\n  constructor() {\n    this.dataDict = ScatterData.getDefaultDataDict();\n  }\n\n  public static getDefaultDataDict(): ScatterDataDict[] {\n    const result: ScatterDataDict[] = [];\n    for (let i = 0; i  0) {\n      for (let i = 0; i  {\n        return scatterDataDict.longitude !== null\n          && scatterDataDict.latitude !== null\n          && scatterDataDict.distance !== null;\n      }\n    ).map(\n      (entry: ScatterDataDict) => {\n        return [\n          parseFloat((Math.cos(entry.latitude! / 180 * Math.PI) * entry.distance! * Math.cos(entry.longitude! / 180 * Math.PI)).toFixed(ScatterData.FLOAT_PRECISION)),\n          parseFloat((Math.cos(entry.latitude! / 180 * Math.PI) * entry.distance! * Math.sin(entry.longitude! / 180 * Math.PI)).toFixed(ScatterData.FLOAT_PRECISION)),\n        ];\n      }\n    );\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: ScatterDataDict[]): void {\n    this.dataDict = data;\n  }\n\n}\n\n\nexport interface ScatterChartInfoStorageObject {\n  chartTitle: string;\n  dataLabel: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n}\n\nexport class ScatterChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private dataLabel: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n\n  constructor() {\n    this.chartTitle = ScatterChartInfo.getDefaultStorageObject().chartTitle;\n    this.dataLabel = ScatterChartInfo.getDefaultStorageObject().dataLabel;\n    this.xAxisLabel = ScatterChartInfo.getDefaultStorageObject().xAxisLabel;\n    this.yAxisLabel = ScatterChartInfo.getDefaultStorageObject().yAxisLabel;\n  }\n\n\n  public static getDefaultStorageObject(): ScatterChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      dataLabel: \"Data\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n    }\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabel;\n  }\n\n  getStorageObject(): ScatterChartInfoStorageObject {\n    return {\n      chartTitle: this.chartTitle,\n      dataLabel: this.dataLabel,\n      xAxisLabel: this.xAxisLabel,\n      yAxisLabel: this.yAxisLabel,\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    this.dataLabel = data;\n  }\n\n  setStorageObject(storageObject: ScatterChartInfoStorageObject): void {\n    this.chartTitle = storageObject.chartTitle;\n    this.dataLabel = storageObject.dataLabel;\n    this.xAxisLabel = storageObject.xAxisLabel;\n    this.yAxisLabel = storageObject.yAxisLabel;\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.xAxisLabel = xAxis;\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.yAxisLabel = yAxis;\n  }\n\n}\n\n\nexport interface ScatterInterfaceStorageObject {\n  distance: number;\n  diameter: number;\n}\n\n\nexport interface ScatterModel {\n  getDistance(): number;\n\n  getDiameter(): number;\n\n  setDistance(distance: number): void;\n\n  setDiameter(diameter: number): void;\n\n  getModelStorageObject(): ScatterInterfaceStorageObject;\n\n  setModelStorageObject(storageObject: ScatterInterfaceStorageObject): void;\n\n  getModel(): number[][];\n}\n\n\nexport class ScatterModelInterface implements ScatterModel {\n  private distance: number;\n  private diameter: number;\n\n  constructor() {\n    this.distance = ScatterModelInterface.getDefaultStorageObject().distance;\n    this.diameter = ScatterModelInterface.getDefaultStorageObject().diameter;\n  }\n\n  public static getDefaultStorageObject(): ScatterInterfaceStorageObject {\n    return {\n      distance: 0,\n      diameter: 10,\n    }\n  }\n\n  getDiameter(): number {\n    return this.diameter\n  }\n\n  getDistance(): number {\n    return this.distance;\n  }\n\n  /**\n   * A circle with x of this.distance, y of 0, and diameter of this.diameter\n   */\n  getModel(): number[][] {\n    let modelData: number[][] = [];\n    const x = this.getDistance();\n    const y = 0;\n    const diameter = this.getDiameter();\n    const steps = 500;\n\n    let step = 2 * Math.PI / steps;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ScatterDataDict.html":{"url":"interfaces/ScatterDataDict.html","title":"interface - ScatterDataDict","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ScatterDataDict\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/scatter/scatter.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            distance\n                                        \n                                \n                                \n                                        \n                                            latitude\n                                        \n                                \n                                \n                                        \n                                            longitude\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        distance:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        latitude:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        longitude:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\n\nexport interface ScatterDataDict {\n  longitude: number | null;\n  latitude: number | null;\n  distance: number | null;\n}\n\nexport class ScatterData implements MyData {\n  private dataDict: ScatterDataDict[];\n  private static readonly FLOAT_PRECISION = 3;\n\n  constructor() {\n    this.dataDict = ScatterData.getDefaultDataDict();\n  }\n\n  public static getDefaultDataDict(): ScatterDataDict[] {\n    const result: ScatterDataDict[] = [];\n    for (let i = 0; i  0) {\n      for (let i = 0; i  {\n        return scatterDataDict.longitude !== null\n          && scatterDataDict.latitude !== null\n          && scatterDataDict.distance !== null;\n      }\n    ).map(\n      (entry: ScatterDataDict) => {\n        return [\n          parseFloat((Math.cos(entry.latitude! / 180 * Math.PI) * entry.distance! * Math.cos(entry.longitude! / 180 * Math.PI)).toFixed(ScatterData.FLOAT_PRECISION)),\n          parseFloat((Math.cos(entry.latitude! / 180 * Math.PI) * entry.distance! * Math.sin(entry.longitude! / 180 * Math.PI)).toFixed(ScatterData.FLOAT_PRECISION)),\n        ];\n      }\n    );\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: ScatterDataDict[]): void {\n    this.dataDict = data;\n  }\n\n}\n\n\nexport interface ScatterChartInfoStorageObject {\n  chartTitle: string;\n  dataLabel: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n}\n\nexport class ScatterChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private dataLabel: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n\n  constructor() {\n    this.chartTitle = ScatterChartInfo.getDefaultStorageObject().chartTitle;\n    this.dataLabel = ScatterChartInfo.getDefaultStorageObject().dataLabel;\n    this.xAxisLabel = ScatterChartInfo.getDefaultStorageObject().xAxisLabel;\n    this.yAxisLabel = ScatterChartInfo.getDefaultStorageObject().yAxisLabel;\n  }\n\n\n  public static getDefaultStorageObject(): ScatterChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      dataLabel: \"Data\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n    }\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabel;\n  }\n\n  getStorageObject(): ScatterChartInfoStorageObject {\n    return {\n      chartTitle: this.chartTitle,\n      dataLabel: this.dataLabel,\n      xAxisLabel: this.xAxisLabel,\n      yAxisLabel: this.yAxisLabel,\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    this.dataLabel = data;\n  }\n\n  setStorageObject(storageObject: ScatterChartInfoStorageObject): void {\n    this.chartTitle = storageObject.chartTitle;\n    this.dataLabel = storageObject.dataLabel;\n    this.xAxisLabel = storageObject.xAxisLabel;\n    this.yAxisLabel = storageObject.yAxisLabel;\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.xAxisLabel = xAxis;\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.yAxisLabel = yAxis;\n  }\n\n}\n\n\nexport interface ScatterInterfaceStorageObject {\n  distance: number;\n  diameter: number;\n}\n\n\nexport interface ScatterModel {\n  getDistance(): number;\n\n  getDiameter(): number;\n\n  setDistance(distance: number): void;\n\n  setDiameter(diameter: number): void;\n\n  getModelStorageObject(): ScatterInterfaceStorageObject;\n\n  setModelStorageObject(storageObject: ScatterInterfaceStorageObject): void;\n\n  getModel(): number[][];\n}\n\n\nexport class ScatterModelInterface implements ScatterModel {\n  private distance: number;\n  private diameter: number;\n\n  constructor() {\n    this.distance = ScatterModelInterface.getDefaultStorageObject().distance;\n    this.diameter = ScatterModelInterface.getDefaultStorageObject().diameter;\n  }\n\n  public static getDefaultStorageObject(): ScatterInterfaceStorageObject {\n    return {\n      distance: 0,\n      diameter: 10,\n    }\n  }\n\n  getDiameter(): number {\n    return this.diameter\n  }\n\n  getDistance(): number {\n    return this.distance;\n  }\n\n  /**\n   * A circle with x of this.distance, y of 0, and diameter of this.diameter\n   */\n  getModel(): number[][] {\n    let modelData: number[][] = [];\n    const x = this.getDistance();\n    const y = 0;\n    const diameter = this.getDiameter();\n    const steps = 500;\n\n    let step = 2 * Math.PI / steps;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScatterFormComponent.html":{"url":"components/ScatterFormComponent.html","title":"component - ScatterFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ScatterFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/scatter/scatter-form/scatter-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-scatter-form\n            \n\n\n\n            \n                styleUrls\n                ./scatter-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./scatter-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Protected\n                                diameterSubject\n                            \n                            \n                                    Protected\n                                distanceSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Protected\n                                onChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: ScatterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/scatter/scatter-form/scatter-form.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ScatterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-form/scatter-form.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-form/scatter-form.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        onChange\n                        \n                    \n                \n            \n            \n                \n                    \n                    onChange($event: InputSliderValue)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-form/scatter-form.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                InputSliderValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-form/scatter-form.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        diameterSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-form/scatter-form.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        distanceSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-form/scatter-form.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnDestroy} from '@angular/core';\nimport {Subject, takeUntil} from \"rxjs\";\nimport {InputSliderValue} from \"../../shared/interface/input-slider/input-slider.component\";\nimport {ScatterService} from \"../scatter.service\";\nimport {UpdateSource} from \"../../moon/moon.service.util\";\n\n@Component({\n  selector: 'app-scatter-form',\n  templateUrl: './scatter-form.component.html',\n  styleUrls: ['./scatter-form.component.scss']\n})\nexport class ScatterFormComponent implements AfterViewInit, OnDestroy{\n  private destroy$ = new Subject();\n\n  protected distanceSubject: Subject = new Subject();\n  protected diameterSubject: Subject = new Subject();\n\n  constructor(private service: ScatterService) {\n  }\n\n  ngAfterViewInit() {\n    this.distanceSubject.next(this.service.getDistance());\n    this.diameterSubject.next(this.service.getDiameter());\n\n    this.service.interface$.pipe(\n      takeUntil(this.destroy$),\n    ).subscribe(\n      (source: UpdateSource) => {\n        if (source !== UpdateSource.INTERFACE) {\n          this.distanceSubject.next(this.service.getDistance());\n          this.diameterSubject.next(this.service.getDiameter());\n        }\n      }\n    )\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  protected onChange($event: InputSliderValue) {\n    if ($event.key === ScatterModelParameters.DISTANCE) {\n      this.service.setDistance(parseFloat($event.value));\n    } else if ($event.key === ScatterModelParameters.DIAMETER) {\n      this.service.setDiameter(parseFloat($event.value));\n    }\n  }\n}\n\nenum ScatterModelParameters {\n  DISTANCE = \"distance\",\n  DIAMETER = \"diameter\",\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./scatter-form.component.scss\n                \n                mat-form-field {\n  width: 100%;\n}\n\nmat-slider {\n  width: 90%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ScatterFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScatterHighchartComponent.html":{"url":"components/ScatterHighchartComponent.html","title":"component - ScatterHighchartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ScatterHighchartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-scatter-highchart\n            \n\n\n\n            \n                styleUrls\n                ./scatter-highchart.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./scatter-highchart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chartConstructor\n                            \n                            \n                                chartObject\n                            \n                            \n                                chartOptions\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                Highcharts\n                            \n                            \n                                updateFlag\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                adjustScale\n                            \n                            \n                                chartInitialized\n                            \n                            \n                                    Private\n                                initChartSeries\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                setChartTitle\n                            \n                            \n                                    Private\n                                setChartXAxis\n                            \n                            \n                                    Private\n                                setChartYAxis\n                            \n                            \n                                    Private\n                                setCross\n                            \n                            \n                                    Private\n                                setData\n                            \n                            \n                                    Private\n                                setModel\n                            \n                            \n                                    Private\n                                setSun\n                            \n                            \n                                    Private\n                                updateChart\n                            \n                            \n                                    Private\n                                updateCross\n                            \n                            \n                                    Private\n                                updateData\n                            \n                            \n                                    Private\n                                updateModel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: ScatterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ScatterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        adjustScale\n                        \n                    \n                \n            \n            \n                \n                    \n                    adjustScale()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartInitialized\n                        \n                    \n                \n            \n            \n                \nchartInitialized($event: Highcharts.Chart)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                            Highcharts.Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initChartSeries\n                        \n                    \n                \n            \n            \n                \n                    \n                    initChartSeries()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setChartTitle\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChartTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setChartXAxis\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChartXAxis()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setChartYAxis\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChartYAxis()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setCross\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCross()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setData\n                        \n                    \n                \n            \n            \n                \n                    \n                    setData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    setModel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setSun\n                        \n                    \n                \n            \n            \n                \n                    \n                    setSun()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateChart\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateCross\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCross()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateData\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateModel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chartConstructor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : \"chart\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartObject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Highcharts.Chart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Highcharts.Options\n\n                    \n                \n                \n                    \n                        Default value : {\n    chart: {\n      animation: false,\n      styledMode: true,\n    },\n    legend: {\n      align: 'center',\n    },\n    tooltip: {\n      enabled: true,\n      shared: false,\n    },\n    exporting: {\n      buttons: {\n        contextButton: {\n          enabled: false,\n        }\n      }\n    },\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Highcharts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Highcharts\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFlag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnDestroy} from '@angular/core';\nimport * as Highcharts from \"highcharts\";\nimport {Subject, takeUntil} from \"rxjs\";\nimport {ScatterService} from \"../scatter.service\";\n\n@Component({\n  selector: 'app-scatter-highchart',\n  templateUrl: './scatter-highchart.component.html',\n  styleUrls: ['./scatter-highchart.component.scss']\n})\nexport class ScatterHighchartComponent implements AfterViewInit, OnDestroy {\n  Highcharts: typeof Highcharts = Highcharts;\n  updateFlag: boolean = true;\n  chartConstructor: any = \"chart\";\n  chartObject!: Highcharts.Chart;\n  chartOptions: Highcharts.Options = {\n    chart: {\n      animation: false,\n      styledMode: true,\n    },\n    legend: {\n      align: 'center',\n    },\n    tooltip: {\n      enabled: true,\n      shared: false,\n    },\n    exporting: {\n      buttons: {\n        contextButton: {\n          enabled: false,\n        }\n      }\n    },\n  };\n  private destroy$: Subject = new Subject();\n\n  constructor(private service: ScatterService) {\n    this.setChartTitle();\n    this.setChartXAxis();\n    this.setChartYAxis();\n  }\n\n  chartInitialized($event: Highcharts.Chart) {\n    this.chartObject = $event;\n    // this.service.setHighChart(this.chartObject);\n  }\n\n  ngAfterViewInit(): void {\n    this.initChartSeries();\n    this.service.setHighChart(this.chartObject);\n    this.service.data$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(() => {\n      this.updateData();\n      this.adjustScale();\n    });\n    this.service.chartInfo$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(() => {\n      this.setChartTitle();\n      this.setChartXAxis();\n      this.setChartYAxis();\n      this.updateChart();\n    });\n    this.service.interface$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(() => {\n      this.updateModel();\n      this.updateCross();\n      this.adjustScale();\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private initChartSeries() {\n    this.setSun();\n    this.setData();\n    this.setModel();\n    this.setCross();\n  }\n\n  private setSun() {\n    this.chartObject.addSeries({\n      name: \"Sun\",\n      data: [[0, 0]],\n      type: 'scatter',\n      marker: {\n        radius: 10,\n      }\n    })\n  }\n\n  private setData() {\n    this.chartObject.addSeries({\n      name: this.service.getDataLabel(),\n      data: this.service.getDataArray(),\n      type: 'scatter',\n      marker: {\n        symbol: 'circle',\n      }\n    })\n  }\n\n  private updateData() {\n    this.chartObject.series[1].update({\n      name: this.service.getDataLabel(),\n      data: this.service.getDataArray(),\n      type: 'scatter',\n      marker: {\n        symbol: 'circle',\n      }\n    });\n  }\n\n  private setModel(): void {\n    this.chartObject.addSeries({\n      name: \"Model\",\n      data: this.service.getModel(),\n      type: 'scatter',\n      marker: {\n        symbol: 'circle',\n        radius: 0.7,\n      }\n    })\n  }\n\n  private updateModel(): void {\n    this.chartObject.series[2].setData(this.service.getModel());\n  }\n\n  private setCross(): void {\n    this.chartObject.addSeries({\n      name: \"Cross\",\n      data: ([[this.service.getDistance(), 0]] as any),\n      type: \"scatter\",\n      marker: {\n        symbol: 'diamond',\n        radius: 5,\n      },\n      enableMouseTracking: false,\n      showInLegend: false,\n    })\n  }\n\n  private updateCross(): void {\n    this.chartObject.series[3].setData([[this.service.getDistance(), 0]] as any);\n  }\n\n  private updateChart(): void {\n    this.updateFlag = true;\n  }\n\n  private setChartTitle(): void {\n    this.chartOptions.title = {text: this.service.getChartTitle()};\n  }\n\n  private setChartXAxis(): void {\n    this.chartOptions.xAxis = {\n      title: {text: this.service.getXAxisLabel()}\n    };\n  }\n\n  private setChartYAxis(): void {\n    this.chartOptions.yAxis = {\n      title: {text: this.service.getYAxisLabel()}\n    };\n  }\n\n  private adjustScale(): void {\n    const data: (number | null)[][] = this.service.getDataArray().filter(d => d[0] !== null && d[1] !== null);\n    let minX: number = Math.min(...data.map(d => d[0]!));\n    let maxX: number = Math.max(...data.map(d => d[0]!));\n    let minY: number = Math.min(...data.map(d => d[1]!));\n    let maxY: number = Math.max(...data.map(d => d[1]!));\n\n    // Adjusting the min/max values to avoid having data points on the very edge\n    minX -= 3;\n    maxX += 3;\n    minY -= 3;\n    maxY += 3;\n\n    // This is the ratio of the length of X axis over the length of Y axis\n    const screenRatio = this.chartObject.plotWidth / this.chartObject.plotHeight;\n    let dataRatio = (maxX - minX) / (maxY - minY);\n\n    if (dataRatio \n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./scatter-highchart.component.scss\n                \n                .chart-container {\n  width: 100%;\n  height: 100%;\n  padding: 10px;\n}\n\n.LIGHT_THEME {\n  :host ::ng-deep .highcharts-color-0 {\n    stroke: orange;\n    fill: orange;\n  }\n\n  :host ::ng-deep .highcharts-color-2 {\n    stroke: black;\n    fill: black;\n  }\n\n  :host ::ng-deep .highcharts-color-3 {\n    stroke: grey;\n    fill: grey;\n  }\n}\n\n.DARK_THEME {\n  :host ::ng-deep .highcharts-color-0 {\n    stroke: yellow;\n    fill: yellow;\n  }\n\n  :host ::ng-deep .highcharts-color-2 {\n    stroke: white;\n    fill: white;\n  }\n\n  :host ::ng-deep .highcharts-color-3 {\n    stroke: lightgray;\n    fill: lightgray;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ScatterHighchartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ScatterInterfaceStorageObject.html":{"url":"interfaces/ScatterInterfaceStorageObject.html","title":"interface - ScatterInterfaceStorageObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ScatterInterfaceStorageObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/scatter/scatter.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            diameter\n                                        \n                                \n                                \n                                        \n                                            distance\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        diameter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        diameter:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\n\nexport interface ScatterDataDict {\n  longitude: number | null;\n  latitude: number | null;\n  distance: number | null;\n}\n\nexport class ScatterData implements MyData {\n  private dataDict: ScatterDataDict[];\n  private static readonly FLOAT_PRECISION = 3;\n\n  constructor() {\n    this.dataDict = ScatterData.getDefaultDataDict();\n  }\n\n  public static getDefaultDataDict(): ScatterDataDict[] {\n    const result: ScatterDataDict[] = [];\n    for (let i = 0; i  0) {\n      for (let i = 0; i  {\n        return scatterDataDict.longitude !== null\n          && scatterDataDict.latitude !== null\n          && scatterDataDict.distance !== null;\n      }\n    ).map(\n      (entry: ScatterDataDict) => {\n        return [\n          parseFloat((Math.cos(entry.latitude! / 180 * Math.PI) * entry.distance! * Math.cos(entry.longitude! / 180 * Math.PI)).toFixed(ScatterData.FLOAT_PRECISION)),\n          parseFloat((Math.cos(entry.latitude! / 180 * Math.PI) * entry.distance! * Math.sin(entry.longitude! / 180 * Math.PI)).toFixed(ScatterData.FLOAT_PRECISION)),\n        ];\n      }\n    );\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: ScatterDataDict[]): void {\n    this.dataDict = data;\n  }\n\n}\n\n\nexport interface ScatterChartInfoStorageObject {\n  chartTitle: string;\n  dataLabel: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n}\n\nexport class ScatterChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private dataLabel: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n\n  constructor() {\n    this.chartTitle = ScatterChartInfo.getDefaultStorageObject().chartTitle;\n    this.dataLabel = ScatterChartInfo.getDefaultStorageObject().dataLabel;\n    this.xAxisLabel = ScatterChartInfo.getDefaultStorageObject().xAxisLabel;\n    this.yAxisLabel = ScatterChartInfo.getDefaultStorageObject().yAxisLabel;\n  }\n\n\n  public static getDefaultStorageObject(): ScatterChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      dataLabel: \"Data\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n    }\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabel;\n  }\n\n  getStorageObject(): ScatterChartInfoStorageObject {\n    return {\n      chartTitle: this.chartTitle,\n      dataLabel: this.dataLabel,\n      xAxisLabel: this.xAxisLabel,\n      yAxisLabel: this.yAxisLabel,\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    this.dataLabel = data;\n  }\n\n  setStorageObject(storageObject: ScatterChartInfoStorageObject): void {\n    this.chartTitle = storageObject.chartTitle;\n    this.dataLabel = storageObject.dataLabel;\n    this.xAxisLabel = storageObject.xAxisLabel;\n    this.yAxisLabel = storageObject.yAxisLabel;\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.xAxisLabel = xAxis;\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.yAxisLabel = yAxis;\n  }\n\n}\n\n\nexport interface ScatterInterfaceStorageObject {\n  distance: number;\n  diameter: number;\n}\n\n\nexport interface ScatterModel {\n  getDistance(): number;\n\n  getDiameter(): number;\n\n  setDistance(distance: number): void;\n\n  setDiameter(diameter: number): void;\n\n  getModelStorageObject(): ScatterInterfaceStorageObject;\n\n  setModelStorageObject(storageObject: ScatterInterfaceStorageObject): void;\n\n  getModel(): number[][];\n}\n\n\nexport class ScatterModelInterface implements ScatterModel {\n  private distance: number;\n  private diameter: number;\n\n  constructor() {\n    this.distance = ScatterModelInterface.getDefaultStorageObject().distance;\n    this.diameter = ScatterModelInterface.getDefaultStorageObject().diameter;\n  }\n\n  public static getDefaultStorageObject(): ScatterInterfaceStorageObject {\n    return {\n      distance: 0,\n      diameter: 10,\n    }\n  }\n\n  getDiameter(): number {\n    return this.diameter\n  }\n\n  getDistance(): number {\n    return this.distance;\n  }\n\n  /**\n   * A circle with x of this.distance, y of 0, and diameter of this.diameter\n   */\n  getModel(): number[][] {\n    let modelData: number[][] = [];\n    const x = this.getDistance();\n    const y = 0;\n    const diameter = this.getDiameter();\n    const steps = 500;\n\n    let step = 2 * Math.PI / steps;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ScatterModel.html":{"url":"interfaces/ScatterModel.html","title":"interface - ScatterModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ScatterModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/scatter/scatter.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getDiameter\n                                    \n                                \n                                \n                                    \n                                        getDistance\n                                    \n                                \n                                \n                                    \n                                        getModel\n                                    \n                                \n                                \n                                    \n                                        getModelStorageObject\n                                    \n                                \n                                \n                                    \n                                        setDiameter\n                                    \n                                \n                                \n                                    \n                                        setDistance\n                                    \n                                \n                                \n                                    \n                                        setModelStorageObject\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDiameter\n                        \n                    \n                \n            \n            \n                \ngetDiameter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDistance\n                        \n                    \n                \n            \n            \n                \ngetDistance()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getModel\n                        \n                    \n                \n            \n            \n                \ngetModel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     [][]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getModelStorageObject\n                        \n                    \n                \n            \n            \n                \ngetModelStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ScatterInterfaceStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDiameter\n                        \n                    \n                \n            \n            \n                \nsetDiameter(diameter: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    diameter\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDistance\n                        \n                    \n                \n            \n            \n                \nsetDistance(distance: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    distance\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setModelStorageObject\n                        \n                    \n                \n            \n            \n                \nsetModelStorageObject(storageObject: ScatterInterfaceStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storageObject\n                                    \n                                                ScatterInterfaceStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\n\nexport interface ScatterDataDict {\n  longitude: number | null;\n  latitude: number | null;\n  distance: number | null;\n}\n\nexport class ScatterData implements MyData {\n  private dataDict: ScatterDataDict[];\n  private static readonly FLOAT_PRECISION = 3;\n\n  constructor() {\n    this.dataDict = ScatterData.getDefaultDataDict();\n  }\n\n  public static getDefaultDataDict(): ScatterDataDict[] {\n    const result: ScatterDataDict[] = [];\n    for (let i = 0; i  0) {\n      for (let i = 0; i  {\n        return scatterDataDict.longitude !== null\n          && scatterDataDict.latitude !== null\n          && scatterDataDict.distance !== null;\n      }\n    ).map(\n      (entry: ScatterDataDict) => {\n        return [\n          parseFloat((Math.cos(entry.latitude! / 180 * Math.PI) * entry.distance! * Math.cos(entry.longitude! / 180 * Math.PI)).toFixed(ScatterData.FLOAT_PRECISION)),\n          parseFloat((Math.cos(entry.latitude! / 180 * Math.PI) * entry.distance! * Math.sin(entry.longitude! / 180 * Math.PI)).toFixed(ScatterData.FLOAT_PRECISION)),\n        ];\n      }\n    );\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: ScatterDataDict[]): void {\n    this.dataDict = data;\n  }\n\n}\n\n\nexport interface ScatterChartInfoStorageObject {\n  chartTitle: string;\n  dataLabel: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n}\n\nexport class ScatterChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private dataLabel: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n\n  constructor() {\n    this.chartTitle = ScatterChartInfo.getDefaultStorageObject().chartTitle;\n    this.dataLabel = ScatterChartInfo.getDefaultStorageObject().dataLabel;\n    this.xAxisLabel = ScatterChartInfo.getDefaultStorageObject().xAxisLabel;\n    this.yAxisLabel = ScatterChartInfo.getDefaultStorageObject().yAxisLabel;\n  }\n\n\n  public static getDefaultStorageObject(): ScatterChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      dataLabel: \"Data\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n    }\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabel;\n  }\n\n  getStorageObject(): ScatterChartInfoStorageObject {\n    return {\n      chartTitle: this.chartTitle,\n      dataLabel: this.dataLabel,\n      xAxisLabel: this.xAxisLabel,\n      yAxisLabel: this.yAxisLabel,\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    this.dataLabel = data;\n  }\n\n  setStorageObject(storageObject: ScatterChartInfoStorageObject): void {\n    this.chartTitle = storageObject.chartTitle;\n    this.dataLabel = storageObject.dataLabel;\n    this.xAxisLabel = storageObject.xAxisLabel;\n    this.yAxisLabel = storageObject.yAxisLabel;\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.xAxisLabel = xAxis;\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.yAxisLabel = yAxis;\n  }\n\n}\n\n\nexport interface ScatterInterfaceStorageObject {\n  distance: number;\n  diameter: number;\n}\n\n\nexport interface ScatterModel {\n  getDistance(): number;\n\n  getDiameter(): number;\n\n  setDistance(distance: number): void;\n\n  setDiameter(diameter: number): void;\n\n  getModelStorageObject(): ScatterInterfaceStorageObject;\n\n  setModelStorageObject(storageObject: ScatterInterfaceStorageObject): void;\n\n  getModel(): number[][];\n}\n\n\nexport class ScatterModelInterface implements ScatterModel {\n  private distance: number;\n  private diameter: number;\n\n  constructor() {\n    this.distance = ScatterModelInterface.getDefaultStorageObject().distance;\n    this.diameter = ScatterModelInterface.getDefaultStorageObject().diameter;\n  }\n\n  public static getDefaultStorageObject(): ScatterInterfaceStorageObject {\n    return {\n      distance: 0,\n      diameter: 10,\n    }\n  }\n\n  getDiameter(): number {\n    return this.diameter\n  }\n\n  getDistance(): number {\n    return this.distance;\n  }\n\n  /**\n   * A circle with x of this.distance, y of 0, and diameter of this.diameter\n   */\n  getModel(): number[][] {\n    let modelData: number[][] = [];\n    const x = this.getDistance();\n    const y = 0;\n    const diameter = this.getDiameter();\n    const steps = 500;\n\n    let step = 2 * Math.PI / steps;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ScatterModelInterface.html":{"url":"classes/ScatterModelInterface.html","title":"class - ScatterModelInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ScatterModelInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/scatter/scatter.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ScatterModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                diameter\n                            \n                            \n                                    Private\n                                distance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                formatNumber\n                            \n                            \n                                    Static\n                                getDefaultStorageObject\n                            \n                            \n                                getDiameter\n                            \n                            \n                                getDistance\n                            \n                            \n                                getModel\n                            \n                            \n                                getModelStorageObject\n                            \n                            \n                                setDiameter\n                            \n                            \n                                setDistance\n                            \n                            \n                                setModelStorageObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/scatter/scatter.service.util.ts:183\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        diameter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.util.ts:183\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        distance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.util.ts:182\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        formatNumber\n                        \n                    \n                \n            \n            \n                \n                    \n                    formatNumber(input: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:247\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getDefaultStorageObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ScatterInterfaceStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDiameter\n                        \n                    \n                \n            \n            \n                \ngetDiameter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDistance\n                        \n                    \n                \n            \n            \n                \ngetDistance()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:201\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getModel\n                        \n                    \n                \n            \n            \n                \ngetModel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:208\n                \n            \n\n\n            \n                \n                    A circle with x of this.distance, y of 0, and diameter of this.diameter\n\n\n                    \n                        Returns :     [][]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getModelStorageObject\n                        \n                    \n                \n            \n            \n                \ngetModelStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:227\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ScatterInterfaceStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDiameter\n                        \n                    \n                \n            \n            \n                \nsetDiameter(diameter: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:234\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    diameter\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDistance\n                        \n                    \n                \n            \n            \n                \nsetDistance(distance: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:238\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    distance\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setModelStorageObject\n                        \n                    \n                \n            \n            \n                \nsetModelStorageObject(storageObject: ScatterInterfaceStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:242\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storageObject\n                                    \n                                                ScatterInterfaceStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\n\nexport interface ScatterDataDict {\n  longitude: number | null;\n  latitude: number | null;\n  distance: number | null;\n}\n\nexport class ScatterData implements MyData {\n  private dataDict: ScatterDataDict[];\n  private static readonly FLOAT_PRECISION = 3;\n\n  constructor() {\n    this.dataDict = ScatterData.getDefaultDataDict();\n  }\n\n  public static getDefaultDataDict(): ScatterDataDict[] {\n    const result: ScatterDataDict[] = [];\n    for (let i = 0; i  0) {\n      for (let i = 0; i  {\n        return scatterDataDict.longitude !== null\n          && scatterDataDict.latitude !== null\n          && scatterDataDict.distance !== null;\n      }\n    ).map(\n      (entry: ScatterDataDict) => {\n        return [\n          parseFloat((Math.cos(entry.latitude! / 180 * Math.PI) * entry.distance! * Math.cos(entry.longitude! / 180 * Math.PI)).toFixed(ScatterData.FLOAT_PRECISION)),\n          parseFloat((Math.cos(entry.latitude! / 180 * Math.PI) * entry.distance! * Math.sin(entry.longitude! / 180 * Math.PI)).toFixed(ScatterData.FLOAT_PRECISION)),\n        ];\n      }\n    );\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: ScatterDataDict[]): void {\n    this.dataDict = data;\n  }\n\n}\n\n\nexport interface ScatterChartInfoStorageObject {\n  chartTitle: string;\n  dataLabel: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n}\n\nexport class ScatterChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private dataLabel: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n\n  constructor() {\n    this.chartTitle = ScatterChartInfo.getDefaultStorageObject().chartTitle;\n    this.dataLabel = ScatterChartInfo.getDefaultStorageObject().dataLabel;\n    this.xAxisLabel = ScatterChartInfo.getDefaultStorageObject().xAxisLabel;\n    this.yAxisLabel = ScatterChartInfo.getDefaultStorageObject().yAxisLabel;\n  }\n\n\n  public static getDefaultStorageObject(): ScatterChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      dataLabel: \"Data\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n    }\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabel;\n  }\n\n  getStorageObject(): ScatterChartInfoStorageObject {\n    return {\n      chartTitle: this.chartTitle,\n      dataLabel: this.dataLabel,\n      xAxisLabel: this.xAxisLabel,\n      yAxisLabel: this.yAxisLabel,\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    this.dataLabel = data;\n  }\n\n  setStorageObject(storageObject: ScatterChartInfoStorageObject): void {\n    this.chartTitle = storageObject.chartTitle;\n    this.dataLabel = storageObject.dataLabel;\n    this.xAxisLabel = storageObject.xAxisLabel;\n    this.yAxisLabel = storageObject.yAxisLabel;\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.xAxisLabel = xAxis;\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.yAxisLabel = yAxis;\n  }\n\n}\n\n\nexport interface ScatterInterfaceStorageObject {\n  distance: number;\n  diameter: number;\n}\n\n\nexport interface ScatterModel {\n  getDistance(): number;\n\n  getDiameter(): number;\n\n  setDistance(distance: number): void;\n\n  setDiameter(diameter: number): void;\n\n  getModelStorageObject(): ScatterInterfaceStorageObject;\n\n  setModelStorageObject(storageObject: ScatterInterfaceStorageObject): void;\n\n  getModel(): number[][];\n}\n\n\nexport class ScatterModelInterface implements ScatterModel {\n  private distance: number;\n  private diameter: number;\n\n  constructor() {\n    this.distance = ScatterModelInterface.getDefaultStorageObject().distance;\n    this.diameter = ScatterModelInterface.getDefaultStorageObject().diameter;\n  }\n\n  public static getDefaultStorageObject(): ScatterInterfaceStorageObject {\n    return {\n      distance: 0,\n      diameter: 10,\n    }\n  }\n\n  getDiameter(): number {\n    return this.diameter\n  }\n\n  getDistance(): number {\n    return this.distance;\n  }\n\n  /**\n   * A circle with x of this.distance, y of 0, and diameter of this.diameter\n   */\n  getModel(): number[][] {\n    let modelData: number[][] = [];\n    const x = this.getDistance();\n    const y = 0;\n    const diameter = this.getDiameter();\n    const steps = 500;\n\n    let step = 2 * Math.PI / steps;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ScatterModule.html":{"url":"modules/ScatterModule.html","title":"module - ScatterModule","body":"\n                   \n\n\n\n\n    Modules\n    ScatterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ScatterModule\n\n\n\ncluster_ScatterModule_providers\n\n\n\ncluster_ScatterModule_imports\n\n\n\ncluster_ScatterModule_declarations\n\n\n\n\nScatterChartFormComponent\n\nScatterChartFormComponent\n\n\n\nScatterModule\n\nScatterModule\n\nScatterModule -->\n\nScatterChartFormComponent->ScatterModule\n\n\n\n\n\nScatterComponent\n\nScatterComponent\n\nScatterModule -->\n\nScatterComponent->ScatterModule\n\n\n\n\n\nScatterFormComponent\n\nScatterFormComponent\n\nScatterModule -->\n\nScatterFormComponent->ScatterModule\n\n\n\n\n\nScatterHighchartComponent\n\nScatterHighchartComponent\n\nScatterModule -->\n\nScatterHighchartComponent->ScatterModule\n\n\n\n\n\nScatterTableComponent\n\nScatterTableComponent\n\nScatterModule -->\n\nScatterTableComponent->ScatterModule\n\n\n\n\n\nInterfaceUtilModule\n\nInterfaceUtilModule\n\nScatterModule -->\n\nInterfaceUtilModule->ScatterModule\n\n\n\n\n\nSimpleDataButtonModule\n\nSimpleDataButtonModule\n\nScatterModule -->\n\nSimpleDataButtonModule->ScatterModule\n\n\n\n\n\nSimpleGraphButtonModule\n\nSimpleGraphButtonModule\n\nScatterModule -->\n\nSimpleGraphButtonModule->ScatterModule\n\n\n\n\n\nScatterService\n\nScatterService\n\nScatterModule -->\n\nScatterService->ScatterModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tools/scatter/scatter.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ScatterChartFormComponent\n                        \n                        \n                            ScatterComponent\n                        \n                        \n                            ScatterFormComponent\n                        \n                        \n                            ScatterHighchartComponent\n                        \n                        \n                            ScatterTableComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ScatterService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InterfaceUtilModule\n                        \n                        \n                            SimpleDataButtonModule\n                        \n                        \n                            SimpleGraphButtonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ScatterComponent} from './scatter/scatter.component';\nimport {SimpleDataButtonModule} from \"../shared/simple-data-button/simple-data-button.component\";\nimport {SimpleGraphButtonModule} from \"../shared/simple-graph-button/simple-graph-button.component\";\nimport {ScatterService} from \"./scatter.service\";\nimport {ScatterTableComponent} from './scatter-table/scatter-table.component';\nimport {HotTableModule} from \"@handsontable/angular\";\nimport {ScatterHighchartComponent} from './scatter-highchart/scatter-highchart.component';\nimport {HighchartsChartModule} from \"highcharts-angular\";\nimport {ScatterChartFormComponent} from './scatter-chart-form/scatter-chart-form.component';\nimport {MatLegacyFormFieldModule} from \"@angular/material/legacy-form-field\";\nimport {MatLegacyInputModule} from \"@angular/material/legacy-input\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {ScatterFormComponent} from './scatter-form/scatter-form.component';\nimport {InterfaceUtilModule} from \"../shared/interface/util\";\n\n\n@NgModule({\n  declarations: [\n    ScatterComponent,\n    ScatterTableComponent,\n    ScatterHighchartComponent,\n    ScatterChartFormComponent,\n    ScatterFormComponent\n  ],\n  imports: [\n    CommonModule,\n    SimpleDataButtonModule,\n    SimpleGraphButtonModule,\n    HotTableModule,\n    HighchartsChartModule,\n    MatLegacyFormFieldModule,\n    MatLegacyInputModule,\n    ReactiveFormsModule,\n    InterfaceUtilModule\n  ],\n  providers: [ScatterService,],\n})\nexport class ScatterModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScatterService.html":{"url":"injectables/ScatterService.html","title":"injectable - ScatterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ScatterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/scatter/scatter.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                chartInfo$\n                            \n                            \n                                    Private\n                                chartInfoSubject\n                            \n                            \n                                    Public\n                                data$\n                            \n                            \n                                    Private\n                                dataSubject\n                            \n                            \n                                    Private\n                                highChart\n                            \n                            \n                                    Public\n                                interface$\n                            \n                            \n                                    Private\n                                interfaceSubject\n                            \n                            \n                                    Private\n                                scatterChartInfo\n                            \n                            \n                                    Private\n                                scatterData\n                            \n                            \n                                    Private\n                                scatterInterface\n                            \n                            \n                                    Private\n                                scatterStorage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRow\n                            \n                            \n                                getChartTitle\n                            \n                            \n                                getData\n                            \n                            \n                                getDataArray\n                            \n                            \n                                getDataLabel\n                            \n                            \n                                getDiameter\n                            \n                            \n                                getDistance\n                            \n                            \n                                getHighChart\n                            \n                            \n                                getModel\n                            \n                            \n                                getModelStorageObject\n                            \n                            \n                                getStorageObject\n                            \n                            \n                                getXAxisLabel\n                            \n                            \n                                getYAxisLabel\n                            \n                            \n                                removeRow\n                            \n                            \n                                resetChartInfo\n                            \n                            \n                                resetData\n                            \n                            \n                                resetModel\n                            \n                            \n                                setChartTitle\n                            \n                            \n                                setData\n                            \n                            \n                                setDataLabel\n                            \n                            \n                                setDiameter\n                            \n                            \n                                setDistance\n                            \n                            \n                                setHighChart\n                            \n                            \n                                setModelStorageObject\n                            \n                            \n                                setStorageObject\n                            \n                            \n                                setXAxisLabel\n                            \n                            \n                                setYAxisLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/scatter/scatter.service.ts:34\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRow\n                        \n                    \n                \n            \n            \n                \naddRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:147\n                \n            \n\n\n            \n                \n                    MyData Methods\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChartTitle\n                        \n                    \n                \n            \n            \n                \ngetChartTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:87\n                \n            \n\n\n            \n                \n                    ChartInfo Methods\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ScatterDataDict[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataArray\n                        \n                    \n                \n            \n            \n                \ngetDataArray()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     [][]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataLabel\n                        \n                    \n                \n            \n            \n                \ngetDataLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDiameter\n                        \n                    \n                \n            \n            \n                \ngetDiameter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:44\n                \n            \n\n\n            \n                \n                    ScatterModel Methods\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDistance\n                        \n                    \n                \n            \n            \n                \ngetDistance()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHighChart\n                        \n                    \n                \n            \n            \n                \ngetHighChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Highcharts.Chart\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getModel\n                        \n                    \n                \n            \n            \n                \ngetModel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     [][]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getModelStorageObject\n                        \n                    \n                \n            \n            \n                \ngetModelStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ScatterInterfaceStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStorageObject\n                        \n                    \n                \n            \n            \n                \ngetStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getXAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetXAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getYAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetYAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRow\n                        \n                    \n                \n            \n            \n                \nremoveRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetChartInfo\n                        \n                    \n                \n            \n            \n                \nresetChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetData\n                        \n                    \n                \n            \n            \n                \nresetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetModel\n                        \n                    \n                \n            \n            \n                \nresetModel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setChartTitle\n                        \n                    \n                \n            \n            \n                \nsetChartTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setData\n                        \n                    \n                \n            \n            \n                \nsetData(data: ScatterDataDict[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ScatterDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDataLabel\n                        \n                    \n                \n            \n            \n                \nsetDataLabel(data: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDiameter\n                        \n                    \n                \n            \n            \n                \nsetDiameter(diameter: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    diameter\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDistance\n                        \n                    \n                \n            \n            \n                \nsetDistance(distance: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    distance\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setHighChart\n                        \n                    \n                \n            \n            \n                \nsetHighChart(highChart: Highcharts.Chart)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    highChart\n                                    \n                                            Highcharts.Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setModelStorageObject\n                        \n                    \n                \n            \n            \n                \nsetModelStorageObject(storageObject: ScatterInterfaceStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storageObject\n                                    \n                                                ScatterInterfaceStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStorageObject\n                        \n                    \n                \n            \n            \n                \nsetStorageObject(storageObject: ScatterChartInfoStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storageObject\n                                    \n                                                ScatterChartInfoStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setXAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetXAxisLabel(xAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    xAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setYAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetYAxisLabel(yAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    yAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chartInfo$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.chartInfoSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartInfoSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(this.scatterChartInfo)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.dataSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(this.scatterData)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        highChart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Highcharts.Chart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        interface$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.interfaceSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        interfaceSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(UpdateSource.INIT)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        scatterChartInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScatterChartInfo\n\n                    \n                \n                \n                    \n                        Default value : new ScatterChartInfo()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        scatterData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScatterData\n\n                    \n                \n                \n                    \n                        Default value : new ScatterData()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        scatterInterface\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScatterModelInterface\n\n                    \n                \n                \n                    \n                        Default value : new ScatterModelInterface()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        scatterStorage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScatterStorage\n\n                    \n                \n                \n                    \n                        Default value : new ScatterStorage()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {\n  ScatterChartInfo,\n  ScatterChartInfoStorageObject,\n  ScatterData,\n  ScatterDataDict,\n  ScatterInterfaceStorageObject,\n  ScatterModel,\n  ScatterModelInterface,\n  ScatterStorage\n} from \"./scatter.service.util\";\nimport {MyData} from \"../shared/data/data.interface\";\nimport {BehaviorSubject} from \"rxjs\";\nimport * as Highcharts from \"highcharts\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {UpdateSource} from \"../moon/moon.service.util\";\n\n@Injectable()\nexport class ScatterService implements MyData, ChartInfo, ScatterModel {\n\n  private scatterData: ScatterData = new ScatterData();\n  private scatterChartInfo: ScatterChartInfo = new ScatterChartInfo();\n  private scatterInterface: ScatterModelInterface = new ScatterModelInterface();\n\n  private scatterStorage: ScatterStorage = new ScatterStorage();\n\n  private highChart!: Highcharts.Chart;\n\n  private dataSubject: BehaviorSubject = new BehaviorSubject(this.scatterData);\n  public data$ = this.dataSubject.asObservable();\n  private chartInfoSubject: BehaviorSubject = new BehaviorSubject(this.scatterChartInfo);\n  public chartInfo$ = this.chartInfoSubject.asObservable();\n  private interfaceSubject: BehaviorSubject = new BehaviorSubject(UpdateSource.INIT);\n  public interface$ = this.interfaceSubject.asObservable();\n\n  constructor() {\n    this.scatterData.setData(this.scatterStorage.getData());\n    this.scatterChartInfo.setStorageObject(this.scatterStorage.getChartInfo());\n    this.scatterInterface.setModelStorageObject(this.scatterStorage.getInterface());\n  }\n\n  /** ScatterModel Methods**/\n\n  getDiameter(): number {\n    return this.scatterInterface.getDiameter();\n  }\n\n  getDistance(): number {\n    return this.scatterInterface.getDistance();\n  }\n\n  getModel(): number[][] {\n    return this.scatterInterface.getModel();\n  }\n\n  getModelStorageObject(): ScatterInterfaceStorageObject {\n    return this.scatterInterface.getModelStorageObject();\n  }\n\n  setDiameter(diameter: number): void {\n    this.scatterInterface.setDiameter(diameter);\n    this.scatterStorage.saveInterface(this.scatterInterface.getModelStorageObject());\n    this.interfaceSubject.next(UpdateSource.INTERFACE);\n  }\n\n  setDistance(distance: number): void {\n    this.scatterInterface.setDistance(distance);\n    this.scatterStorage.saveInterface(this.scatterInterface.getModelStorageObject());\n    this.interfaceSubject.next(UpdateSource.INTERFACE);\n  }\n\n  setModelStorageObject(storageObject: ScatterInterfaceStorageObject): void {\n    this.scatterInterface.setModelStorageObject(storageObject);\n    this.interfaceSubject.next(UpdateSource.INTERFACE);\n  }\n\n  resetModel(): void {\n    this.scatterInterface.setModelStorageObject(ScatterModelInterface.getDefaultStorageObject());\n    this.scatterStorage.saveInterface(this.scatterInterface.getModelStorageObject());\n    this.interfaceSubject.next(UpdateSource.RESET);\n  }\n\n\n  /** ChartInfo Methods**/\n\n\n  getChartTitle(): string {\n    return this.scatterChartInfo.getChartTitle();\n  }\n\n  getXAxisLabel(): string {\n    return this.scatterChartInfo.getXAxisLabel();\n  }\n\n  getYAxisLabel(): string {\n    return this.scatterChartInfo.getYAxisLabel();\n  }\n\n  getDataLabel(): string {\n    return this.scatterChartInfo.getDataLabel();\n  }\n\n  getStorageObject() {\n    return this.scatterChartInfo.getStorageObject();\n  }\n\n  setChartTitle(title: string): void {\n    this.scatterChartInfo.setChartTitle(title);\n    this.scatterStorage.saveChartInfo(this.scatterChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.scatterChartInfo);\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.scatterChartInfo.setXAxisLabel(xAxis);\n    this.scatterStorage.saveChartInfo(this.scatterChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.scatterChartInfo);\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.scatterChartInfo.setYAxisLabel(yAxis);\n    this.scatterStorage.saveChartInfo(this.scatterChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.scatterChartInfo);\n  }\n\n  setDataLabel(data: string): void {\n    this.scatterChartInfo.setDataLabel(data);\n    this.scatterStorage.saveChartInfo(this.scatterChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.scatterChartInfo);\n    this.dataSubject.next(this.scatterData);\n  }\n\n  setStorageObject(storageObject: ScatterChartInfoStorageObject): void {\n    this.scatterChartInfo.setStorageObject(storageObject);\n    this.scatterStorage.saveChartInfo(this.scatterChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.scatterChartInfo);\n  }\n\n  resetChartInfo(): void {\n    this.scatterChartInfo.setStorageObject(ScatterChartInfo.getDefaultStorageObject());\n    this.scatterStorage.saveChartInfo(this.scatterChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.scatterChartInfo);\n  }\n\n\n  /** MyData Methods**/\n\n  addRow(index: number, amount: number): void {\n    this.scatterData.addRow(index, amount);\n    this.scatterStorage.saveData(this.scatterData.getData());\n    this.dataSubject.next(this.scatterData);\n  }\n\n  getData(): ScatterDataDict[] {\n    return this.scatterData.getData();\n  }\n\n  getDataArray(): (number | null)[][] {\n    return this.scatterData.getDataArray();\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.scatterData.removeRow(index, amount);\n    this.scatterStorage.saveData(this.scatterData.getData());\n    this.dataSubject.next(this.scatterData);\n  }\n\n  setData(data: ScatterDataDict[]): void {\n    this.scatterData.setData(data);\n    this.scatterStorage.saveData(this.scatterData.getData());\n    this.dataSubject.next(this.scatterData);\n  }\n\n  resetData(): void {\n    this.scatterStorage.resetData();\n    this.scatterData.setData(this.scatterStorage.getData());\n    this.dataSubject.next(this.scatterData);\n  }\n\n  setHighChart(highChart: Highcharts.Chart): void {\n    this.highChart = highChart;\n  }\n\n  getHighChart(): Highcharts.Chart {\n    return this.highChart;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ScatterStorage.html":{"url":"classes/ScatterStorage.html","title":"class - ScatterStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ScatterStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/scatter/scatter.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyStorage\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                chartInfoKey\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                dataKey\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                interfaceKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getChartInfo\n                            \n                            \n                                getData\n                            \n                            \n                                getInterface\n                            \n                            \n                                resetChartInfo\n                            \n                            \n                                resetData\n                            \n                            \n                                resetInterface\n                            \n                            \n                                saveChartInfo\n                            \n                            \n                                saveData\n                            \n                            \n                                saveInterface\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        chartInfoKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"scatterChartInfo\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.util.ts:256\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        dataKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"scatterData\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.util.ts:255\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        interfaceKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"scatterInterface\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.util.ts:257\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getChartInfo\n                        \n                    \n                \n            \n            \n                \ngetChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:259\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ScatterChartInfoStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:267\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ScatterDataDict[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInterface\n                        \n                    \n                \n            \n            \n                \ngetInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:275\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ScatterInterfaceStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetChartInfo\n                        \n                    \n                \n            \n            \n                \nresetChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:283\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetData\n                        \n                    \n                \n            \n            \n                \nresetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:287\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetInterface\n                        \n                    \n                \n            \n            \n                \nresetInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:291\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveChartInfo\n                        \n                    \n                \n            \n            \n                \nsaveChartInfo(chartInfo: ScatterChartInfoStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:295\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartInfo\n                                    \n                                                ScatterChartInfoStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveData\n                        \n                    \n                \n            \n            \n                \nsaveData(data: ScatterDataDict[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:299\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ScatterDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveInterface\n                        \n                    \n                \n            \n            \n                \nsaveInterface(interfaceInfo: ScatterInterfaceStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:303\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    interfaceInfo\n                                    \n                                                ScatterInterfaceStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\n\nexport interface ScatterDataDict {\n  longitude: number | null;\n  latitude: number | null;\n  distance: number | null;\n}\n\nexport class ScatterData implements MyData {\n  private dataDict: ScatterDataDict[];\n  private static readonly FLOAT_PRECISION = 3;\n\n  constructor() {\n    this.dataDict = ScatterData.getDefaultDataDict();\n  }\n\n  public static getDefaultDataDict(): ScatterDataDict[] {\n    const result: ScatterDataDict[] = [];\n    for (let i = 0; i  0) {\n      for (let i = 0; i  {\n        return scatterDataDict.longitude !== null\n          && scatterDataDict.latitude !== null\n          && scatterDataDict.distance !== null;\n      }\n    ).map(\n      (entry: ScatterDataDict) => {\n        return [\n          parseFloat((Math.cos(entry.latitude! / 180 * Math.PI) * entry.distance! * Math.cos(entry.longitude! / 180 * Math.PI)).toFixed(ScatterData.FLOAT_PRECISION)),\n          parseFloat((Math.cos(entry.latitude! / 180 * Math.PI) * entry.distance! * Math.sin(entry.longitude! / 180 * Math.PI)).toFixed(ScatterData.FLOAT_PRECISION)),\n        ];\n      }\n    );\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: ScatterDataDict[]): void {\n    this.dataDict = data;\n  }\n\n}\n\n\nexport interface ScatterChartInfoStorageObject {\n  chartTitle: string;\n  dataLabel: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n}\n\nexport class ScatterChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private dataLabel: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n\n  constructor() {\n    this.chartTitle = ScatterChartInfo.getDefaultStorageObject().chartTitle;\n    this.dataLabel = ScatterChartInfo.getDefaultStorageObject().dataLabel;\n    this.xAxisLabel = ScatterChartInfo.getDefaultStorageObject().xAxisLabel;\n    this.yAxisLabel = ScatterChartInfo.getDefaultStorageObject().yAxisLabel;\n  }\n\n\n  public static getDefaultStorageObject(): ScatterChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      dataLabel: \"Data\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n    }\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabel;\n  }\n\n  getStorageObject(): ScatterChartInfoStorageObject {\n    return {\n      chartTitle: this.chartTitle,\n      dataLabel: this.dataLabel,\n      xAxisLabel: this.xAxisLabel,\n      yAxisLabel: this.yAxisLabel,\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    this.dataLabel = data;\n  }\n\n  setStorageObject(storageObject: ScatterChartInfoStorageObject): void {\n    this.chartTitle = storageObject.chartTitle;\n    this.dataLabel = storageObject.dataLabel;\n    this.xAxisLabel = storageObject.xAxisLabel;\n    this.yAxisLabel = storageObject.yAxisLabel;\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.xAxisLabel = xAxis;\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.yAxisLabel = yAxis;\n  }\n\n}\n\n\nexport interface ScatterInterfaceStorageObject {\n  distance: number;\n  diameter: number;\n}\n\n\nexport interface ScatterModel {\n  getDistance(): number;\n\n  getDiameter(): number;\n\n  setDistance(distance: number): void;\n\n  setDiameter(diameter: number): void;\n\n  getModelStorageObject(): ScatterInterfaceStorageObject;\n\n  setModelStorageObject(storageObject: ScatterInterfaceStorageObject): void;\n\n  getModel(): number[][];\n}\n\n\nexport class ScatterModelInterface implements ScatterModel {\n  private distance: number;\n  private diameter: number;\n\n  constructor() {\n    this.distance = ScatterModelInterface.getDefaultStorageObject().distance;\n    this.diameter = ScatterModelInterface.getDefaultStorageObject().diameter;\n  }\n\n  public static getDefaultStorageObject(): ScatterInterfaceStorageObject {\n    return {\n      distance: 0,\n      diameter: 10,\n    }\n  }\n\n  getDiameter(): number {\n    return this.diameter\n  }\n\n  getDistance(): number {\n    return this.distance;\n  }\n\n  /**\n   * A circle with x of this.distance, y of 0, and diameter of this.diameter\n   */\n  getModel(): number[][] {\n    let modelData: number[][] = [];\n    const x = this.getDistance();\n    const y = 0;\n    const diameter = this.getDiameter();\n    const steps = 500;\n\n    let step = 2 * Math.PI / steps;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ScatterTable.html":{"url":"classes/ScatterTable.html","title":"class - ScatterTable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ScatterTable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/scatter/scatter-table/scatter-table.component.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyTable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hotRegisterer\n                            \n                            \n                                    Private\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                            \n                                getTable\n                            \n                            \n                                renderTable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/scatter/scatter-table/scatter-table.component.ts:70\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hotRegisterer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HotTableRegisterer()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-table/scatter-table.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-table/scatter-table.component.ts:69\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-table/scatter-table.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTable\n                        \n                    \n                \n            \n            \n                \ngetTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-table/scatter-table.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Handsontable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderTable\n                        \n                    \n                \n            \n            \n                \nrenderTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-table/scatter-table.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {AfterViewInit, Component, OnDestroy} from '@angular/core';\nimport {ScatterService} from \"../scatter.service\";\nimport {Subject, takeUntil} from \"rxjs\";\nimport {MyTable} from \"../../shared/tables/table-interface\";\nimport {HotTableRegisterer} from \"@handsontable/angular\";\nimport Handsontable from \"handsontable\";\nimport {ScatterDataDict} from \"../scatter.service.util\";\nimport {MoonDataDict} from \"../../moon/moon.service.util\";\nimport {MyData} from \"../../shared/data/data.interface\";\n\n@Component({\n  selector: 'app-scatter-table',\n  templateUrl: './scatter-table.component.html',\n  styleUrls: ['./scatter-table.component.scss']\n})\nexport class ScatterTableComponent implements AfterViewInit, OnDestroy{\n  static FLOAT_PRECISION: number = 2;\n  id: string = \"scatter-table\";\n  table: MyTable = new ScatterTable(this.id);\n  colNames: string[] = [\"Longitude\", \"Latitude\", \"Distance\"];\n  dataSet: ScatterDataDict[];\n  private destroy$: Subject = new Subject();\n  constructor(private service: ScatterService) {\n    this.dataSet = this.service.getData();\n  }\n\n  ngAfterViewInit(): void {\n    this.service.data$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe((data: MyData) => {\n      this.dataSet = this.limitPrecision(this.service.getData(), ScatterTableComponent.FLOAT_PRECISION);\n      this.table.renderTable();\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  public onChange = (changes: any, source: any) => {\n    if (changes) {\n      this.service.setData(this.table.getData());\n    }\n  }\n\n  public onRemove = (index: number, amount: number) => {\n    this.service.removeRow(index, amount);\n  }\n\n  public onInsert = (index: number, amount: number) => {\n    this.service.addRow(index, amount);\n  }\n\n  private limitPrecision(data: ScatterDataDict[], precision: number): ScatterDataDict[] {\n    return data.map(\n      (row: ScatterDataDict) => {\n        return {\n          longitude: row.longitude ? parseFloat(row.longitude.toFixed(precision)) : row.longitude,\n          latitude: row.latitude ? parseFloat(row.latitude.toFixed(precision)) : row.latitude,\n          distance: row.distance ? parseFloat(row.distance.toFixed(precision)) : row.distance,\n        }\n      }\n    );\n  }\n}\n\nclass ScatterTable implements MyTable {\n  private readonly id: string;\n  private hotRegisterer = new HotTableRegisterer();\n\n  constructor(id: string) {\n    this.id = id;\n  }\n\n  getTable(): Handsontable {\n    return this.hotRegisterer.getInstance(this.id);\n  }\n\n  renderTable(): void {\n    this.getTable().render();\n  }\n\n  getData(): any[] {\n    return this.getTable().getSourceData();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScatterTableComponent.html":{"url":"components/ScatterTableComponent.html","title":"component - ScatterTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ScatterTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/scatter/scatter-table/scatter-table.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-scatter-table\n            \n\n\n\n            \n                styleUrls\n                ./scatter-table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./scatter-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                colNames\n                            \n                            \n                                dataSet\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Static\n                                FLOAT_PRECISION\n                            \n                            \n                                id\n                            \n                            \n                                    Public\n                                onChange\n                            \n                            \n                                    Public\n                                onInsert\n                            \n                            \n                                    Public\n                                onRemove\n                            \n                            \n                                table\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                limitPrecision\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: ScatterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/scatter/scatter-table/scatter-table.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ScatterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        limitPrecision\n                        \n                    \n                \n            \n            \n                \n                    \n                    limitPrecision(data: ScatterDataDict[], precision: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-table/scatter-table.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ScatterDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    precision\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ScatterDataDict[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-table/scatter-table.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-table/scatter-table.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        colNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\"Longitude\", \"Latitude\", \"Distance\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-table/scatter-table.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScatterDataDict[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-table/scatter-table.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-table/scatter-table.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        FLOAT_PRECISION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-table/scatter-table.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"scatter-table\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-table/scatter-table.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-table/scatter-table.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onInsert\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-table/scatter-table.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onRemove\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-table/scatter-table.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        table\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MyTable\n\n                    \n                \n                \n                    \n                        Default value : new ScatterTable(this.id)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-table/scatter-table.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnDestroy} from '@angular/core';\nimport {ScatterService} from \"../scatter.service\";\nimport {Subject, takeUntil} from \"rxjs\";\nimport {MyTable} from \"../../shared/tables/table-interface\";\nimport {HotTableRegisterer} from \"@handsontable/angular\";\nimport Handsontable from \"handsontable\";\nimport {ScatterDataDict} from \"../scatter.service.util\";\nimport {MoonDataDict} from \"../../moon/moon.service.util\";\nimport {MyData} from \"../../shared/data/data.interface\";\n\n@Component({\n  selector: 'app-scatter-table',\n  templateUrl: './scatter-table.component.html',\n  styleUrls: ['./scatter-table.component.scss']\n})\nexport class ScatterTableComponent implements AfterViewInit, OnDestroy{\n  static FLOAT_PRECISION: number = 2;\n  id: string = \"scatter-table\";\n  table: MyTable = new ScatterTable(this.id);\n  colNames: string[] = [\"Longitude\", \"Latitude\", \"Distance\"];\n  dataSet: ScatterDataDict[];\n  private destroy$: Subject = new Subject();\n  constructor(private service: ScatterService) {\n    this.dataSet = this.service.getData();\n  }\n\n  ngAfterViewInit(): void {\n    this.service.data$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe((data: MyData) => {\n      this.dataSet = this.limitPrecision(this.service.getData(), ScatterTableComponent.FLOAT_PRECISION);\n      this.table.renderTable();\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  public onChange = (changes: any, source: any) => {\n    if (changes) {\n      this.service.setData(this.table.getData());\n    }\n  }\n\n  public onRemove = (index: number, amount: number) => {\n    this.service.removeRow(index, amount);\n  }\n\n  public onInsert = (index: number, amount: number) => {\n    this.service.addRow(index, amount);\n  }\n\n  private limitPrecision(data: ScatterDataDict[], precision: number): ScatterDataDict[] {\n    return data.map(\n      (row: ScatterDataDict) => {\n        return {\n          longitude: row.longitude ? parseFloat(row.longitude.toFixed(precision)) : row.longitude,\n          latitude: row.latitude ? parseFloat(row.latitude.toFixed(precision)) : row.latitude,\n          distance: row.distance ? parseFloat(row.distance.toFixed(precision)) : row.distance,\n        }\n      }\n    );\n  }\n}\n\nclass ScatterTable implements MyTable {\n  private readonly id: string;\n  private hotRegisterer = new HotTableRegisterer();\n\n  constructor(id: string) {\n    this.id = id;\n  }\n\n  getTable(): Handsontable {\n    return this.hotRegisterer.getInstance(this.id);\n  }\n\n  renderTable(): void {\n    this.getTable().render();\n  }\n\n  getData(): any[] {\n    return this.getTable().getSourceData();\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./scatter-table.component.scss\n                \n                .container {\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ScatterTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/settings/settings.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n\n\n            \n                styleUrls\n                ./settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/settings/settings.component.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/settings.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, NgModule, OnInit} from '@angular/core';\nimport {MatSidenavModule} from \"@angular/material/sidenav\";\nimport {MatLegacyButtonModule as MatButtonModule} from \"@angular/material/legacy-button\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatLegacyListModule as MatListModule} from \"@angular/material/legacy-list\";\nimport {RouterLink, RouterLinkActive, RouterOutlet} from \"@angular/router\";\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\n@NgModule({\n  imports: [\n    MatSidenavModule,\n    MatButtonModule,\n    MatIconModule,\n    MatListModule,\n    RouterOutlet,\n    RouterLink,\n    RouterLinkActive,\n  ],\n  declarations: [\n    SettingsComponent,\n  ],\n})\nexport class SettingsModule {\n\n}\n\n    \n\n    \n        \n  \n    \n      Appearance\n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./settings.component.scss\n                \n                \nmat-drawer-container {\n  height: 100%;\n}\n\n.setting-container {\n  padding: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Appearance              '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsModule.html":{"url":"modules/SettingsModule.html","title":"module - SettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SettingsModule_imports\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nRouterLink\n\nRouterLink\n\nSettingsModule -->\n\nRouterLink->SettingsModule\n\n\n\n\n\nRouterLinkActive\n\nRouterLinkActive\n\nSettingsModule -->\n\nRouterLinkActive->SettingsModule\n\n\n\n\n\nRouterOutlet\n\nRouterOutlet\n\nSettingsModule -->\n\nRouterOutlet->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/settings/settings.component.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SettingsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RouterLink\n                        \n                        \n                            RouterLinkActive\n                        \n                        \n                            RouterOutlet\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {Component, NgModule, OnInit} from '@angular/core';\nimport {MatSidenavModule} from \"@angular/material/sidenav\";\nimport {MatLegacyButtonModule as MatButtonModule} from \"@angular/material/legacy-button\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatLegacyListModule as MatListModule} from \"@angular/material/legacy-list\";\nimport {RouterLink, RouterLinkActive, RouterOutlet} from \"@angular/router\";\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\n@NgModule({\n  imports: [\n    MatSidenavModule,\n    MatButtonModule,\n    MatIconModule,\n    MatListModule,\n    RouterOutlet,\n    RouterLink,\n    RouterLinkActive,\n  ],\n  declarations: [\n    SettingsComponent,\n  ],\n})\nexport class SettingsModule {\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SimpleDataButtonComponent.html":{"url":"components/SimpleDataButtonComponent.html","title":"component - SimpleDataButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SimpleDataButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/shared/simple-data-button/simple-data-button.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-simple-data-button\n            \n\n\n\n            \n                styleUrls\n                ./simple-data-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./simple-data-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dataReset\n                            \n                            \n                                fileChanged\n                            \n                            \n                                modelReset\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                tableAddRow\n                            \n                            \n                                uploadData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isDataRandom\n                            \n                            \n                                isUploadData\n                            \n                            \n                                modelResetVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                fileUpload$\n                            \n                            \n                                tableUserActionObs$\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/shared/simple-data-button/simple-data-button.component.ts:16\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isDataRandom\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/tools/shared/simple-data-button/simple-data-button.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isUploadData\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/tools/shared/simple-data-button/simple-data-button.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modelResetVisible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/tools/shared/simple-data-button/simple-data-button.component.ts:12\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        fileUpload$\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tools/shared/simple-data-button/simple-data-button.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tableUserActionObs$\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tools/shared/simple-data-button/simple-data-button.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dataReset\n                        \n                    \n                \n            \n            \n                \ndataReset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/simple-data-button/simple-data-button.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileChanged\n                        \n                    \n                \n            \n            \n                \nfileChanged($event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/simple-data-button/simple-data-button.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                            Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modelReset\n                        \n                    \n                \n            \n            \n                \nmodelReset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/simple-data-button/simple-data-button.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/simple-data-button/simple-data-button.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tableAddRow\n                        \n                    \n                \n            \n            \n                \ntableAddRow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/simple-data-button/simple-data-button.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadData\n                        \n                    \n                \n            \n            \n                \nuploadData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/simple-data-button/simple-data-button.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, NgModule, OnInit, Output} from '@angular/core';\nimport {TableAction} from \"../types/actions\";\nimport {MatLegacyButtonModule as MatButtonModule} from \"@angular/material/legacy-button\";\nimport {NgIf} from \"@angular/common\";\n\n@Component({\n  selector: 'app-simple-data-button',\n  templateUrl: './simple-data-button.component.html',\n  styleUrls: ['./simple-data-button.component.scss']\n})\nexport class SimpleDataButtonComponent implements OnInit {\n  @Input() modelResetVisible: boolean = false;\n  @Input() isDataRandom: boolean = false;\n  @Input() isUploadData: boolean = false;\n  @Output() tableUserActionObs$: EventEmitter;\n  @Output() fileUpload$: EventEmitter = new EventEmitter();\n\n\n  constructor() {\n    this.tableUserActionObs$ = new EventEmitter();\n  }\n\n  ngOnInit(): void {\n  }\n\n  tableAddRow() {\n    this.tableUserActionObs$.emit([{action: \"addRow\"}]);\n  }\n\n  dataReset() {\n    this.tableUserActionObs$.emit([{action: \"resetData\"}]);\n  }\n\n  modelReset() {\n    this.tableUserActionObs$.emit([{action: \"resetModel\"}]);\n  }\n\n  uploadData() {\n    this.tableUserActionObs$.emit([{action: \"uploadData\"}]);\n  }\n\n  fileChanged($event: Event) {\n    this.fileUpload$.emit(($event.target as HTMLInputElement).files![0]);\n  }\n}\n\n@NgModule({\n  imports: [MatButtonModule, NgIf],\n  declarations: [SimpleDataButtonComponent],\n  exports: [\n    SimpleDataButtonComponent\n  ]\n})\nexport class SimpleDataButtonModule {\n}\n\n    \n\n    \n        \n  \n    Upload Data File\n    \n  \n  Add Row\n  Reset Data\n  Random Data\n  Reset Model\n\n\n    \n\n    \n                \n                    ./simple-data-button.component.scss\n                \n                button {\n  margin-right: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Upload Data File        Add Row  Reset Data  Random Data  Reset Model'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SimpleDataButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SimpleDataButtonModule.html":{"url":"modules/SimpleDataButtonModule.html","title":"module - SimpleDataButtonModule","body":"\n                   \n\n\n\n\n    Modules\n    SimpleDataButtonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SimpleDataButtonModule\n\n\n\ncluster_SimpleDataButtonModule_declarations\n\n\n\ncluster_SimpleDataButtonModule_imports\n\n\n\ncluster_SimpleDataButtonModule_exports\n\n\n\n\nSimpleDataButtonComponent\n\nSimpleDataButtonComponent\n\n\n\nSimpleDataButtonModule\n\nSimpleDataButtonModule\n\nSimpleDataButtonModule -->\n\nSimpleDataButtonComponent->SimpleDataButtonModule\n\n\n\n\n\nSimpleDataButtonComponent \n\nSimpleDataButtonComponent \n\nSimpleDataButtonComponent  -->\n\nSimpleDataButtonModule->SimpleDataButtonComponent \n\n\n\n\n\nNgIf\n\nNgIf\n\nSimpleDataButtonModule -->\n\nNgIf->SimpleDataButtonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tools/shared/simple-data-button/simple-data-button.component.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SimpleDataButtonComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NgIf\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SimpleDataButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {Component, EventEmitter, Input, NgModule, OnInit, Output} from '@angular/core';\nimport {TableAction} from \"../types/actions\";\nimport {MatLegacyButtonModule as MatButtonModule} from \"@angular/material/legacy-button\";\nimport {NgIf} from \"@angular/common\";\n\n@Component({\n  selector: 'app-simple-data-button',\n  templateUrl: './simple-data-button.component.html',\n  styleUrls: ['./simple-data-button.component.scss']\n})\nexport class SimpleDataButtonComponent implements OnInit {\n  @Input() modelResetVisible: boolean = false;\n  @Input() isDataRandom: boolean = false;\n  @Input() isUploadData: boolean = false;\n  @Output() tableUserActionObs$: EventEmitter;\n  @Output() fileUpload$: EventEmitter = new EventEmitter();\n\n\n  constructor() {\n    this.tableUserActionObs$ = new EventEmitter();\n  }\n\n  ngOnInit(): void {\n  }\n\n  tableAddRow() {\n    this.tableUserActionObs$.emit([{action: \"addRow\"}]);\n  }\n\n  dataReset() {\n    this.tableUserActionObs$.emit([{action: \"resetData\"}]);\n  }\n\n  modelReset() {\n    this.tableUserActionObs$.emit([{action: \"resetModel\"}]);\n  }\n\n  uploadData() {\n    this.tableUserActionObs$.emit([{action: \"uploadData\"}]);\n  }\n\n  fileChanged($event: Event) {\n    this.fileUpload$.emit(($event.target as HTMLInputElement).files![0]);\n  }\n}\n\n@NgModule({\n  imports: [MatButtonModule, NgIf],\n  declarations: [SimpleDataButtonComponent],\n  exports: [\n    SimpleDataButtonComponent\n  ]\n})\nexport class SimpleDataButtonModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SimpleGraphButtonComponent.html":{"url":"components/SimpleGraphButtonComponent.html","title":"component - SimpleGraphButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SimpleGraphButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/shared/simple-graph-button/simple-graph-button.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-simple-graph-button\n            \n\n\n\n            \n                styleUrls\n                ./simple-graph-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./simple-graph-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                saveGraphButton\n                            \n                            \n                                    \n                                saveGraphSpinner\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                resetGraphInfo\n                            \n                            \n                                saveGraph\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                chartUserActionObs$\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popupService: HonorCodePopupService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/shared/simple-graph-button/simple-graph-button.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popupService\n                                                  \n                                                        \n                                                                        HonorCodePopupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        chartUserActionObs$\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tools/shared/simple-graph-button/simple-graph-button.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/simple-graph-button/simple-graph-button.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetGraphInfo\n                        \n                    \n                \n            \n            \n                \nresetGraphInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/simple-graph-button/simple-graph-button.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveGraph\n                        \n                    \n                \n            \n            \n                \nsaveGraph()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/simple-graph-button/simple-graph-button.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        saveGraphButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatButton\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('saveGraphButton')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/tools/shared/simple-graph-button/simple-graph-button.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        saveGraphSpinner\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatProgressSpinner\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('saveGraphSpinner')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/tools/shared/simple-graph-button/simple-graph-button.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, EventEmitter, NgModule, Output, ViewChild} from '@angular/core';\nimport {ChartAction} from \"../types/actions\";\nimport {MatLegacyButtonModule as MatButtonModule} from \"@angular/material/legacy-button\";\nimport {MatProgressSpinner, MatProgressSpinnerModule} from \"@angular/material/progress-spinner\";\nimport {MatButton} from \"@angular/material/button\";\nimport {HonorCodePopupService} from \"../honor-code-popup/honor-code-popup.service\";\n\n@Component({\n  selector: 'app-simple-graph-button',\n  templateUrl: './simple-graph-button.component.html',\n  styleUrls: ['./simple-graph-button.component.scss']\n})\nexport class SimpleGraphButtonComponent implements AfterViewInit {\n  @ViewChild(\"saveGraphButton\") saveGraphButton!: MatButton;\n  @ViewChild(\"saveGraphSpinner\") saveGraphSpinner!: MatProgressSpinner;\n  @Output()\n  private chartUserActionObs$: EventEmitter;\n\n  constructor(private popupService: HonorCodePopupService) {\n    this.chartUserActionObs$ = new EventEmitter();\n\n  }\n\n  ngAfterViewInit(): void {\n    this.popupService.registerSaveGraphButton(this.saveGraphButton);\n    this.popupService.registerSaveGraphSpinner(this.saveGraphSpinner);\n  }\n\n\n  saveGraph() {\n    this.chartUserActionObs$.emit([{action: \"saveGraph\"}]);\n  }\n\n  resetGraphInfo() {\n    this.chartUserActionObs$.emit([{action: \"resetChartInfo\"}])\n  }\n\n}\n\n@NgModule({\n  imports: [MatButtonModule, MatProgressSpinnerModule],\n  exports: [\n    SimpleGraphButtonComponent\n  ],\n  declarations: [SimpleGraphButtonComponent]\n})\nexport class SimpleGraphButtonModule {\n}\n\n    \n\n    \n        \n  Save Graph\n  \n\nReset Graph Labels\n\n    \n\n    \n                \n                    ./simple-graph-button.component.scss\n                \n                button {\n  margin-right: 10px;\n}\n\nmat-spinner {\n  z-index: 10;\n  display: block;\n  position: absolute;\n  top: 10px;\n  left: 35%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Save Graph  Reset Graph Labels'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SimpleGraphButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SimpleGraphButtonModule.html":{"url":"modules/SimpleGraphButtonModule.html","title":"module - SimpleGraphButtonModule","body":"\n                   \n\n\n\n\n    Modules\n    SimpleGraphButtonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SimpleGraphButtonModule\n\n\n\ncluster_SimpleGraphButtonModule_exports\n\n\n\ncluster_SimpleGraphButtonModule_declarations\n\n\n\n\nSimpleGraphButtonComponent\n\nSimpleGraphButtonComponent\n\n\n\nSimpleGraphButtonModule\n\nSimpleGraphButtonModule\n\nSimpleGraphButtonModule -->\n\nSimpleGraphButtonComponent->SimpleGraphButtonModule\n\n\n\n\n\nSimpleGraphButtonComponent \n\nSimpleGraphButtonComponent \n\nSimpleGraphButtonComponent  -->\n\nSimpleGraphButtonModule->SimpleGraphButtonComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tools/shared/simple-graph-button/simple-graph-button.component.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SimpleGraphButtonComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SimpleGraphButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {AfterViewInit, Component, EventEmitter, NgModule, Output, ViewChild} from '@angular/core';\nimport {ChartAction} from \"../types/actions\";\nimport {MatLegacyButtonModule as MatButtonModule} from \"@angular/material/legacy-button\";\nimport {MatProgressSpinner, MatProgressSpinnerModule} from \"@angular/material/progress-spinner\";\nimport {MatButton} from \"@angular/material/button\";\nimport {HonorCodePopupService} from \"../honor-code-popup/honor-code-popup.service\";\n\n@Component({\n  selector: 'app-simple-graph-button',\n  templateUrl: './simple-graph-button.component.html',\n  styleUrls: ['./simple-graph-button.component.scss']\n})\nexport class SimpleGraphButtonComponent implements AfterViewInit {\n  @ViewChild(\"saveGraphButton\") saveGraphButton!: MatButton;\n  @ViewChild(\"saveGraphSpinner\") saveGraphSpinner!: MatProgressSpinner;\n  @Output()\n  private chartUserActionObs$: EventEmitter;\n\n  constructor(private popupService: HonorCodePopupService) {\n    this.chartUserActionObs$ = new EventEmitter();\n\n  }\n\n  ngAfterViewInit(): void {\n    this.popupService.registerSaveGraphButton(this.saveGraphButton);\n    this.popupService.registerSaveGraphSpinner(this.saveGraphSpinner);\n  }\n\n\n  saveGraph() {\n    this.chartUserActionObs$.emit([{action: \"saveGraph\"}]);\n  }\n\n  resetGraphInfo() {\n    this.chartUserActionObs$.emit([{action: \"resetChartInfo\"}])\n  }\n\n}\n\n@NgModule({\n  imports: [MatButtonModule, MatProgressSpinnerModule],\n  exports: [\n    SimpleGraphButtonComponent\n  ],\n  declarations: [SimpleGraphButtonComponent]\n})\nexport class SimpleGraphButtonModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SliderUtil.html":{"url":"classes/SliderUtil.html","title":"class - SliderUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SliderUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/shared/interface/input-slider/input-slider.component.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getSliderMax\n                            \n                            \n                                    Static\n                                getSliderMin\n                            \n                            \n                                    Static\n                                getSliderStep\n                            \n                            \n                                    Static\n                                inputToSlider\n                            \n                            \n                                    Private\n                                    Static\n                                myRound\n                            \n                            \n                                    Static\n                                sliderToInput\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getSliderMax\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSliderMax(max: string | number, isLog: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    max\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isLog\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getSliderMin\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSliderMin(min: string | number, isLog: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    min\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isLog\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getSliderStep\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSliderStep(min: string | number, max: string | number, step: number | string, isLog: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    min\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    max\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    step\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isLog\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        inputToSlider\n                        \n                    \n                \n            \n            \n                \n                    \n                    inputToSlider(input: string | number, isLog: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isLog\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        myRound\n                        \n                    \n                \n            \n            \n                \n                    \n                    myRound(value: number, precision: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    precision\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        sliderToInput\n                        \n                    \n                \n            \n            \n                \n                    \n                    sliderToInput($event: Event, isLog: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                            Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isLog\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {AfterViewInit, Component, EventEmitter, Input, OnDestroy, Output, ViewChild} from '@angular/core';\nimport {FormControl, Validators} from \"@angular/forms\";\nimport {debounceTime, Subject, takeUntil, throttleTime} from \"rxjs\";\nimport {MatInput} from \"@angular/material/input\";\n\n@Component({\n  selector: 'my-input-slider',\n  templateUrl: './input-slider.component.html',\n  styleUrls: ['./input-slider.component.scss'],\n})\nexport class InputSliderComponent implements OnDestroy, AfterViewInit {\n\n  @Input() minValue!: number;\n  @Input() maxValue!: number;\n  @Input() defaultValue!: number;\n  @Input() step!: number;\n  @Input() stepValue: number = 0.01;\n  @Input() isLog: boolean = false;\n  @Input() numOverride: boolean = false;\n  @Input() name!: string;\n  @Input() label!: string;\n  @Input() value$!: Subject;\n  @Output() value: EventEmitter = new EventEmitter();\n\n\n  @ViewChild(\"input\") inputChild!: MatInput;\n  protected sliderSubject: Subject = new Subject();\n  protected readonly SliderUtil = SliderUtil;\n  protected formControl!: FormControl;\n  private slider$ = this.sliderSubject.asObservable();\n  private destroy$ = new Subject();\n\n  constructor() {\n    this.formControl = new FormControl(\n      this.defaultValue,\n      [Validators.min(this.minValue), Validators.max(this.maxValue)],\n    );\n  }\n\n  ngAfterViewInit(): void {\n    this.formControl = new FormControl(\n      this.defaultValue,\n      [Validators.min(this.minValue), Validators.max(this.maxValue), Validators.required],\n    );\n    this.formControl.statusChanges.pipe(\n      takeUntil(this.destroy$),\n      debounceTime(2000)\n    ).subscribe(\n      (status) => {\n        if (status === \"INVALID\") {\n          if (this.formControl.hasError('min') && !this.numOverride) {\n            this.formControl.setValue(this.minValue);\n          } else if (this.formControl.hasError('max') && !this.numOverride) {\n            this.formControl.setValue(this.maxValue);\n          }\n        }\n      }\n    )\n    this.formControl.valueChanges.pipe(\n      takeUntil(this.destroy$),\n      throttleTime(25, undefined, {leading: false, trailing: true}),\n    ).subscribe(\n      (value) => {\n        this.valueChange(value);\n      });\n    this.slider$.pipe(\n      takeUntil(this.destroy$),\n      throttleTime(25, undefined, {leading: false, trailing: true}),\n    ).subscribe(\n      (value) => {\n        this.formControl.setValue(value);\n        this.valueChange(this.formControl.value);\n      });\n    this.value$?.pipe(\n      takeUntil(this.destroy$),\n    ).subscribe(\n      (value) => {\n        this.formControl.setValue(value);\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  valueChange(value: any) {\n    this.value.emit({key: this.name, value: value});\n  }\n}\n\nexport interface InputSliderValue {\n  key: string;\n  value: any;\n}\n\nclass SliderUtil {\n  public static inputToSlider(input: string | number, isLog: boolean) {\n    const value = typeof input === 'number' ? input : parseFloat(input);\n    if (isLog) {\n      return Math.log(value);\n    } else {\n      return value;\n    }\n  }\n\n  public static sliderToInput($event: Event, isLog: boolean) {\n    const slider = parseFloat(($event.target as HTMLInputElement).value);\n    if (isLog) {\n      return String(SliderUtil.myRound(Math.exp(slider), 2));\n    } else {\n      return String(SliderUtil.myRound(slider, 2));\n    }\n  }\n\n  public static getSliderMin(min: string | number, isLog: boolean) {\n    const minNum = typeof min === 'number' ? min : parseFloat(min);\n    return SliderUtil.inputToSlider(minNum, isLog);\n  }\n\n  public static getSliderMax(max: string | number, isLog: boolean) {\n    const maxNum = typeof max === 'number' ? max : parseFloat(max);\n    return SliderUtil.inputToSlider(maxNum, isLog);\n  }\n\n  public static getSliderStep(min: string | number, max: string | number, step: number | string, isLog: boolean): number {\n    const minNum = typeof min === 'number' ? min : parseFloat(min);\n    const maxNum = typeof max === 'number' ? max : parseFloat(max);\n    const stepNum = typeof step === 'number' ? step : parseFloat(step);\n    if (!isLog) {\n      return stepNum;\n    } else {\n      return ((Math.log(maxNum) - Math.log(minNum)) / ((maxNum - minNum) / stepNum))\n    }\n  }\n\n  private static myRound(value: number, precision: number) {\n    const multiplier = Math.pow(10, precision);\n    return Math.round(value * multiplier) / multiplier;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpectrumChartFormComponent.html":{"url":"components/SpectrumChartFormComponent.html","title":"component - SpectrumChartFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpectrumChartFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/spectrum/spectrum-chart-form/spectrum-chart-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-spectrum-chart-form\n            \n\n\n\n            \n                styleUrls\n                ./spectrum-chart-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./spectrum-chart-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                formGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: SpectrumService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/spectrum/spectrum-chart-form/spectrum-chart-form.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        SpectrumService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum-chart-form/spectrum-chart-form.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum-chart-form/spectrum-chart-form.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum-chart-form/spectrum-chart-form.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnDestroy} from '@angular/core';\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {debounceTime, Subject, takeUntil} from \"rxjs\";\nimport {SpectrumService} from \"../spectrum.service\";\n\n@Component({\n  selector: 'app-spectrum-chart-form',\n  templateUrl: './spectrum-chart-form.component.html',\n  styleUrls: ['./spectrum-chart-form.component.scss']\n})\nexport class SpectrumChartFormComponent implements OnDestroy {\n  formGroup!: FormGroup;\n  private destroy$: Subject = new Subject();\n\n  constructor(private service: SpectrumService) {\n    this.service.chartInfo$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(info => {\n      this.formGroup = new FormGroup({\n        chartTitle: new FormControl(this.service.getChartTitle()),\n        dataLabel: new FormControl({value: this.service.getDataLabel(), disabled: true}),\n        xAxisLabel: new FormControl(this.service.getXAxisLabel()),\n        yAxisLabel: new FormControl(this.service.getYAxisLabel()),\n      })\n      this.formGroup.controls['chartTitle'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(title => {\n        this.service.setChartTitle(title);\n      });\n      this.formGroup.controls['xAxisLabel'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(label => {\n        this.service.setXAxisLabel(label);\n      });\n      this.formGroup.controls['yAxisLabel'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(label => {\n        this.service.setYAxisLabel(label);\n      });\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        Title\n        \n      \n    \n    \n      \n        Data\n        \n      \n    \n  \n  \n    \n      \n        X Axis\n        \n      \n    \n    \n      \n        Y Axis\n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./spectrum-chart-form.component.scss\n                \n                mat-form-field {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Title                                    Data                                        X Axis                                    Y Axis                    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpectrumChartFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SpectrumChartInfo.html":{"url":"classes/SpectrumChartInfo.html","title":"class - SpectrumChartInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SpectrumChartInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/spectrum/spectrum.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ChartInfo\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chartTitle\n                            \n                            \n                                    Private\n                                dataLabel\n                            \n                            \n                                    Private\n                                xAxisLabel\n                            \n                            \n                                    Private\n                                yAxisLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getChartTitle\n                            \n                            \n                                getDataLabel\n                            \n                            \n                                    Static\n                                getDefaultStorageObject\n                            \n                            \n                                getStorageObject\n                            \n                            \n                                getXAxisLabel\n                            \n                            \n                                getYAxisLabel\n                            \n                            \n                                setChartTitle\n                            \n                            \n                                setDataLabel\n                            \n                            \n                                setStorageObject\n                            \n                            \n                                setXAxisLabel\n                            \n                            \n                                setYAxisLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/spectrum/spectrum.service.util.ts:120\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum.service.util.ts:117\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum.service.util.ts:120\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        xAxisLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum.service.util.ts:118\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        yAxisLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum.service.util.ts:119\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getChartTitle\n                        \n                    \n                \n            \n            \n                \ngetChartTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.util.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataLabel\n                        \n                    \n                \n            \n            \n                \ngetDataLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.util.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getDefaultStorageObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.util.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SpectrumChartInfoStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStorageObject\n                        \n                    \n                \n            \n            \n                \ngetStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.util.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SpectrumChartInfoStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getXAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetXAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.util.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getYAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetYAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.util.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setChartTitle\n                        \n                    \n                \n            \n            \n                \nsetChartTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.util.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDataLabel\n                        \n                    \n                \n            \n            \n                \nsetDataLabel(data: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.util.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStorageObject\n                        \n                    \n                \n            \n            \n                \nsetStorageObject(storageObject: SpectrumChartInfoStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.util.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storageObject\n                                    \n                                                SpectrumChartInfoStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setXAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetXAxisLabel(xAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.util.ts:178\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    xAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setYAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetYAxisLabel(yAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.util.ts:182\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    yAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\n\nexport interface SpectrumDataDict {\n  wavelength: number | null;\n  channel1: number | null;\n  channel2: number | null;\n}\n\nexport class SpectrumData implements MyData {\n  private dataDict: SpectrumDataDict[];\n\n  constructor() {\n    this.dataDict = SpectrumData.getDefaultData();\n  }\n\n  /**\n   * Generate random data as the demo dataset\n   */\n  public static getDefaultData(): SpectrumDataDict[] {\n    const result: SpectrumDataDict[] = [];\n    for (let i = 0; i  0) {\n      for (let i = 0; i  {\n          return spectrumDataDict.wavelength !== null\n            && spectrumDataDict.channel1 !== null;\n        }\n      ).map((entry: SpectrumDataDict) => [entry.wavelength, entry.channel1]) as number[][],\n      this.dataDict.filter(\n        (spectrumDataDict: SpectrumDataDict) => {\n          return spectrumDataDict.wavelength !== null\n            && spectrumDataDict.channel2 !== null;\n        }\n      ).map((entry: SpectrumDataDict) => [entry.wavelength, entry.channel2]) as number[][],\n    ]\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: SpectrumDataDict[]): void {\n    this.dataDict = data;\n  }\n\n}\n\n\nexport enum SpectrumOptions {\n  ONE = \"Channel 1\",\n  TWO = \"Channel 2\",\n}\n\nexport interface SpectrumInterface {\n  getChannel(): SpectrumOptions;\n\n  setChannel(channel: SpectrumOptions): void;\n}\n\n\nexport class SpectrumInterfaceImpl implements SpectrumInterface {\n  private channel: SpectrumOptions;\n\n  constructor() {\n    this.channel = SpectrumOptions.ONE;\n  }\n\n  public static getDefaultChannel(): SpectrumOptions {\n    return SpectrumOptions.ONE;\n  }\n\n  getChannel(): SpectrumOptions {\n    return this.channel;\n  }\n\n  setChannel(channel: SpectrumOptions): void {\n    this.channel = channel;\n  }\n}\n\n\nexport interface SpectrumChartInfoStorageObject {\n  title: string;\n  xAxis: string;\n  yAxis: string;\n  data: string;\n}\n\nexport class SpectrumChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n  private dataLabel: string;\n\n  constructor() {\n    this.chartTitle = SpectrumChartInfo.getDefaultStorageObject().title;\n    this.xAxisLabel = SpectrumChartInfo.getDefaultStorageObject().xAxis;\n    this.yAxisLabel = SpectrumChartInfo.getDefaultStorageObject().yAxis;\n    this.dataLabel = SpectrumChartInfo.getDefaultStorageObject().data;\n  }\n\n  public static getDefaultStorageObject(): SpectrumChartInfoStorageObject {\n    return {\n      title: \"Title\",\n      xAxis: \"\",\n      yAxis: \"\",\n      data: \"Channel 1\",\n    }\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabel;\n  }\n\n  getStorageObject(): SpectrumChartInfoStorageObject {\n    return {\n      title: this.chartTitle,\n      xAxis: this.xAxisLabel,\n      yAxis: this.yAxisLabel,\n      data: this.dataLabel,\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    this.dataLabel = data;\n  }\n\n  setStorageObject(storageObject: SpectrumChartInfoStorageObject): void {\n    this.chartTitle = storageObject.title;\n    this.xAxisLabel = storageObject.xAxis;\n    this.yAxisLabel = storageObject.yAxis;\n    this.dataLabel = storageObject.data;\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.xAxisLabel = xAxis;\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.yAxisLabel = yAxis;\n  }\n\n}\n\n\nexport class SpectrumStorage implements MyStorage {\n  private static readonly dataKey: string = 'spectrumData';\n  private static readonly interfaceKey: string = 'spectrumInterface';\n  private static readonly chartInfoKey: string = 'spectrumChartInfo';\n\n  getChartInfo(): SpectrumChartInfoStorageObject {\n    if (localStorage.getItem(SpectrumStorage.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(SpectrumStorage.chartInfoKey)!) as SpectrumChartInfoStorageObject;\n    } else {\n      return SpectrumChartInfo.getDefaultStorageObject();\n    }\n  }\n\n  getData(): SpectrumDataDict[] {\n    if (localStorage.getItem(SpectrumStorage.dataKey)) {\n      return JSON.parse(localStorage.getItem(SpectrumStorage.dataKey)!) as SpectrumDataDict[];\n    } else {\n      return SpectrumData.getDefaultData();\n    }\n  }\n\n  getInterface(): SpectrumOptions {\n    if (localStorage.getItem(SpectrumStorage.interfaceKey)) {\n      return JSON.parse(localStorage.getItem(SpectrumStorage.interfaceKey)!) as SpectrumOptions;\n    } else {\n      return SpectrumInterfaceImpl.getDefaultChannel();\n    }\n  }\n\n  resetChartInfo(): void {\n    localStorage.setItem(SpectrumStorage.chartInfoKey, JSON.stringify(SpectrumChartInfo.getDefaultStorageObject()));\n  }\n\n  resetData(): void {\n    localStorage.setItem(SpectrumStorage.dataKey, JSON.stringify(SpectrumData.getDefaultData()));\n  }\n\n  resetInterface(): void {\n    localStorage.setItem(SpectrumStorage.interfaceKey, JSON.stringify(SpectrumInterfaceImpl.getDefaultChannel()));\n  }\n\n  saveChartInfo(chartInfo: SpectrumChartInfoStorageObject): void {\n    localStorage.setItem(SpectrumStorage.chartInfoKey, JSON.stringify(chartInfo));\n  }\n\n  saveData(data: SpectrumDataDict[]): void {\n    localStorage.setItem(SpectrumStorage.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: SpectrumOptions): void {\n    localStorage.setItem(SpectrumStorage.interfaceKey, JSON.stringify(interfaceInfo));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpectrumChartInfoStorageObject.html":{"url":"interfaces/SpectrumChartInfoStorageObject.html","title":"interface - SpectrumChartInfoStorageObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpectrumChartInfoStorageObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/spectrum/spectrum.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            xAxis\n                                        \n                                \n                                \n                                        \n                                            yAxis\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xAxis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        xAxis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yAxis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        yAxis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\n\nexport interface SpectrumDataDict {\n  wavelength: number | null;\n  channel1: number | null;\n  channel2: number | null;\n}\n\nexport class SpectrumData implements MyData {\n  private dataDict: SpectrumDataDict[];\n\n  constructor() {\n    this.dataDict = SpectrumData.getDefaultData();\n  }\n\n  /**\n   * Generate random data as the demo dataset\n   */\n  public static getDefaultData(): SpectrumDataDict[] {\n    const result: SpectrumDataDict[] = [];\n    for (let i = 0; i  0) {\n      for (let i = 0; i  {\n          return spectrumDataDict.wavelength !== null\n            && spectrumDataDict.channel1 !== null;\n        }\n      ).map((entry: SpectrumDataDict) => [entry.wavelength, entry.channel1]) as number[][],\n      this.dataDict.filter(\n        (spectrumDataDict: SpectrumDataDict) => {\n          return spectrumDataDict.wavelength !== null\n            && spectrumDataDict.channel2 !== null;\n        }\n      ).map((entry: SpectrumDataDict) => [entry.wavelength, entry.channel2]) as number[][],\n    ]\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: SpectrumDataDict[]): void {\n    this.dataDict = data;\n  }\n\n}\n\n\nexport enum SpectrumOptions {\n  ONE = \"Channel 1\",\n  TWO = \"Channel 2\",\n}\n\nexport interface SpectrumInterface {\n  getChannel(): SpectrumOptions;\n\n  setChannel(channel: SpectrumOptions): void;\n}\n\n\nexport class SpectrumInterfaceImpl implements SpectrumInterface {\n  private channel: SpectrumOptions;\n\n  constructor() {\n    this.channel = SpectrumOptions.ONE;\n  }\n\n  public static getDefaultChannel(): SpectrumOptions {\n    return SpectrumOptions.ONE;\n  }\n\n  getChannel(): SpectrumOptions {\n    return this.channel;\n  }\n\n  setChannel(channel: SpectrumOptions): void {\n    this.channel = channel;\n  }\n}\n\n\nexport interface SpectrumChartInfoStorageObject {\n  title: string;\n  xAxis: string;\n  yAxis: string;\n  data: string;\n}\n\nexport class SpectrumChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n  private dataLabel: string;\n\n  constructor() {\n    this.chartTitle = SpectrumChartInfo.getDefaultStorageObject().title;\n    this.xAxisLabel = SpectrumChartInfo.getDefaultStorageObject().xAxis;\n    this.yAxisLabel = SpectrumChartInfo.getDefaultStorageObject().yAxis;\n    this.dataLabel = SpectrumChartInfo.getDefaultStorageObject().data;\n  }\n\n  public static getDefaultStorageObject(): SpectrumChartInfoStorageObject {\n    return {\n      title: \"Title\",\n      xAxis: \"\",\n      yAxis: \"\",\n      data: \"Channel 1\",\n    }\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabel;\n  }\n\n  getStorageObject(): SpectrumChartInfoStorageObject {\n    return {\n      title: this.chartTitle,\n      xAxis: this.xAxisLabel,\n      yAxis: this.yAxisLabel,\n      data: this.dataLabel,\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    this.dataLabel = data;\n  }\n\n  setStorageObject(storageObject: SpectrumChartInfoStorageObject): void {\n    this.chartTitle = storageObject.title;\n    this.xAxisLabel = storageObject.xAxis;\n    this.yAxisLabel = storageObject.yAxis;\n    this.dataLabel = storageObject.data;\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.xAxisLabel = xAxis;\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.yAxisLabel = yAxis;\n  }\n\n}\n\n\nexport class SpectrumStorage implements MyStorage {\n  private static readonly dataKey: string = 'spectrumData';\n  private static readonly interfaceKey: string = 'spectrumInterface';\n  private static readonly chartInfoKey: string = 'spectrumChartInfo';\n\n  getChartInfo(): SpectrumChartInfoStorageObject {\n    if (localStorage.getItem(SpectrumStorage.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(SpectrumStorage.chartInfoKey)!) as SpectrumChartInfoStorageObject;\n    } else {\n      return SpectrumChartInfo.getDefaultStorageObject();\n    }\n  }\n\n  getData(): SpectrumDataDict[] {\n    if (localStorage.getItem(SpectrumStorage.dataKey)) {\n      return JSON.parse(localStorage.getItem(SpectrumStorage.dataKey)!) as SpectrumDataDict[];\n    } else {\n      return SpectrumData.getDefaultData();\n    }\n  }\n\n  getInterface(): SpectrumOptions {\n    if (localStorage.getItem(SpectrumStorage.interfaceKey)) {\n      return JSON.parse(localStorage.getItem(SpectrumStorage.interfaceKey)!) as SpectrumOptions;\n    } else {\n      return SpectrumInterfaceImpl.getDefaultChannel();\n    }\n  }\n\n  resetChartInfo(): void {\n    localStorage.setItem(SpectrumStorage.chartInfoKey, JSON.stringify(SpectrumChartInfo.getDefaultStorageObject()));\n  }\n\n  resetData(): void {\n    localStorage.setItem(SpectrumStorage.dataKey, JSON.stringify(SpectrumData.getDefaultData()));\n  }\n\n  resetInterface(): void {\n    localStorage.setItem(SpectrumStorage.interfaceKey, JSON.stringify(SpectrumInterfaceImpl.getDefaultChannel()));\n  }\n\n  saveChartInfo(chartInfo: SpectrumChartInfoStorageObject): void {\n    localStorage.setItem(SpectrumStorage.chartInfoKey, JSON.stringify(chartInfo));\n  }\n\n  saveData(data: SpectrumDataDict[]): void {\n    localStorage.setItem(SpectrumStorage.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: SpectrumOptions): void {\n    localStorage.setItem(SpectrumStorage.interfaceKey, JSON.stringify(interfaceInfo));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpectrumComponent.html":{"url":"components/SpectrumComponent.html","title":"component - SpectrumComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpectrumComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/spectrum/spectrum/spectrum.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-spectrum\n            \n\n\n\n            \n                styleUrls\n                ./spectrum.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./spectrum.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Private\n                                fileParser\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                SPECTRUM_GBO_FIELDS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                actionHandler\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                uploadHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: SpectrumService, honorCodeService: HonorCodePopupService, chartService: HonorCodeChartService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/spectrum/spectrum/spectrum.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        SpectrumService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        honorCodeService\n                                                  \n                                                        \n                                                                        HonorCodePopupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chartService\n                                                  \n                                                        \n                                                                        HonorCodeChartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        actionHandler\n                        \n                    \n                \n            \n            \n                \nactionHandler(actions: ChartAction[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum/spectrum.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    actions\n                                    \n                                                ChartAction[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum/spectrum.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadHandler\n                        \n                    \n                \n            \n            \n                \nuploadHandler($event: File)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum/spectrum.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                            File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum/spectrum.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fileParser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MyFileParser\n\n                    \n                \n                \n                    \n                        Default value : new MyFileParser(FileType.GBO_SPECTRUM_TXT,\n    SpectrumComponent.SPECTRUM_GBO_FIELDS,\n    [{key: \"Actual_FREQ1\"}],)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum/spectrum.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        SPECTRUM_GBO_FIELDS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\"Freq1(MHz)\", \"XX1\", \"YY1\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum/spectrum.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnDestroy} from '@angular/core';\nimport {ChartAction} from \"../../shared/types/actions\";\nimport {HonorCodePopupService} from \"../../shared/honor-code-popup/honor-code-popup.service\";\nimport {SpectrumService} from \"../spectrum.service\";\nimport {HonorCodeChartService} from \"../../shared/honor-code-popup/honor-code-chart.service\";\nimport {FileType, MyFileParser} from \"../../shared/data/FileParser\";\nimport {Subject, takeUntil} from \"rxjs\";\nimport {SpectrumDataDict} from \"../spectrum.service.util\";\n\n@Component({\n  selector: 'app-spectrum',\n  templateUrl: './spectrum.component.html',\n  styleUrls: ['./spectrum.component.scss']\n})\nexport class SpectrumComponent implements OnDestroy {\n  private static readonly SPECTRUM_GBO_FIELDS: string[] = [\"Freq1(MHz)\", \"XX1\", \"YY1\"];\n  private fileParser: MyFileParser\n    = new MyFileParser(FileType.GBO_SPECTRUM_TXT,\n    SpectrumComponent.SPECTRUM_GBO_FIELDS,\n    [{key: \"Actual_FREQ1\"}],);\n  private destroy$: Subject = new Subject();\n\n  constructor(\n    private service: SpectrumService,\n    private honorCodeService: HonorCodePopupService,\n    private chartService: HonorCodeChartService,) {\n    this.fileParser.error$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      (error: any) => {\n        alert(\"error \" + error);\n      }\n    );\n    this.fileParser.data$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      (data: any[]) => {\n        const dataDictArray: SpectrumDataDict[] = [];\n        data.map((rawData: any) => {\n          const freq = parseFloat(rawData[SpectrumComponent.SPECTRUM_GBO_FIELDS[0]]);\n          const channel1 = parseFloat(rawData[SpectrumComponent.SPECTRUM_GBO_FIELDS[1]]);\n          const channel2 = parseFloat(rawData[SpectrumComponent.SPECTRUM_GBO_FIELDS[2]]);\n          if (!isNaN(freq) && !isNaN(channel1)) {\n            const wl = 299792458 / (freq * 1e4);\n            if (wl >= 21.085 && wl  {\n      if (action.action === \"addRow\") {\n        this.service.addRow(-1, 1);\n      } else if (action.action === \"saveGraph\") {\n        this.honorCodeService.honored().subscribe((name: string) => {\n          this.chartService.saveImageHighChartOffline(this.service.getHighChart(), \"spectrum\", name);\n        })\n      } else if (action.action === \"resetData\") {\n        this.service.resetData();\n      } else if (action.action === \"resetChartInfo\") {\n        this.service.resetChartInfo();\n      }\n    })\n  }\n\n  uploadHandler($event: File) {\n    this.fileParser.readFile($event, true);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n      \n      \n    \n  \n  \n    \n      \n    \n    \n      \n    \n    \n      \n        \n      \n      Click and drag to zoom. Hold down the shift key to drag and pan.\n    \n  \n\n\n    \n\n    \n                \n                    ./spectrum.component.scss\n                \n                .container-row {\n  height: 80%;\n  padding: 20px 100px 20px 100px;\n  width: 100%;\n}\n\n.col-4, .col-8 {\n  display: flex;\n  flex-flow: column;\n}\n\n.data-form-row, data-button-row, chart-form-row, chart-button-row {\n  height: fit-content;\n  flex: 0 1 auto;\n}\n\n.data-table-row, .chart-row {\n  flex: 1 1 auto;\n}\n\n.data-table-row {\n  padding-bottom: 15px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                Click and drag to zoom. Hold down the shift key to drag and pan.      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpectrumComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SpectrumData.html":{"url":"classes/SpectrumData.html","title":"class - SpectrumData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SpectrumData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/spectrum/spectrum.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyData\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dataDict\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRow\n                            \n                            \n                                getData\n                            \n                            \n                                getDataArray\n                            \n                            \n                                    Static\n                                getDefaultData\n                            \n                            \n                                removeRow\n                            \n                            \n                                setData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/spectrum/spectrum.service.util.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataDict\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SpectrumDataDict[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum.service.util.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRow\n                        \n                    \n                \n            \n            \n                \naddRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.util.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.util.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SpectrumDataDict[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataArray\n                        \n                    \n                \n            \n            \n                \ngetDataArray()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.util.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     [][]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getDefaultData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.util.ts:21\n                \n            \n\n\n            \n                \n                    Generate random data as the demo dataset\n\n\n                    \n                        Returns :         SpectrumDataDict[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRow\n                        \n                    \n                \n            \n            \n                \nremoveRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.util.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setData\n                        \n                    \n                \n            \n            \n                \nsetData(data: SpectrumDataDict[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.util.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                SpectrumDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\n\nexport interface SpectrumDataDict {\n  wavelength: number | null;\n  channel1: number | null;\n  channel2: number | null;\n}\n\nexport class SpectrumData implements MyData {\n  private dataDict: SpectrumDataDict[];\n\n  constructor() {\n    this.dataDict = SpectrumData.getDefaultData();\n  }\n\n  /**\n   * Generate random data as the demo dataset\n   */\n  public static getDefaultData(): SpectrumDataDict[] {\n    const result: SpectrumDataDict[] = [];\n    for (let i = 0; i  0) {\n      for (let i = 0; i  {\n          return spectrumDataDict.wavelength !== null\n            && spectrumDataDict.channel1 !== null;\n        }\n      ).map((entry: SpectrumDataDict) => [entry.wavelength, entry.channel1]) as number[][],\n      this.dataDict.filter(\n        (spectrumDataDict: SpectrumDataDict) => {\n          return spectrumDataDict.wavelength !== null\n            && spectrumDataDict.channel2 !== null;\n        }\n      ).map((entry: SpectrumDataDict) => [entry.wavelength, entry.channel2]) as number[][],\n    ]\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: SpectrumDataDict[]): void {\n    this.dataDict = data;\n  }\n\n}\n\n\nexport enum SpectrumOptions {\n  ONE = \"Channel 1\",\n  TWO = \"Channel 2\",\n}\n\nexport interface SpectrumInterface {\n  getChannel(): SpectrumOptions;\n\n  setChannel(channel: SpectrumOptions): void;\n}\n\n\nexport class SpectrumInterfaceImpl implements SpectrumInterface {\n  private channel: SpectrumOptions;\n\n  constructor() {\n    this.channel = SpectrumOptions.ONE;\n  }\n\n  public static getDefaultChannel(): SpectrumOptions {\n    return SpectrumOptions.ONE;\n  }\n\n  getChannel(): SpectrumOptions {\n    return this.channel;\n  }\n\n  setChannel(channel: SpectrumOptions): void {\n    this.channel = channel;\n  }\n}\n\n\nexport interface SpectrumChartInfoStorageObject {\n  title: string;\n  xAxis: string;\n  yAxis: string;\n  data: string;\n}\n\nexport class SpectrumChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n  private dataLabel: string;\n\n  constructor() {\n    this.chartTitle = SpectrumChartInfo.getDefaultStorageObject().title;\n    this.xAxisLabel = SpectrumChartInfo.getDefaultStorageObject().xAxis;\n    this.yAxisLabel = SpectrumChartInfo.getDefaultStorageObject().yAxis;\n    this.dataLabel = SpectrumChartInfo.getDefaultStorageObject().data;\n  }\n\n  public static getDefaultStorageObject(): SpectrumChartInfoStorageObject {\n    return {\n      title: \"Title\",\n      xAxis: \"\",\n      yAxis: \"\",\n      data: \"Channel 1\",\n    }\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabel;\n  }\n\n  getStorageObject(): SpectrumChartInfoStorageObject {\n    return {\n      title: this.chartTitle,\n      xAxis: this.xAxisLabel,\n      yAxis: this.yAxisLabel,\n      data: this.dataLabel,\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    this.dataLabel = data;\n  }\n\n  setStorageObject(storageObject: SpectrumChartInfoStorageObject): void {\n    this.chartTitle = storageObject.title;\n    this.xAxisLabel = storageObject.xAxis;\n    this.yAxisLabel = storageObject.yAxis;\n    this.dataLabel = storageObject.data;\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.xAxisLabel = xAxis;\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.yAxisLabel = yAxis;\n  }\n\n}\n\n\nexport class SpectrumStorage implements MyStorage {\n  private static readonly dataKey: string = 'spectrumData';\n  private static readonly interfaceKey: string = 'spectrumInterface';\n  private static readonly chartInfoKey: string = 'spectrumChartInfo';\n\n  getChartInfo(): SpectrumChartInfoStorageObject {\n    if (localStorage.getItem(SpectrumStorage.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(SpectrumStorage.chartInfoKey)!) as SpectrumChartInfoStorageObject;\n    } else {\n      return SpectrumChartInfo.getDefaultStorageObject();\n    }\n  }\n\n  getData(): SpectrumDataDict[] {\n    if (localStorage.getItem(SpectrumStorage.dataKey)) {\n      return JSON.parse(localStorage.getItem(SpectrumStorage.dataKey)!) as SpectrumDataDict[];\n    } else {\n      return SpectrumData.getDefaultData();\n    }\n  }\n\n  getInterface(): SpectrumOptions {\n    if (localStorage.getItem(SpectrumStorage.interfaceKey)) {\n      return JSON.parse(localStorage.getItem(SpectrumStorage.interfaceKey)!) as SpectrumOptions;\n    } else {\n      return SpectrumInterfaceImpl.getDefaultChannel();\n    }\n  }\n\n  resetChartInfo(): void {\n    localStorage.setItem(SpectrumStorage.chartInfoKey, JSON.stringify(SpectrumChartInfo.getDefaultStorageObject()));\n  }\n\n  resetData(): void {\n    localStorage.setItem(SpectrumStorage.dataKey, JSON.stringify(SpectrumData.getDefaultData()));\n  }\n\n  resetInterface(): void {\n    localStorage.setItem(SpectrumStorage.interfaceKey, JSON.stringify(SpectrumInterfaceImpl.getDefaultChannel()));\n  }\n\n  saveChartInfo(chartInfo: SpectrumChartInfoStorageObject): void {\n    localStorage.setItem(SpectrumStorage.chartInfoKey, JSON.stringify(chartInfo));\n  }\n\n  saveData(data: SpectrumDataDict[]): void {\n    localStorage.setItem(SpectrumStorage.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: SpectrumOptions): void {\n    localStorage.setItem(SpectrumStorage.interfaceKey, JSON.stringify(interfaceInfo));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpectrumDataDict.html":{"url":"interfaces/SpectrumDataDict.html","title":"interface - SpectrumDataDict","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpectrumDataDict\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/spectrum/spectrum.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            channel1\n                                        \n                                \n                                \n                                        \n                                            channel2\n                                        \n                                \n                                \n                                        \n                                            wavelength\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        channel1\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        channel1:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        channel2\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        channel2:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wavelength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        wavelength:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\n\nexport interface SpectrumDataDict {\n  wavelength: number | null;\n  channel1: number | null;\n  channel2: number | null;\n}\n\nexport class SpectrumData implements MyData {\n  private dataDict: SpectrumDataDict[];\n\n  constructor() {\n    this.dataDict = SpectrumData.getDefaultData();\n  }\n\n  /**\n   * Generate random data as the demo dataset\n   */\n  public static getDefaultData(): SpectrumDataDict[] {\n    const result: SpectrumDataDict[] = [];\n    for (let i = 0; i  0) {\n      for (let i = 0; i  {\n          return spectrumDataDict.wavelength !== null\n            && spectrumDataDict.channel1 !== null;\n        }\n      ).map((entry: SpectrumDataDict) => [entry.wavelength, entry.channel1]) as number[][],\n      this.dataDict.filter(\n        (spectrumDataDict: SpectrumDataDict) => {\n          return spectrumDataDict.wavelength !== null\n            && spectrumDataDict.channel2 !== null;\n        }\n      ).map((entry: SpectrumDataDict) => [entry.wavelength, entry.channel2]) as number[][],\n    ]\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: SpectrumDataDict[]): void {\n    this.dataDict = data;\n  }\n\n}\n\n\nexport enum SpectrumOptions {\n  ONE = \"Channel 1\",\n  TWO = \"Channel 2\",\n}\n\nexport interface SpectrumInterface {\n  getChannel(): SpectrumOptions;\n\n  setChannel(channel: SpectrumOptions): void;\n}\n\n\nexport class SpectrumInterfaceImpl implements SpectrumInterface {\n  private channel: SpectrumOptions;\n\n  constructor() {\n    this.channel = SpectrumOptions.ONE;\n  }\n\n  public static getDefaultChannel(): SpectrumOptions {\n    return SpectrumOptions.ONE;\n  }\n\n  getChannel(): SpectrumOptions {\n    return this.channel;\n  }\n\n  setChannel(channel: SpectrumOptions): void {\n    this.channel = channel;\n  }\n}\n\n\nexport interface SpectrumChartInfoStorageObject {\n  title: string;\n  xAxis: string;\n  yAxis: string;\n  data: string;\n}\n\nexport class SpectrumChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n  private dataLabel: string;\n\n  constructor() {\n    this.chartTitle = SpectrumChartInfo.getDefaultStorageObject().title;\n    this.xAxisLabel = SpectrumChartInfo.getDefaultStorageObject().xAxis;\n    this.yAxisLabel = SpectrumChartInfo.getDefaultStorageObject().yAxis;\n    this.dataLabel = SpectrumChartInfo.getDefaultStorageObject().data;\n  }\n\n  public static getDefaultStorageObject(): SpectrumChartInfoStorageObject {\n    return {\n      title: \"Title\",\n      xAxis: \"\",\n      yAxis: \"\",\n      data: \"Channel 1\",\n    }\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabel;\n  }\n\n  getStorageObject(): SpectrumChartInfoStorageObject {\n    return {\n      title: this.chartTitle,\n      xAxis: this.xAxisLabel,\n      yAxis: this.yAxisLabel,\n      data: this.dataLabel,\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    this.dataLabel = data;\n  }\n\n  setStorageObject(storageObject: SpectrumChartInfoStorageObject): void {\n    this.chartTitle = storageObject.title;\n    this.xAxisLabel = storageObject.xAxis;\n    this.yAxisLabel = storageObject.yAxis;\n    this.dataLabel = storageObject.data;\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.xAxisLabel = xAxis;\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.yAxisLabel = yAxis;\n  }\n\n}\n\n\nexport class SpectrumStorage implements MyStorage {\n  private static readonly dataKey: string = 'spectrumData';\n  private static readonly interfaceKey: string = 'spectrumInterface';\n  private static readonly chartInfoKey: string = 'spectrumChartInfo';\n\n  getChartInfo(): SpectrumChartInfoStorageObject {\n    if (localStorage.getItem(SpectrumStorage.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(SpectrumStorage.chartInfoKey)!) as SpectrumChartInfoStorageObject;\n    } else {\n      return SpectrumChartInfo.getDefaultStorageObject();\n    }\n  }\n\n  getData(): SpectrumDataDict[] {\n    if (localStorage.getItem(SpectrumStorage.dataKey)) {\n      return JSON.parse(localStorage.getItem(SpectrumStorage.dataKey)!) as SpectrumDataDict[];\n    } else {\n      return SpectrumData.getDefaultData();\n    }\n  }\n\n  getInterface(): SpectrumOptions {\n    if (localStorage.getItem(SpectrumStorage.interfaceKey)) {\n      return JSON.parse(localStorage.getItem(SpectrumStorage.interfaceKey)!) as SpectrumOptions;\n    } else {\n      return SpectrumInterfaceImpl.getDefaultChannel();\n    }\n  }\n\n  resetChartInfo(): void {\n    localStorage.setItem(SpectrumStorage.chartInfoKey, JSON.stringify(SpectrumChartInfo.getDefaultStorageObject()));\n  }\n\n  resetData(): void {\n    localStorage.setItem(SpectrumStorage.dataKey, JSON.stringify(SpectrumData.getDefaultData()));\n  }\n\n  resetInterface(): void {\n    localStorage.setItem(SpectrumStorage.interfaceKey, JSON.stringify(SpectrumInterfaceImpl.getDefaultChannel()));\n  }\n\n  saveChartInfo(chartInfo: SpectrumChartInfoStorageObject): void {\n    localStorage.setItem(SpectrumStorage.chartInfoKey, JSON.stringify(chartInfo));\n  }\n\n  saveData(data: SpectrumDataDict[]): void {\n    localStorage.setItem(SpectrumStorage.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: SpectrumOptions): void {\n    localStorage.setItem(SpectrumStorage.interfaceKey, JSON.stringify(interfaceInfo));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpectrumFormComponent.html":{"url":"components/SpectrumFormComponent.html","title":"component - SpectrumFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpectrumFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/spectrum/spectrum-form/spectrum-form.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-spectrum-form\n            \n\n\n\n            \n                styleUrls\n                ./spectrum-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./spectrum-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                channelOptions\n                            \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSelect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: SpectrumService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/spectrum/spectrum-form/spectrum-form.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        SpectrumService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSelect\n                        \n                    \n                \n            \n            \n                \nonSelect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum-form/spectrum-form.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        channelOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    SpectrumOptions.ONE,\n    SpectrumOptions.TWO,\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum-form/spectrum-form.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                \n                    \n                        Default value : new FormControl({})\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum-form/spectrum-form.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {SpectrumOptions} from \"../spectrum.service.util\";\nimport {FormControl} from \"@angular/forms\";\nimport {SpectrumService} from \"../spectrum.service\";\n\n@Component({\n  selector: 'app-spectrum-form',\n  templateUrl: './spectrum-form.component.html',\n  styleUrls: ['./spectrum-form.component.scss']\n})\nexport class SpectrumFormComponent {\n  protected channelOptions = [\n    SpectrumOptions.ONE,\n    SpectrumOptions.TWO,\n  ]\n  form: FormControl = new FormControl({});\n\n  constructor(private service: SpectrumService) {\n    this.form.setValue(this.service.getChannel());\n  }\n\n  onSelect() {\n    this.service.setChannel(this.form.value);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Select a Channel\n      \n        \n          {{channel}}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./spectrum-form.component.scss\n                \n                mat-form-field {\n  width: 100%;\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Select a Channel                        {{channel}}                    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpectrumFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpectrumHighchartComponent.html":{"url":"components/SpectrumHighchartComponent.html","title":"component - SpectrumHighchartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpectrumHighchartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/spectrum/spectrum-highchart/spectrum-highchart.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-spectrum-highchart\n            \n\n\n\n            \n                styleUrls\n                ./spectrum-highchart.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./spectrum-highchart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chartConstructor\n                            \n                            \n                                chartObject\n                            \n                            \n                                chartOptions\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                Highcharts\n                            \n                            \n                                updateFlag\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                chartInitialized\n                            \n                            \n                                initChartSeries\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                setChartTitle\n                            \n                            \n                                    Private\n                                setChartXAxis\n                            \n                            \n                                    Private\n                                setChartYAxis\n                            \n                            \n                                setData\n                            \n                            \n                                    Private\n                                updateChart\n                            \n                            \n                                updateData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: SpectrumService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/spectrum/spectrum-highchart/spectrum-highchart.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        SpectrumService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        chartInitialized\n                        \n                    \n                \n            \n            \n                \nchartInitialized($event: Highcharts.Chart)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum-highchart/spectrum-highchart.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                            Highcharts.Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initChartSeries\n                        \n                    \n                \n            \n            \n                \ninitChartSeries()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum-highchart/spectrum-highchart.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum-highchart/spectrum-highchart.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum-highchart/spectrum-highchart.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setChartTitle\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChartTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum-highchart/spectrum-highchart.component.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setChartXAxis\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChartXAxis()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum-highchart/spectrum-highchart.component.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setChartYAxis\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChartYAxis()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum-highchart/spectrum-highchart.component.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setData\n                        \n                    \n                \n            \n            \n                \nsetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum-highchart/spectrum-highchart.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateChart\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum-highchart/spectrum-highchart.component.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateData\n                        \n                    \n                \n            \n            \n                \nupdateData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum-highchart/spectrum-highchart.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chartConstructor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : \"chart\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum-highchart/spectrum-highchart.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartObject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Highcharts.Chart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum-highchart/spectrum-highchart.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Highcharts.Options\n\n                    \n                \n                \n                    \n                        Default value : {\n    chart: {\n      animation: false,\n      styledMode: true,\n      panning: {\n        enabled: true,\n        type: 'x',\n      },\n      panKey: 'shift',\n      zooming: {\n        type: 'x',\n      },\n    },\n    legend: {\n      align: 'center',\n    },\n    tooltip: {\n      enabled: true,\n      shared: false,\n    },\n    exporting: {\n      buttons: {\n        contextButton: {\n          enabled: false,\n        }\n      }\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum-highchart/spectrum-highchart.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum-highchart/spectrum-highchart.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Highcharts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Highcharts\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum-highchart/spectrum-highchart.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFlag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum-highchart/spectrum-highchart.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnDestroy} from '@angular/core';\nimport {Subject, takeUntil} from \"rxjs\";\nimport * as Highcharts from \"highcharts\";\n\nimport {SpectrumService} from \"../spectrum.service\";\nimport {SpectrumOptions} from \"../spectrum.service.util\";\n\n@Component({\n  selector: 'app-spectrum-highchart',\n  templateUrl: './spectrum-highchart.component.html',\n  styleUrls: ['./spectrum-highchart.component.scss']\n})\nexport class SpectrumHighchartComponent implements AfterViewInit, OnDestroy {\n  Highcharts: typeof Highcharts = Highcharts;\n  updateFlag: boolean = true;\n  chartConstructor: any = \"chart\";\n  chartObject!: Highcharts.Chart;\n  chartOptions: Highcharts.Options = {\n    chart: {\n      animation: false,\n      styledMode: true,\n      panning: {\n        enabled: true,\n        type: 'x',\n      },\n      panKey: 'shift',\n      zooming: {\n        type: 'x',\n      },\n    },\n    legend: {\n      align: 'center',\n    },\n    tooltip: {\n      enabled: true,\n      shared: false,\n    },\n    exporting: {\n      buttons: {\n        contextButton: {\n          enabled: false,\n        }\n      }\n    }\n  };\n  private destroy$: Subject = new Subject();\n\n  constructor(private service: SpectrumService) {\n    this.setChartTitle();\n    this.setChartXAxis();\n    this.setChartYAxis();\n  }\n\n  chartInitialized($event: Highcharts.Chart) {\n    this.chartObject = $event;\n    this.service.setHighChart(this.chartObject);\n\n  }\n\n  ngAfterViewInit(): void {\n    this.initChartSeries();\n    this.service.data$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(() => {\n      this.updateData();\n      this.updateChart();\n    });\n    this.service.chartInfo$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(() => {\n      this.setChartTitle();\n      this.setChartXAxis();\n      this.setChartYAxis();\n      this.updateChart();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n  }\n\n  initChartSeries() {\n    this.setData();\n  }\n\n  setData() {\n    this.chartObject.addSeries({\n      name: SpectrumOptions.ONE,\n      data: this.service.getDataArray()[0],\n      type: 'line',\n      visible: SpectrumOptions.ONE === this.service.getChannel(),\n      showInLegend: SpectrumOptions.ONE === this.service.getChannel(),\n      marker: {\n        enabled: true,\n        symbol: 'circle',\n        radius: 3,\n      },\n    });\n    this.chartObject.addSeries({\n      name: SpectrumOptions.TWO,\n      data: this.service.getDataArray()[1],\n      type: 'line',\n      visible: SpectrumOptions.TWO === this.service.getChannel(),\n      showInLegend: SpectrumOptions.TWO === this.service.getChannel(),\n      marker: {\n        enabled: true,\n        symbol: 'circle',\n        radius: 3,\n      },\n    });\n  }\n\n  updateData() {\n    this.chartObject.series[0].update({\n      name: SpectrumOptions.ONE,\n      data: this.service.getDataArray()[0],\n      type: 'line',\n      visible: SpectrumOptions.ONE === this.service.getChannel(),\n      showInLegend: SpectrumOptions.ONE === this.service.getChannel(),\n    });\n    this.chartObject.series[1].update({\n      name: SpectrumOptions.TWO,\n      data: this.service.getDataArray()[1],\n      type: 'line',\n      visible: SpectrumOptions.TWO === this.service.getChannel(),\n      showInLegend: SpectrumOptions.TWO === this.service.getChannel(),\n    });\n  }\n\n  private updateChart(): void {\n    this.updateFlag = true;\n  }\n\n  private setChartTitle(): void {\n    this.chartOptions.title = {text: this.service.getChartTitle()};\n  }\n\n  private setChartXAxis(): void {\n    this.chartOptions.xAxis = {\n      title: {text: this.service.getXAxisLabel()}\n    };\n  }\n\n  private setChartYAxis(): void {\n    this.chartOptions.yAxis = {\n      title: {text: this.service.getYAxisLabel()}\n    };\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n\n\n    \n\n    \n                \n                    ./spectrum-highchart.component.scss\n                \n                .chart-container {\n  width: 100%;\n  height: 100%;\n  padding: 10px;\n}\n\n:host ::ng-deep .highcharts-color-0 {\n  fill: var(--highcharts-background-color);\n}\n\n:host ::ng-deep .highcharts-color-1 {\n  fill: var(--highcharts-background-color);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpectrumHighchartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpectrumInterface.html":{"url":"interfaces/SpectrumInterface.html","title":"interface - SpectrumInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpectrumInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/spectrum/spectrum.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getChannel\n                                    \n                                \n                                \n                                    \n                                        setChannel\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getChannel\n                        \n                    \n                \n            \n            \n                \ngetChannel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.util.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SpectrumOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setChannel\n                        \n                    \n                \n            \n            \n                \nsetChannel(channel: SpectrumOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.util.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    channel\n                                    \n                                                SpectrumOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\n\nexport interface SpectrumDataDict {\n  wavelength: number | null;\n  channel1: number | null;\n  channel2: number | null;\n}\n\nexport class SpectrumData implements MyData {\n  private dataDict: SpectrumDataDict[];\n\n  constructor() {\n    this.dataDict = SpectrumData.getDefaultData();\n  }\n\n  /**\n   * Generate random data as the demo dataset\n   */\n  public static getDefaultData(): SpectrumDataDict[] {\n    const result: SpectrumDataDict[] = [];\n    for (let i = 0; i  0) {\n      for (let i = 0; i  {\n          return spectrumDataDict.wavelength !== null\n            && spectrumDataDict.channel1 !== null;\n        }\n      ).map((entry: SpectrumDataDict) => [entry.wavelength, entry.channel1]) as number[][],\n      this.dataDict.filter(\n        (spectrumDataDict: SpectrumDataDict) => {\n          return spectrumDataDict.wavelength !== null\n            && spectrumDataDict.channel2 !== null;\n        }\n      ).map((entry: SpectrumDataDict) => [entry.wavelength, entry.channel2]) as number[][],\n    ]\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: SpectrumDataDict[]): void {\n    this.dataDict = data;\n  }\n\n}\n\n\nexport enum SpectrumOptions {\n  ONE = \"Channel 1\",\n  TWO = \"Channel 2\",\n}\n\nexport interface SpectrumInterface {\n  getChannel(): SpectrumOptions;\n\n  setChannel(channel: SpectrumOptions): void;\n}\n\n\nexport class SpectrumInterfaceImpl implements SpectrumInterface {\n  private channel: SpectrumOptions;\n\n  constructor() {\n    this.channel = SpectrumOptions.ONE;\n  }\n\n  public static getDefaultChannel(): SpectrumOptions {\n    return SpectrumOptions.ONE;\n  }\n\n  getChannel(): SpectrumOptions {\n    return this.channel;\n  }\n\n  setChannel(channel: SpectrumOptions): void {\n    this.channel = channel;\n  }\n}\n\n\nexport interface SpectrumChartInfoStorageObject {\n  title: string;\n  xAxis: string;\n  yAxis: string;\n  data: string;\n}\n\nexport class SpectrumChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n  private dataLabel: string;\n\n  constructor() {\n    this.chartTitle = SpectrumChartInfo.getDefaultStorageObject().title;\n    this.xAxisLabel = SpectrumChartInfo.getDefaultStorageObject().xAxis;\n    this.yAxisLabel = SpectrumChartInfo.getDefaultStorageObject().yAxis;\n    this.dataLabel = SpectrumChartInfo.getDefaultStorageObject().data;\n  }\n\n  public static getDefaultStorageObject(): SpectrumChartInfoStorageObject {\n    return {\n      title: \"Title\",\n      xAxis: \"\",\n      yAxis: \"\",\n      data: \"Channel 1\",\n    }\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabel;\n  }\n\n  getStorageObject(): SpectrumChartInfoStorageObject {\n    return {\n      title: this.chartTitle,\n      xAxis: this.xAxisLabel,\n      yAxis: this.yAxisLabel,\n      data: this.dataLabel,\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    this.dataLabel = data;\n  }\n\n  setStorageObject(storageObject: SpectrumChartInfoStorageObject): void {\n    this.chartTitle = storageObject.title;\n    this.xAxisLabel = storageObject.xAxis;\n    this.yAxisLabel = storageObject.yAxis;\n    this.dataLabel = storageObject.data;\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.xAxisLabel = xAxis;\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.yAxisLabel = yAxis;\n  }\n\n}\n\n\nexport class SpectrumStorage implements MyStorage {\n  private static readonly dataKey: string = 'spectrumData';\n  private static readonly interfaceKey: string = 'spectrumInterface';\n  private static readonly chartInfoKey: string = 'spectrumChartInfo';\n\n  getChartInfo(): SpectrumChartInfoStorageObject {\n    if (localStorage.getItem(SpectrumStorage.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(SpectrumStorage.chartInfoKey)!) as SpectrumChartInfoStorageObject;\n    } else {\n      return SpectrumChartInfo.getDefaultStorageObject();\n    }\n  }\n\n  getData(): SpectrumDataDict[] {\n    if (localStorage.getItem(SpectrumStorage.dataKey)) {\n      return JSON.parse(localStorage.getItem(SpectrumStorage.dataKey)!) as SpectrumDataDict[];\n    } else {\n      return SpectrumData.getDefaultData();\n    }\n  }\n\n  getInterface(): SpectrumOptions {\n    if (localStorage.getItem(SpectrumStorage.interfaceKey)) {\n      return JSON.parse(localStorage.getItem(SpectrumStorage.interfaceKey)!) as SpectrumOptions;\n    } else {\n      return SpectrumInterfaceImpl.getDefaultChannel();\n    }\n  }\n\n  resetChartInfo(): void {\n    localStorage.setItem(SpectrumStorage.chartInfoKey, JSON.stringify(SpectrumChartInfo.getDefaultStorageObject()));\n  }\n\n  resetData(): void {\n    localStorage.setItem(SpectrumStorage.dataKey, JSON.stringify(SpectrumData.getDefaultData()));\n  }\n\n  resetInterface(): void {\n    localStorage.setItem(SpectrumStorage.interfaceKey, JSON.stringify(SpectrumInterfaceImpl.getDefaultChannel()));\n  }\n\n  saveChartInfo(chartInfo: SpectrumChartInfoStorageObject): void {\n    localStorage.setItem(SpectrumStorage.chartInfoKey, JSON.stringify(chartInfo));\n  }\n\n  saveData(data: SpectrumDataDict[]): void {\n    localStorage.setItem(SpectrumStorage.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: SpectrumOptions): void {\n    localStorage.setItem(SpectrumStorage.interfaceKey, JSON.stringify(interfaceInfo));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SpectrumInterfaceImpl.html":{"url":"classes/SpectrumInterfaceImpl.html","title":"class - SpectrumInterfaceImpl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SpectrumInterfaceImpl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/spectrum/spectrum.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            SpectrumInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                channel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getChannel\n                            \n                            \n                                    Static\n                                getDefaultChannel\n                            \n                            \n                                setChannel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/spectrum/spectrum.service.util.ts:89\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        channel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SpectrumOptions\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum.service.util.ts:89\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getChannel\n                        \n                    \n                \n            \n            \n                \ngetChannel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.util.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SpectrumOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getDefaultChannel\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultChannel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.util.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SpectrumOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setChannel\n                        \n                    \n                \n            \n            \n                \nsetChannel(channel: SpectrumOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.util.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    channel\n                                    \n                                                SpectrumOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\n\nexport interface SpectrumDataDict {\n  wavelength: number | null;\n  channel1: number | null;\n  channel2: number | null;\n}\n\nexport class SpectrumData implements MyData {\n  private dataDict: SpectrumDataDict[];\n\n  constructor() {\n    this.dataDict = SpectrumData.getDefaultData();\n  }\n\n  /**\n   * Generate random data as the demo dataset\n   */\n  public static getDefaultData(): SpectrumDataDict[] {\n    const result: SpectrumDataDict[] = [];\n    for (let i = 0; i  0) {\n      for (let i = 0; i  {\n          return spectrumDataDict.wavelength !== null\n            && spectrumDataDict.channel1 !== null;\n        }\n      ).map((entry: SpectrumDataDict) => [entry.wavelength, entry.channel1]) as number[][],\n      this.dataDict.filter(\n        (spectrumDataDict: SpectrumDataDict) => {\n          return spectrumDataDict.wavelength !== null\n            && spectrumDataDict.channel2 !== null;\n        }\n      ).map((entry: SpectrumDataDict) => [entry.wavelength, entry.channel2]) as number[][],\n    ]\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: SpectrumDataDict[]): void {\n    this.dataDict = data;\n  }\n\n}\n\n\nexport enum SpectrumOptions {\n  ONE = \"Channel 1\",\n  TWO = \"Channel 2\",\n}\n\nexport interface SpectrumInterface {\n  getChannel(): SpectrumOptions;\n\n  setChannel(channel: SpectrumOptions): void;\n}\n\n\nexport class SpectrumInterfaceImpl implements SpectrumInterface {\n  private channel: SpectrumOptions;\n\n  constructor() {\n    this.channel = SpectrumOptions.ONE;\n  }\n\n  public static getDefaultChannel(): SpectrumOptions {\n    return SpectrumOptions.ONE;\n  }\n\n  getChannel(): SpectrumOptions {\n    return this.channel;\n  }\n\n  setChannel(channel: SpectrumOptions): void {\n    this.channel = channel;\n  }\n}\n\n\nexport interface SpectrumChartInfoStorageObject {\n  title: string;\n  xAxis: string;\n  yAxis: string;\n  data: string;\n}\n\nexport class SpectrumChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n  private dataLabel: string;\n\n  constructor() {\n    this.chartTitle = SpectrumChartInfo.getDefaultStorageObject().title;\n    this.xAxisLabel = SpectrumChartInfo.getDefaultStorageObject().xAxis;\n    this.yAxisLabel = SpectrumChartInfo.getDefaultStorageObject().yAxis;\n    this.dataLabel = SpectrumChartInfo.getDefaultStorageObject().data;\n  }\n\n  public static getDefaultStorageObject(): SpectrumChartInfoStorageObject {\n    return {\n      title: \"Title\",\n      xAxis: \"\",\n      yAxis: \"\",\n      data: \"Channel 1\",\n    }\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabel;\n  }\n\n  getStorageObject(): SpectrumChartInfoStorageObject {\n    return {\n      title: this.chartTitle,\n      xAxis: this.xAxisLabel,\n      yAxis: this.yAxisLabel,\n      data: this.dataLabel,\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    this.dataLabel = data;\n  }\n\n  setStorageObject(storageObject: SpectrumChartInfoStorageObject): void {\n    this.chartTitle = storageObject.title;\n    this.xAxisLabel = storageObject.xAxis;\n    this.yAxisLabel = storageObject.yAxis;\n    this.dataLabel = storageObject.data;\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.xAxisLabel = xAxis;\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.yAxisLabel = yAxis;\n  }\n\n}\n\n\nexport class SpectrumStorage implements MyStorage {\n  private static readonly dataKey: string = 'spectrumData';\n  private static readonly interfaceKey: string = 'spectrumInterface';\n  private static readonly chartInfoKey: string = 'spectrumChartInfo';\n\n  getChartInfo(): SpectrumChartInfoStorageObject {\n    if (localStorage.getItem(SpectrumStorage.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(SpectrumStorage.chartInfoKey)!) as SpectrumChartInfoStorageObject;\n    } else {\n      return SpectrumChartInfo.getDefaultStorageObject();\n    }\n  }\n\n  getData(): SpectrumDataDict[] {\n    if (localStorage.getItem(SpectrumStorage.dataKey)) {\n      return JSON.parse(localStorage.getItem(SpectrumStorage.dataKey)!) as SpectrumDataDict[];\n    } else {\n      return SpectrumData.getDefaultData();\n    }\n  }\n\n  getInterface(): SpectrumOptions {\n    if (localStorage.getItem(SpectrumStorage.interfaceKey)) {\n      return JSON.parse(localStorage.getItem(SpectrumStorage.interfaceKey)!) as SpectrumOptions;\n    } else {\n      return SpectrumInterfaceImpl.getDefaultChannel();\n    }\n  }\n\n  resetChartInfo(): void {\n    localStorage.setItem(SpectrumStorage.chartInfoKey, JSON.stringify(SpectrumChartInfo.getDefaultStorageObject()));\n  }\n\n  resetData(): void {\n    localStorage.setItem(SpectrumStorage.dataKey, JSON.stringify(SpectrumData.getDefaultData()));\n  }\n\n  resetInterface(): void {\n    localStorage.setItem(SpectrumStorage.interfaceKey, JSON.stringify(SpectrumInterfaceImpl.getDefaultChannel()));\n  }\n\n  saveChartInfo(chartInfo: SpectrumChartInfoStorageObject): void {\n    localStorage.setItem(SpectrumStorage.chartInfoKey, JSON.stringify(chartInfo));\n  }\n\n  saveData(data: SpectrumDataDict[]): void {\n    localStorage.setItem(SpectrumStorage.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: SpectrumOptions): void {\n    localStorage.setItem(SpectrumStorage.interfaceKey, JSON.stringify(interfaceInfo));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SpectrumModule.html":{"url":"modules/SpectrumModule.html","title":"module - SpectrumModule","body":"\n                   \n\n\n\n\n    Modules\n    SpectrumModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SpectrumModule\n\n\n\ncluster_SpectrumModule_declarations\n\n\n\ncluster_SpectrumModule_imports\n\n\n\ncluster_SpectrumModule_providers\n\n\n\n\nSpectrumChartFormComponent\n\nSpectrumChartFormComponent\n\n\n\nSpectrumModule\n\nSpectrumModule\n\nSpectrumModule -->\n\nSpectrumChartFormComponent->SpectrumModule\n\n\n\n\n\nSpectrumComponent\n\nSpectrumComponent\n\nSpectrumModule -->\n\nSpectrumComponent->SpectrumModule\n\n\n\n\n\nSpectrumFormComponent\n\nSpectrumFormComponent\n\nSpectrumModule -->\n\nSpectrumFormComponent->SpectrumModule\n\n\n\n\n\nSpectrumHighchartComponent\n\nSpectrumHighchartComponent\n\nSpectrumModule -->\n\nSpectrumHighchartComponent->SpectrumModule\n\n\n\n\n\nSpectrumTableComponent\n\nSpectrumTableComponent\n\nSpectrumModule -->\n\nSpectrumTableComponent->SpectrumModule\n\n\n\n\n\nSimpleDataButtonModule\n\nSimpleDataButtonModule\n\nSpectrumModule -->\n\nSimpleDataButtonModule->SpectrumModule\n\n\n\n\n\nSimpleGraphButtonModule\n\nSimpleGraphButtonModule\n\nSpectrumModule -->\n\nSimpleGraphButtonModule->SpectrumModule\n\n\n\n\n\nSpectrumService\n\nSpectrumService\n\nSpectrumModule -->\n\nSpectrumService->SpectrumModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tools/spectrum/spectrum.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SpectrumChartFormComponent\n                        \n                        \n                            SpectrumComponent\n                        \n                        \n                            SpectrumFormComponent\n                        \n                        \n                            SpectrumHighchartComponent\n                        \n                        \n                            SpectrumTableComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            SpectrumService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SimpleDataButtonModule\n                        \n                        \n                            SimpleGraphButtonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SpectrumComponent} from './spectrum/spectrum.component';\nimport {SimpleDataButtonModule} from \"../shared/simple-data-button/simple-data-button.component\";\nimport {SimpleGraphButtonModule} from \"../shared/simple-graph-button/simple-graph-button.component\";\nimport {SpectrumTableComponent} from './spectrum-table/spectrum-table.component';\nimport {HotTableModule} from \"@handsontable/angular\";\nimport {SpectrumService} from \"./spectrum.service\";\nimport {SpectrumFormComponent} from './spectrum-form/spectrum-form.component';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {MatLegacyFormFieldModule} from \"@angular/material/legacy-form-field\";\nimport {MatLegacyOptionModule} from \"@angular/material/legacy-core\";\nimport {MatLegacySelectModule} from \"@angular/material/legacy-select\";\nimport {MatLegacySlideToggleModule} from \"@angular/material/legacy-slide-toggle\";\nimport {SpectrumChartFormComponent} from './spectrum-chart-form/spectrum-chart-form.component';\nimport {MatLegacyInputModule} from \"@angular/material/legacy-input\";\nimport {SpectrumHighchartComponent} from './spectrum-highchart/spectrum-highchart.component';\nimport {HighchartsChartModule} from \"highcharts-angular\";\n\n\n@NgModule({\n  declarations: [\n    SpectrumComponent,\n    SpectrumTableComponent,\n    SpectrumFormComponent,\n    SpectrumChartFormComponent,\n    SpectrumHighchartComponent\n  ],\n  imports: [\n    CommonModule,\n    SimpleDataButtonModule,\n    SimpleGraphButtonModule,\n    HotTableModule,\n    FormsModule,\n    MatLegacyFormFieldModule,\n    MatLegacyOptionModule,\n    MatLegacySelectModule,\n    MatLegacySlideToggleModule,\n    ReactiveFormsModule,\n    MatLegacyInputModule,\n    HighchartsChartModule\n  ],\n  providers: [SpectrumService]\n})\nexport class SpectrumModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SpectrumService.html":{"url":"injectables/SpectrumService.html","title":"injectable - SpectrumService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SpectrumService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/spectrum/spectrum.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                chartInfo$\n                            \n                            \n                                    Private\n                                chartInfoSubject\n                            \n                            \n                                    Public\n                                data$\n                            \n                            \n                                    Private\n                                dataSubject\n                            \n                            \n                                    Private\n                                highChart\n                            \n                            \n                                    Public\n                                interface$\n                            \n                            \n                                    Private\n                                interfaceSubject\n                            \n                            \n                                    Private\n                                spectrumChartInfo\n                            \n                            \n                                    Private\n                                spectrumData\n                            \n                            \n                                    Private\n                                spectrumInterface\n                            \n                            \n                                    Private\n                                spectrumStorage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRow\n                            \n                            \n                                getChannel\n                            \n                            \n                                getChartTitle\n                            \n                            \n                                getData\n                            \n                            \n                                getDataArray\n                            \n                            \n                                getDataLabel\n                            \n                            \n                                getHighChart\n                            \n                            \n                                getStorageObject\n                            \n                            \n                                getXAxisLabel\n                            \n                            \n                                getYAxisLabel\n                            \n                            \n                                removeRow\n                            \n                            \n                                resetChartInfo\n                            \n                            \n                                resetData\n                            \n                            \n                                setChannel\n                            \n                            \n                                setChartTitle\n                            \n                            \n                                setData\n                            \n                            \n                                setDataLabel\n                            \n                            \n                                setHighChart\n                            \n                            \n                                setStorageObject\n                            \n                            \n                                setXAxisLabel\n                            \n                            \n                                setYAxisLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/spectrum/spectrum.service.ts:32\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRow\n                        \n                    \n                \n            \n            \n                \naddRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.ts:119\n                \n            \n\n\n            \n                \n                    MyData Methods\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChannel\n                        \n                    \n                \n            \n            \n                \ngetChannel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.ts:104\n                \n            \n\n\n            \n                \n                    SpectrumInterface Methods\n\n\n                    \n                        Returns :         SpectrumOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChartTitle\n                        \n                    \n                \n            \n            \n                \ngetChartTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.ts:43\n                \n            \n\n\n            \n                \n                    ChartInfo Methods\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SpectrumDataDict[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataArray\n                        \n                    \n                \n            \n            \n                \ngetDataArray()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     [][]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataLabel\n                        \n                    \n                \n            \n            \n                \ngetDataLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHighChart\n                        \n                    \n                \n            \n            \n                \ngetHighChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Highcharts.Chart\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStorageObject\n                        \n                    \n                \n            \n            \n                \ngetStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getXAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetXAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getYAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetYAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRow\n                        \n                    \n                \n            \n            \n                \nremoveRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetChartInfo\n                        \n                    \n                \n            \n            \n                \nresetChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetData\n                        \n                    \n                \n            \n            \n                \nresetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setChannel\n                        \n                    \n                \n            \n            \n                \nsetChannel(channel: SpectrumOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    channel\n                                    \n                                                SpectrumOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setChartTitle\n                        \n                    \n                \n            \n            \n                \nsetChartTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setData\n                        \n                    \n                \n            \n            \n                \nsetData(data: SpectrumDataDict[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                SpectrumDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDataLabel\n                        \n                    \n                \n            \n            \n                \nsetDataLabel(data: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setHighChart\n                        \n                    \n                \n            \n            \n                \nsetHighChart(chart: Highcharts.Chart)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chart\n                                    \n                                            Highcharts.Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStorageObject\n                        \n                    \n                \n            \n            \n                \nsetStorageObject(storageObject: SpectrumChartInfoStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storageObject\n                                    \n                                                SpectrumChartInfoStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setXAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetXAxisLabel(xAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    xAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setYAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetYAxisLabel(yAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    yAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chartInfo$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.chartInfoSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartInfoSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(this.spectrumChartInfo)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.dataSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(this.spectrumData)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        highChart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Highcharts.Chart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        interface$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.interfaceSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        interfaceSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(this.spectrumInterface.getChannel())\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        spectrumChartInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SpectrumChartInfo\n\n                    \n                \n                \n                    \n                        Default value : new SpectrumChartInfo()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        spectrumData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SpectrumData\n\n                    \n                \n                \n                    \n                        Default value : new SpectrumData()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        spectrumInterface\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SpectrumInterfaceImpl\n\n                    \n                \n                \n                    \n                        Default value : new SpectrumInterfaceImpl()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        spectrumStorage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SpectrumStorage\n\n                    \n                \n                \n                    \n                        Default value : new SpectrumStorage()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum.service.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {\n  SpectrumChartInfo,\n  SpectrumChartInfoStorageObject,\n  SpectrumData,\n  SpectrumDataDict,\n  SpectrumInterface,\n  SpectrumInterfaceImpl,\n  SpectrumOptions,\n  SpectrumStorage\n} from \"./spectrum.service.util\";\nimport {BehaviorSubject} from \"rxjs\";\nimport {MyData} from \"../shared/data/data.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\nimport * as Highcharts from \"highcharts\";\n\n@Injectable()\nexport class SpectrumService implements MyData, SpectrumInterface, ChartInfo {\n  private spectrumData: SpectrumData = new SpectrumData();\n  private spectrumInterface: SpectrumInterfaceImpl = new SpectrumInterfaceImpl();\n  private spectrumChartInfo: SpectrumChartInfo = new SpectrumChartInfo();\n\n  private spectrumStorage: SpectrumStorage = new SpectrumStorage();\n\n  private dataSubject: BehaviorSubject = new BehaviorSubject(this.spectrumData);\n  public data$ = this.dataSubject.asObservable();\n  private interfaceSubject: BehaviorSubject = new BehaviorSubject(this.spectrumInterface.getChannel());\n  public interface$ = this.interfaceSubject.asObservable();\n  private chartInfoSubject: BehaviorSubject = new BehaviorSubject(this.spectrumChartInfo);\n  public chartInfo$ = this.chartInfoSubject.asObservable();\n\n  private highChart!: Highcharts.Chart;\n\n  constructor() {\n    this.spectrumData.setData(this.spectrumStorage.getData());\n    this.spectrumInterface.setChannel(this.spectrumStorage.getInterface());\n    this.spectrumChartInfo.setStorageObject(this.spectrumStorage.getChartInfo());\n  }\n\n\n  /** ChartInfo Methods **/\n\n  getChartTitle(): string {\n    return this.spectrumChartInfo.getChartTitle();\n  }\n\n  getDataLabel(): string {\n    return this.spectrumChartInfo.getDataLabel();\n  }\n\n  getStorageObject(): any {\n    return this.spectrumChartInfo.getStorageObject();\n  }\n\n  getXAxisLabel(): string {\n    return this.spectrumChartInfo.getXAxisLabel();\n  }\n\n  getYAxisLabel(): string {\n    return this.spectrumChartInfo.getYAxisLabel();\n  }\n\n  setChartTitle(title: string): void {\n    this.spectrumChartInfo.setChartTitle(title);\n    this.spectrumStorage.saveChartInfo(this.spectrumChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.spectrumChartInfo);\n  }\n\n  setDataLabel(data: string): void {\n    this.spectrumChartInfo.setDataLabel(data);\n    this.spectrumStorage.saveChartInfo(this.spectrumChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.spectrumChartInfo);\n    this.dataSubject.next(this.spectrumData);\n  }\n\n  setStorageObject(storageObject: SpectrumChartInfoStorageObject): void {\n    this.spectrumChartInfo.setStorageObject(storageObject);\n    this.spectrumStorage.saveChartInfo(this.spectrumChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.spectrumChartInfo);\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.spectrumChartInfo.setXAxisLabel(xAxis);\n    this.spectrumStorage.saveChartInfo(this.spectrumChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.spectrumChartInfo);\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.spectrumChartInfo.setYAxisLabel(yAxis);\n    this.spectrumStorage.saveChartInfo(this.spectrumChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.spectrumChartInfo);\n  }\n\n  resetChartInfo(): void {\n    this.spectrumChartInfo.setStorageObject(SpectrumChartInfo.getDefaultStorageObject());\n    this.spectrumChartInfo.setDataLabel(this.getChannel());\n    this.spectrumStorage.saveChartInfo(this.spectrumChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.spectrumChartInfo);\n  }\n\n\n  /** SpectrumInterface Methods **/\n\n  getChannel(): SpectrumOptions {\n    return this.spectrumInterface.getChannel();\n  }\n\n  setChannel(channel: SpectrumOptions): void {\n    this.spectrumInterface.setChannel(channel);\n    this.spectrumStorage.saveInterface(this.spectrumInterface.getChannel());\n    this.interfaceSubject.next(this.spectrumInterface.getChannel());\n    this.setDataLabel(this.spectrumInterface.getChannel());\n  }\n\n\n  /** MyData Methods**/\n\n\n  addRow(index: number, amount: number): void {\n    this.spectrumData.addRow(index, amount);\n    this.spectrumStorage.saveData(this.spectrumData.getData());\n    this.dataSubject.next(this.spectrumData);\n  }\n\n  getData(): SpectrumDataDict[] {\n    return this.spectrumData.getData();\n  }\n\n  getDataArray(): number[][][] {\n    return this.spectrumData.getDataArray();\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.spectrumData.removeRow(index, amount);\n    this.spectrumStorage.saveData(this.spectrumData.getData());\n    this.dataSubject.next(this.spectrumData);\n  }\n\n  setData(data: SpectrumDataDict[]): void {\n    this.spectrumData.setData(data);\n    this.spectrumStorage.saveData(this.spectrumData.getData());\n    this.dataSubject.next(this.spectrumData);\n  }\n\n  resetData(): void {\n    this.spectrumData.setData(SpectrumData.getDefaultData());\n    this.spectrumStorage.saveData(this.spectrumData.getData());\n    this.dataSubject.next(this.spectrumData);\n  }\n\n  setHighChart(chart: Highcharts.Chart): void {\n    this.highChart = chart;\n  }\n\n  getHighChart(): Highcharts.Chart {\n    return this.highChart;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SpectrumStorage.html":{"url":"classes/SpectrumStorage.html","title":"class - SpectrumStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SpectrumStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/spectrum/spectrum.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyStorage\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                chartInfoKey\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                dataKey\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                interfaceKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getChartInfo\n                            \n                            \n                                getData\n                            \n                            \n                                getInterface\n                            \n                            \n                                resetChartInfo\n                            \n                            \n                                resetData\n                            \n                            \n                                resetInterface\n                            \n                            \n                                saveChartInfo\n                            \n                            \n                                saveData\n                            \n                            \n                                saveInterface\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        chartInfoKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'spectrumChartInfo'\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum.service.util.ts:192\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        dataKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'spectrumData'\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum.service.util.ts:190\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        interfaceKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'spectrumInterface'\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum.service.util.ts:191\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getChartInfo\n                        \n                    \n                \n            \n            \n                \ngetChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.util.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SpectrumChartInfoStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.util.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SpectrumDataDict[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInterface\n                        \n                    \n                \n            \n            \n                \ngetInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.util.ts:210\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SpectrumOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetChartInfo\n                        \n                    \n                \n            \n            \n                \nresetChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.util.ts:218\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetData\n                        \n                    \n                \n            \n            \n                \nresetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.util.ts:222\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetInterface\n                        \n                    \n                \n            \n            \n                \nresetInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.util.ts:226\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveChartInfo\n                        \n                    \n                \n            \n            \n                \nsaveChartInfo(chartInfo: SpectrumChartInfoStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.util.ts:230\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartInfo\n                                    \n                                                SpectrumChartInfoStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveData\n                        \n                    \n                \n            \n            \n                \nsaveData(data: SpectrumDataDict[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.util.ts:234\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                SpectrumDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveInterface\n                        \n                    \n                \n            \n            \n                \nsaveInterface(interfaceInfo: SpectrumOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum.service.util.ts:238\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    interfaceInfo\n                                    \n                                                SpectrumOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\n\nexport interface SpectrumDataDict {\n  wavelength: number | null;\n  channel1: number | null;\n  channel2: number | null;\n}\n\nexport class SpectrumData implements MyData {\n  private dataDict: SpectrumDataDict[];\n\n  constructor() {\n    this.dataDict = SpectrumData.getDefaultData();\n  }\n\n  /**\n   * Generate random data as the demo dataset\n   */\n  public static getDefaultData(): SpectrumDataDict[] {\n    const result: SpectrumDataDict[] = [];\n    for (let i = 0; i  0) {\n      for (let i = 0; i  {\n          return spectrumDataDict.wavelength !== null\n            && spectrumDataDict.channel1 !== null;\n        }\n      ).map((entry: SpectrumDataDict) => [entry.wavelength, entry.channel1]) as number[][],\n      this.dataDict.filter(\n        (spectrumDataDict: SpectrumDataDict) => {\n          return spectrumDataDict.wavelength !== null\n            && spectrumDataDict.channel2 !== null;\n        }\n      ).map((entry: SpectrumDataDict) => [entry.wavelength, entry.channel2]) as number[][],\n    ]\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: SpectrumDataDict[]): void {\n    this.dataDict = data;\n  }\n\n}\n\n\nexport enum SpectrumOptions {\n  ONE = \"Channel 1\",\n  TWO = \"Channel 2\",\n}\n\nexport interface SpectrumInterface {\n  getChannel(): SpectrumOptions;\n\n  setChannel(channel: SpectrumOptions): void;\n}\n\n\nexport class SpectrumInterfaceImpl implements SpectrumInterface {\n  private channel: SpectrumOptions;\n\n  constructor() {\n    this.channel = SpectrumOptions.ONE;\n  }\n\n  public static getDefaultChannel(): SpectrumOptions {\n    return SpectrumOptions.ONE;\n  }\n\n  getChannel(): SpectrumOptions {\n    return this.channel;\n  }\n\n  setChannel(channel: SpectrumOptions): void {\n    this.channel = channel;\n  }\n}\n\n\nexport interface SpectrumChartInfoStorageObject {\n  title: string;\n  xAxis: string;\n  yAxis: string;\n  data: string;\n}\n\nexport class SpectrumChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n  private dataLabel: string;\n\n  constructor() {\n    this.chartTitle = SpectrumChartInfo.getDefaultStorageObject().title;\n    this.xAxisLabel = SpectrumChartInfo.getDefaultStorageObject().xAxis;\n    this.yAxisLabel = SpectrumChartInfo.getDefaultStorageObject().yAxis;\n    this.dataLabel = SpectrumChartInfo.getDefaultStorageObject().data;\n  }\n\n  public static getDefaultStorageObject(): SpectrumChartInfoStorageObject {\n    return {\n      title: \"Title\",\n      xAxis: \"\",\n      yAxis: \"\",\n      data: \"Channel 1\",\n    }\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabel;\n  }\n\n  getStorageObject(): SpectrumChartInfoStorageObject {\n    return {\n      title: this.chartTitle,\n      xAxis: this.xAxisLabel,\n      yAxis: this.yAxisLabel,\n      data: this.dataLabel,\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    this.dataLabel = data;\n  }\n\n  setStorageObject(storageObject: SpectrumChartInfoStorageObject): void {\n    this.chartTitle = storageObject.title;\n    this.xAxisLabel = storageObject.xAxis;\n    this.yAxisLabel = storageObject.yAxis;\n    this.dataLabel = storageObject.data;\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.xAxisLabel = xAxis;\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.yAxisLabel = yAxis;\n  }\n\n}\n\n\nexport class SpectrumStorage implements MyStorage {\n  private static readonly dataKey: string = 'spectrumData';\n  private static readonly interfaceKey: string = 'spectrumInterface';\n  private static readonly chartInfoKey: string = 'spectrumChartInfo';\n\n  getChartInfo(): SpectrumChartInfoStorageObject {\n    if (localStorage.getItem(SpectrumStorage.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(SpectrumStorage.chartInfoKey)!) as SpectrumChartInfoStorageObject;\n    } else {\n      return SpectrumChartInfo.getDefaultStorageObject();\n    }\n  }\n\n  getData(): SpectrumDataDict[] {\n    if (localStorage.getItem(SpectrumStorage.dataKey)) {\n      return JSON.parse(localStorage.getItem(SpectrumStorage.dataKey)!) as SpectrumDataDict[];\n    } else {\n      return SpectrumData.getDefaultData();\n    }\n  }\n\n  getInterface(): SpectrumOptions {\n    if (localStorage.getItem(SpectrumStorage.interfaceKey)) {\n      return JSON.parse(localStorage.getItem(SpectrumStorage.interfaceKey)!) as SpectrumOptions;\n    } else {\n      return SpectrumInterfaceImpl.getDefaultChannel();\n    }\n  }\n\n  resetChartInfo(): void {\n    localStorage.setItem(SpectrumStorage.chartInfoKey, JSON.stringify(SpectrumChartInfo.getDefaultStorageObject()));\n  }\n\n  resetData(): void {\n    localStorage.setItem(SpectrumStorage.dataKey, JSON.stringify(SpectrumData.getDefaultData()));\n  }\n\n  resetInterface(): void {\n    localStorage.setItem(SpectrumStorage.interfaceKey, JSON.stringify(SpectrumInterfaceImpl.getDefaultChannel()));\n  }\n\n  saveChartInfo(chartInfo: SpectrumChartInfoStorageObject): void {\n    localStorage.setItem(SpectrumStorage.chartInfoKey, JSON.stringify(chartInfo));\n  }\n\n  saveData(data: SpectrumDataDict[]): void {\n    localStorage.setItem(SpectrumStorage.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: SpectrumOptions): void {\n    localStorage.setItem(SpectrumStorage.interfaceKey, JSON.stringify(interfaceInfo));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SpectrumTable.html":{"url":"classes/SpectrumTable.html","title":"class - SpectrumTable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SpectrumTable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/spectrum/spectrum-table/spectrum-table.component.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyTable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hotRegisterer\n                            \n                            \n                                    Private\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                            \n                                getTable\n                            \n                            \n                                renderTable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/spectrum/spectrum-table/spectrum-table.component.ts:68\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hotRegisterer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HotTableRegisterer()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum-table/spectrum-table.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum-table/spectrum-table.component.ts:67\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum-table/spectrum-table.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTable\n                        \n                    \n                \n            \n            \n                \ngetTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum-table/spectrum-table.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Handsontable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderTable\n                        \n                    \n                \n            \n            \n                \nrenderTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum-table/spectrum-table.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {AfterViewInit, Component, OnDestroy} from '@angular/core';\nimport {MyTable} from \"../../shared/tables/table-interface\";\nimport {SpectrumDataDict} from \"../../spectrum/spectrum.service.util\";\nimport {Subject, takeUntil} from \"rxjs\";\nimport {SpectrumService} from \"../../spectrum/spectrum.service\";\nimport {MyData} from \"../../shared/data/data.interface\";\nimport {HotTableRegisterer} from \"@handsontable/angular\";\nimport Handsontable from \"handsontable\";\n\n@Component({\n  selector: 'app-spectrum-table',\n  templateUrl: './spectrum-table.component.html',\n  styleUrls: ['./spectrum-table.component.scss']\n})\nexport class SpectrumTableComponent implements AfterViewInit, OnDestroy{\n  id: string = \"spectrum-table\";\n  table: MyTable = new SpectrumTable(this.id);\n  colNames: string[] = [\"Wavelength\", \"Channel 1\", \"Channel 2\"];\n  dataSet: SpectrumDataDict[];\n  private destroy$: Subject = new Subject();\n  constructor(private service: SpectrumService) {\n    this.dataSet = this.service.getData();\n  }\n\n  ngAfterViewInit(): void {\n    this.service.data$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe((data: MyData) => {\n      this.dataSet = this.limitPrecision(this.service.getData());\n      this.table.renderTable();\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  public onChange = (changes: any, source: any) => {\n    if (changes) {\n      this.service.setData(this.table.getData());\n    }\n  }\n\n  public onRemove = (index: number, amount: number) => {\n    this.service.removeRow(index, amount);\n  }\n\n  public onInsert = (index: number, amount: number) => {\n    this.service.addRow(index, amount);\n  }\n\n  private limitPrecision(data: SpectrumDataDict[]): SpectrumDataDict[] {\n    return data.map(\n      (row: SpectrumDataDict) => {\n        return {\n          wavelength: row.wavelength ? parseFloat(row.wavelength.toFixed(4)) : row.wavelength,\n          channel1: row.channel1 ? parseFloat(row.channel1.toFixed(2)) : row.channel1,\n          channel2: row.channel2 ? parseFloat(row.channel2.toFixed(2)) : row.channel2,\n        }\n      }\n    );\n  }\n}\n\nclass SpectrumTable implements MyTable {\n  private readonly id: string;\n  private hotRegisterer = new HotTableRegisterer();\n\n  constructor(id: string) {\n    this.id = id;\n  }\n\n  getTable(): Handsontable {\n    return this.hotRegisterer.getInstance(this.id);\n  }\n\n  renderTable(): void {\n    this.getTable().render();\n  }\n\n  getData(): any[] {\n    return this.getTable().getSourceData();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpectrumTableComponent.html":{"url":"components/SpectrumTableComponent.html","title":"component - SpectrumTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpectrumTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/spectrum/spectrum-table/spectrum-table.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-spectrum-table\n            \n\n\n\n            \n                styleUrls\n                ./spectrum-table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./spectrum-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                colNames\n                            \n                            \n                                dataSet\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                id\n                            \n                            \n                                    Public\n                                onChange\n                            \n                            \n                                    Public\n                                onInsert\n                            \n                            \n                                    Public\n                                onRemove\n                            \n                            \n                                table\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                limitPrecision\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: SpectrumService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/spectrum/spectrum-table/spectrum-table.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        SpectrumService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        limitPrecision\n                        \n                    \n                \n            \n            \n                \n                    \n                    limitPrecision(data: SpectrumDataDict[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum-table/spectrum-table.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                SpectrumDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SpectrumDataDict[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum-table/spectrum-table.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/spectrum/spectrum-table/spectrum-table.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        colNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\"Wavelength\", \"Channel 1\", \"Channel 2\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum-table/spectrum-table.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SpectrumDataDict[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum-table/spectrum-table.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum-table/spectrum-table.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"spectrum-table\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum-table/spectrum-table.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum-table/spectrum-table.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onInsert\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum-table/spectrum-table.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onRemove\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum-table/spectrum-table.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        table\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MyTable\n\n                    \n                \n                \n                    \n                        Default value : new SpectrumTable(this.id)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/spectrum/spectrum-table/spectrum-table.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnDestroy} from '@angular/core';\nimport {MyTable} from \"../../shared/tables/table-interface\";\nimport {SpectrumDataDict} from \"../../spectrum/spectrum.service.util\";\nimport {Subject, takeUntil} from \"rxjs\";\nimport {SpectrumService} from \"../../spectrum/spectrum.service\";\nimport {MyData} from \"../../shared/data/data.interface\";\nimport {HotTableRegisterer} from \"@handsontable/angular\";\nimport Handsontable from \"handsontable\";\n\n@Component({\n  selector: 'app-spectrum-table',\n  templateUrl: './spectrum-table.component.html',\n  styleUrls: ['./spectrum-table.component.scss']\n})\nexport class SpectrumTableComponent implements AfterViewInit, OnDestroy{\n  id: string = \"spectrum-table\";\n  table: MyTable = new SpectrumTable(this.id);\n  colNames: string[] = [\"Wavelength\", \"Channel 1\", \"Channel 2\"];\n  dataSet: SpectrumDataDict[];\n  private destroy$: Subject = new Subject();\n  constructor(private service: SpectrumService) {\n    this.dataSet = this.service.getData();\n  }\n\n  ngAfterViewInit(): void {\n    this.service.data$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe((data: MyData) => {\n      this.dataSet = this.limitPrecision(this.service.getData());\n      this.table.renderTable();\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  public onChange = (changes: any, source: any) => {\n    if (changes) {\n      this.service.setData(this.table.getData());\n    }\n  }\n\n  public onRemove = (index: number, amount: number) => {\n    this.service.removeRow(index, amount);\n  }\n\n  public onInsert = (index: number, amount: number) => {\n    this.service.addRow(index, amount);\n  }\n\n  private limitPrecision(data: SpectrumDataDict[]): SpectrumDataDict[] {\n    return data.map(\n      (row: SpectrumDataDict) => {\n        return {\n          wavelength: row.wavelength ? parseFloat(row.wavelength.toFixed(4)) : row.wavelength,\n          channel1: row.channel1 ? parseFloat(row.channel1.toFixed(2)) : row.channel1,\n          channel2: row.channel2 ? parseFloat(row.channel2.toFixed(2)) : row.channel2,\n        }\n      }\n    );\n  }\n}\n\nclass SpectrumTable implements MyTable {\n  private readonly id: string;\n  private hotRegisterer = new HotTableRegisterer();\n\n  constructor(id: string) {\n    this.id = id;\n  }\n\n  getTable(): Handsontable {\n    return this.hotRegisterer.getInstance(this.id);\n  }\n\n  renderTable(): void {\n    this.getTable().render();\n  }\n\n  getData(): any[] {\n    return this.getTable().getSourceData();\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./spectrum-table.component.scss\n                \n                .container {\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpectrumTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolsNavbarComponent.html":{"url":"components/ToolsNavbarComponent.html","title":"component - ToolsNavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToolsNavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/tools-navbar/tools-navbar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Sidenav with custom escape and backdrop click behavior\nContains menubar and router outlet to plotting tools\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tools-navbar\n            \n\n\n\n            \n                styleUrls\n                tools-navbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                tools-navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                toolsnav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/tools-navbar/tools-navbar.component.ts:42\n                \n            \n\n\n            \n                \n                    open the navigation bar toolsnav\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open\n                        \n                    \n                \n            \n            \n                \nopen()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/tools-navbar/tools-navbar.component.ts:35\n                \n            \n\n\n            \n                \n                    open the navigation bar toolsnav\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        toolsnav\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSidenav\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('toolsnav')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/tools-navbar/tools-navbar.component.ts:30\n                        \n                    \n\n            \n                \n                    Navigation bar for selecting tools\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, NgModule, ViewChild} from '@angular/core';\nimport {MatSidenav, MatSidenavModule} from '@angular/material/sidenav';\nimport {MenubarModule} from \"../menubar/menubar.component\";\nimport {AppRoutingModule} from \"../../app-routing.module\";\nimport {MatLegacyButtonModule as MatButtonModule} from \"@angular/material/legacy-button\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {CurveModule} from \"../../tools/curve/curve.module\";\nimport {MatLegacyListModule as MatListModule} from \"@angular/material/legacy-list\";\nimport {MoonModule} from \"../../tools/moon/moon.module\";\nimport {VenusModule} from \"../../tools/venus/venus.module\";\nimport {ScatterModule} from \"../../tools/scatter/scatter.module\";\nimport {DualModule} from \"../../tools/dual/dual.module\";\nimport {SpectrumModule} from \"../../tools/spectrum/spectrum.module\";\n\n/**\n * Sidenav with custom escape and backdrop click behavior\n *\n * Contains menubar and router outlet to plotting tools\n *\n * */\n@Component({\n  selector: 'app-tools-navbar',\n  templateUrl: 'tools-navbar.component.html',\n  styleUrls: ['tools-navbar.component.scss'],\n})\nexport class ToolsNavbarComponent {\n  /**\n   * Navigation bar for selecting tools\n   */\n  @ViewChild('toolsnav') toolsnav!: MatSidenav;\n\n  /**\n   * open the navigation bar {@link toolsnav}\n   */\n  open() {\n    this.toolsnav.open();\n  }\n\n  /**\n   * open the navigation bar {@link toolsnav}\n   */\n  close() {\n    this.toolsnav.close();\n  }\n\n}\n\n/**\n * Encapsulate {@link ToolsNavbarComponent}\n */\n@NgModule({\n  imports: [\n    MenubarModule,\n    AppRoutingModule,\n    MatSidenavModule,\n    MatButtonModule,\n    MatIconModule,\n    MatListModule,\n    CurveModule,\n    MoonModule,\n    VenusModule,\n    ScatterModule,\n    SpectrumModule,\n    DualModule,\n  ],\n  declarations: [\n    ToolsNavbarComponent,\n  ],\n  exports: [ToolsNavbarComponent]\n})\nexport class ToolsNavbarModule {\n}\n\n    \n\n    \n        \n  \n    Select a Tool\n    \n      Curve\n      Moon\n      Venus\n      Variable\n      Scatter\n      Spectrum\n      Dual\n      Gravity\n      Radio\n      Cluster Pro Plus\n      Pulsar\n      Transient\n    \n  \n\n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    tools-navbar.component.scss\n                \n                .tool-sidenav-container {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n}\n\nmat-nav-list {\n  width: 200px;\n}\n\n.tool-container {\n  padding: 20px 100px 20px 100px;\n  height: 100%;\n  width: 100%;\n}\n\n.mat-list-item-content {\n  text-align: center;\n}\n\n\n.prompt {\n  font-size: large;\n  font-style: italic;\n  text-align: center;\n  margin-top: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Select a Tool          Curve      Moon      Venus      Variable      Scatter      Spectrum      Dual      Gravity      Radio      Cluster Pro Plus      Pulsar      Transient                  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolsNavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ToolsNavbarModule.html":{"url":"modules/ToolsNavbarModule.html","title":"module - ToolsNavbarModule","body":"\n                   \n\n\n\n\n    Modules\n    ToolsNavbarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ToolsNavbarModule\n\n\n\ncluster_ToolsNavbarModule_exports\n\n\n\ncluster_ToolsNavbarModule_declarations\n\n\n\ncluster_ToolsNavbarModule_imports\n\n\n\n\nToolsNavbarComponent\n\nToolsNavbarComponent\n\n\n\nToolsNavbarModule\n\nToolsNavbarModule\n\nToolsNavbarModule -->\n\nToolsNavbarComponent->ToolsNavbarModule\n\n\n\n\n\nToolsNavbarComponent \n\nToolsNavbarComponent \n\nToolsNavbarComponent  -->\n\nToolsNavbarModule->ToolsNavbarComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nToolsNavbarModule -->\n\nAppRoutingModule->ToolsNavbarModule\n\n\n\n\n\nCurveModule\n\nCurveModule\n\nToolsNavbarModule -->\n\nCurveModule->ToolsNavbarModule\n\n\n\n\n\nDualModule\n\nDualModule\n\nToolsNavbarModule -->\n\nDualModule->ToolsNavbarModule\n\n\n\n\n\nMenubarModule\n\nMenubarModule\n\nToolsNavbarModule -->\n\nMenubarModule->ToolsNavbarModule\n\n\n\n\n\nMoonModule\n\nMoonModule\n\nToolsNavbarModule -->\n\nMoonModule->ToolsNavbarModule\n\n\n\n\n\nScatterModule\n\nScatterModule\n\nToolsNavbarModule -->\n\nScatterModule->ToolsNavbarModule\n\n\n\n\n\nSpectrumModule\n\nSpectrumModule\n\nToolsNavbarModule -->\n\nSpectrumModule->ToolsNavbarModule\n\n\n\n\n\nVenusModule\n\nVenusModule\n\nToolsNavbarModule -->\n\nVenusModule->ToolsNavbarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/tools-navbar/tools-navbar.component.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Encapsulate ToolsNavbarComponent\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ToolsNavbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CurveModule\n                        \n                        \n                            DualModule\n                        \n                        \n                            MenubarModule\n                        \n                        \n                            MoonModule\n                        \n                        \n                            ScatterModule\n                        \n                        \n                            SpectrumModule\n                        \n                        \n                            VenusModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ToolsNavbarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {Component, NgModule, ViewChild} from '@angular/core';\nimport {MatSidenav, MatSidenavModule} from '@angular/material/sidenav';\nimport {MenubarModule} from \"../menubar/menubar.component\";\nimport {AppRoutingModule} from \"../../app-routing.module\";\nimport {MatLegacyButtonModule as MatButtonModule} from \"@angular/material/legacy-button\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {CurveModule} from \"../../tools/curve/curve.module\";\nimport {MatLegacyListModule as MatListModule} from \"@angular/material/legacy-list\";\nimport {MoonModule} from \"../../tools/moon/moon.module\";\nimport {VenusModule} from \"../../tools/venus/venus.module\";\nimport {ScatterModule} from \"../../tools/scatter/scatter.module\";\nimport {DualModule} from \"../../tools/dual/dual.module\";\nimport {SpectrumModule} from \"../../tools/spectrum/spectrum.module\";\n\n/**\n * Sidenav with custom escape and backdrop click behavior\n *\n * Contains menubar and router outlet to plotting tools\n *\n * */\n@Component({\n  selector: 'app-tools-navbar',\n  templateUrl: 'tools-navbar.component.html',\n  styleUrls: ['tools-navbar.component.scss'],\n})\nexport class ToolsNavbarComponent {\n  /**\n   * Navigation bar for selecting tools\n   */\n  @ViewChild('toolsnav') toolsnav!: MatSidenav;\n\n  /**\n   * open the navigation bar {@link toolsnav}\n   */\n  open() {\n    this.toolsnav.open();\n  }\n\n  /**\n   * open the navigation bar {@link toolsnav}\n   */\n  close() {\n    this.toolsnav.close();\n  }\n\n}\n\n/**\n * Encapsulate {@link ToolsNavbarComponent}\n */\n@NgModule({\n  imports: [\n    MenubarModule,\n    AppRoutingModule,\n    MatSidenavModule,\n    MatButtonModule,\n    MatIconModule,\n    MatListModule,\n    CurveModule,\n    MoonModule,\n    VenusModule,\n    ScatterModule,\n    SpectrumModule,\n    DualModule,\n  ],\n  declarations: [\n    ToolsNavbarComponent,\n  ],\n  exports: [ToolsNavbarComponent]\n})\nexport class ToolsNavbarModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VenusChartFormComponent.html":{"url":"components/VenusChartFormComponent.html","title":"component - VenusChartFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VenusChartFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/venus/venus-chart-form/venus-chart-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-venus-chart-form\n            \n\n\n\n            \n                styleUrls\n                ./venus-chart-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./venus-chart-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                formGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: VenusService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/venus/venus-chart-form/venus-chart-form.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        VenusService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus-chart-form/venus-chart-form.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus-chart-form/venus-chart-form.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus-chart-form/venus-chart-form.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnDestroy} from '@angular/core';\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {debounceTime, Subject, takeUntil} from \"rxjs\";\nimport {VenusService} from \"../../venus/venus.service\";\n\n@Component({\n  selector: 'app-venus-chart-form',\n  templateUrl: './venus-chart-form.component.html',\n  styleUrls: ['./venus-chart-form.component.scss']\n})\nexport class VenusChartFormComponent implements OnDestroy {\n  formGroup!: FormGroup;\n  private destroy$: Subject = new Subject();\n\n  constructor(private service: VenusService) {\n    this.service.chartInfo$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(info => {\n      this.formGroup = new FormGroup({\n        chartTitle: new FormControl(this.service.getChartTitle()),\n        dataLabel: new FormControl(this.service.getDataLabel()),\n        xAxisLabel: new FormControl(this.service.getXAxisLabel()),\n        yAxisLabel: new FormControl(this.service.getYAxisLabel()),\n      })\n      this.formGroup.controls['chartTitle'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(title => {\n        this.service.setChartTitle(title);\n      });\n      this.formGroup.controls['dataLabel'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(labels => {\n        this.service.setDataLabel(labels);\n      });\n      this.formGroup.controls['xAxisLabel'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(label => {\n        this.service.setXAxisLabel(label);\n      });\n      this.formGroup.controls['yAxisLabel'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(label => {\n        this.service.setYAxisLabel(label);\n      });\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        Title\n        \n      \n    \n    \n      \n        Data\n        \n      \n    \n  \n  \n    \n      \n        X Axis\n        \n      \n    \n    \n      \n        Y Axis\n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./venus-chart-form.component.scss\n                \n                mat-form-field {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Title                                    Data                                        X Axis                                    Y Axis                    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VenusChartFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VenusChartInfo.html":{"url":"classes/VenusChartInfo.html","title":"class - VenusChartInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VenusChartInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/venus/venus.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ChartInfo\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chartTitle\n                            \n                            \n                                    Private\n                                dataLabel\n                            \n                            \n                                    Private\n                                xAxisLabel\n                            \n                            \n                                    Private\n                                yAxisLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getChartTitle\n                            \n                            \n                                getDataLabel\n                            \n                            \n                                    Static\n                                getDefaultChartInfo\n                            \n                            \n                                getStorageObject\n                            \n                            \n                                getXAxisLabel\n                            \n                            \n                                getYAxisLabel\n                            \n                            \n                                setChartTitle\n                            \n                            \n                                setDataLabel\n                            \n                            \n                                setStorageObject\n                            \n                            \n                                setXAxisLabel\n                            \n                            \n                                setYAxisLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/venus/venus.service.util.ts:81\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus.service.util.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus.service.util.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        xAxisLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus.service.util.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        yAxisLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus.service.util.ts:81\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getChartTitle\n                        \n                    \n                \n            \n            \n                \ngetChartTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataLabel\n                        \n                    \n                \n            \n            \n                \ngetDataLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getDefaultChartInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { chartTitle: string; dataLabel: string; xAxisLabel: string; yAxisLabel: string; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStorageObject\n                        \n                    \n                \n            \n            \n                \ngetStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         VenusChartInfoStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getXAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetXAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getYAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetYAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setChartTitle\n                        \n                    \n                \n            \n            \n                \nsetChartTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDataLabel\n                        \n                    \n                \n            \n            \n                \nsetDataLabel(data: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStorageObject\n                        \n                    \n                \n            \n            \n                \nsetStorageObject(storageObject: VenusChartInfoStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storageObject\n                                    \n                                                VenusChartInfoStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setXAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetXAxisLabel(xAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    xAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setYAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetYAxisLabel(yAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    yAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {rad} from \"../shared/data/utils\";\n\nexport interface VenusDataDict {\n  diameter: number | null;\n  phase: number | null;\n}\n\n\nexport class VenusData implements MyData {\n  private dataDict: VenusDataDict[];\n\n  constructor() {\n    this.dataDict = VenusData.getDefaultData();\n  }\n\n  addRow(index: number, amount: number): void {\n    if (index > 0) {\n      for (let i = 0; i  {\n        return entry.diameter !== null && entry.phase !== null;\n      }\n    ).map(\n      (entry: VenusDataDict) => {\n        return [entry.diameter, entry.phase];\n      });\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: VenusDataDict[]): void {\n    this.dataDict = data;\n  }\n\n  public static getDefaultData(): VenusDataDict[] {\n    return [\n      {diameter: 15, phase: 0.7},\n      {diameter: 30, phase: 0.53},\n      {diameter: 45, phase: 0.27},\n      {diameter: 60, phase: 0},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n    ];\n  }\n}\n\n\nexport interface VenusChartInfoStorageObject {\n  chartTitle: string;\n  dataLabel: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n}\n\n\nexport class VenusChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private dataLabel: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n\n\n  constructor() {\n    this.chartTitle = VenusChartInfo.getDefaultChartInfo().chartTitle;\n    this.dataLabel = VenusChartInfo.getDefaultChartInfo().dataLabel;\n    this.xAxisLabel = VenusChartInfo.getDefaultChartInfo().xAxisLabel;\n    this.yAxisLabel = VenusChartInfo.getDefaultChartInfo().yAxisLabel;\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabel;\n  }\n\n  getStorageObject(): VenusChartInfoStorageObject {\n    return {\n      chartTitle: this.chartTitle,\n      dataLabel: this.dataLabel,\n      xAxisLabel: this.xAxisLabel,\n      yAxisLabel: this.yAxisLabel,\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    this.dataLabel = data;\n  }\n\n  setStorageObject(storageObject: VenusChartInfoStorageObject): void {\n    this.chartTitle = storageObject.chartTitle;\n    this.dataLabel = storageObject.dataLabel;\n    this.xAxisLabel = storageObject.xAxisLabel;\n    this.yAxisLabel = storageObject.yAxisLabel;\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.xAxisLabel = xAxis;\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.yAxisLabel = yAxis;\n  }\n\n  public static getDefaultChartInfo() {\n    return {\n      chartTitle: \"Title\",\n      dataLabel: \"Data\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n    };\n  }\n}\n\n\nexport class VenusStorage implements MyStorage {\n  private readonly dataKey: string = \"venusData\";\n  private readonly chartInfoKey: string = \"venusChartInfo\";\n  getChartInfo(): VenusChartInfoStorageObject {\n    if (localStorage.getItem(this.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(this.chartInfoKey) as string);\n    } else {\n      this.saveChartInfo(VenusChartInfo.getDefaultChartInfo());\n      return VenusChartInfo.getDefaultChartInfo();\n    }\n\n  }\n\n  getData(): VenusDataDict[] {\n    if (localStorage.getItem(this.dataKey)) {\n      return JSON.parse(localStorage.getItem(this.dataKey) as string);\n    } else {\n      this.saveData(VenusData.getDefaultData());\n      return VenusData.getDefaultData();\n    }\n  }\n\n  getInterface(): any {\n  }\n\n  resetChartInfo(): void {\n    this.saveChartInfo(VenusChartInfo.getDefaultChartInfo());\n  }\n\n  resetData(): void {\n    this.saveData(VenusData.getDefaultData());\n  }\n\n  resetInterface(): void {\n  }\n\n  saveChartInfo(chartInfo: VenusChartInfoStorageObject): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(chartInfo));\n  }\n\n  saveData(data: VenusDataDict[]): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: any): void {\n  }\n\n}\n\n\nexport class VenusModels {\n  // Angular diameter of Venus as its closest in arc-seconds.\n  private static maxA = 60;\n  // Max angular separation between Venus and Sun in radians.\n  private static beta = rad(45);\n  // Diameter of Venus in km\n  private static DV = 1.210e4;\n  // Distance from Sun to Earth in km\n  private static dE = 1.496e8;\n  // Distance from Sun to Venus in km\n  private static dV = 1.082e8;\n\n  /**\n   *  This function generates the data points for the Geocentric model.\n   *  @param start:   The start point of data points.\n   *  @param end:     The end point of data points.\n   *  @param x:       The parameter x that represents the ratio of distance of Sun to Venus versus the\n   *                  distance of Sun to Earth.\n   *  @param steps:   The number of data points to be generated. Default is 500.\n   *  @returns {Array}\n   */\n  public static geocentric(start: number, end: number, x: number, steps: number = 500): number[][] {\n    const data: number[][] = [];\n    const step = (end - start) / steps;\n\n    let a = start;\n    for (let i = 0; i  0 ? (1 + cosPhi) / 2 : 0,\n        // How is below different from above????\n        // y: Math.max((1 + cosPhi) / 2, 0) // this doesn't work. I'm so confused\n      ]);\n      a += step;\n    }\n    return data;\n  }\n\n  /**\n   *  This function generates the data points for the Heliocentric model.\n   *  @param start:   The start point of data points.\n   *  @param end:     The end point of data points.\n   *  @param steps:   The number of data points to be generated. Default is 500.\n   *  @returns {Array}\n   */\n  public static heliocentric(start: number, end: number, steps: number = 500): number[][] {\n    const data: number[][] = [];\n    const step = (end - start) / steps;\n\n    let a = start;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VenusChartInfoStorageObject.html":{"url":"interfaces/VenusChartInfoStorageObject.html","title":"interface - VenusChartInfoStorageObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VenusChartInfoStorageObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/venus/venus.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            chartTitle\n                                        \n                                \n                                \n                                        \n                                            dataLabel\n                                        \n                                \n                                \n                                        \n                                            xAxisLabel\n                                        \n                                \n                                \n                                        \n                                            yAxisLabel\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chartTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chartTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dataLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xAxisLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        xAxisLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yAxisLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        yAxisLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {rad} from \"../shared/data/utils\";\n\nexport interface VenusDataDict {\n  diameter: number | null;\n  phase: number | null;\n}\n\n\nexport class VenusData implements MyData {\n  private dataDict: VenusDataDict[];\n\n  constructor() {\n    this.dataDict = VenusData.getDefaultData();\n  }\n\n  addRow(index: number, amount: number): void {\n    if (index > 0) {\n      for (let i = 0; i  {\n        return entry.diameter !== null && entry.phase !== null;\n      }\n    ).map(\n      (entry: VenusDataDict) => {\n        return [entry.diameter, entry.phase];\n      });\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: VenusDataDict[]): void {\n    this.dataDict = data;\n  }\n\n  public static getDefaultData(): VenusDataDict[] {\n    return [\n      {diameter: 15, phase: 0.7},\n      {diameter: 30, phase: 0.53},\n      {diameter: 45, phase: 0.27},\n      {diameter: 60, phase: 0},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n    ];\n  }\n}\n\n\nexport interface VenusChartInfoStorageObject {\n  chartTitle: string;\n  dataLabel: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n}\n\n\nexport class VenusChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private dataLabel: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n\n\n  constructor() {\n    this.chartTitle = VenusChartInfo.getDefaultChartInfo().chartTitle;\n    this.dataLabel = VenusChartInfo.getDefaultChartInfo().dataLabel;\n    this.xAxisLabel = VenusChartInfo.getDefaultChartInfo().xAxisLabel;\n    this.yAxisLabel = VenusChartInfo.getDefaultChartInfo().yAxisLabel;\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabel;\n  }\n\n  getStorageObject(): VenusChartInfoStorageObject {\n    return {\n      chartTitle: this.chartTitle,\n      dataLabel: this.dataLabel,\n      xAxisLabel: this.xAxisLabel,\n      yAxisLabel: this.yAxisLabel,\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    this.dataLabel = data;\n  }\n\n  setStorageObject(storageObject: VenusChartInfoStorageObject): void {\n    this.chartTitle = storageObject.chartTitle;\n    this.dataLabel = storageObject.dataLabel;\n    this.xAxisLabel = storageObject.xAxisLabel;\n    this.yAxisLabel = storageObject.yAxisLabel;\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.xAxisLabel = xAxis;\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.yAxisLabel = yAxis;\n  }\n\n  public static getDefaultChartInfo() {\n    return {\n      chartTitle: \"Title\",\n      dataLabel: \"Data\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n    };\n  }\n}\n\n\nexport class VenusStorage implements MyStorage {\n  private readonly dataKey: string = \"venusData\";\n  private readonly chartInfoKey: string = \"venusChartInfo\";\n  getChartInfo(): VenusChartInfoStorageObject {\n    if (localStorage.getItem(this.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(this.chartInfoKey) as string);\n    } else {\n      this.saveChartInfo(VenusChartInfo.getDefaultChartInfo());\n      return VenusChartInfo.getDefaultChartInfo();\n    }\n\n  }\n\n  getData(): VenusDataDict[] {\n    if (localStorage.getItem(this.dataKey)) {\n      return JSON.parse(localStorage.getItem(this.dataKey) as string);\n    } else {\n      this.saveData(VenusData.getDefaultData());\n      return VenusData.getDefaultData();\n    }\n  }\n\n  getInterface(): any {\n  }\n\n  resetChartInfo(): void {\n    this.saveChartInfo(VenusChartInfo.getDefaultChartInfo());\n  }\n\n  resetData(): void {\n    this.saveData(VenusData.getDefaultData());\n  }\n\n  resetInterface(): void {\n  }\n\n  saveChartInfo(chartInfo: VenusChartInfoStorageObject): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(chartInfo));\n  }\n\n  saveData(data: VenusDataDict[]): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: any): void {\n  }\n\n}\n\n\nexport class VenusModels {\n  // Angular diameter of Venus as its closest in arc-seconds.\n  private static maxA = 60;\n  // Max angular separation between Venus and Sun in radians.\n  private static beta = rad(45);\n  // Diameter of Venus in km\n  private static DV = 1.210e4;\n  // Distance from Sun to Earth in km\n  private static dE = 1.496e8;\n  // Distance from Sun to Venus in km\n  private static dV = 1.082e8;\n\n  /**\n   *  This function generates the data points for the Geocentric model.\n   *  @param start:   The start point of data points.\n   *  @param end:     The end point of data points.\n   *  @param x:       The parameter x that represents the ratio of distance of Sun to Venus versus the\n   *                  distance of Sun to Earth.\n   *  @param steps:   The number of data points to be generated. Default is 500.\n   *  @returns {Array}\n   */\n  public static geocentric(start: number, end: number, x: number, steps: number = 500): number[][] {\n    const data: number[][] = [];\n    const step = (end - start) / steps;\n\n    let a = start;\n    for (let i = 0; i  0 ? (1 + cosPhi) / 2 : 0,\n        // How is below different from above????\n        // y: Math.max((1 + cosPhi) / 2, 0) // this doesn't work. I'm so confused\n      ]);\n      a += step;\n    }\n    return data;\n  }\n\n  /**\n   *  This function generates the data points for the Heliocentric model.\n   *  @param start:   The start point of data points.\n   *  @param end:     The end point of data points.\n   *  @param steps:   The number of data points to be generated. Default is 500.\n   *  @returns {Array}\n   */\n  public static heliocentric(start: number, end: number, steps: number = 500): number[][] {\n    const data: number[][] = [];\n    const step = (end - start) / steps;\n\n    let a = start;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VenusComponent.html":{"url":"components/VenusComponent.html","title":"component - VenusComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VenusComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/venus/venus/venus.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-venus\n            \n\n\n\n            \n                styleUrls\n                ./venus.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./venus.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                actionHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: VenusService, honorCodeService: HonorCodePopupService, chartService: HonorCodeChartService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/venus/venus/venus.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        VenusService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        honorCodeService\n                                                  \n                                                        \n                                                                        HonorCodePopupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chartService\n                                                  \n                                                        \n                                                                        HonorCodeChartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        actionHandler\n                        \n                    \n                \n            \n            \n                \nactionHandler(actions: ChartAction[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus/venus.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    actions\n                                    \n                                                ChartAction[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {ChartAction} from \"../../shared/types/actions\";\nimport {VenusService} from \"../venus.service\";\nimport {HonorCodePopupService} from \"../../shared/honor-code-popup/honor-code-popup.service\";\nimport {HonorCodeChartService} from \"../../shared/honor-code-popup/honor-code-chart.service\";\n\n@Component({\n  selector: 'app-venus',\n  templateUrl: './venus.component.html',\n  styleUrls: ['./venus.component.scss']\n})\nexport class VenusComponent {\n\n  constructor(private service: VenusService,\n              private honorCodeService: HonorCodePopupService,\n              private chartService: HonorCodeChartService) {\n  }\n\n  actionHandler(actions: ChartAction[]) {\n    actions.forEach((action) => {\n      if (action.action === \"addRow\") {\n        this.service.addRow(-1, 1);\n      } else if (action.action === \"saveGraph\") {\n        this.honorCodeService.honored().subscribe((name: string) => {\n          this.chartService.saveImageHighChartOffline(this.service.getHighChart(), \"venus\", name);\n        })\n      } else if (action.action === \"resetData\") {\n        this.service.resetData();\n      } else if (action.action === \"resetChartInfo\") {\n        this.service.resetChartInfo();\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n            \n    \n    \n      \n      \n    \n  \n  \n    \n            \n    \n    \n            \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./venus.component.scss\n                \n                .container-row {\n  height: 80%;\n  padding: 20px 100px 20px 100px;\n  width: 100%;\n}\n\n.col-4, .col-8 {\n  display: flex;\n  flex-flow: column;\n}\n\n.data-form-row, data-button-row, chart-form-row, chart-button-row {\n  height: fit-content;\n  flex: 0 1 auto;\n}\n\n.data-table-row, .chart-row {\n  flex: 1 1 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VenusComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VenusData.html":{"url":"classes/VenusData.html","title":"class - VenusData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VenusData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/venus/venus.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyData\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dataDict\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRow\n                            \n                            \n                                getData\n                            \n                            \n                                getDataArray\n                            \n                            \n                                    Static\n                                getDefaultData\n                            \n                            \n                                removeRow\n                            \n                            \n                                setData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/venus/venus.service.util.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataDict\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VenusDataDict[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus.service.util.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRow\n                        \n                    \n                \n            \n            \n                \naddRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         VenusDataDict[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataArray\n                        \n                    \n                \n            \n            \n                \ngetDataArray()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     [][]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getDefaultData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         VenusDataDict[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRow\n                        \n                    \n                \n            \n            \n                \nremoveRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setData\n                        \n                    \n                \n            \n            \n                \nsetData(data: VenusDataDict[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                VenusDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {rad} from \"../shared/data/utils\";\n\nexport interface VenusDataDict {\n  diameter: number | null;\n  phase: number | null;\n}\n\n\nexport class VenusData implements MyData {\n  private dataDict: VenusDataDict[];\n\n  constructor() {\n    this.dataDict = VenusData.getDefaultData();\n  }\n\n  addRow(index: number, amount: number): void {\n    if (index > 0) {\n      for (let i = 0; i  {\n        return entry.diameter !== null && entry.phase !== null;\n      }\n    ).map(\n      (entry: VenusDataDict) => {\n        return [entry.diameter, entry.phase];\n      });\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: VenusDataDict[]): void {\n    this.dataDict = data;\n  }\n\n  public static getDefaultData(): VenusDataDict[] {\n    return [\n      {diameter: 15, phase: 0.7},\n      {diameter: 30, phase: 0.53},\n      {diameter: 45, phase: 0.27},\n      {diameter: 60, phase: 0},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n    ];\n  }\n}\n\n\nexport interface VenusChartInfoStorageObject {\n  chartTitle: string;\n  dataLabel: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n}\n\n\nexport class VenusChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private dataLabel: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n\n\n  constructor() {\n    this.chartTitle = VenusChartInfo.getDefaultChartInfo().chartTitle;\n    this.dataLabel = VenusChartInfo.getDefaultChartInfo().dataLabel;\n    this.xAxisLabel = VenusChartInfo.getDefaultChartInfo().xAxisLabel;\n    this.yAxisLabel = VenusChartInfo.getDefaultChartInfo().yAxisLabel;\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabel;\n  }\n\n  getStorageObject(): VenusChartInfoStorageObject {\n    return {\n      chartTitle: this.chartTitle,\n      dataLabel: this.dataLabel,\n      xAxisLabel: this.xAxisLabel,\n      yAxisLabel: this.yAxisLabel,\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    this.dataLabel = data;\n  }\n\n  setStorageObject(storageObject: VenusChartInfoStorageObject): void {\n    this.chartTitle = storageObject.chartTitle;\n    this.dataLabel = storageObject.dataLabel;\n    this.xAxisLabel = storageObject.xAxisLabel;\n    this.yAxisLabel = storageObject.yAxisLabel;\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.xAxisLabel = xAxis;\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.yAxisLabel = yAxis;\n  }\n\n  public static getDefaultChartInfo() {\n    return {\n      chartTitle: \"Title\",\n      dataLabel: \"Data\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n    };\n  }\n}\n\n\nexport class VenusStorage implements MyStorage {\n  private readonly dataKey: string = \"venusData\";\n  private readonly chartInfoKey: string = \"venusChartInfo\";\n  getChartInfo(): VenusChartInfoStorageObject {\n    if (localStorage.getItem(this.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(this.chartInfoKey) as string);\n    } else {\n      this.saveChartInfo(VenusChartInfo.getDefaultChartInfo());\n      return VenusChartInfo.getDefaultChartInfo();\n    }\n\n  }\n\n  getData(): VenusDataDict[] {\n    if (localStorage.getItem(this.dataKey)) {\n      return JSON.parse(localStorage.getItem(this.dataKey) as string);\n    } else {\n      this.saveData(VenusData.getDefaultData());\n      return VenusData.getDefaultData();\n    }\n  }\n\n  getInterface(): any {\n  }\n\n  resetChartInfo(): void {\n    this.saveChartInfo(VenusChartInfo.getDefaultChartInfo());\n  }\n\n  resetData(): void {\n    this.saveData(VenusData.getDefaultData());\n  }\n\n  resetInterface(): void {\n  }\n\n  saveChartInfo(chartInfo: VenusChartInfoStorageObject): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(chartInfo));\n  }\n\n  saveData(data: VenusDataDict[]): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: any): void {\n  }\n\n}\n\n\nexport class VenusModels {\n  // Angular diameter of Venus as its closest in arc-seconds.\n  private static maxA = 60;\n  // Max angular separation between Venus and Sun in radians.\n  private static beta = rad(45);\n  // Diameter of Venus in km\n  private static DV = 1.210e4;\n  // Distance from Sun to Earth in km\n  private static dE = 1.496e8;\n  // Distance from Sun to Venus in km\n  private static dV = 1.082e8;\n\n  /**\n   *  This function generates the data points for the Geocentric model.\n   *  @param start:   The start point of data points.\n   *  @param end:     The end point of data points.\n   *  @param x:       The parameter x that represents the ratio of distance of Sun to Venus versus the\n   *                  distance of Sun to Earth.\n   *  @param steps:   The number of data points to be generated. Default is 500.\n   *  @returns {Array}\n   */\n  public static geocentric(start: number, end: number, x: number, steps: number = 500): number[][] {\n    const data: number[][] = [];\n    const step = (end - start) / steps;\n\n    let a = start;\n    for (let i = 0; i  0 ? (1 + cosPhi) / 2 : 0,\n        // How is below different from above????\n        // y: Math.max((1 + cosPhi) / 2, 0) // this doesn't work. I'm so confused\n      ]);\n      a += step;\n    }\n    return data;\n  }\n\n  /**\n   *  This function generates the data points for the Heliocentric model.\n   *  @param start:   The start point of data points.\n   *  @param end:     The end point of data points.\n   *  @param steps:   The number of data points to be generated. Default is 500.\n   *  @returns {Array}\n   */\n  public static heliocentric(start: number, end: number, steps: number = 500): number[][] {\n    const data: number[][] = [];\n    const step = (end - start) / steps;\n\n    let a = start;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VenusDataDict.html":{"url":"interfaces/VenusDataDict.html","title":"interface - VenusDataDict","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VenusDataDict\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/venus/venus.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            diameter\n                                        \n                                \n                                \n                                        \n                                            phase\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        diameter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        diameter:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phase\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phase:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {rad} from \"../shared/data/utils\";\n\nexport interface VenusDataDict {\n  diameter: number | null;\n  phase: number | null;\n}\n\n\nexport class VenusData implements MyData {\n  private dataDict: VenusDataDict[];\n\n  constructor() {\n    this.dataDict = VenusData.getDefaultData();\n  }\n\n  addRow(index: number, amount: number): void {\n    if (index > 0) {\n      for (let i = 0; i  {\n        return entry.diameter !== null && entry.phase !== null;\n      }\n    ).map(\n      (entry: VenusDataDict) => {\n        return [entry.diameter, entry.phase];\n      });\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: VenusDataDict[]): void {\n    this.dataDict = data;\n  }\n\n  public static getDefaultData(): VenusDataDict[] {\n    return [\n      {diameter: 15, phase: 0.7},\n      {diameter: 30, phase: 0.53},\n      {diameter: 45, phase: 0.27},\n      {diameter: 60, phase: 0},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n    ];\n  }\n}\n\n\nexport interface VenusChartInfoStorageObject {\n  chartTitle: string;\n  dataLabel: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n}\n\n\nexport class VenusChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private dataLabel: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n\n\n  constructor() {\n    this.chartTitle = VenusChartInfo.getDefaultChartInfo().chartTitle;\n    this.dataLabel = VenusChartInfo.getDefaultChartInfo().dataLabel;\n    this.xAxisLabel = VenusChartInfo.getDefaultChartInfo().xAxisLabel;\n    this.yAxisLabel = VenusChartInfo.getDefaultChartInfo().yAxisLabel;\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabel;\n  }\n\n  getStorageObject(): VenusChartInfoStorageObject {\n    return {\n      chartTitle: this.chartTitle,\n      dataLabel: this.dataLabel,\n      xAxisLabel: this.xAxisLabel,\n      yAxisLabel: this.yAxisLabel,\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    this.dataLabel = data;\n  }\n\n  setStorageObject(storageObject: VenusChartInfoStorageObject): void {\n    this.chartTitle = storageObject.chartTitle;\n    this.dataLabel = storageObject.dataLabel;\n    this.xAxisLabel = storageObject.xAxisLabel;\n    this.yAxisLabel = storageObject.yAxisLabel;\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.xAxisLabel = xAxis;\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.yAxisLabel = yAxis;\n  }\n\n  public static getDefaultChartInfo() {\n    return {\n      chartTitle: \"Title\",\n      dataLabel: \"Data\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n    };\n  }\n}\n\n\nexport class VenusStorage implements MyStorage {\n  private readonly dataKey: string = \"venusData\";\n  private readonly chartInfoKey: string = \"venusChartInfo\";\n  getChartInfo(): VenusChartInfoStorageObject {\n    if (localStorage.getItem(this.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(this.chartInfoKey) as string);\n    } else {\n      this.saveChartInfo(VenusChartInfo.getDefaultChartInfo());\n      return VenusChartInfo.getDefaultChartInfo();\n    }\n\n  }\n\n  getData(): VenusDataDict[] {\n    if (localStorage.getItem(this.dataKey)) {\n      return JSON.parse(localStorage.getItem(this.dataKey) as string);\n    } else {\n      this.saveData(VenusData.getDefaultData());\n      return VenusData.getDefaultData();\n    }\n  }\n\n  getInterface(): any {\n  }\n\n  resetChartInfo(): void {\n    this.saveChartInfo(VenusChartInfo.getDefaultChartInfo());\n  }\n\n  resetData(): void {\n    this.saveData(VenusData.getDefaultData());\n  }\n\n  resetInterface(): void {\n  }\n\n  saveChartInfo(chartInfo: VenusChartInfoStorageObject): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(chartInfo));\n  }\n\n  saveData(data: VenusDataDict[]): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: any): void {\n  }\n\n}\n\n\nexport class VenusModels {\n  // Angular diameter of Venus as its closest in arc-seconds.\n  private static maxA = 60;\n  // Max angular separation between Venus and Sun in radians.\n  private static beta = rad(45);\n  // Diameter of Venus in km\n  private static DV = 1.210e4;\n  // Distance from Sun to Earth in km\n  private static dE = 1.496e8;\n  // Distance from Sun to Venus in km\n  private static dV = 1.082e8;\n\n  /**\n   *  This function generates the data points for the Geocentric model.\n   *  @param start:   The start point of data points.\n   *  @param end:     The end point of data points.\n   *  @param x:       The parameter x that represents the ratio of distance of Sun to Venus versus the\n   *                  distance of Sun to Earth.\n   *  @param steps:   The number of data points to be generated. Default is 500.\n   *  @returns {Array}\n   */\n  public static geocentric(start: number, end: number, x: number, steps: number = 500): number[][] {\n    const data: number[][] = [];\n    const step = (end - start) / steps;\n\n    let a = start;\n    for (let i = 0; i  0 ? (1 + cosPhi) / 2 : 0,\n        // How is below different from above????\n        // y: Math.max((1 + cosPhi) / 2, 0) // this doesn't work. I'm so confused\n      ]);\n      a += step;\n    }\n    return data;\n  }\n\n  /**\n   *  This function generates the data points for the Heliocentric model.\n   *  @param start:   The start point of data points.\n   *  @param end:     The end point of data points.\n   *  @param steps:   The number of data points to be generated. Default is 500.\n   *  @returns {Array}\n   */\n  public static heliocentric(start: number, end: number, steps: number = 500): number[][] {\n    const data: number[][] = [];\n    const step = (end - start) / steps;\n\n    let a = start;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VenusHighchartComponent.html":{"url":"components/VenusHighchartComponent.html","title":"component - VenusHighchartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VenusHighchartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/venus/venus-highchart/venus-highchart.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-venus-highchart\n            \n\n\n\n            \n                styleUrls\n                ./venus-highchart.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./venus-highchart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chartConstructor\n                            \n                            \n                                chartObject\n                            \n                            \n                                chartOptions\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                Highcharts\n                            \n                            \n                                updateFlag\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                chartInitialized\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                setChartTitle\n                            \n                            \n                                    Private\n                                setChartXAxis\n                            \n                            \n                                    Private\n                                setChartYAxis\n                            \n                            \n                                    Private\n                                setData\n                            \n                            \n                                    Private\n                                updateChart\n                            \n                            \n                                    Private\n                                updateData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: VenusService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/venus/venus-highchart/venus-highchart.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        VenusService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        chartInitialized\n                        \n                    \n                \n            \n            \n                \nchartInitialized($event: Highcharts.Chart)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus-highchart/venus-highchart.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                            Highcharts.Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus-highchart/venus-highchart.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus-highchart/venus-highchart.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setChartTitle\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChartTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus-highchart/venus-highchart.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setChartXAxis\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChartXAxis()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus-highchart/venus-highchart.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setChartYAxis\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChartYAxis()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus-highchart/venus-highchart.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setData\n                        \n                    \n                \n            \n            \n                \n                    \n                    setData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus-highchart/venus-highchart.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateChart\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus-highchart/venus-highchart.component.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateData\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus-highchart/venus-highchart.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chartConstructor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : \"chart\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus-highchart/venus-highchart.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartObject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Highcharts.Chart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus-highchart/venus-highchart.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Highcharts.Options\n\n                    \n                \n                \n                    \n                        Default value : {\n    chart: {\n      animation: false,\n      styledMode: true,\n    },\n    legend: {\n      align: 'center',\n    },\n    tooltip: {\n      enabled: true,\n      shared: false,\n    },\n    exporting: {\n      buttons: {\n        contextButton: {\n          enabled: false,\n        }\n      }\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus-highchart/venus-highchart.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus-highchart/venus-highchart.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Highcharts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Highcharts\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus-highchart/venus-highchart.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFlag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus-highchart/venus-highchart.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnDestroy} from '@angular/core';\nimport * as Highcharts from \"highcharts\";\nimport {Subject, takeUntil} from \"rxjs\";\nimport {VenusService} from \"../venus.service\";\n\n@Component({\n  selector: 'app-venus-highchart',\n  templateUrl: './venus-highchart.component.html',\n  styleUrls: ['./venus-highchart.component.scss']\n})\nexport class VenusHighchartComponent implements AfterViewInit, OnDestroy {\n  Highcharts: typeof Highcharts = Highcharts;\n  updateFlag: boolean = true;\n  chartConstructor: any = \"chart\";\n  chartObject!: Highcharts.Chart;\n  chartOptions: Highcharts.Options = {\n    chart: {\n      animation: false,\n      styledMode: true,\n    },\n    legend: {\n      align: 'center',\n    },\n    tooltip: {\n      enabled: true,\n      shared: false,\n    },\n    exporting: {\n      buttons: {\n        contextButton: {\n          enabled: false,\n        }\n      }\n    }\n  };\n  private destroy$: Subject = new Subject();\n\n  constructor(private service: VenusService) {\n    this.setChartTitle();\n    this.setChartXAxis();\n    this.setChartYAxis();\n  }\n\n  ngAfterViewInit(): void {\n    this.service.setHighChart(this.chartObject);\n    this.setData();\n    this.service.data$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      () => {\n        this.updateData();\n      }\n    );\n    this.service.chartInfo$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      () => {\n        this.setChartTitle();\n        this.setChartXAxis();\n        this.setChartYAxis();\n        this.updateChart();\n      }\n    )\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  chartInitialized($event: Highcharts.Chart) {\n    this.chartObject = $event;\n    // this.service.setHighChart(this.chartObject);\n  }\n\n  private setData() {\n    this.chartObject.addSeries({\n      name: this.service.getDataLabel(),\n      data: this.service.getDataArray(),\n      type: 'scatter',\n    });\n    this.chartObject.addSeries({\n      name: \"Geocentric\",\n      data: this.service.getGeocentricModelDataUpper(),\n      type: 'area',\n    });\n    this.chartObject.addSeries({\n      name: \"Geocentric\",\n      data: this.service.getGeocentricModelDataLower(),\n      type: 'area',\n      showInLegend: false,\n    });\n    this.chartObject.addSeries({\n      name: \"Heliocentric\",\n      data: this.service.getHeliocentricModelData(),\n      type: 'line',\n    });\n  }\n\n  private updateData() {\n    this.chartObject.series[0].update({\n      name: this.service.getDataLabel(),\n      data: this.service.getDataArray(),\n      type: 'scatter',\n    });\n  }\n\n  private setChartTitle(): void {\n    this.chartOptions.title = {text: this.service.getChartTitle()};\n  }\n\n  private setChartXAxis(): void {\n    this.chartOptions.xAxis = {\n      title: {text: this.service.getXAxisLabel()}\n    };\n  }\n\n  private setChartYAxis(): void {\n    this.chartOptions.yAxis = {\n      title: {text: this.service.getYAxisLabel()}\n    };\n  }\n\n  private updateChart() {\n    this.updateFlag = true;\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./venus-highchart.component.scss\n                \n                @import url(\"https://code.highcharts.com/css/highcharts.css\");\n\n.chart-container {\n  width: 100%;\n  height: 100%;\n  padding: 10px;\n}\n\n:host ::ng-deep .highcharts-color-2 {\n  stroke: var(--highcharts-color-1);\n  fill: var(--highcharts-background-color);\n}\n\n:host ::ng-deep .highcharts-area {\n  fill-opacity: 1;\n}\n\n:host ::ng-deep .highcharts-series-inactive {\n  opacity: 1 !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VenusHighchartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VenusModels.html":{"url":"classes/VenusModels.html","title":"class - VenusModels","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VenusModels\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/venus/venus.service.util.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                beta\n                            \n                            \n                                    Private\n                                    Static\n                                dE\n                            \n                            \n                                    Private\n                                    Static\n                                dV\n                            \n                            \n                                    Private\n                                    Static\n                                DV\n                            \n                            \n                                    Private\n                                    Static\n                                maxA\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                geocentric\n                            \n                            \n                                    Static\n                                heliocentric\n                            \n                            \n                                    Private\n                                    Static\n                                sqr\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        beta\n                        \n                    \n                \n            \n                \n                    \n                        Default value : rad(45)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus.service.util.ts:204\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        dE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1.496e8\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus.service.util.ts:208\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        dV\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1.082e8\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus.service.util.ts:210\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        DV\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1.210e4\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus.service.util.ts:206\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        maxA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 60\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus.service.util.ts:202\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        geocentric\n                        \n                    \n                \n            \n            \n                \n                    \n                    geocentric(start: number, end: number, x: number, steps: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:221\n                \n            \n\n\n            \n                \n                     This function generates the data points for the Geocentric model.\n @param start:   The start point of data points.\n @param end:     The end point of data points.\n @param x:       The parameter x that represents the ratio of distance of Sun to Venus versus the\n                 distance of Sun to Earth.\n @param steps:   The number of data points to be generated. Default is 500.\n @returns {Array}\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    start\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        :   The start point of data points.\n\n                                    \n                                \n                                \n                                    end\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        :     The end point of data points.\n\n                                    \n                                \n                                \n                                    x\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        :       The parameter x that represents the ratio of distance of Sun to Venus versus the\n        distance of Sun to Earth.\n\n                                    \n                                \n                                \n                                    steps\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        500\n                                    \n\n                                    \n                                        :   The number of data points to be generated. Default is 500.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [][]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        heliocentric\n                        \n                    \n                \n            \n            \n                \n                    \n                    heliocentric(start: number, end: number, steps: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:251\n                \n            \n\n\n            \n                \n                     This function generates the data points for the Heliocentric model.\n @param start:   The start point of data points.\n @param end:     The end point of data points.\n @param steps:   The number of data points to be generated. Default is 500.\n @returns {Array}\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    start\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        :   The start point of data points.\n\n                                    \n                                \n                                \n                                    end\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        :     The end point of data points.\n\n                                    \n                                \n                                \n                                    steps\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        500\n                                    \n\n                                    \n                                        :   The number of data points to be generated. Default is 500.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [][]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        sqr\n                        \n                    \n                \n            \n            \n                \n                    \n                    sqr(x: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:271\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {rad} from \"../shared/data/utils\";\n\nexport interface VenusDataDict {\n  diameter: number | null;\n  phase: number | null;\n}\n\n\nexport class VenusData implements MyData {\n  private dataDict: VenusDataDict[];\n\n  constructor() {\n    this.dataDict = VenusData.getDefaultData();\n  }\n\n  addRow(index: number, amount: number): void {\n    if (index > 0) {\n      for (let i = 0; i  {\n        return entry.diameter !== null && entry.phase !== null;\n      }\n    ).map(\n      (entry: VenusDataDict) => {\n        return [entry.diameter, entry.phase];\n      });\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: VenusDataDict[]): void {\n    this.dataDict = data;\n  }\n\n  public static getDefaultData(): VenusDataDict[] {\n    return [\n      {diameter: 15, phase: 0.7},\n      {diameter: 30, phase: 0.53},\n      {diameter: 45, phase: 0.27},\n      {diameter: 60, phase: 0},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n    ];\n  }\n}\n\n\nexport interface VenusChartInfoStorageObject {\n  chartTitle: string;\n  dataLabel: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n}\n\n\nexport class VenusChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private dataLabel: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n\n\n  constructor() {\n    this.chartTitle = VenusChartInfo.getDefaultChartInfo().chartTitle;\n    this.dataLabel = VenusChartInfo.getDefaultChartInfo().dataLabel;\n    this.xAxisLabel = VenusChartInfo.getDefaultChartInfo().xAxisLabel;\n    this.yAxisLabel = VenusChartInfo.getDefaultChartInfo().yAxisLabel;\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabel;\n  }\n\n  getStorageObject(): VenusChartInfoStorageObject {\n    return {\n      chartTitle: this.chartTitle,\n      dataLabel: this.dataLabel,\n      xAxisLabel: this.xAxisLabel,\n      yAxisLabel: this.yAxisLabel,\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    this.dataLabel = data;\n  }\n\n  setStorageObject(storageObject: VenusChartInfoStorageObject): void {\n    this.chartTitle = storageObject.chartTitle;\n    this.dataLabel = storageObject.dataLabel;\n    this.xAxisLabel = storageObject.xAxisLabel;\n    this.yAxisLabel = storageObject.yAxisLabel;\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.xAxisLabel = xAxis;\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.yAxisLabel = yAxis;\n  }\n\n  public static getDefaultChartInfo() {\n    return {\n      chartTitle: \"Title\",\n      dataLabel: \"Data\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n    };\n  }\n}\n\n\nexport class VenusStorage implements MyStorage {\n  private readonly dataKey: string = \"venusData\";\n  private readonly chartInfoKey: string = \"venusChartInfo\";\n  getChartInfo(): VenusChartInfoStorageObject {\n    if (localStorage.getItem(this.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(this.chartInfoKey) as string);\n    } else {\n      this.saveChartInfo(VenusChartInfo.getDefaultChartInfo());\n      return VenusChartInfo.getDefaultChartInfo();\n    }\n\n  }\n\n  getData(): VenusDataDict[] {\n    if (localStorage.getItem(this.dataKey)) {\n      return JSON.parse(localStorage.getItem(this.dataKey) as string);\n    } else {\n      this.saveData(VenusData.getDefaultData());\n      return VenusData.getDefaultData();\n    }\n  }\n\n  getInterface(): any {\n  }\n\n  resetChartInfo(): void {\n    this.saveChartInfo(VenusChartInfo.getDefaultChartInfo());\n  }\n\n  resetData(): void {\n    this.saveData(VenusData.getDefaultData());\n  }\n\n  resetInterface(): void {\n  }\n\n  saveChartInfo(chartInfo: VenusChartInfoStorageObject): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(chartInfo));\n  }\n\n  saveData(data: VenusDataDict[]): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: any): void {\n  }\n\n}\n\n\nexport class VenusModels {\n  // Angular diameter of Venus as its closest in arc-seconds.\n  private static maxA = 60;\n  // Max angular separation between Venus and Sun in radians.\n  private static beta = rad(45);\n  // Diameter of Venus in km\n  private static DV = 1.210e4;\n  // Distance from Sun to Earth in km\n  private static dE = 1.496e8;\n  // Distance from Sun to Venus in km\n  private static dV = 1.082e8;\n\n  /**\n   *  This function generates the data points for the Geocentric model.\n   *  @param start:   The start point of data points.\n   *  @param end:     The end point of data points.\n   *  @param x:       The parameter x that represents the ratio of distance of Sun to Venus versus the\n   *                  distance of Sun to Earth.\n   *  @param steps:   The number of data points to be generated. Default is 500.\n   *  @returns {Array}\n   */\n  public static geocentric(start: number, end: number, x: number, steps: number = 500): number[][] {\n    const data: number[][] = [];\n    const step = (end - start) / steps;\n\n    let a = start;\n    for (let i = 0; i  0 ? (1 + cosPhi) / 2 : 0,\n        // How is below different from above????\n        // y: Math.max((1 + cosPhi) / 2, 0) // this doesn't work. I'm so confused\n      ]);\n      a += step;\n    }\n    return data;\n  }\n\n  /**\n   *  This function generates the data points for the Heliocentric model.\n   *  @param start:   The start point of data points.\n   *  @param end:     The end point of data points.\n   *  @param steps:   The number of data points to be generated. Default is 500.\n   *  @returns {Array}\n   */\n  public static heliocentric(start: number, end: number, steps: number = 500): number[][] {\n    const data: number[][] = [];\n    const step = (end - start) / steps;\n\n    let a = start;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VenusModule.html":{"url":"modules/VenusModule.html","title":"module - VenusModule","body":"\n                   \n\n\n\n\n    Modules\n    VenusModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VenusModule\n\n\n\ncluster_VenusModule_declarations\n\n\n\ncluster_VenusModule_imports\n\n\n\ncluster_VenusModule_providers\n\n\n\n\nVenusChartFormComponent\n\nVenusChartFormComponent\n\n\n\nVenusModule\n\nVenusModule\n\nVenusModule -->\n\nVenusChartFormComponent->VenusModule\n\n\n\n\n\nVenusComponent\n\nVenusComponent\n\nVenusModule -->\n\nVenusComponent->VenusModule\n\n\n\n\n\nVenusHighchartComponent\n\nVenusHighchartComponent\n\nVenusModule -->\n\nVenusHighchartComponent->VenusModule\n\n\n\n\n\nVenusTableComponent\n\nVenusTableComponent\n\nVenusModule -->\n\nVenusTableComponent->VenusModule\n\n\n\n\n\nSimpleDataButtonModule\n\nSimpleDataButtonModule\n\nVenusModule -->\n\nSimpleDataButtonModule->VenusModule\n\n\n\n\n\nSimpleGraphButtonModule\n\nSimpleGraphButtonModule\n\nVenusModule -->\n\nSimpleGraphButtonModule->VenusModule\n\n\n\n\n\nVenusService\n\nVenusService\n\nVenusModule -->\n\nVenusService->VenusModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tools/venus/venus.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            VenusChartFormComponent\n                        \n                        \n                            VenusComponent\n                        \n                        \n                            VenusHighchartComponent\n                        \n                        \n                            VenusTableComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            VenusService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SimpleDataButtonModule\n                        \n                        \n                            SimpleGraphButtonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {VenusComponent} from './venus/venus.component';\nimport {SimpleDataButtonModule} from \"../shared/simple-data-button/simple-data-button.component\";\nimport {SimpleGraphButtonModule} from \"../shared/simple-graph-button/simple-graph-button.component\";\nimport {VenusService} from \"./venus.service\";\nimport {VenusTableComponent} from './venus-table/venus-table.component';\nimport {HotTableModule} from \"@handsontable/angular\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {VenusHighchartComponent} from './venus-highchart/venus-highchart.component';\nimport {HighchartsChartModule} from \"highcharts-angular\";\nimport {VenusChartFormComponent} from './venus-chart-form/venus-chart-form.component';\nimport {MatLegacyFormFieldModule} from \"@angular/material/legacy-form-field\";\nimport {MatLegacyInputModule} from \"@angular/material/legacy-input\";\n\n\n@NgModule({\n  declarations: [\n    VenusComponent,\n    VenusTableComponent,\n    VenusHighchartComponent,\n    VenusChartFormComponent\n  ],\n  imports: [\n    SimpleDataButtonModule,\n    SimpleGraphButtonModule,\n    HotTableModule,\n    FormsModule,\n    HighchartsChartModule,\n    MatLegacyFormFieldModule,\n    MatLegacyInputModule,\n    ReactiveFormsModule,\n  ],\n  providers: [VenusService],\n})\nexport class VenusModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VenusService.html":{"url":"injectables/VenusService.html","title":"injectable - VenusService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VenusService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/venus/venus.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                chartInfo$\n                            \n                            \n                                    Private\n                                chartInfoSubject\n                            \n                            \n                                    Public\n                                data$\n                            \n                            \n                                    Private\n                                dataSubject\n                            \n                            \n                                    Private\n                                highChart\n                            \n                            \n                                    Private\n                                venusChartInfo\n                            \n                            \n                                    Private\n                                venusData\n                            \n                            \n                                    Private\n                                venusStorage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRow\n                            \n                            \n                                getChartTitle\n                            \n                            \n                                getData\n                            \n                            \n                                getDataArray\n                            \n                            \n                                getDataLabel\n                            \n                            \n                                    Public\n                                getGeocentricModelDataLower\n                            \n                            \n                                    Public\n                                getGeocentricModelDataUpper\n                            \n                            \n                                    Public\n                                getHeliocentricModelData\n                            \n                            \n                                getHighChart\n                            \n                            \n                                getStorageObject\n                            \n                            \n                                getXAxisLabel\n                            \n                            \n                                getYAxisLabel\n                            \n                            \n                                    Private\n                                limitPrecision\n                            \n                            \n                                removeRow\n                            \n                            \n                                resetChartInfo\n                            \n                            \n                                resetData\n                            \n                            \n                                setChartTitle\n                            \n                            \n                                setData\n                            \n                            \n                                setDataLabel\n                            \n                            \n                                setHighChart\n                            \n                            \n                                setStorageObject\n                            \n                            \n                                setXAxisLabel\n                            \n                            \n                                setYAxisLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/venus/venus.service.ts:31\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRow\n                        \n                    \n                \n            \n            \n                \naddRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:115\n                \n            \n\n\n            \n                \n                    MyData Methods\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChartTitle\n                        \n                    \n                \n            \n            \n                \ngetChartTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:55\n                \n            \n\n\n            \n                \n                    ChartInfo Methods\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         VenusDataDict[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataArray\n                        \n                    \n                \n            \n            \n                \ngetDataArray()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     [][]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataLabel\n                        \n                    \n                \n            \n            \n                \ngetDataLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getGeocentricModelDataLower\n                        \n                    \n                \n            \n            \n                \n                    \n                    getGeocentricModelDataLower()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     [][]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getGeocentricModelDataUpper\n                        \n                    \n                \n            \n            \n                \n                    \n                    getGeocentricModelDataUpper()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:40\n                \n            \n\n\n            \n                \n                    Venus Models\n\n\n                    \n                        Returns :     [][]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getHeliocentricModelData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHeliocentricModelData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     [][]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHighChart\n                        \n                    \n                \n            \n            \n                \ngetHighChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Highcharts.Chart\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStorageObject\n                        \n                    \n                \n            \n            \n                \ngetStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         VenusChartInfoStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getXAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetXAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getYAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetYAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        limitPrecision\n                        \n                    \n                \n            \n            \n                \n                    \n                    limitPrecision(dataArray: number[][], precision: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dataArray\n                                    \n                                            number[][]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    precision\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [][]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRow\n                        \n                    \n                \n            \n            \n                \nremoveRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetChartInfo\n                        \n                    \n                \n            \n            \n                \nresetChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetData\n                        \n                    \n                \n            \n            \n                \nresetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setChartTitle\n                        \n                    \n                \n            \n            \n                \nsetChartTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setData\n                        \n                    \n                \n            \n            \n                \nsetData(data: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDataLabel\n                        \n                    \n                \n            \n            \n                \nsetDataLabel(data: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setHighChart\n                        \n                    \n                \n            \n            \n                \nsetHighChart(highChart: Highcharts.Chart)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    highChart\n                                    \n                                            Highcharts.Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStorageObject\n                        \n                    \n                \n            \n            \n                \nsetStorageObject(storageObject: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storageObject\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setXAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetXAxisLabel(xAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    xAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setYAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetYAxisLabel(yAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    yAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chartInfo$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.chartInfoSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartInfoSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(this.venusChartInfo)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.dataSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(this.venusData.getData())\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        highChart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Highcharts.Chart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        venusChartInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChartInfo\n\n                    \n                \n                \n                    \n                        Default value : new VenusChartInfo()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        venusData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MyData\n\n                    \n                \n                \n                    \n                        Default value : new VenusData()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        venusStorage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MyStorage\n\n                    \n                \n                \n                    \n                        Default value : new VenusStorage()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {MyData} from \"../shared/data/data.interface\";\nimport {\n  VenusChartInfo,\n  VenusChartInfoStorageObject,\n  VenusData,\n  VenusDataDict,\n  VenusModels,\n  VenusStorage\n} from \"./venus.service.util\";\nimport {BehaviorSubject, Observable} from \"rxjs\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\nimport * as Highcharts from \"highcharts\";\n\n@Injectable()\nexport class VenusService implements MyData, ChartInfo {\n\n  private venusStorage: MyStorage = new VenusStorage();\n  private venusData: MyData = new VenusData();\n  private venusChartInfo: ChartInfo = new VenusChartInfo();\n\n\n  private dataSubject: BehaviorSubject\n    = new BehaviorSubject(this.venusData.getData());\n  public data$: Observable = this.dataSubject.asObservable();\n  private chartInfoSubject: BehaviorSubject\n    = new BehaviorSubject(this.venusChartInfo);\n  public chartInfo$: Observable = this.chartInfoSubject.asObservable();\n\n  private highChart!: Highcharts.Chart;\n\n  constructor() {\n    this.venusData.setData(this.venusStorage.getData());\n    this.venusChartInfo.setStorageObject(this.venusStorage.getChartInfo());\n  }\n\n  /** Venus Models**/\n\n  public getGeocentricModelDataUpper(): number[][] {\n    return this.limitPrecision(VenusModels.geocentric(10.15, 60, 0.445), 3);\n  }\n\n  public getGeocentricModelDataLower(): number[][] {\n    return this.limitPrecision(VenusModels.geocentric(10.15, 60, 0.8), 3);\n  }\n\n  public getHeliocentricModelData(): number[][] {\n    return this.limitPrecision(VenusModels.heliocentric(10.15, 60), 3);\n  }\n\n\n  /** ChartInfo Methods **/\n\n  getChartTitle(): string {\n    return this.venusChartInfo.getChartTitle();\n  }\n\n  getXAxisLabel(): string {\n    return this.venusChartInfo.getXAxisLabel();\n  }\n\n  getYAxisLabel(): string {\n    return this.venusChartInfo.getYAxisLabel();\n  }\n\n  getDataLabel(): string {\n    return this.venusChartInfo.getDataLabel();\n  }\n\n  getStorageObject(): VenusChartInfoStorageObject {\n    return this.venusChartInfo.getStorageObject();\n  }\n\n  setChartTitle(title: string): void {\n    this.venusChartInfo.setChartTitle(title);\n    this.venusStorage.saveChartInfo(this.venusChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.venusChartInfo);\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.venusChartInfo.setXAxisLabel(xAxis);\n    this.venusStorage.saveChartInfo(this.venusChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.venusChartInfo);\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.venusChartInfo.setYAxisLabel(yAxis);\n    this.venusStorage.saveChartInfo(this.venusChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.venusChartInfo);\n  }\n\n  setDataLabel(data: string): void {\n    this.venusChartInfo.setDataLabel(data);\n    this.venusStorage.saveChartInfo(this.venusChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.venusChartInfo);\n    this.dataSubject.next(this.getData());\n  }\n\n  setStorageObject(storageObject: any): void {\n    this.venusChartInfo.setStorageObject(storageObject);\n    this.venusStorage.saveChartInfo(this.venusChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.venusChartInfo);\n  }\n\n  resetChartInfo(): void {\n    this.venusChartInfo.setStorageObject(VenusChartInfo.getDefaultChartInfo());\n    this.venusStorage.saveChartInfo(this.venusChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.venusChartInfo);\n    this.dataSubject.next(this.getData());\n  }\n\n  /** MyData Methods **/\n\n  addRow(index: number, amount: number): void {\n    this.venusData.addRow(index, amount);\n    this.venusStorage.saveData(this.venusData.getData());\n    this.dataSubject.next(this.venusData.getData());\n  }\n\n  getData(): VenusDataDict[] {\n    return this.venusData.getData();\n  }\n\n  getDataArray(): (number | null)[][] {\n    return this.venusData.getDataArray();\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.venusData.removeRow(index, amount);\n    this.venusStorage.saveData(this.venusData.getData());\n    this.dataSubject.next(this.venusData.getData());\n  }\n\n  setData(data: any[]): void {\n    this.venusData.setData(data);\n    this.venusStorage.saveData(data);\n    this.dataSubject.next(this.venusData.getData());\n  }\n\n  resetData(): void {\n    this.setData(VenusData.getDefaultData());\n  }\n\n  setHighChart(highChart: Highcharts.Chart): void {\n    this.highChart = highChart;\n  }\n\n  getHighChart(): Highcharts.Chart {\n    return this.highChart;\n  }\n\n\n  private limitPrecision(dataArray: number[][], precision: number): number[][] {\n    return dataArray.map(\n      (row: number[]) => {\n        return row.map((value: number) => {\n          return value ? parseFloat(value.toFixed(precision)) : value;\n        });\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VenusStorage.html":{"url":"classes/VenusStorage.html","title":"class - VenusStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VenusStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/venus/venus.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyStorage\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                chartInfoKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                dataKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getChartInfo\n                            \n                            \n                                getData\n                            \n                            \n                                getInterface\n                            \n                            \n                                resetChartInfo\n                            \n                            \n                                resetData\n                            \n                            \n                                resetInterface\n                            \n                            \n                                saveChartInfo\n                            \n                            \n                                saveData\n                            \n                            \n                                saveInterface\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        chartInfoKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"venusChartInfo\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus.service.util.ts:152\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dataKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"venusData\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus.service.util.ts:151\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getChartInfo\n                        \n                    \n                \n            \n            \n                \ngetChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         VenusChartInfoStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         VenusDataDict[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInterface\n                        \n                    \n                \n            \n            \n                \ngetInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetChartInfo\n                        \n                    \n                \n            \n            \n                \nresetChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetData\n                        \n                    \n                \n            \n            \n                \nresetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetInterface\n                        \n                    \n                \n            \n            \n                \nresetInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveChartInfo\n                        \n                    \n                \n            \n            \n                \nsaveChartInfo(chartInfo: VenusChartInfoStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:186\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartInfo\n                                    \n                                                VenusChartInfoStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveData\n                        \n                    \n                \n            \n            \n                \nsaveData(data: VenusDataDict[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                VenusDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveInterface\n                        \n                    \n                \n            \n            \n                \nsaveInterface(interfaceInfo: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    interfaceInfo\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {rad} from \"../shared/data/utils\";\n\nexport interface VenusDataDict {\n  diameter: number | null;\n  phase: number | null;\n}\n\n\nexport class VenusData implements MyData {\n  private dataDict: VenusDataDict[];\n\n  constructor() {\n    this.dataDict = VenusData.getDefaultData();\n  }\n\n  addRow(index: number, amount: number): void {\n    if (index > 0) {\n      for (let i = 0; i  {\n        return entry.diameter !== null && entry.phase !== null;\n      }\n    ).map(\n      (entry: VenusDataDict) => {\n        return [entry.diameter, entry.phase];\n      });\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: VenusDataDict[]): void {\n    this.dataDict = data;\n  }\n\n  public static getDefaultData(): VenusDataDict[] {\n    return [\n      {diameter: 15, phase: 0.7},\n      {diameter: 30, phase: 0.53},\n      {diameter: 45, phase: 0.27},\n      {diameter: 60, phase: 0},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n    ];\n  }\n}\n\n\nexport interface VenusChartInfoStorageObject {\n  chartTitle: string;\n  dataLabel: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n}\n\n\nexport class VenusChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private dataLabel: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n\n\n  constructor() {\n    this.chartTitle = VenusChartInfo.getDefaultChartInfo().chartTitle;\n    this.dataLabel = VenusChartInfo.getDefaultChartInfo().dataLabel;\n    this.xAxisLabel = VenusChartInfo.getDefaultChartInfo().xAxisLabel;\n    this.yAxisLabel = VenusChartInfo.getDefaultChartInfo().yAxisLabel;\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabel;\n  }\n\n  getStorageObject(): VenusChartInfoStorageObject {\n    return {\n      chartTitle: this.chartTitle,\n      dataLabel: this.dataLabel,\n      xAxisLabel: this.xAxisLabel,\n      yAxisLabel: this.yAxisLabel,\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    this.dataLabel = data;\n  }\n\n  setStorageObject(storageObject: VenusChartInfoStorageObject): void {\n    this.chartTitle = storageObject.chartTitle;\n    this.dataLabel = storageObject.dataLabel;\n    this.xAxisLabel = storageObject.xAxisLabel;\n    this.yAxisLabel = storageObject.yAxisLabel;\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.xAxisLabel = xAxis;\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.yAxisLabel = yAxis;\n  }\n\n  public static getDefaultChartInfo() {\n    return {\n      chartTitle: \"Title\",\n      dataLabel: \"Data\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n    };\n  }\n}\n\n\nexport class VenusStorage implements MyStorage {\n  private readonly dataKey: string = \"venusData\";\n  private readonly chartInfoKey: string = \"venusChartInfo\";\n  getChartInfo(): VenusChartInfoStorageObject {\n    if (localStorage.getItem(this.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(this.chartInfoKey) as string);\n    } else {\n      this.saveChartInfo(VenusChartInfo.getDefaultChartInfo());\n      return VenusChartInfo.getDefaultChartInfo();\n    }\n\n  }\n\n  getData(): VenusDataDict[] {\n    if (localStorage.getItem(this.dataKey)) {\n      return JSON.parse(localStorage.getItem(this.dataKey) as string);\n    } else {\n      this.saveData(VenusData.getDefaultData());\n      return VenusData.getDefaultData();\n    }\n  }\n\n  getInterface(): any {\n  }\n\n  resetChartInfo(): void {\n    this.saveChartInfo(VenusChartInfo.getDefaultChartInfo());\n  }\n\n  resetData(): void {\n    this.saveData(VenusData.getDefaultData());\n  }\n\n  resetInterface(): void {\n  }\n\n  saveChartInfo(chartInfo: VenusChartInfoStorageObject): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(chartInfo));\n  }\n\n  saveData(data: VenusDataDict[]): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: any): void {\n  }\n\n}\n\n\nexport class VenusModels {\n  // Angular diameter of Venus as its closest in arc-seconds.\n  private static maxA = 60;\n  // Max angular separation between Venus and Sun in radians.\n  private static beta = rad(45);\n  // Diameter of Venus in km\n  private static DV = 1.210e4;\n  // Distance from Sun to Earth in km\n  private static dE = 1.496e8;\n  // Distance from Sun to Venus in km\n  private static dV = 1.082e8;\n\n  /**\n   *  This function generates the data points for the Geocentric model.\n   *  @param start:   The start point of data points.\n   *  @param end:     The end point of data points.\n   *  @param x:       The parameter x that represents the ratio of distance of Sun to Venus versus the\n   *                  distance of Sun to Earth.\n   *  @param steps:   The number of data points to be generated. Default is 500.\n   *  @returns {Array}\n   */\n  public static geocentric(start: number, end: number, x: number, steps: number = 500): number[][] {\n    const data: number[][] = [];\n    const step = (end - start) / steps;\n\n    let a = start;\n    for (let i = 0; i  0 ? (1 + cosPhi) / 2 : 0,\n        // How is below different from above????\n        // y: Math.max((1 + cosPhi) / 2, 0) // this doesn't work. I'm so confused\n      ]);\n      a += step;\n    }\n    return data;\n  }\n\n  /**\n   *  This function generates the data points for the Heliocentric model.\n   *  @param start:   The start point of data points.\n   *  @param end:     The end point of data points.\n   *  @param steps:   The number of data points to be generated. Default is 500.\n   *  @returns {Array}\n   */\n  public static heliocentric(start: number, end: number, steps: number = 500): number[][] {\n    const data: number[][] = [];\n    const step = (end - start) / steps;\n\n    let a = start;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VenusTable.html":{"url":"classes/VenusTable.html","title":"class - VenusTable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VenusTable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/venus/venus-table/venus-table.component.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyTable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hotRegisterer\n                            \n                            \n                                    Private\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                            \n                                getTable\n                            \n                            \n                                renderTable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/venus/venus-table/venus-table.component.ts:71\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hotRegisterer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HotTableRegisterer()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus-table/venus-table.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus-table/venus-table.component.ts:70\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus-table/venus-table.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTable\n                        \n                    \n                \n            \n            \n                \ngetTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus-table/venus-table.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Handsontable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderTable\n                        \n                    \n                \n            \n            \n                \nrenderTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus-table/venus-table.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {AfterViewInit, Component, OnDestroy} from '@angular/core';\nimport {VenusService} from \"../venus.service\";\nimport {Subject, takeUntil} from \"rxjs\";\nimport {VenusDataDict} from \"../venus.service.util\";\nimport {MyTable} from \"../../shared/tables/table-interface\";\nimport {HotTableRegisterer} from \"@handsontable/angular\";\nimport Handsontable from \"handsontable\";\n\n@Component({\n  selector: 'app-venus-table',\n  templateUrl: './venus-table.component.html',\n  styleUrls: ['./venus-table.component.scss']\n})\nexport class VenusTableComponent implements AfterViewInit, OnDestroy {\n  private destroy$: Subject = new Subject();\n  id: string = \"moon-table\";\n  table: VenusTable = new VenusTable(this.id);\n  colNames: string[] = [\"Angular Diameter\", \"Phase of Venus\"];\n  dataSet: VenusDataDict[];\n\n\n  constructor(private service: VenusService) {\n    this.dataSet = this.service.getData();\n  }\n\n  ngAfterViewInit(): void {\n    this.service.data$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      () => {\n        this.dataSet = this.limitPrecision(this.service.getData(), 3);\n        this.table.renderTable();\n      }\n    )\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  public onChange = (changes: any, source: any) => {\n    if (changes) {\n      this.service.setData(this.table.getData());\n    }\n  }\n\n  public onRemove = (index: number, amount: number) => {\n    this.service.removeRow(index, amount);\n    // this.service.setData(this.table.getData());\n  }\n\n  public onInsert = (index: number, amount: number) => {\n    this.service.addRow(index, amount);\n  }\n\n  private limitPrecision(data: VenusDataDict[], precision: number): VenusDataDict[] {\n    return data.map(\n      (row: VenusDataDict) => {\n        return {\n          diameter: row.diameter ? parseFloat(row.diameter.toFixed(precision)) : row.diameter,\n          phase: row.phase ? parseFloat(row.phase.toFixed(precision)) : row.phase\n        }\n      }\n    );\n  }\n}\n\nclass VenusTable implements MyTable {\n  private readonly id: string;\n  private hotRegisterer = new HotTableRegisterer();\n\n  constructor(id: string) {\n    this.id = id;\n  }\n\n  getTable(): Handsontable {\n    return this.hotRegisterer.getInstance(this.id);\n  }\n\n  renderTable(): void {\n    this.getTable().render();\n  }\n\n  getData(): any[] {\n    return this.getTable().getSourceData();\n  }\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VenusTableComponent.html":{"url":"components/VenusTableComponent.html","title":"component - VenusTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VenusTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/venus/venus-table/venus-table.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-venus-table\n            \n\n\n\n            \n                styleUrls\n                ./venus-table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./venus-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                colNames\n                            \n                            \n                                dataSet\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                id\n                            \n                            \n                                    Public\n                                onChange\n                            \n                            \n                                    Public\n                                onInsert\n                            \n                            \n                                    Public\n                                onRemove\n                            \n                            \n                                table\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                limitPrecision\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: VenusService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/venus/venus-table/venus-table.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        VenusService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        limitPrecision\n                        \n                    \n                \n            \n            \n                \n                    \n                    limitPrecision(data: VenusDataDict[], precision: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus-table/venus-table.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                VenusDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    precision\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         VenusDataDict[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus-table/venus-table.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus-table/venus-table.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        colNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\"Angular Diameter\", \"Phase of Venus\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus-table/venus-table.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VenusDataDict[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus-table/venus-table.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus-table/venus-table.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"moon-table\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus-table/venus-table.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus-table/venus-table.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onInsert\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus-table/venus-table.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onRemove\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus-table/venus-table.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        table\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VenusTable\n\n                    \n                \n                \n                    \n                        Default value : new VenusTable(this.id)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus-table/venus-table.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnDestroy} from '@angular/core';\nimport {VenusService} from \"../venus.service\";\nimport {Subject, takeUntil} from \"rxjs\";\nimport {VenusDataDict} from \"../venus.service.util\";\nimport {MyTable} from \"../../shared/tables/table-interface\";\nimport {HotTableRegisterer} from \"@handsontable/angular\";\nimport Handsontable from \"handsontable\";\n\n@Component({\n  selector: 'app-venus-table',\n  templateUrl: './venus-table.component.html',\n  styleUrls: ['./venus-table.component.scss']\n})\nexport class VenusTableComponent implements AfterViewInit, OnDestroy {\n  private destroy$: Subject = new Subject();\n  id: string = \"moon-table\";\n  table: VenusTable = new VenusTable(this.id);\n  colNames: string[] = [\"Angular Diameter\", \"Phase of Venus\"];\n  dataSet: VenusDataDict[];\n\n\n  constructor(private service: VenusService) {\n    this.dataSet = this.service.getData();\n  }\n\n  ngAfterViewInit(): void {\n    this.service.data$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      () => {\n        this.dataSet = this.limitPrecision(this.service.getData(), 3);\n        this.table.renderTable();\n      }\n    )\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  public onChange = (changes: any, source: any) => {\n    if (changes) {\n      this.service.setData(this.table.getData());\n    }\n  }\n\n  public onRemove = (index: number, amount: number) => {\n    this.service.removeRow(index, amount);\n    // this.service.setData(this.table.getData());\n  }\n\n  public onInsert = (index: number, amount: number) => {\n    this.service.addRow(index, amount);\n  }\n\n  private limitPrecision(data: VenusDataDict[], precision: number): VenusDataDict[] {\n    return data.map(\n      (row: VenusDataDict) => {\n        return {\n          diameter: row.diameter ? parseFloat(row.diameter.toFixed(precision)) : row.diameter,\n          phase: row.phase ? parseFloat(row.phase.toFixed(precision)) : row.phase\n        }\n      }\n    );\n  }\n}\n\nclass VenusTable implements MyTable {\n  private readonly id: string;\n  private hotRegisterer = new HotTableRegisterer();\n\n  constructor(id: string) {\n    this.id = id;\n  }\n\n  getTable(): Handsontable {\n    return this.hotRegisterer.getInstance(this.id);\n  }\n\n  renderTable(): void {\n    this.getTable().render();\n  }\n\n  getData(): any[] {\n    return this.getTable().getSourceData();\n  }\n\n}\n\n\n    \n\n    \n        \n  \n  \n\n\n\n    \n\n    \n                \n                    ./venus-table.component.scss\n                \n                .container {\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'SpectrumChartFormComponent', 'selector': 'app-spectrum-chart-form'},{'name': 'SpectrumComponent', 'selector': 'app-spectrum'},{'name': 'SpectrumFormComponent', 'selector': 'app-spectrum-form'},{'name': 'SpectrumHighchartComponent', 'selector': 'app-spectrum-highchart'},{'name': 'SpectrumTableComponent', 'selector': 'app-spectrum-table'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VenusTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app-routing.module.ts\n            \n            function\n            getToolSiteName\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/shared/about/about.component.ts\n            \n            component\n            AboutComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/menubar/menubar.component.ts\n            \n            component\n            MenubarComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/settings/appearance/appearance.component.ts\n            \n            component\n            AppearanceComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/shared/settings/appearance/service/appearance-storage.service.ts\n            \n            injectable\n            AppearanceStorageService\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/shared/settings/appearance/service/appearance.service.ts\n            \n            injectable\n            AppearanceService\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/shared/settings/appearance/service/appearance.utils.ts\n            \n            class\n            ChartColor\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/settings/appearance/service/appearance.utils.ts\n            \n            class\n            ColorThemeSettings\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/settings/appearance/service/appearance.utils.ts\n            \n            class\n            DefaultAppearanceSettings\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/settings/appearance/service/appearance.utils.ts\n            \n            interface\n            MyColorTheme\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/settings/appearance/service/appearance.utils.ts\n            \n            interface\n            MyFontFamily\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/settings/appearance/service/appearance.utils.ts\n            \n            interface\n            MyFontSize\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/settings/appearance/service/appearance.utils.ts\n            \n            interface\n            MyFontStyle\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/tools-navbar/tools-navbar.component.ts\n            \n            component\n            ToolsNavbarComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve-chart-form/curve-chart-form.component.ts\n            \n            component\n            CurveChartFormComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve-chart/curve-chart.component.ts\n            \n            component\n            CurveChartComponent\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve-chart/curve-chart.component.ts\n            \n            class\n            CurveChart\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve-highchart/curve-high-chart.component.ts\n            \n            component\n            CurveHighChartComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve-table/curve-table.component.ts\n            \n            component\n            CurveTableComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve-table/curve-table.component.ts\n            \n            class\n            CurveTable\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve.component.ts\n            \n            component\n            CurveComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve.service.ts\n            \n            injectable\n            CurveService\n            \n                6 %\n                (3/44)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve.service.util.ts\n            \n            class\n            CurveChartInfo\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve.service.util.ts\n            \n            class\n            CurveData\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve.service.util.ts\n            \n            class\n            CurveImpl\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve.service.util.ts\n            \n            class\n            CurveStorage\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve.service.util.ts\n            \n            interface\n            CurveChartInfoStorageObject\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve.service.util.ts\n            \n            interface\n            CurveDataDict\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve.service.util.ts\n            \n            interface\n            CurveInterface\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve.service.util.ts\n            \n            interface\n            CurveInterfaceStorageObject\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/tools/curve/line-form/line-form.component.ts\n            \n            component\n            LineFormComponent\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                src/app/tools/dual/dual-chart-form/dual-chart-form.component.ts\n            \n            component\n            DualChartFormComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/tools/dual/dual-highchart/dual-highchart.component.ts\n            \n            component\n            DualHighchartComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/tools/dual/dual-table/dual-table.component.ts\n            \n            component\n            DualTableComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/tools/dual/dual-table/dual-table.component.ts\n            \n            class\n            DualTable\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/tools/dual/dual.service.ts\n            \n            injectable\n            DualService\n            \n                6 %\n                (2/30)\n            \n        \n        \n            \n                \n                src/app/tools/dual/dual.service.util.ts\n            \n            class\n            DualChartInfo\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/tools/dual/dual.service.util.ts\n            \n            class\n            DualData\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/tools/dual/dual.service.util.ts\n            \n            class\n            DualStorage\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/tools/dual/dual.service.util.ts\n            \n            interface\n            DualChartInfoStorageObject\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/tools/dual/dual.service.util.ts\n            \n            interface\n            DualDataDict\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/tools/dual/dual/dual.component.ts\n            \n            component\n            DualComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/tools/moon/moon-chart-form/moon-chart-form.component.ts\n            \n            component\n            MoonChartFormComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/tools/moon/moon-form/moon-form.component.ts\n            \n            component\n            MoonFormComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/tools/moon/moon-highchart/moon-highchart.component.ts\n            \n            component\n            MoonHighchartComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/tools/moon/moon-table/moon-table.component.ts\n            \n            component\n            MoonTableComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/tools/moon/moon-table/moon-table.component.ts\n            \n            class\n            MoonTable\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/tools/moon/moon.service.ts\n            \n            injectable\n            MoonService\n            \n                9 %\n                (4/44)\n            \n        \n        \n            \n                \n                src/app/tools/moon/moon.service.util.ts\n            \n            class\n            MoonChartInfo\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/tools/moon/moon.service.util.ts\n            \n            class\n            MoonData\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/tools/moon/moon.service.util.ts\n            \n            class\n            MoonInterfaceImpl\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/tools/moon/moon.service.util.ts\n            \n            class\n            MoonStorage\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/tools/moon/moon.service.util.ts\n            \n            interface\n            MoonChartInfoStorageObject\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/tools/moon/moon.service.util.ts\n            \n            interface\n            MoonDataDict\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/tools/moon/moon.service.util.ts\n            \n            interface\n            MoonInterface\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/tools/moon/moon.service.util.ts\n            \n            interface\n            MoonInterfaceStorageObject\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/tools/moon/moon.service.util.ts\n            \n            interface\n            MoonModel\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/tools/moon/moon/moon.component.ts\n            \n            component\n            MoonComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/tools/scatter/scatter-chart-form/scatter-chart-form.component.ts\n            \n            component\n            ScatterChartFormComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/tools/scatter/scatter-form/scatter-form.component.ts\n            \n            component\n            ScatterFormComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts\n            \n            component\n            ScatterHighchartComponent\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/tools/scatter/scatter-table/scatter-table.component.ts\n            \n            component\n            ScatterTableComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/tools/scatter/scatter-table/scatter-table.component.ts\n            \n            class\n            ScatterTable\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/tools/scatter/scatter.service.ts\n            \n            injectable\n            ScatterService\n            \n                7 %\n                (3/40)\n            \n        \n        \n            \n                \n                src/app/tools/scatter/scatter.service.util.ts\n            \n            class\n            ScatterChartInfo\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/tools/scatter/scatter.service.util.ts\n            \n            class\n            ScatterData\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/tools/scatter/scatter.service.util.ts\n            \n            class\n            ScatterModelInterface\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/app/tools/scatter/scatter.service.util.ts\n            \n            class\n            ScatterStorage\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/tools/scatter/scatter.service.util.ts\n            \n            interface\n            ScatterChartInfoStorageObject\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/tools/scatter/scatter.service.util.ts\n            \n            interface\n            ScatterDataDict\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/tools/scatter/scatter.service.util.ts\n            \n            interface\n            ScatterInterfaceStorageObject\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/tools/scatter/scatter.service.util.ts\n            \n            interface\n            ScatterModel\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/tools/scatter/scatter/scatter.component.ts\n            \n            component\n            ScatterComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/tools/shared/charts/chart.interface.ts\n            \n            interface\n            ChartInfo\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/tools/shared/charts/chart.interface.ts\n            \n            interface\n            MyChart\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/tools/shared/charts/utils.ts\n            \n            function\n            addEXIFToImage\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tools/shared/charts/utils.ts\n            \n            function\n            dataURLtoBlob\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tools/shared/charts/utils.ts\n            \n            function\n            dateAppendZero\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tools/shared/charts/utils.ts\n            \n            function\n            formatTime\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/tools/shared/charts/utils.ts\n            \n            function\n            getDateString\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tools/shared/charts/utils.ts\n            \n            function\n            updateLine\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tools/shared/data/FileParser.ts\n            \n            class\n            MyFileParser\n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                src/app/tools/shared/data/FileParser.ts\n            \n            class\n            MyFileParserDefault\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/tools/shared/data/FileParser.ts\n            \n            class\n            MyFileParserTXT\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/tools/shared/data/FileParser.ts\n            \n            interface\n            HeaderRequirement\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/tools/shared/data/FileParser.ts\n            \n            interface\n            MyFileParserStrategy\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/tools/shared/data/data.interface.ts\n            \n            interface\n            MyData\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/tools/shared/data/utils.ts\n            \n            function\n            rad\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tools/shared/honor-code-popup/honor-code-chart.service.ts\n            \n            injectable\n            HonorCodeChartService\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/tools/shared/honor-code-popup/honor-code-popup.component.ts\n            \n            component\n            HonorCodePopupComponent\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/tools/shared/honor-code-popup/honor-code-popup.service.ts\n            \n            injectable\n            HonorCodePopupService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/tools/shared/interface/input-slider/input-slider.component.ts\n            \n            component\n            InputSliderComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/tools/shared/interface/input-slider/input-slider.component.ts\n            \n            class\n            SliderUtil\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/tools/shared/interface/input-slider/input-slider.component.ts\n            \n            interface\n            InputSliderValue\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/tools/shared/simple-data-button/simple-data-button.component.ts\n            \n            component\n            SimpleDataButtonComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/tools/shared/simple-graph-button/simple-graph-button.component.ts\n            \n            component\n            SimpleGraphButtonComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/tools/shared/storage/storage.interface.ts\n            \n            interface\n            MyStorage\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/tools/shared/tables/table-interface.ts\n            \n            interface\n            MyTable\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/tools/spectrum/spectrum-chart-form/spectrum-chart-form.component.ts\n            \n            component\n            SpectrumChartFormComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/tools/spectrum/spectrum-form/spectrum-form.component.ts\n            \n            component\n            SpectrumFormComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/tools/spectrum/spectrum-highchart/spectrum-highchart.component.ts\n            \n            component\n            SpectrumHighchartComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/tools/spectrum/spectrum-table/spectrum-table.component.ts\n            \n            component\n            SpectrumTableComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/tools/spectrum/spectrum-table/spectrum-table.component.ts\n            \n            class\n            SpectrumTable\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/tools/spectrum/spectrum.service.ts\n            \n            injectable\n            SpectrumService\n            \n                8 %\n                (3/34)\n            \n        \n        \n            \n                \n                src/app/tools/spectrum/spectrum.service.util.ts\n            \n            class\n            SpectrumChartInfo\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/tools/spectrum/spectrum.service.util.ts\n            \n            class\n            SpectrumData\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/tools/spectrum/spectrum.service.util.ts\n            \n            class\n            SpectrumInterfaceImpl\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/tools/spectrum/spectrum.service.util.ts\n            \n            class\n            SpectrumStorage\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/tools/spectrum/spectrum.service.util.ts\n            \n            interface\n            SpectrumChartInfoStorageObject\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/tools/spectrum/spectrum.service.util.ts\n            \n            interface\n            SpectrumDataDict\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/tools/spectrum/spectrum.service.util.ts\n            \n            interface\n            SpectrumInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/tools/spectrum/spectrum/spectrum.component.ts\n            \n            component\n            SpectrumComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/tools/venus/venus-chart-form/venus-chart-form.component.ts\n            \n            component\n            VenusChartFormComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/tools/venus/venus-highchart/venus-highchart.component.ts\n            \n            component\n            VenusHighchartComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/tools/venus/venus-table/venus-table.component.ts\n            \n            component\n            VenusTableComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/tools/venus/venus-table/venus-table.component.ts\n            \n            class\n            VenusTable\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/tools/venus/venus.service.ts\n            \n            injectable\n            VenusService\n            \n                9 %\n                (3/33)\n            \n        \n        \n            \n                \n                src/app/tools/venus/venus.service.util.ts\n            \n            class\n            VenusChartInfo\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/tools/venus/venus.service.util.ts\n            \n            class\n            VenusData\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/tools/venus/venus.service.util.ts\n            \n            class\n            VenusModels\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                src/app/tools/venus/venus.service.util.ts\n            \n            class\n            VenusStorage\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/tools/venus/venus.service.util.ts\n            \n            interface\n            VenusChartInfoStorageObject\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/tools/venus/venus.service.util.ts\n            \n            interface\n            VenusDataDict\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/tools/venus/venus/venus.component.ts\n            \n            component\n            VenusComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^15.2.9\n        \n            @angular/cdk : ^15.2.9\n        \n            @angular/common : ^15.2.9\n        \n            @angular/compiler : ^15.2.9\n        \n            @angular/core : ^15.2.9\n        \n            @angular/forms : ^15.2.9\n        \n            @angular/localize : ^15.2.9\n        \n            @angular/material : ^15.2.9\n        \n            @angular/platform-browser : ^15.2.9\n        \n            @angular/platform-browser-dynamic : ^15.2.9\n        \n            @angular/router : ^15.2.9\n        \n            @compodoc/compodoc : ^1.1.19\n        \n            @handsontable/angular : ^12.4.0\n        \n            @ng-bootstrap/ng-bootstrap : ^14.1.0\n        \n            @popperjs/core : ^2.10.2\n        \n            @types/file-saver : ^2.0.5\n        \n            bootstrap : ^5.3.0-alpha1\n        \n            bootstrap-icons : ^1.10.3\n        \n            chart.js : ^4.2.1\n        \n            file-saver : ^2.0.5\n        \n            handsontable : ^12.4.0\n        \n            highcharts : ^11.1.0\n        \n            highcharts-angular : ^3.1.2\n        \n            highcharts-exporting : ^0.1.7\n        \n            highcharts-offline-exporting : ^0.1.7\n        \n            ng2-charts : ^4.1.1\n        \n            ngx-webstorage-service : ^5.0.0\n        \n            node-sass : ^8.0.0\n        \n            piexif-ts : ^2.0.16\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ChartColorMode   (src/.../appearance.utils.ts)\n                        \n                        \n                            ColorThemes   (src/.../appearance.utils.ts)\n                        \n                        \n                            CurveCounts   (src/.../curve.service.util.ts)\n                        \n                        \n                            CurveParam   (src/.../curve.service.util.ts)\n                        \n                        \n                            FileType   (src/.../FileParser.ts)\n                        \n                        \n                            FontFamily   (src/.../appearance.utils.ts)\n                        \n                        \n                            FontSizes   (src/.../appearance.utils.ts)\n                        \n                        \n                            FontStyles   (src/.../appearance.utils.ts)\n                        \n                        \n                            MoonModelParameters   (src/.../moon-form.component.ts)\n                        \n                        \n                            MyFileParserErrors   (src/.../FileParser.ts)\n                        \n                        \n                            ScatterModelParameters   (src/.../scatter-form.component.ts)\n                        \n                        \n                            SpectrumOptions   (src/.../spectrum.service.util.ts)\n                        \n                        \n                            UpdateSource   (src/.../moon.service.util.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/settings/appearance/service/appearance.utils.ts\n    \n        \n            \n                \n                    \n                        \n                        ChartColorMode\n                    \n                \n                        \n                            \n                                 LIGHT\n                            \n                        \n                        \n                            \n                                Value : LIGHT\n                            \n                        \n                        \n                            \n                                 DARK\n                            \n                        \n                        \n                            \n                                Value : DARK\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ColorThemes\n                    \n                \n                        \n                            \n                                 LIGHT\n                            \n                        \n                        \n                            \n                                Value : LIGHT_THEME\n                            \n                        \n                        \n                            \n                                 DARK\n                            \n                        \n                        \n                            \n                                Value : DARK_THEME\n                            \n                        \n                        \n                            \n                                 HIGH_CONTRAST_DARK\n                            \n                        \n                        \n                            \n                                Value : HC_DARK_THEME\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        FontFamily\n                    \n                \n                        \n                            \n                                 ROBOTO\n                            \n                        \n                        \n                            \n                                Value : Roboto\n                            \n                        \n                        \n                            \n                                 COMIC_NEUE\n                            \n                        \n                        \n                            \n                                Value : Comic-Neue\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        FontSizes\n                    \n                \n                        \n                            \n                                 SMALL\n                            \n                        \n                        \n                            \n                                Value : small\n                            \n                        \n                        \n                            \n                                 DEFAULT\n                            \n                        \n                        \n                            \n                                Value : default\n                            \n                        \n                        \n                            \n                                 LARGE\n                            \n                        \n                        \n                            \n                                Value : large\n                            \n                        \n                        \n                            \n                                 LARGER\n                            \n                        \n                        \n                            \n                                Value : larger\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        FontStyles\n                    \n                \n                        \n                            \n                                 DEFAULT\n                            \n                        \n                        \n                            \n                                Value : normal\n                            \n                        \n                        \n                            \n                                 BOLD\n                            \n                        \n                        \n                            \n                                Value : bold\n                            \n                        \n                        \n                            \n                                 EXTRA_BOLD\n                            \n                        \n                        \n                            \n                                Value : bolder\n                            \n                        \n            \n        \n\n    src/app/tools/curve/curve.service.util.ts\n    \n        \n            \n                \n                    \n                        \n                        CurveCounts\n                    \n                \n                        \n                            \n                                 ONE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 TWO\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 THREE\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 FOUR\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        CurveParam\n                    \n                \n                        \n                            \n                                 X\n                            \n                        \n                        \n                            \n                                Value : x\n                            \n                        \n                        \n                            \n                                 Y1\n                            \n                        \n                        \n                            \n                                Value : y1\n                            \n                        \n                        \n                            \n                                 Y2\n                            \n                        \n                        \n                            \n                                Value : y2\n                            \n                        \n                        \n                            \n                                 Y3\n                            \n                        \n                        \n                            \n                                Value : y3\n                            \n                        \n                        \n                            \n                                 Y4\n                            \n                        \n                        \n                            \n                                Value : y4\n                            \n                        \n            \n        \n\n    src/app/tools/shared/data/FileParser.ts\n    \n        \n            \n                \n                    \n                        \n                        FileType\n                    \n                \n                        \n                            \n                                 GBO_SPECTRUM_TXT\n                            \n                        \n                        \n                            \n                                Value : gbo-spectrum-txt\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        MyFileParserErrors\n                    \n                \n                        \n                            \n                                 FORMAT\n                            \n                        \n                        \n                            \n                                Value : format\n                            \n                        \n                        \n                            \n                                 FIELD\n                            \n                        \n                        \n                            \n                                Value : field\n                            \n                        \n                        \n                            \n                                 HEADER\n                            \n                        \n                        \n                            \n                                Value : header\n                            \n                        \n                        \n                            \n                                 DATA\n                            \n                        \n                        \n                            \n                                Value : data\n                            \n                        \n                        \n                            \n                                 STRATEGY\n                            \n                        \n                        \n                            \n                                Value : strategy\n                            \n                        \n            \n        \n\n    src/app/tools/moon/moon-form/moon-form.component.ts\n    \n        \n            \n                \n                    \n                        \n                        MoonModelParameters\n                    \n                \n                        \n                            \n                                 AMPLITUDE\n                            \n                        \n                        \n                            \n                                Value : amplitude\n                            \n                        \n                        \n                            \n                                 PERIOD\n                            \n                        \n                        \n                            \n                                Value : period\n                            \n                        \n                        \n                            \n                                 PHASE\n                            \n                        \n                        \n                            \n                                Value : phase\n                            \n                        \n                        \n                            \n                                 TILT\n                            \n                        \n                        \n                            \n                                Value : tilt\n                            \n                        \n            \n        \n\n    src/app/tools/scatter/scatter-form/scatter-form.component.ts\n    \n        \n            \n                \n                    \n                        \n                        ScatterModelParameters\n                    \n                \n                        \n                            \n                                 DISTANCE\n                            \n                        \n                        \n                            \n                                Value : distance\n                            \n                        \n                        \n                            \n                                 DIAMETER\n                            \n                        \n                        \n                            \n                                Value : diameter\n                            \n                        \n            \n        \n\n    src/app/tools/spectrum/spectrum.service.util.ts\n    \n        \n            \n                \n                    \n                        \n                        SpectrumOptions\n                    \n                \n                        \n                            \n                                 ONE\n                            \n                        \n                        \n                            \n                                Value : Channel 1\n                            \n                        \n                        \n                            \n                                 TWO\n                            \n                        \n                        \n                            \n                                Value : Channel 2\n                            \n                        \n            \n        \n\n    src/app/tools/moon/moon.service.util.ts\n    \n        \n            \n                \n                    \n                        \n                        UpdateSource\n                    \n                \n                        \n                            \n                                 INIT\n                            \n                        \n                        \n                            \n                                Value : init\n                            \n                        \n                        \n                            \n                                 RESET\n                            \n                        \n                        \n                            \n                                Value : reset\n                            \n                        \n                        \n                            \n                                 INTERFACE\n                            \n                        \n                        \n                            \n                                Value : interface\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addEXIFToImage   (src/.../utils.ts)\n                        \n                        \n                            dataURLtoBlob   (src/.../utils.ts)\n                        \n                        \n                            dateAppendZero   (src/.../utils.ts)\n                        \n                        \n                            formatTime   (src/.../utils.ts)\n                        \n                        \n                            getDateString   (src/.../utils.ts)\n                        \n                        \n                            getToolSiteName   (src/.../app-routing.module.ts)\n                        \n                        \n                            rad   (src/.../utils.ts)\n                        \n                        \n                            updateLine   (src/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/tools/shared/charts/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        addEXIFToImage\n                        \n                    \n                \n            \n            \n                \naddEXIFToImage(jpegData: string, signature: string, time: string)\n                \n            \n\n\n\n\n            \n                \n                    Add EXIF information to image\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    jpegData\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        data of a jpeg file\n\n                                    \n                                \n                                \n                                    signature\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        signature of the user\n\n                                    \n                                \n                                \n                                    time\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        time of download initiation\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataURLtoBlob\n                        \n                    \n                \n            \n            \n                \ndataURLtoBlob(dataurl: string)\n                \n            \n\n\n\n\n            \n                \n                    Turn dataurl into a blob object\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dataurl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Blob\n\n                    \n                    \n                        Blob object\nCredits: https://stackoverflow.com/a/30407959/1154380\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateAppendZero\n                        \n                    \n                \n            \n            \n                \ndateAppendZero(num: number)\n                \n            \n\n\n\n\n            \n                \n                    Pre-fix a number with '0' if it is less then 10. Otherwise just convert it to string.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    num\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : A number between 1 and 99.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        two-character string containing the number and a leading 0 if necessary.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatTime\n                        \n                    \n                \n            \n            \n                \nformatTime(time: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A string in returned by getDateString()\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDateString\n                        \n                    \n                \n            \n            \n                \ngetDateString()\n                \n            \n\n\n\n\n            \n                \n                    Get the current date in the format of \"YYYY:MM:DD HH:MM:SS\"\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateLine\n                        \n                    \n                \n            \n            \n                \nupdateLine(tableData, myChart: Chart, dataSetIndex: number, xKey: string, yKey: string)\n                \n            \n\n\n\n\n            \n                \n                    This function takes the data in a dictionary object and updates a Chart object with the data. The\ndataset number for the Chart object and the keys for the x and y values are given in order to\ncorrectly update when there are multiple datasets in the Chart object or in the dictionary.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    tableData\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        :   The dictionary object that provides data\n\n                                    \n                                \n                                \n                                    myChart\n                                    \n                                            Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        :     The Chart object\n\n                                    \n                                \n                                \n                                    dataSetIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                    \n                                        :The index of the dataset to be updated in the Chart object.\n\n                                    \n                                \n                                \n                                    xKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'x'\n                                    \n\n                                    \n                                        :        The key for x values in the dictionary.\n\n                                    \n                                \n                                \n                                    yKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'y'\n                                    \n\n                                    \n                                        :        The key for y values in the dictionary.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/app-routing.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getToolSiteName\n                        \n                    \n                \n            \n            \n                \ngetToolSiteName(tool: string)\n                \n            \n\n\n\n\n            \n                \n                    Generate name of the site based on the graphing tool in use.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the graphing tool in use\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/tools/shared/data/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        rad\n                        \n                    \n                \n            \n            \n                \nrad(degree: number)\n                \n            \n\n\n\n\n            \n                \n                    This function takes an angle in degrees and returns it in radians.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    degree\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        :  An angle in degrees\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSkynet Plotting neo\nSkynet Plotting neo is a re-imagination of the original Skynet Plotting Tools, which was designed to make data anlysis easy for the students taking the intro level astronony lab course Our Place in Space and it's follow-up course Multi Wavelength Universe.\nThis project is based on the Angular 15 framework. Some of the key libaries are Handsontable, Chart.js, Angular Material, and Bootstrap.\nThe ultimate goal for this projector is to re-implement the functinoality of the existing graphing tools, but under a modern framework with good design pattern to make it maintainble in the long term, even not by its original authors.\nDocumentations have been set up as a Github Page through Github Actions. Check it out here.\n\nTo build for development, run\nnpm run startTo build for production, run\nnpm run buildTo generate documentations, run\nnpm run generate-docsTo view documentations in development environment, run\nnpm run serve-docsTo extract the source language file, run\nng extract-i18n --output-path src/locale\nContact author: Reed Fu\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                GNU GENERAL PUBLIC LICENSE\n                   Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n                        Preamble  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n                   TERMS AND CONDITIONS\nDefinitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n  The Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nUse with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\nRevised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\nCopyright (C)   \n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see .Also add information on how to contact you by electronic and paper mail.\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n  Copyright (C)   \nThis program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type `show c' for details.The hypothetical commands show w' and show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\nhttps://www.gnu.org/licenses/.\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\nhttps://www.gnu.org/licenses/why-not-lgpl.html.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CurveModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DualModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HonorCodePopupModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InterfaceUtilModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MenubarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MoonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ScatterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SimpleDataButtonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SimpleGraphButtonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SpectrumModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ToolsNavbarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VenusModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CurveModule\n\n\n\ncluster_CurveModule_declarations\n\n\n\ncluster_CurveModule_imports\n\n\n\ncluster_CurveModule_exports\n\n\n\ncluster_CurveModule_providers\n\n\n\ncluster_DualModule\n\n\n\ncluster_DualModule_declarations\n\n\n\ncluster_DualModule_providers\n\n\n\ncluster_HonorCodePopupModule\n\n\n\ncluster_HonorCodePopupModule_declarations\n\n\n\ncluster_InterfaceUtilModule\n\n\n\ncluster_InterfaceUtilModule_declarations\n\n\n\ncluster_InterfaceUtilModule_exports\n\n\n\ncluster_MenubarModule\n\n\n\ncluster_MenubarModule_declarations\n\n\n\ncluster_MenubarModule_exports\n\n\n\ncluster_MoonModule\n\n\n\ncluster_MoonModule_declarations\n\n\n\ncluster_MoonModule_imports\n\n\n\ncluster_MoonModule_providers\n\n\n\ncluster_ScatterModule\n\n\n\ncluster_ScatterModule_declarations\n\n\n\ncluster_ScatterModule_providers\n\n\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SettingsModule_imports\n\n\n\ncluster_SimpleDataButtonModule\n\n\n\ncluster_SimpleDataButtonModule_declarations\n\n\n\ncluster_SimpleDataButtonModule_exports\n\n\n\ncluster_SimpleGraphButtonModule\n\n\n\ncluster_SimpleGraphButtonModule_declarations\n\n\n\ncluster_SimpleGraphButtonModule_exports\n\n\n\ncluster_SpectrumModule\n\n\n\ncluster_SpectrumModule_declarations\n\n\n\ncluster_SpectrumModule_providers\n\n\n\ncluster_ToolsNavbarModule\n\n\n\ncluster_ToolsNavbarModule_declarations\n\n\n\ncluster_ToolsNavbarModule_imports\n\n\n\ncluster_ToolsNavbarModule_exports\n\n\n\ncluster_VenusModule\n\n\n\ncluster_VenusModule_declarations\n\n\n\ncluster_VenusModule_providers\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppearanceComponent\n\nAppearanceComponent\n\nAppModule -->\n\nAppearanceComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nToolsNavbarModule\n\nToolsNavbarModule\n\nToolsNavbarModule -->\n\nAppRoutingModule->ToolsNavbarModule\n\n\n\n\n\nMenubarModule\n\nMenubarModule\n\nMenubarModule -->\n\nAppRoutingModule->MenubarModule\n\n\n\n\n\nHonorCodePopupModule\n\nHonorCodePopupModule\n\nAppModule -->\n\nHonorCodePopupModule->AppModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nAppModule -->\n\nSettingsModule->AppModule\n\n\n\nAppModule -->\n\nToolsNavbarModule->AppModule\n\n\n\n\n\nToolsNavbarComponent \n\nToolsNavbarComponent \n\nToolsNavbarComponent  -->\n\nToolsNavbarModule->ToolsNavbarComponent \n\n\n\n\n\nAppearanceService\n\nAppearanceService\n\nAppModule -->\n\nAppearanceService->AppModule\n\n\n\n\n\nAppearanceStorageService\n\nAppearanceStorageService\n\nAppModule -->\n\nAppearanceStorageService->AppModule\n\n\n\n\n\nCurveChartComponent\n\nCurveChartComponent\n\n\n\nCurveModule\n\nCurveModule\n\nCurveModule -->\n\nCurveChartComponent->CurveModule\n\n\n\n\n\nCurveChartFormComponent\n\nCurveChartFormComponent\n\nCurveModule -->\n\nCurveChartFormComponent->CurveModule\n\n\n\n\n\nCurveComponent\n\nCurveComponent\n\nCurveModule -->\n\nCurveComponent->CurveModule\n\n\n\n\n\nCurveHighChartComponent\n\nCurveHighChartComponent\n\nCurveModule -->\n\nCurveHighChartComponent->CurveModule\n\n\n\n\n\nCurveTableComponent\n\nCurveTableComponent\n\nCurveModule -->\n\nCurveTableComponent->CurveModule\n\n\n\n\n\nLineFormComponent\n\nLineFormComponent\n\nCurveModule -->\n\nLineFormComponent->CurveModule\n\n\n\nToolsNavbarModule -->\n\nCurveModule->ToolsNavbarModule\n\n\n\n\n\nCurveComponent \n\nCurveComponent \n\nCurveComponent  -->\n\nCurveModule->CurveComponent \n\n\n\n\n\nSimpleDataButtonModule\n\nSimpleDataButtonModule\n\nCurveModule -->\n\nSimpleDataButtonModule->CurveModule\n\n\n\n\n\nDualModule\n\nDualModule\n\nDualModule -->\n\nSimpleDataButtonModule->DualModule\n\n\n\n\n\nMoonModule\n\nMoonModule\n\nMoonModule -->\n\nSimpleDataButtonModule->MoonModule\n\n\n\n\n\nScatterModule\n\nScatterModule\n\nScatterModule -->\n\nSimpleDataButtonModule->ScatterModule\n\n\n\n\n\nSimpleDataButtonComponent \n\nSimpleDataButtonComponent \n\nSimpleDataButtonComponent  -->\n\nSimpleDataButtonModule->SimpleDataButtonComponent \n\n\n\n\n\nSpectrumModule\n\nSpectrumModule\n\nSpectrumModule -->\n\nSimpleDataButtonModule->SpectrumModule\n\n\n\n\n\nVenusModule\n\nVenusModule\n\nVenusModule -->\n\nSimpleDataButtonModule->VenusModule\n\n\n\n\n\nSimpleGraphButtonModule\n\nSimpleGraphButtonModule\n\nCurveModule -->\n\nSimpleGraphButtonModule->CurveModule\n\n\n\nDualModule -->\n\nSimpleGraphButtonModule->DualModule\n\n\n\nMoonModule -->\n\nSimpleGraphButtonModule->MoonModule\n\n\n\nScatterModule -->\n\nSimpleGraphButtonModule->ScatterModule\n\n\n\n\n\nSimpleGraphButtonComponent \n\nSimpleGraphButtonComponent \n\nSimpleGraphButtonComponent  -->\n\nSimpleGraphButtonModule->SimpleGraphButtonComponent \n\n\n\nSpectrumModule -->\n\nSimpleGraphButtonModule->SpectrumModule\n\n\n\nVenusModule -->\n\nSimpleGraphButtonModule->VenusModule\n\n\n\n\n\nCurveService\n\nCurveService\n\nCurveModule -->\n\nCurveService->CurveModule\n\n\n\n\n\nHonorCodePopupService\n\nHonorCodePopupService\n\nCurveModule -->\n\nHonorCodePopupService->CurveModule\n\n\n\nMoonModule -->\n\nHonorCodePopupService->MoonModule\n\n\n\n\n\nDualChartFormComponent\n\nDualChartFormComponent\n\nDualModule -->\n\nDualChartFormComponent->DualModule\n\n\n\n\n\nDualComponent\n\nDualComponent\n\nDualModule -->\n\nDualComponent->DualModule\n\n\n\n\n\nDualHighchartComponent\n\nDualHighchartComponent\n\nDualModule -->\n\nDualHighchartComponent->DualModule\n\n\n\n\n\nDualTableComponent\n\nDualTableComponent\n\nDualModule -->\n\nDualTableComponent->DualModule\n\n\n\nToolsNavbarModule -->\n\nDualModule->ToolsNavbarModule\n\n\n\n\n\nDualService\n\nDualService\n\nDualModule -->\n\nDualService->DualModule\n\n\n\n\n\nHonorCodePopupComponent\n\nHonorCodePopupComponent\n\nHonorCodePopupModule -->\n\nHonorCodePopupComponent->HonorCodePopupModule\n\n\n\n\n\nInputSliderComponent\n\nInputSliderComponent\n\n\n\nInterfaceUtilModule\n\nInterfaceUtilModule\n\nInterfaceUtilModule -->\n\nInputSliderComponent->InterfaceUtilModule\n\n\n\n\n\nInputSliderComponent \n\nInputSliderComponent \n\nInputSliderComponent  -->\n\nInterfaceUtilModule->InputSliderComponent \n\n\n\nMoonModule -->\n\nInterfaceUtilModule->MoonModule\n\n\n\nScatterModule -->\n\nInterfaceUtilModule->ScatterModule\n\n\n\n\n\nMenubarComponent\n\nMenubarComponent\n\nMenubarModule -->\n\nMenubarComponent->MenubarModule\n\n\n\nToolsNavbarModule -->\n\nMenubarModule->ToolsNavbarModule\n\n\n\n\n\nMenubarComponent \n\nMenubarComponent \n\nMenubarComponent  -->\n\nMenubarModule->MenubarComponent \n\n\n\n\n\nMoonChartFormComponent\n\nMoonChartFormComponent\n\nMoonModule -->\n\nMoonChartFormComponent->MoonModule\n\n\n\n\n\nMoonComponent\n\nMoonComponent\n\nMoonModule -->\n\nMoonComponent->MoonModule\n\n\n\n\n\nMoonFormComponent\n\nMoonFormComponent\n\nMoonModule -->\n\nMoonFormComponent->MoonModule\n\n\n\n\n\nMoonHighchartComponent\n\nMoonHighchartComponent\n\nMoonModule -->\n\nMoonHighchartComponent->MoonModule\n\n\n\n\n\nMoonTableComponent\n\nMoonTableComponent\n\nMoonModule -->\n\nMoonTableComponent->MoonModule\n\n\n\nToolsNavbarModule -->\n\nMoonModule->ToolsNavbarModule\n\n\n\n\n\nNgIf\n\nNgIf\n\nSimpleDataButtonModule -->\n\nNgIf->SimpleDataButtonModule\n\n\n\nMoonModule -->\n\nNgIf->MoonModule\n\n\n\n\n\nMoonService\n\nMoonService\n\nMoonModule -->\n\nMoonService->MoonModule\n\n\n\n\n\nScatterChartFormComponent\n\nScatterChartFormComponent\n\nScatterModule -->\n\nScatterChartFormComponent->ScatterModule\n\n\n\n\n\nScatterComponent\n\nScatterComponent\n\nScatterModule -->\n\nScatterComponent->ScatterModule\n\n\n\n\n\nScatterFormComponent\n\nScatterFormComponent\n\nScatterModule -->\n\nScatterFormComponent->ScatterModule\n\n\n\n\n\nScatterHighchartComponent\n\nScatterHighchartComponent\n\nScatterModule -->\n\nScatterHighchartComponent->ScatterModule\n\n\n\n\n\nScatterTableComponent\n\nScatterTableComponent\n\nScatterModule -->\n\nScatterTableComponent->ScatterModule\n\n\n\nToolsNavbarModule -->\n\nScatterModule->ToolsNavbarModule\n\n\n\n\n\nScatterService\n\nScatterService\n\nScatterModule -->\n\nScatterService->ScatterModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nRouterLink\n\nRouterLink\n\nSettingsModule -->\n\nRouterLink->SettingsModule\n\n\n\n\n\nRouterLinkActive\n\nRouterLinkActive\n\nSettingsModule -->\n\nRouterLinkActive->SettingsModule\n\n\n\n\n\nRouterOutlet\n\nRouterOutlet\n\nSettingsModule -->\n\nRouterOutlet->SettingsModule\n\n\n\n\n\nSimpleDataButtonComponent\n\nSimpleDataButtonComponent\n\nSimpleDataButtonModule -->\n\nSimpleDataButtonComponent->SimpleDataButtonModule\n\n\n\n\n\nSimpleGraphButtonComponent\n\nSimpleGraphButtonComponent\n\nSimpleGraphButtonModule -->\n\nSimpleGraphButtonComponent->SimpleGraphButtonModule\n\n\n\n\n\nSpectrumChartFormComponent\n\nSpectrumChartFormComponent\n\nSpectrumModule -->\n\nSpectrumChartFormComponent->SpectrumModule\n\n\n\n\n\nSpectrumComponent\n\nSpectrumComponent\n\nSpectrumModule -->\n\nSpectrumComponent->SpectrumModule\n\n\n\n\n\nSpectrumFormComponent\n\nSpectrumFormComponent\n\nSpectrumModule -->\n\nSpectrumFormComponent->SpectrumModule\n\n\n\n\n\nSpectrumHighchartComponent\n\nSpectrumHighchartComponent\n\nSpectrumModule -->\n\nSpectrumHighchartComponent->SpectrumModule\n\n\n\n\n\nSpectrumTableComponent\n\nSpectrumTableComponent\n\nSpectrumModule -->\n\nSpectrumTableComponent->SpectrumModule\n\n\n\nToolsNavbarModule -->\n\nSpectrumModule->ToolsNavbarModule\n\n\n\n\n\nSpectrumService\n\nSpectrumService\n\nSpectrumModule -->\n\nSpectrumService->SpectrumModule\n\n\n\n\n\nToolsNavbarComponent\n\nToolsNavbarComponent\n\nToolsNavbarModule -->\n\nToolsNavbarComponent->ToolsNavbarModule\n\n\n\nToolsNavbarModule -->\n\nVenusModule->ToolsNavbarModule\n\n\n\n\n\nVenusChartFormComponent\n\nVenusChartFormComponent\n\nVenusModule -->\n\nVenusChartFormComponent->VenusModule\n\n\n\n\n\nVenusComponent\n\nVenusComponent\n\nVenusModule -->\n\nVenusComponent->VenusModule\n\n\n\n\n\nVenusHighchartComponent\n\nVenusHighchartComponent\n\nVenusModule -->\n\nVenusHighchartComponent->VenusModule\n\n\n\n\n\nVenusTableComponent\n\nVenusTableComponent\n\nVenusModule -->\n\nVenusTableComponent->VenusModule\n\n\n\n\n\nVenusService\n\nVenusService\n\nVenusModule -->\n\nVenusService->VenusModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        15 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    41 Components\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    37 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    32 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        13 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ChartAction   (src/.../actions.ts)\n                        \n                        \n                            MyAction   (src/.../actions.ts)\n                        \n                        \n                            TableAction   (src/.../actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/tools/shared/types/actions.ts\n    \n    \n        \n            \n                \n                    \n                    ChartAction\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MyAction\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TableAction\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
