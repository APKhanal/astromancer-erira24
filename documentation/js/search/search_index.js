var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutComponent.html",[0,0.366,1,1.133]],["body/components/AboutComponent.html",[0,0.684,1,2.048,2,1.912,3,0.126,4,0.105,5,1.518,6,1.518,7,1.518,8,1.518,9,0.074,10,4.782,11,2.413,12,2.115,13,1.518,14,2.03,15,2.073,16,1.477,17,7.695,18,1.477,19,6.958,20,0.214,21,0.77,22,0.008,23,0.126,24,0.112,25,5.236,26,1.123,27,1.955,28,1.955,29,1.518,30,2.283,31,1.518,32,0.695,33,1.518,34,1.392,35,1.518,36,1.362,37,1.518,38,1.362,39,1.762,40,1.518,41,1.392,42,1.603,43,2.492,44,1.362,45,1.518,46,1.392,47,2.362,48,1.362,49,2.283,50,1.392,51,2.025,52,1.362,53,1.518,54,1.392,55,1.362,56,1.362,57,1.518,58,1.362,59,1.422,60,1.25,61,1.518,62,1.333,63,1.147,64,1.518,65,1.392,66,1.453,67,1.392,68,1.518,69,1.392,70,2.048,71,1.362,72,1.518,73,1.392,74,1.392,75,1.362,76,1.362,77,1.518,78,1.392,79,2.138,80,1.362,81,1.518,82,1.392,83,1.392,84,1.362,85,1.362,86,1.518,87,1.392,88,1.871,89,0.373,90,1.955,91,1.392,92,1.277,93,1.362,94,1.362,95,1.518,96,1.392,97,1.742,98,1.362,99,1.518,100,1.392,101,1.362,102,1.333,103,1.518,104,1.518,105,0.006,106,0.006]],["title/components/AppComponent.html",[0,0.366,34,1.157]],["body/components/AppComponent.html",[0,0.672,1,1.285,2,1.841,3,0.119,4,0.099,5,1.433,6,1.433,7,1.433,8,1.433,9,0.07,11,2.277,12,1.402,13,1.433,14,2.024,15,2.069,16,1.422,18,1.422,20,0.266,21,0.726,22,0.008,23,0.119,24,0.105,26,1.06,27,1.882,28,1.882,29,1.433,30,2.233,31,1.433,32,0.748,33,1.433,34,2.046,35,1.433,36,1.285,37,1.433,38,1.285,39,1.724,40,1.433,41,1.313,42,1.573,43,2.462,44,1.285,45,1.433,46,1.313,47,2.319,48,1.285,49,2.233,50,1.313,51,1.969,52,1.285,53,1.433,54,1.313,55,1.285,56,1.285,57,1.433,58,1.285,59,1.342,60,1.179,61,1.433,62,1.258,63,1.083,64,1.433,65,1.313,66,1.371,67,1.313,68,1.433,69,1.313,70,2.003,71,1.285,72,1.433,73,1.313,74,1.313,75,1.285,76,1.285,77,1.433,78,1.313,79,2.091,80,1.285,81,1.433,82,1.313,83,1.313,84,1.285,85,1.285,86,1.433,87,1.313,88,1.802,89,0.352,90,1.882,91,1.313,92,1.205,93,1.285,94,1.285,95,1.433,96,1.313,97,1.694,98,1.285,99,1.433,100,1.313,101,1.285,102,1.258,103,1.433,104,1.433,105,0.006,106,0.006,107,4.513,108,5.042,109,7.483,110,6.7,111,0.246,112,0.707,113,1.909,114,0.455,115,4.513,116,4.95,117,0.688,118,6.7,119,0.582,120,0.384,121,0.628,122,0.66,123,1.396,124,0.972,125,5.421,126,4.739,127,5.042,128,5.042,129,3.838,130,1.402,131,5.1]],["title/modules/AppModule.html",[132,1.513,133,3.383]],["body/modules/AppModule.html",[1,2.183,3,0.129,4,0.108,9,0.076,15,1.202,20,0.372,21,0.789,22,0.008,23,0.129,24,0.115,26,1.151,34,2.364,36,2.183,56,2.183,60,1.635,63,1.176,76,2.183,105,0.006,106,0.006,116,5.061,129,4.17,132,1.866,133,7.147,134,2.475,135,2.548,136,3.287,137,3.58,138,3.69,139,2.339,140,4.904,141,4.904,142,4.904,143,4.904,144,4.904,145,5.061,146,5.802,147,5.802,148,5.802,149,5.802,150,3.457,151,2.405,152,2.548,153,5.542,154,2.985,155,2.985,156,7.071,157,5.721,158,4.484,159,3.92,160,5.542,161,6.257,162,4.904,163,5.542,164,3.711,165,4.484,166,7.071,167,5.542,168,4.904,169,4.904,170,4.904,171,4.17,172,4.904,173,5.542,174,2.626,175,5.542,176,4.904,177,4.904,178,3.532,179,5.321,180,3.199,181,4.904,182,6.257,183,3.92,184,4.308,185,2.218,186,5.542,187,4.904,188,2.799,189,3.571,190,2.218]],["title/modules/AppRoutingModule.html",[132,1.513,145,2.626]],["body/modules/AppRoutingModule.html",[0,0.743,1,1.822,3,0.134,4,0.112,9,0.079,20,0.366,21,0.817,22,0.008,23,0.134,24,0.119,32,0.574,36,1.822,39,1.245,44,1.822,51,1.51,52,1.822,56,1.822,70,1.447,71,1.822,76,1.822,79,1.51,80,1.822,85,1.822,89,0.63,97,1.299,98,1.822,105,0.006,106,0.006,113,2.11,122,0.936,126,4.06,127,4.32,128,5.441,134,2.563,139,2.423,145,4.224,154,2.423,155,3.052,168,5.08,169,5.08,170,5.08,171,4.32,172,5.08,176,5.08,177,5.08,191,4.645,192,4.645,193,7.231,194,5.956,195,4.32,196,5.741,197,5.741,198,5.741,199,5.741,200,5.741,201,1.272,202,5.741,203,8.164,204,6.399,205,5.741,206,5.741,207,5.741,208,5.741,209,5.741,210,5.741,211,5.741,212,5.441,213,5.741,214,5.741,215,7.231,216,6.399,217,7.231,218,5.956,219,5.741,220,5.741,221,4.645,222,4.32,223,4.32,224,4.842,225,5.877,226,5.85,227,3.497,228,0.527,229,2.359,230,5.08,231,0.959,232,5.741,233,5.741,234,5.741]],["title/components/AppearanceComponent.html",[0,0.366,36,1.133]],["body/components/AppearanceComponent.html",[0,0.539,1,1.015,2,1.568,3,0.094,4,0.078,5,1.132,6,1.132,7,1.132,8,1.132,9,0.055,12,1.107,13,1.132,14,1.998,15,2.039,16,1.211,18,1.211,20,0.286,21,0.574,22,0.008,23,0.094,24,0.083,26,0.837,27,1.602,28,1.602,29,1.132,30,2.023,31,1.132,32,0.72,33,1.132,34,1.037,35,1.132,36,1.815,37,1.132,38,1.015,39,1.562,40,1.132,41,1.037,42,1.449,43,2.329,44,1.015,45,1.132,46,1.037,47,2.135,48,1.015,49,2.023,50,1.037,51,1.742,52,1.015,53,1.132,54,1.037,55,1.015,56,1.015,57,1.132,58,1.015,59,1.06,60,0.932,61,1.132,62,0.994,63,0.855,64,1.132,65,1.037,66,1.083,67,1.037,68,1.132,69,1.037,70,1.815,71,1.015,72,1.132,73,1.037,74,1.037,75,1.015,76,1.015,77,1.132,78,1.037,79,1.895,80,1.015,81,1.132,82,1.037,83,1.037,84,1.015,85,1.015,86,1.132,87,1.037,88,1.534,89,0.278,90,1.602,91,1.037,92,0.952,93,1.015,94,1.015,95,1.132,96,1.037,97,1.499,98,1.015,99,1.132,100,1.037,101,1.015,102,0.994,103,1.132,104,1.132,105,0.005,106,0.005,111,0.195,112,0.602,114,0.359,115,3.565,116,4.61,117,0.866,119,0.651,120,0.465,121,0.703,122,1.13,123,1.472,124,1.373,130,1.107,151,2.476,185,1.612,190,1.612,218,4.293,228,0.608,235,3.565,236,0.685,237,4.435,238,6.622,239,5.704,240,6.06,241,1.934,242,6.622,243,6.622,244,6.622,245,6.622,246,4.944,247,0.618,248,0.522,249,5.704,250,4.823,251,7.202,252,5.704,253,5.704,254,3.897,255,4.045,256,4.045,257,4.029,258,4.616,259,0.622,260,4.029,261,4.029,262,3.719,263,5.704,264,4.029,265,3.719,266,5.704,267,4.029,268,3.719,269,5.704,270,4.029,271,3.719,272,5.704,273,4.029,274,2.263,275,2.104,276,4.029,277,2.18,278,2.698,279,4.029,280,4.029,281,4.029,282,4.029,283,4.029,284,4.029,285,4.029,286,4.029,287,4.029,288,3.565,289,3.565,290,3.565,291,2.698,292,1.684,293,4.029,294,4.823,295,4.029,296,4.029,297,4.029,298,4.029,299,4.029,300,4.029,301,4.029,302,4.029,303,4.029,304,4.029,305,4.029,306,4.616,307,3.475,308,5.704,309,5.285,310,4.616,311,5.704,312,5.048,313,5.704,314,4.293,315,5.704,316,3.565,317,1.749,318,2.035,319,2.455,320,1.909,321,1.571,322,1.852,323,1.92,324,5.704]],["title/injectables/AppearanceService.html",[116,2.626,325,2.007]],["body/injectables/AppearanceService.html",[3,0.104,4,0.087,9,0.061,20,0.277,21,0.635,22,0.009,23,0.104,24,0.092,32,0.85,105,0.005,106,0.005,108,3.356,111,0.215,112,0.646,114,0.398,116,3.577,117,0.937,119,0.971,120,0.494,121,1.047,122,1.13,130,1.226,149,5.04,187,3.947,218,3.356,228,0.83,231,1.484,247,0.664,248,0.717,254,4.768,255,4.227,256,4.227,258,4.954,259,0.688,275,2.329,309,4.1,325,2.734,326,2.605,327,3.947,328,6.992,329,1.25,330,7.527,331,7.527,332,7.527,333,6.661,334,7.527,335,6.123,336,6.661,337,6.123,338,6.661,339,6.123,340,7.527,341,5.418,342,6.123,343,5.418,344,5.418,345,4.46,346,6.992,347,7.527,348,6.123,349,6.123,350,4.46,351,4.46,352,3.927,353,4.46,354,4.46,355,4.577,356,4.46,357,6.123,358,4.46,359,4.46,360,4.844,361,6.123,362,4.46,363,4.46,364,4.844,365,6.123,366,4.46,367,4.46,368,5.418,369,4.46,370,6.123,371,4.46,372,5.418,373,4.46,374,5.418,375,4.46,376,6.992,377,2.329,378,3.947,379,3.608,380,4.46,381,4.46,382,1.031,383,4.46,384,4.46,385,4.46,386,4.46,387,7.527,388,4.46,389,7.527,390,4.46,391,4.46,392,4.46,393,6.992,394,4.46,395,4.46,396,4.46,397,4.46,398,4.46,399,4.46,400,4.46,401,4.46,402,4.46,403,4.46,404,4.46,405,4.46,406,2.717,407,2.717,408,2.717,409,4.46,410,4.46]],["title/injectables/AppearanceStorageService.html",[149,3.01,325,2.007]],["body/injectables/AppearanceStorageService.html",[3,0.102,4,0.085,9,0.06,20,0.24,21,0.625,22,0.009,23,0.102,24,0.091,32,0.747,105,0.005,106,0.005,108,3.304,111,0.212,112,0.639,114,0.618,117,0.942,119,0.854,120,0.514,121,0.921,122,1.113,123,1.463,124,1.495,149,4.056,228,0.777,231,1.249,241,2,247,0.657,248,0.74,254,4.583,255,4.555,256,4.555,258,6.562,259,0.668,275,2.293,288,3.885,289,3.885,290,3.885,309,5.431,325,2.705,326,2.565,329,1.232,333,6.616,336,6.616,338,6.616,341,5.36,343,5.36,344,5.36,352,4.756,355,4.756,360,4.756,364,4.756,368,5.36,372,5.36,374,5.36,378,3.885,379,3.552,382,1.729,411,8.143,412,3.885,413,6.935,414,6.935,415,6.935,416,6.935,417,6.935,418,7.477,419,6.057,420,6.057,421,4.39,422,4.39,423,4.39,424,4.39,425,4.39,426,6.057,427,4.39,428,4.39,429,4.39,430,4.39,431,4.39,432,4.39,433,4.39,434,4.39,435,4.39,436,4.39,437,4.39,438,4.39,439,4.39,440,4.39,441,4.39,442,6.935,443,4.39,444,4.39,445,4.39,446,4.39,447,4.39,448,6.935,449,4.39,450,4.39,451,4.39,452,4.39,453,6.935,454,4.39,455,4.39,456,4.39,457,4.39,458,6.935,459,4.39]],["title/classes/ChartColor.html",[24,0.093,377,2.348]],["body/classes/ChartColor.html",[3,0.105,4,0.087,9,0.062,22,0.009,23,0.208,24,0.145,32,0.701,105,0.005,106,0.005,111,0.339,112,0.649,117,0.812,119,0.801,120,0.453,121,0.864,122,1.186,123,1.559,124,1.172,228,0.644,231,1.443,241,1.809,247,0.666,248,0.644,254,3.795,255,2.519,256,2.519,262,3.452,265,3.452,268,3.452,271,3.452,274,2.519,275,2.343,307,2.732,329,1.179,352,4.85,355,3.452,360,3.452,364,3.452,377,3.211,406,3.745,407,4.596,408,2.732,460,1.441,461,2.62,462,1.893,463,4.47,464,4.47,465,6.147,466,6.147,467,6.147,468,4.809,469,4.596,470,4.809,471,4.809,472,4.485,473,4.485,474,3.918,475,4.485,476,4.439,477,3.918,478,4.485,479,3.918,480,0.952,481,4.485,482,0.467,483,4.612,484,5.821,485,3.529,486,4.596,487,2.62,488,4.815,489,2.62,490,2.859,491,2.859,492,2.732,493,2.732,494,2.62,495,4.596,496,2.732,497,2.732,498,4.272,499,3.795,500,4.097,501,4.272,502,2.732,503,3.745,504,3.745,505,2.859,506,2.859,507,3.452,508,3.745,509,2.859,510,2.859,511,3.918,512,2.859,513,2.859,514,2.859,515,2.859,516,2.859,517,3.918,518,2.859,519,2.859,520,2.859,521,3.918,522,2.859,523,2.859,524,2.859,525,2.859,526,2.859,527,2.859,528,2.732,529,3.918,530,2.859]],["title/interfaces/ChartInfo.html",[482,0.278,531,0.975]],["body/interfaces/ChartInfo.html",[3,0.136,4,0.113,9,0.08,20,0.29,22,0.008,23,0.17,32,0.86,89,0.402,105,0.006,106,0.006,111,0.282,113,1.349,117,0.94,119,0.983,120,0.493,121,1.06,122,1.223,228,0.84,247,0.791,259,0.725,482,0.452,531,1.866,532,1.918,533,4.718,534,2.453,535,2.453,536,2.347,537,2.453,538,2.453,539,3.46,540,4.101,541,3.688,542,4.101,543,4.101,544,5.831,545,5.831,546,5.831,547,5.831,548,5.831,549,2.144,550,5.831,551,2.578,552,5.831,553,2.641,554,5.831,555,2.851,556,2.847,557,5.831,558,2.333,559,2.847,560,5.831,561,2.333,562,4.388,563,4.266,564,3.717,565,1.55,566,5.16,567,3.717,568,4.388,569,5.495,570,4.388,571,4.388,572,4.388]],["title/classes/ColorThemeSettings.html",[24,0.093,274,2.525]],["body/classes/ColorThemeSettings.html",[3,0.11,4,0.092,9,0.065,22,0.009,23,0.209,24,0.149,105,0.006,106,0.006,111,0.308,117,0.792,122,1.168,123,1.502,228,0.708,231,1.459,241,1.413,247,0.691,248,0.503,254,3.901,255,2.658,256,2.658,262,4.049,265,4.049,268,4.049,271,4.049,274,3.58,275,2.472,307,2.883,329,1.189,352,4.522,355,3.58,360,3.58,364,3.58,377,2.472,406,3.884,407,4.7,408,2.883,460,1.521,461,2.765,462,1.894,463,3.017,464,3.017,468,4.064,469,3.884,470,4.064,471,4.064,474,3.017,476,4.049,477,3.017,479,3.017,480,0.643,482,0.477,483,4.641,484,5.858,485,3.596,486,4.7,487,2.765,488,4.906,489,2.765,490,3.017,491,3.017,492,2.883,493,2.883,494,2.765,495,4.7,496,2.883,497,2.883,498,4.392,499,3.901,500,4.212,501,4.392,502,2.883,503,3.884,504,3.884,505,4.917,506,3.017,507,3.58,508,3.884,509,3.017,510,4.917,511,4.064,512,3.017,513,3.017,514,3.017,515,4.917,516,3.017,517,4.064,518,3.017,519,3.017,520,4.917,521,4.064,522,3.017,523,3.017,524,3.017,525,3.017,526,3.017,527,3.017,528,2.883,529,4.064,530,3.017,573,4.733,574,4.733,575,4.733,576,4.733]],["title/classes/CurveChart.html",[24,0.093,577,3.383]],["body/classes/CurveChart.html",[0,0.477,3,0.098,4,0.081,9,0.057,14,0.89,15,0.909,16,0.89,18,0.89,20,0.342,21,0.597,22,0.009,23,0.098,24,0.121,32,0.771,38,1.056,39,1.673,42,1.523,89,0.467,94,1.056,105,0.005,106,0.005,111,0.202,112,0.619,113,1.565,114,0.374,116,3.952,117,0.843,119,0.881,120,0.47,121,0.95,122,1.101,129,3.154,130,1.152,201,0.929,224,2.806,228,0.621,231,1.13,236,0.813,241,1.499,247,0.636,248,0.68,259,0.578,292,1.299,329,1.128,377,2.189,382,1.695,460,1.347,476,2.354,480,1.048,531,1.945,562,3.154,563,4.281,564,4.671,565,1.556,567,4.312,568,4.413,569,6.301,570,5.091,571,4.413,572,5.515,577,5.091,578,5.337,579,6.301,580,3.154,581,4.286,582,5.19,583,5.19,584,5.865,585,5.865,586,3.063,587,5.865,588,3.709,589,4.191,590,5.19,591,3.908,592,4.778,593,5.091,594,4.191,595,4.191,596,4.191,597,4.191,598,1.722,599,4.191,600,2.287,601,2.174,602,3.391,603,3.174,604,2.448,605,1.012,606,0.99,607,2.189,608,2.189,609,2.189,610,2.964,611,3.709,612,2.225,613,1.411,614,1.23,615,3.391,616,3.391,617,4.907,618,3.154,619,5.19,620,3.709,621,3.391,622,3.709,623,1.411,624,1.347,625,3.063,626,3.709,627,3.709,628,3.709,629,3.709,630,3.709,631,3.709,632,5.19,633,5.19,634,5.19,635,6.485,636,6.485,637,5.19,638,5.19,639,1.516,640,1.986,641,2.022,642,2.545,643,5.19,644,2.049,645,1.411,646,1.986,647,1.411,648,3.709,649,3.709,650,3.709,651,3.709,652,3.709,653,4.029,654,3.709,655,1.634,656,3.709,657,3.709,658,3.709,659,1.152,660,4.122,661,3.709,662,3.952,663,3.709,664,3.154,665,3.154,666,2.12,667,3.709,668,3.709,669,3.709,670,3.709,671,3.709,672,3.709,673,3.709,674,2.671,675,3.709,676,1.193,677,3.709,678,2.476,679,3.391,680,3.709,681,2.268,682,5.19,683,3.709,684,6.485,685,2.268,686,5.19,687,3.709,688,2.268,689,5.19,690,3.709,691,2.268,692,5.19,693,3.709]],["title/components/CurveChartComponent.html",[0,0.366,38,1.133]],["body/components/CurveChartComponent.html",[0,0.505,1,0.905,2,1.443,3,0.084,4,0.07,5,1.009,6,1.009,7,1.009,8,1.009,9,0.049,11,1.604,12,0.987,13,1.009,14,1.983,15,2.024,16,1.115,18,1.115,20,0.33,21,0.511,22,0.009,23,0.084,24,0.109,26,0.746,27,1.475,28,1.475,29,1.009,30,1.919,31,1.009,32,0.62,33,1.009,34,0.925,35,1.009,36,0.905,37,1.009,38,1.721,39,1.886,40,1.009,41,0.925,42,1.681,43,2.258,44,0.905,45,1.009,46,0.925,47,2.041,48,0.905,49,1.919,50,0.925,51,1.633,52,0.905,53,1.009,54,0.925,55,0.905,56,0.905,57,1.009,58,0.905,59,0.945,60,0.831,61,1.009,62,0.886,63,0.762,64,1.009,65,0.925,66,0.966,67,0.925,68,1.009,69,0.925,70,1.721,71,0.905,72,1.009,73,0.925,74,0.925,75,0.905,76,0.905,77,1.009,78,0.925,79,1.797,80,0.905,81,1.009,82,0.925,83,0.925,84,0.905,85,0.905,86,1.009,87,0.925,88,1.412,89,0.471,90,1.475,91,0.925,92,0.849,93,0.905,94,1.564,95,1.009,96,0.925,97,1.405,98,0.905,99,1.009,100,0.925,101,0.905,102,0.886,103,1.009,104,1.009,105,0.005,106,0.005,111,0.173,112,0.554,113,1.436,114,0.32,116,4.58,117,0.826,119,0.41,120,0.435,121,0.443,122,0.941,123,0.67,124,0.685,129,2.703,130,0.987,201,0.796,224,3.517,228,0.482,231,1.037,236,0.746,241,0.796,247,0.569,248,0.598,259,0.573,292,1.375,329,0.823,377,1.876,382,1.579,476,2.017,480,0.488,531,1.743,562,2.703,563,3.99,564,4.997,565,1.115,567,3.347,568,2.703,569,5.14,570,4.672,571,2.703,572,2.703,577,4.672,578,5.226,579,6.17,580,2.703,581,4.095,586,1.876,590,3.178,591,2.567,592,4.081,593,2.703,600,2.421,601,2.301,602,2.906,603,3.696,604,2.098,605,0.867,606,0.849,607,1.876,608,1.876,609,1.876,610,2.54,611,3.178,612,2.39,613,1.209,614,1.055,615,4.249,616,5.023,617,5.383,618,3.952,619,6.044,620,5.494,621,4.249,622,5.494,623,2.09,624,1.688,625,2.743,626,3.178,627,3.178,628,3.178,629,3.178,630,3.178,631,3.178,632,4.647,633,4.647,634,4.647,635,6.044,636,6.044,637,4.647,638,4.647,639,2.47,640,1.702,641,1.81,642,2.279,643,4.647,644,1.756,645,2.299,646,1.702,647,1.209,648,3.178,649,3.178,650,3.178,651,3.178,652,3.178,653,3.796,654,3.178,655,1.4,656,3.178,657,3.178,658,3.178,659,0.987,660,3.782,661,3.178,662,3.627,663,3.178,664,2.703,665,2.703,666,1.997,667,3.178,668,3.178,669,3.178,670,3.178,671,3.178,672,3.178,673,3.178,674,2.289,675,3.178,676,1.068,677,3.178,678,2.217,679,2.906,680,3.178,681,1.943,682,4.647,683,3.178,684,6.044,685,1.943,686,4.647,687,3.178,688,1.943,689,4.647,690,3.178,691,1.943,692,4.647,693,3.178,694,1.365,695,5.252,696,3.592,697,3.178,698,3.592,699,3.592,700,3.592,701,3.178]],["title/components/CurveChartFormComponent.html",[0,0.366,41,1.157]],["body/components/CurveChartFormComponent.html",[0,0.57,1,1.129,2,1.688,3,0.105,4,0.087,5,1.259,6,1.259,7,1.259,8,1.259,9,0.061,12,1.231,13,1.259,14,2.01,15,2.052,16,1.304,18,1.304,20,0.299,21,0.638,22,0.008,23,0.105,24,0.093,26,0.931,27,1.726,28,1.726,29,1.259,30,2.118,31,1.259,32,0.7,33,1.259,34,1.154,35,1.259,36,1.129,37,1.259,38,1.129,39,1.913,40,1.259,41,1.942,42,1.766,43,2.391,44,1.129,45,1.259,46,1.154,47,2.22,48,1.129,49,2.118,50,1.154,51,1.844,52,1.129,53,1.259,54,1.154,55,1.129,56,1.129,57,1.259,58,1.129,59,1.179,60,1.036,61,1.259,62,1.105,63,0.951,64,1.259,65,1.154,66,1.205,67,1.154,68,1.259,69,1.154,70,1.9,71,1.129,72,1.259,73,1.154,74,1.154,75,1.129,76,1.129,77,1.259,78,1.154,79,1.984,80,1.129,81,1.259,82,1.154,83,1.154,84,1.129,85,1.129,86,1.259,87,1.154,88,1.652,89,0.484,90,1.726,91,1.154,92,1.059,93,1.129,94,1.129,95,1.259,96,1.154,97,1.587,98,1.129,99,1.259,100,1.154,101,1.129,102,1.105,103,1.259,104,1.259,105,0.005,106,0.005,111,0.216,112,0.648,113,1.421,114,0.399,117,0.775,119,0.512,120,0.401,121,0.552,123,0.836,124,0.854,130,1.231,185,1.793,228,0.411,236,0.738,246,5.091,247,0.666,248,0.553,259,0.484,277,2.425,291,3,292,1.852,320,2.123,321,2.733,322,2.06,323,1.508,329,0.929,578,5.036,601,2.599,603,4.081,604,2.617,612,2.599,613,1.508,614,1.316,623,2.36,624,1.974,641,1.544,644,2.191,645,2.539,646,2.123,647,1.508,659,1.688,666,1.688,694,1.703,702,6.393,703,2.516,704,4.27,705,3.742,706,4.113,707,3.169,708,3.169,709,2.73,710,3.169,711,1.316,712,3.169,713,1.544,714,3.169,715,1.316,716,3.169,717,1.316,718,3.169,719,3.169,720,5.334,721,3.169,722,3.169,723,3.169,724,3.169,725,3.169,726,3.169,727,4.345,728,3.169,729,3.169,730,3.169,731,4.807,732,1.508]],["title/classes/CurveChartInfo.html",[24,0.093,607,2.348]],["body/classes/CurveChartInfo.html",[3,0.115,4,0.064,9,0.045,20,0.233,22,0.009,23,0.187,24,0.122,32,0.734,39,1.416,42,0.624,89,0.338,105,0.004,106,0.004,111,0.237,112,0.518,113,1.51,114,0.524,117,0.904,119,0.838,120,0.467,121,0.904,122,1.201,124,1.333,201,1.303,228,0.778,231,1.502,236,0.785,241,1.626,247,0.532,248,0.706,259,0.704,292,0.726,329,0.927,382,1.81,460,1.053,462,1.328,480,1.188,482,0.433,485,2.19,531,1.275,534,1.917,535,1.917,536,1.834,537,1.917,538,1.917,539,2.324,540,2.755,541,2.477,542,2.755,543,2.755,549,1.44,553,1.185,555,1.601,565,0.695,591,3.589,592,4.495,605,0.791,606,0.774,607,2.562,608,3.072,609,2.562,655,1.913,659,1.922,666,1.348,676,1.328,678,2.757,681,2.654,685,1.772,688,1.772,691,1.772,711,2.053,713,1.129,715,2.155,717,2.155,733,1.839,734,4.261,735,4.905,736,3.123,737,3.978,738,4.905,739,3.275,740,3.275,741,3.275,742,3.275,743,3.275,744,2.988,745,3.275,746,3.275,747,4.577,748,3.275,749,3.275,750,3.275,751,3.275,752,3.275,753,2.988,754,3.275,755,3.275,756,3.275,757,3.275,758,3.275,759,3.275,760,1.263,761,0.9,762,1.913,763,3.216,764,3.216,765,4.085,766,4.085,767,1.772,768,2.148,769,1.772,770,0.843,771,1.839,772,1.103,773,1.913,774,1.077,775,2.027,776,1.691,777,1.691,778,2.988,779,1.995,780,1.995,781,1.995,782,1.995,783,1.995,784,1.995,785,1.654,786,1.839,787,2.477,788,1.995,789,2.988,790,1.995,791,2.988,792,1.995,793,1.462,794,1.129,795,3.583,796,1.995,797,1.654,798,1.995,799,1.995,800,1.995,801,0.983,802,2.988,803,1.156,804,0.791,805,1.995,806,1.865,807,2.97,808,1.995,809,1.995,810,4.085,811,1.995,812,1.995,813,4.261,814,1.995,815,1.995,816,1.995,817,1.995,818,1.995,819,1.995,820,1.995,821,1.995,822,1.995,823,1.995,824,1.772,825,2.988,826,2.988,827,2.988,828,2.988,829,2.988,830,3.099,831,2.988,832,4.123,833,4.261,834,1.839,835,3.978,836,3.978,837,1.995,838,1.995,839,1.839,840,1.995,841,1.995,842,1.995,843,1.839,844,1.462,845,1.839,846,1.462,847,2.988,848,3.583,849,3.583,850,1.995,851,2.988,852,2.988,853,2.988,854,1.421,855,1.601,856,1.601,857,0.9,858,1.601,859,1.601,860,1.421,861,1.995,862,1.995,863,1.995,864,2.398,865,1.995,866,1.421,867,2.398,868,1.601,869,1.421,870,2.988,871,1.995,872,1.077,873,1.995,874,1.077,875,1.995,876,1.311,877,1.995]],["title/interfaces/CurveChartInfoStorageObject.html",[482,0.278,747,2.525]],["body/interfaces/CurveChartInfoStorageObject.html",[3,0.125,4,0.072,9,0.051,20,0.251,22,0.009,23,0.193,24,0.131,39,1.503,42,0.706,89,0.371,105,0.005,106,0.005,111,0.259,112,0.567,113,1.462,114,0.33,120,0.397,122,1.194,124,1.402,201,1.4,231,1.523,236,0.759,241,1.7,248,0.689,259,0.698,292,0.821,329,0.976,382,1.875,462,1.092,480,1.196,482,0.455,485,2.399,531,1.165,532,1.219,534,1.088,535,1.088,536,1.041,537,1.088,538,1.088,549,1.088,565,0.787,591,3.752,592,4.553,605,0.894,606,0.875,607,1.935,608,3.301,609,2.806,655,2.095,659,2.022,666,1.476,676,1.409,678,2.926,681,2.907,685,2.005,688,2.005,691,2.005,711,2.253,715,2.253,717,2.253,733,2.081,734,4.675,736,2.399,737,2.257,744,2.257,747,4.446,753,2.257,760,1.383,761,1.018,762,2.164,763,3.383,764,3.383,765,4.298,766,4.298,767,2.005,768,2.28,769,2.005,770,0.954,771,2.081,772,1.247,773,2.164,774,1.219,775,2.178,776,1.852,777,1.852,778,3.273,779,2.257,780,2.257,781,2.257,782,2.257,783,2.257,784,2.257,785,1.871,786,2.081,787,2.713,788,2.257,789,3.273,790,2.257,791,3.273,792,2.257,793,1.655,794,1.277,795,3.85,796,2.257,797,1.871,798,2.257,799,2.257,800,2.257,801,1.112,802,3.273,803,1.308,804,0.894,805,2.257,806,2.042,807,3.191,808,2.257,809,2.257,810,4.298,811,2.257,812,2.257,813,4.483,814,2.257,815,2.257,816,2.257,817,2.257,818,2.257,819,2.257,820,2.257,821,2.257,822,2.257,823,2.257,824,2.005,825,3.273,826,3.273,827,3.273,828,3.273,829,3.273,830,3.239,831,3.273,832,4.31,833,4.483,834,2.081,835,4.223,836,4.223,837,2.257,838,2.257,839,2.081,840,2.257,841,2.257,842,2.257,843,2.081,844,1.655,845,2.081,846,1.655,847,3.273,848,3.85,849,3.85,850,2.257,851,3.273,852,3.273,853,3.273,854,1.608,855,1.811,856,1.811,857,1.018,858,1.811,859,1.811,860,1.608,861,2.257,862,2.257,863,2.257,864,2.626,865,2.257,866,1.608,867,2.626,868,1.811,869,1.608,870,3.273,871,2.257,872,1.219,873,2.257,874,1.219,875,2.257,876,1.483,877,2.257]],["title/components/CurveComponent.html",[0,0.366,44,1.133]],["body/components/CurveComponent.html",[0,0.645,1,1.14,2,1.699,3,0.106,4,0.088,5,1.271,6,1.271,7,1.271,8,1.271,9,0.062,11,2.02,12,1.243,13,1.271,14,2.012,15,2.053,16,1.312,18,1.312,20,0.314,21,0.644,22,0.008,23,0.106,24,0.093,26,0.94,27,1.737,28,1.737,29,1.271,30,2.127,31,1.271,32,0.792,33,1.271,34,1.165,35,1.271,36,1.14,37,1.271,38,1.14,39,1.876,40,1.271,41,1.165,42,1.626,43,2.396,44,1.908,45,1.271,46,1.165,47,2.227,48,1.14,49,2.127,50,1.165,51,1.853,52,1.14,53,1.271,54,1.165,55,1.14,56,1.14,57,1.271,58,1.14,59,1.19,60,1.833,61,1.271,62,1.115,63,0.96,64,1.271,65,1.165,66,1.216,67,1.165,68,1.271,69,1.165,70,1.908,71,1.14,72,1.271,73,1.165,74,1.165,75,1.14,76,1.14,77,1.271,78,1.165,79,1.992,80,1.14,81,1.271,82,1.165,83,1.165,84,1.14,85,1.14,86,1.271,87,1.165,88,1.662,89,0.522,90,1.737,91,1.165,92,1.069,93,1.14,94,1.14,95,1.271,96,1.165,97,1.594,98,1.14,99,1.271,100,1.165,101,1.14,102,1.525,103,1.271,104,1.271,105,0.005,106,0.005,111,0.218,114,0.403,117,0.635,119,0.706,120,0.354,121,0.762,122,0.585,130,1.243,138,2.143,174,2.93,190,2.474,228,0.415,247,0.67,248,0.487,259,0.357,317,1.963,318,2.284,319,3.766,321,2.411,323,1.523,603,4.097,604,2.642,624,1.987,662,2.642,676,0.92,694,1.719,732,1.523,768,2.607,774,1.487,806,3.185,807,3.122,872,1.487,874,1.487,878,4.002,879,7.044,880,6.182,881,4.373,882,4.982,883,3.823,884,4.982,885,4.613,886,4.523,887,4.373,888,6.7,889,4.523,890,2.883,891,3.199,892,3.941,893,2.642,894,3.199,895,3.199,896,5.355,897,2.02,898,3.199,899,2.883,900,3.199,901,3.199,902,3.199,903,3.199,904,2.761,905,3.199,906,4.14,907,2.447,908,5.07,909,3.029,910,3.199,911,3.199,912,2.883,913,4.14]],["title/classes/CurveData.html",[24,0.093,914,3.637]],["body/classes/CurveData.html",[3,0.116,4,0.065,9,0.046,20,0.236,22,0.009,23,0.188,24,0.123,32,0.74,39,1.432,42,0.639,89,0.411,105,0.004,106,0.004,111,0.319,112,0.527,113,1.379,114,0.531,117,0.854,119,0.845,120,0.439,121,0.912,122,1.163,124,1.411,201,1.321,228,0.739,231,1.506,236,0.794,241,1.64,247,0.541,248,0.696,259,0.706,292,0.742,329,1.129,382,1.895,460,1.077,462,1.343,480,1.244,482,0.437,485,2.228,531,1.082,534,0.984,535,0.984,536,0.941,537,0.984,538,0.984,549,0.984,565,1.059,591,4.161,592,4.522,605,0.809,606,0.792,607,1.75,608,3.114,609,2.606,655,1.945,659,1.941,666,1.371,676,1.343,678,2.788,681,2.7,685,1.813,688,1.813,691,1.813,711,1.75,715,1.75,717,1.75,733,1.882,734,3.632,736,2.228,737,2.041,744,2.041,747,4.158,753,2.041,760,1.285,761,0.921,762,1.957,763,3.247,764,3.247,765,4.125,766,4.125,767,1.813,768,2.172,769,1.813,770,0.863,771,1.882,772,1.128,773,1.957,774,1.102,775,2.055,776,1.72,777,1.72,778,3.04,779,2.041,780,2.041,781,2.041,782,2.041,783,2.041,784,2.041,785,1.692,786,1.882,787,2.52,788,2.041,789,3.04,790,2.041,791,3.04,792,2.041,793,2.949,794,1.155,795,3.632,796,2.041,797,1.692,798,2.041,799,2.041,800,2.041,801,1.498,802,3.04,803,1.761,804,1.705,805,2.041,806,2.51,807,3.566,808,3.04,809,2.041,810,4.125,811,2.041,812,2.041,813,4.302,814,2.041,815,2.041,816,2.041,817,2.041,818,2.041,819,2.041,820,2.041,821,2.041,822,2.041,823,2.041,824,1.813,825,3.04,826,3.04,827,3.04,828,3.04,829,3.04,830,3.125,831,3.04,832,4.158,833,4.302,834,1.882,835,4.023,836,4.023,837,2.041,838,2.041,839,1.882,840,2.041,841,2.041,842,2.041,843,1.882,844,1.496,845,1.882,846,1.496,847,3.04,848,3.632,849,3.632,850,2.041,851,3.04,852,3.04,853,3.04,854,1.454,855,1.638,856,1.638,857,1.815,858,1.638,859,1.638,860,1.454,861,2.041,862,2.041,863,2.041,864,2.439,865,2.041,866,1.454,867,2.439,868,1.638,869,1.454,870,3.04,871,2.041,872,1.102,873,2.041,874,1.102,875,2.041,876,1.341,877,2.041,897,2.228,914,2.711,915,4.989,916,2.385,917,2.802,918,2.439,919,4.989,920,4.989,921,4.989,922,3.351,923,3.351,924,3.351,925,3.351,926,3.351,927,3.351,928,1.183,929,3.351,930,3.351,931,3.351,932,3.351,933,3.351,934,1.813]],["title/interfaces/CurveDataDict.html",[482,0.278,591,2.198]],["body/interfaces/CurveDataDict.html",[3,0.123,4,0.07,9,0.05,20,0.247,22,0.009,23,0.192,24,0.129,39,1.485,42,0.689,89,0.364,105,0.005,106,0.005,111,0.255,112,0.557,113,1.441,114,0.322,120,0.417,121,0.937,122,1.165,124,1.388,201,1.38,231,1.519,236,0.749,241,1.685,248,0.686,259,0.696,292,0.801,329,0.966,382,2.063,462,1.073,480,1.242,482,0.451,485,2.355,531,1.144,532,1.188,534,1.061,535,1.061,536,1.015,537,1.061,538,1.061,549,1.061,565,0.767,591,3.84,592,4.522,605,0.872,606,0.854,607,1.887,608,3.254,609,2.755,655,2.057,659,2.213,666,1.45,676,1.393,678,2.892,681,2.854,685,1.955,688,1.955,691,1.955,711,1.829,715,1.829,717,1.829,733,2.029,734,3.795,736,2.355,737,2.201,744,2.201,747,4.272,753,2.201,760,1.358,761,0.993,762,2.111,763,3.702,764,3.702,765,4.703,766,4.703,767,1.955,768,2.253,769,1.955,770,0.93,771,2.029,772,1.216,773,2.111,774,1.188,775,2.147,776,1.818,777,1.818,778,3.213,779,2.201,780,2.201,781,2.201,782,2.201,783,2.201,784,2.201,785,1.825,786,2.029,787,2.664,788,2.201,789,3.213,790,2.201,791,3.213,792,2.201,793,1.613,794,1.245,795,3.795,796,2.201,797,1.825,798,2.201,799,2.201,800,2.201,801,1.085,802,3.213,803,1.276,804,0.872,805,2.201,806,2.005,807,3.146,808,2.201,809,2.201,810,4.255,811,2.201,812,2.201,813,4.438,814,2.201,815,2.201,816,2.201,817,2.201,818,2.201,819,2.201,820,2.201,821,2.201,822,2.201,823,2.201,824,1.955,825,3.213,826,3.213,827,3.213,828,3.213,829,3.213,830,3.211,831,3.213,832,4.272,833,4.438,834,2.029,835,4.173,836,4.173,837,2.201,838,2.201,839,2.029,840,2.201,841,2.201,842,2.201,843,2.029,844,1.613,845,2.029,846,1.613,847,3.213,848,3.795,849,3.795,850,2.201,851,3.213,852,3.213,853,3.213,854,1.568,855,1.766,856,1.766,857,0.993,858,1.766,859,1.766,860,1.568,861,2.201,862,2.201,863,2.201,864,2.579,865,2.201,866,1.568,867,2.579,868,1.766,869,1.568,870,3.213,871,2.201,872,1.188,873,2.201,874,1.188,875,2.201,876,1.446,877,2.201]],["title/components/CurveHighChartComponent.html",[0,0.366,46,1.157]],["body/components/CurveHighChartComponent.html",[0,0.497,1,0.881,2,1.415,3,0.082,4,0.068,5,0.982,6,0.982,7,0.982,8,0.982,9,0.048,12,0.96,13,0.982,14,1.979,15,2.02,16,1.093,18,1.093,20,0.285,21,0.498,22,0.009,23,0.082,24,0.072,26,1.27,27,1.446,28,1.446,29,0.982,30,1.894,31,0.982,32,0.718,33,0.982,34,0.9,35,0.982,36,0.881,37,0.982,38,0.881,39,1.821,40,0.982,41,0.9,42,1.578,43,2.241,44,0.881,45,0.982,46,1.736,47,2.019,48,0.881,49,1.894,50,0.9,51,1.608,52,0.881,53,0.982,54,0.9,55,0.881,56,0.881,57,0.982,58,0.881,59,0.92,60,0.808,61,0.982,62,0.862,63,0.742,64,0.982,65,0.9,66,0.94,67,0.9,68,0.982,69,0.9,70,1.699,71,0.881,72,0.982,73,0.9,74,0.9,75,0.881,76,0.881,77,0.982,78,0.9,79,1.774,80,0.881,81,0.982,82,0.9,83,0.9,84,0.881,85,0.881,86,0.982,87,0.9,88,1.384,89,0.355,90,1.446,91,0.9,92,0.826,93,0.881,94,0.881,95,0.982,96,0.9,97,1.383,98,0.881,99,0.982,100,0.9,101,0.881,102,0.862,103,0.982,104,0.982,105,0.005,106,0.005,111,0.169,112,0.543,114,0.312,117,0.912,119,0.698,120,0.457,121,0.753,123,1.34,124,1.37,130,0.96,228,0.771,231,1.021,236,0.619,247,0.558,248,0.712,259,0.688,292,1.14,317,1.517,318,1.765,323,1.177,382,0.808,480,0.916,507,5.103,531,1.116,539,3.194,563,3.57,578,5.687,580,2.63,588,3.093,600,2.383,601,2.265,603,3.648,604,2.041,605,0.844,612,2.363,613,1.177,614,1.026,615,4.165,616,4.944,623,2.057,624,1.654,639,2.438,640,1.656,641,2.324,642,2.234,644,1.709,645,2.269,646,1.656,647,1.177,653,4.325,655,2.628,660,2.129,674,3.281,676,0.711,694,1.328,697,3.093,701,4.555,732,1.733,824,1.891,830,2.173,839,2.891,904,1.56,935,7.219,936,3.007,937,4.322,938,4.322,939,3.667,940,4.322,941,3.641,942,5.147,943,6.111,944,6.741,945,4.322,946,4.322,947,4.768,948,6.111,949,3.641,950,4.036,951,3.495,952,2.785,953,3.495,954,3.495,955,3.495,956,3.495,957,3.495,958,3.495,959,3.495,960,3.495,961,3.495,962,3.495,963,3.495,964,3.641,965,3.641,966,3.447,967,3.447,968,3.641,969,4.768,970,3.447,971,3.281,972,3.641,973,3.641,974,3.495,975,3.495,976,3.495,977,2.129,978,3.641,979,3.641,980,3.641,981,2.472,982,3.495,983,2.472,984,3.495,985,4.768,986,2.472,987,5.147,988,2.472,989,3.495,990,3.495,991,2.63,992,2.63,993,2.63,994,3.495,995,3.093,996,3.093,997,3.093,998,2.129]],["title/classes/CurveImpl.html",[24,0.093,834,2.525]],["body/classes/CurveImpl.html",[3,0.12,4,0.067,9,0.048,20,0.241,22,0.009,23,0.19,24,0.126,32,0.608,39,1.457,42,0.661,89,0.353,105,0.005,106,0.005,111,0.247,112,0.54,113,1.407,114,0.309,117,0.835,119,0.695,120,0.41,121,0.75,122,1.159,123,0.955,124,1.478,201,1.348,228,0.712,231,1.512,236,0.807,241,1.661,247,0.555,248,0.699,259,0.703,292,0.769,329,1.078,382,1.841,460,1.115,462,1.366,480,1.211,482,0.443,485,2.286,531,1.11,534,1.019,535,1.019,536,1.887,537,1.019,538,1.019,541,2.585,549,1.019,565,0.736,591,3.666,592,4.708,605,0.837,606,0.82,607,1.812,608,3.178,609,3.178,655,2.372,659,1.969,666,1.407,676,1.366,678,2.836,681,3.293,685,1.877,688,1.877,691,1.877,711,1.787,715,1.787,717,1.787,733,1.948,734,3.707,736,3.199,737,2.114,744,2.114,747,4.211,753,2.114,760,1.318,761,0.953,762,2.027,763,3.294,764,3.294,765,4.185,766,4.185,767,1.877,768,2.209,769,1.877,770,0.893,771,1.948,772,1.168,773,2.027,774,1.141,775,2.097,776,1.765,777,1.765,778,3.119,779,2.114,780,2.114,781,2.114,782,2.114,783,2.114,784,2.114,785,1.752,786,1.948,787,2.585,788,2.114,789,3.119,790,2.114,791,3.119,792,2.114,793,1.549,794,1.196,795,3.707,796,2.114,797,1.752,798,2.114,799,2.114,800,2.114,801,1.042,802,3.119,803,1.225,804,0.837,805,2.114,806,1.946,807,3.073,808,2.114,809,2.114,810,4.185,811,2.114,812,2.114,813,4.365,814,2.114,815,2.114,816,2.114,817,2.114,818,2.114,819,2.114,820,2.114,821,2.114,822,2.114,823,2.114,824,1.877,825,3.119,826,3.119,827,4.365,828,3.707,829,4.365,830,3.489,831,3.707,832,4.708,833,4.849,834,2.875,835,4.093,836,4.093,837,2.114,838,2.114,839,1.948,840,3.119,841,2.114,842,2.114,843,1.948,844,1.549,845,1.948,846,1.549,847,3.119,848,3.707,849,3.707,850,2.114,851,3.119,852,3.119,853,3.119,854,1.506,855,1.696,856,1.696,857,0.953,858,1.696,859,1.696,860,1.506,861,2.114,862,2.114,863,2.114,864,2.503,865,2.114,866,1.506,867,2.503,868,1.696,869,1.506,870,3.119,871,2.114,872,1.141,873,2.114,874,1.141,875,2.114,876,1.388,877,2.114,999,4.531,1000,4.531,1001,3.47,1002,3.47,1003,3.47,1004,3.47,1005,3.47,1006,3.47,1007,3.47,1008,3.47,1009,3.47]],["title/interfaces/CurveInterface.html",[482,0.278,609,2.348]],["body/interfaces/CurveInterface.html",[3,0.124,4,0.071,9,0.05,20,0.248,22,0.009,23,0.192,24,0.129,32,0.531,39,1.492,42,0.695,89,0.367,105,0.005,106,0.005,111,0.257,113,1.449,114,0.325,117,0.707,119,0.607,120,0.304,121,0.655,122,1.166,124,1.394,201,1.388,228,0.632,231,1.521,236,0.753,241,1.691,247,0.576,248,0.688,259,0.704,292,0.808,329,0.97,382,1.867,462,1.08,480,1.213,482,0.453,485,2.372,531,1.152,532,1.2,534,1.071,535,1.071,536,1.025,537,1.071,538,1.071,549,1.071,565,0.775,591,3.732,592,4.623,605,0.881,606,0.862,607,1.906,608,3.272,609,3.272,655,2.071,659,2.01,666,1.46,676,1.399,678,2.905,681,2.875,685,1.974,688,1.974,691,1.974,711,1.839,715,1.839,717,1.839,733,2.049,734,3.817,736,2.372,737,2.223,744,2.223,747,4.287,753,2.223,760,1.368,761,1.003,762,2.132,763,3.363,764,3.363,765,4.272,766,4.272,767,1.974,768,2.263,769,1.974,770,0.94,771,2.049,772,1.228,773,2.132,774,1.2,775,2.159,776,1.831,777,1.831,778,3.237,779,2.223,780,2.223,781,2.223,782,2.223,783,2.223,784,2.223,785,1.843,786,2.049,787,2.683,788,2.223,789,3.237,790,2.223,791,3.237,792,2.223,793,1.629,794,1.258,795,3.817,796,2.223,797,1.843,798,2.223,799,2.223,800,2.223,801,1.096,802,3.237,803,1.288,804,0.881,805,2.223,806,2.019,807,3.164,808,2.223,809,2.223,810,4.272,811,2.223,812,2.223,813,4.455,814,2.223,815,2.223,816,2.223,817,2.223,818,2.223,819,2.223,820,2.223,821,2.223,822,2.223,823,2.223,824,1.974,825,3.237,826,3.237,827,4.455,828,3.817,829,4.455,830,3.475,831,3.817,832,4.287,833,4.65,834,2.049,835,4.192,836,4.192,837,2.223,838,2.223,839,2.049,840,2.223,841,2.223,842,2.223,843,2.049,844,1.629,845,2.049,846,1.629,847,3.237,848,3.817,849,3.817,850,2.223,851,3.237,852,3.237,853,3.237,854,1.584,855,1.784,856,1.784,857,1.003,858,1.784,859,1.784,860,1.584,861,2.223,862,2.223,863,2.223,864,2.597,865,2.223,866,1.584,867,2.597,868,1.784,869,1.584,870,3.237,871,2.223,872,1.2,873,2.223,874,1.2,875,2.223,876,1.46,877,2.223,999,4.701,1000,4.701,1010,3.649,1011,3.649,1012,3.649,1013,3.649]],["title/interfaces/CurveInterfaceStorageObject.html",[482,0.278,832,2.525]],["body/interfaces/CurveInterfaceStorageObject.html",[3,0.126,4,0.073,9,0.051,20,0.252,22,0.009,23,0.193,24,0.131,39,1.511,42,0.714,89,0.374,105,0.005,106,0.005,111,0.261,112,0.571,113,1.471,114,0.334,120,0.31,122,1.17,124,1.408,201,1.409,231,1.525,236,0.764,241,1.707,248,0.691,259,0.7,292,0.83,329,0.98,382,1.881,462,1.101,480,1.198,482,0.457,485,2.418,531,1.174,532,1.232,534,1.1,535,1.1,536,1.052,537,1.1,538,1.1,549,1.1,565,0.795,591,3.766,592,4.785,605,0.904,606,0.885,607,1.957,608,3.86,609,2.828,655,2.111,659,2.031,666,1.488,676,1.417,678,2.941,681,2.93,685,2.027,688,2.027,691,2.027,711,1.867,715,1.867,717,1.867,733,2.104,734,3.874,736,2.418,737,2.282,744,2.282,747,4.326,753,2.282,760,1.394,761,1.029,762,2.188,763,3.398,764,3.398,765,4.317,766,4.317,767,2.027,768,2.291,769,2.027,770,0.964,771,2.104,772,1.261,773,2.188,774,1.232,775,2.192,776,1.866,777,1.866,778,3.299,779,2.282,780,2.282,781,2.282,782,2.282,783,2.282,784,2.282,785,1.892,786,2.104,787,2.734,788,2.282,789,3.299,790,2.282,791,3.299,792,2.282,793,1.673,794,1.291,795,3.874,796,2.282,797,1.892,798,2.282,799,2.282,800,2.282,801,1.125,802,3.299,803,1.322,804,0.904,805,2.282,806,2.058,807,3.211,808,2.282,809,2.282,810,4.317,811,2.282,812,2.282,813,4.502,814,2.282,815,2.282,816,2.282,817,2.282,818,2.282,819,2.282,820,2.282,821,2.282,822,2.282,823,2.282,824,2.027,825,3.299,826,3.299,827,3.299,828,3.299,829,3.299,830,3.433,831,3.299,832,4.46,833,4.954,834,2.104,835,4.244,836,4.244,837,2.282,838,2.282,839,2.104,840,2.282,841,2.282,842,2.282,843,2.104,844,1.673,845,2.104,846,1.673,847,3.299,848,3.874,849,3.874,850,2.282,851,3.299,852,3.299,853,3.299,854,1.626,855,1.831,856,1.831,857,1.029,858,1.831,859,1.831,860,1.626,861,2.282,862,2.282,863,2.282,864,2.647,865,2.282,866,1.626,867,2.647,868,1.831,869,1.626,870,3.299,871,2.282,872,1.232,873,2.282,874,1.232,875,2.282,876,1.499,877,2.282]],["title/modules/CurveModule.html",[132,1.513,1014,3.01]],["body/modules/CurveModule.html",[3,0.123,4,0.102,9,0.072,11,2.352,20,0.373,21,0.75,22,0.008,23,0.123,24,0.109,26,1.094,38,2.154,39,1.745,41,2.201,42,1.304,44,2.319,46,2.201,48,2.154,60,1.583,63,1.118,65,2.201,66,1.416,89,0.472,92,1.617,105,0.006,106,0.006,132,2.559,134,2.352,135,2.422,136,3.209,137,2.422,138,3.602,139,3.209,150,3.346,151,2.286,152,2.422,154,2.889,155,2.889,157,4.262,161,6.056,162,4.662,174,2.496,178,3.358,179,5.15,180,3.427,181,4.662,182,6.056,183,3.726,184,4.169,185,2.108,188,2.66,189,3.456,190,2.108,321,2.054,322,2.422,507,2.958,579,3.964,603,4.626,604,3.077,702,4.262,883,4.317,892,3.358,893,3.077,935,4.262,939,2.422,1014,6.323,1015,4.662,1016,4.662,1017,4.662,1018,4.662,1019,4.662,1020,4.801,1021,4.801,1022,5.268,1023,6.056,1024,5.268,1025,4.841,1026,3.844,1027,4.841,1028,4.262,1029,4.841,1030,6.844,1031,3.964,1032,6.056,1033,4.583,1034,3.726,1035,6.844,1036,3.964,1037,3.726,1038,4.841,1039,2.422,1040,6.844,1041,6.844,1042,4.662,1043,4.262,1044,4.169,1045,3.209,1046,5.268,1047,6.844,1048,4.662,1049,4.841,1050,2.352,1051,3.077]],["title/classes/CurveStorage.html",[24,0.093,843,2.525]],["body/classes/CurveStorage.html",[3,0.137,4,0.064,9,0.045,20,0.233,22,0.009,23,0.187,24,0.122,32,0.652,39,1.65,42,0.934,89,0.45,105,0.004,106,0.004,111,0.237,112,0.517,113,1.359,114,0.437,117,0.892,119,0.745,120,0.467,121,0.804,122,1.164,123,1.096,124,1.491,201,1.302,228,0.734,231,1.502,236,0.784,241,1.949,247,0.531,248,0.715,259,0.706,292,0.725,329,0.927,382,1.81,460,1.052,462,0.997,480,1.171,482,0.454,485,2.189,531,1.063,534,0.961,535,0.961,536,0.919,537,0.961,538,0.961,549,0.961,565,0.695,591,4.097,592,4.395,605,0.79,606,0.773,607,1.71,608,3.07,609,2.561,655,1.912,659,1.921,666,1.347,676,1.327,678,2.756,681,2.653,685,1.771,688,1.771,691,1.771,711,1.726,715,1.726,717,1.726,733,1.838,734,3.581,736,2.189,737,1.994,744,1.994,747,4.706,753,1.994,760,1.514,761,0.899,762,1.912,763,3.215,764,3.215,765,4.084,766,4.084,767,1.771,768,2.147,769,1.771,770,0.843,771,1.838,772,1.102,773,1.912,774,1.076,775,2.026,776,1.69,777,1.69,778,2.987,779,1.994,780,1.994,781,1.994,782,1.994,783,1.994,784,1.994,785,1.653,786,1.838,787,2.476,788,1.994,789,2.987,790,1.994,791,2.987,792,1.994,793,1.461,794,1.128,795,3.581,796,1.994,797,1.653,798,1.994,799,1.994,800,1.994,801,0.983,802,2.987,803,1.156,804,0.79,805,1.994,806,1.864,807,2.969,808,1.994,809,1.994,810,4.084,811,1.994,812,1.994,813,4.259,814,1.994,815,1.994,816,1.994,817,1.994,818,1.994,819,1.994,820,1.994,821,1.994,822,1.994,823,1.994,824,1.771,825,2.987,826,2.987,827,2.987,828,2.987,829,2.987,830,3.098,831,2.987,832,4.494,833,4.259,834,1.838,835,3.977,836,3.977,837,1.994,838,1.994,839,1.838,840,1.994,841,1.994,842,1.994,843,2.753,844,2.625,845,3.301,846,2.625,847,4.259,848,4.636,849,4.636,850,2.987,851,2.987,852,2.987,853,2.987,854,2.833,855,1.6,856,1.6,857,1.794,858,1.6,859,1.6,860,2.833,861,1.994,862,1.994,863,2.987,864,2.397,865,1.994,866,2.128,867,2.397,868,1.6,869,2.128,870,2.987,871,1.994,872,2.147,873,1.994,874,2.147,875,1.994,876,2.612,877,1.994,1052,3.283,1053,3.283,1054,3.283,1055,4.903,1056,3.273,1057,3.273,1058,3.273,1059,3.273,1060,3.273,1061,3.273,1062,3.273,1063,3.273,1064,3.273,1065,3.273,1066,3.273,1067,3.273,1068,3.273,1069,3.273,1070,3.273,1071,2.192]],["title/classes/CurveTable.html",[24,0.093,1072,3.383]],["body/classes/CurveTable.html",[0,0.556,3,0.123,4,0.133,9,0.072,14,1.117,15,1.141,16,1.117,18,1.117,20,0.345,21,0.749,22,0.009,23,0.123,24,0.141,32,0.526,39,1.745,48,1.326,89,0.363,102,1.874,105,0.006,106,0.006,111,0.367,112,0.722,114,0.469,117,0.878,119,0.601,120,0.392,121,0.648,122,1.126,123,0.981,124,1.003,130,1.446,228,0.697,231,1.143,236,0.913,241,1.683,247,0.741,248,0.686,259,0.634,292,1.782,329,1.007,460,1.691,480,1.093,482,0.326,578,5.546,581,4.464,586,3.572,591,3.343,600,2.667,601,2.535,603,3.701,604,3.074,610,3.722,612,2.499,613,1.771,614,1.545,623,1.771,625,2.749,639,1.903,641,2.357,642,2.968,645,1.771,646,2.494,647,1.771,804,1.942,857,2.211,934,3.701,1036,6.548,1039,2.419,1072,5.717,1073,2.847,1074,3.837,1075,4.267,1076,4.353,1077,4.353,1078,5.146,1079,4.267,1080,4.258,1081,4.258,1082,4.258,1083,4.062,1084,3.96,1085,2.955,1086,2.955,1087,2.955,1088,2.955,1089,2.847,1090,4.657,1091,4.657,1092,5.146,1093,4.657,1094,3.841,1095,6.052,1096,4.657,1097,3.841,1098,4.657,1099,5.146,1100,2.749,1101,4.657,1102,2.955,1103,4.657,1104,2.955,1105,4.657,1106,2.955,1107,2.955,1108,2.955]],["title/components/CurveTableComponent.html",[0,0.366,48,1.133]],["body/components/CurveTableComponent.html",[0,0.535,1,1.002,2,1.553,3,0.093,4,0.11,5,1.117,6,1.117,7,1.117,8,1.117,9,0.055,12,1.093,13,1.117,14,1.996,15,2.038,16,1.199,18,1.199,20,0.321,21,0.566,22,0.009,23,0.093,24,0.117,26,0.826,27,1.587,28,1.587,29,1.117,30,2.011,31,1.117,32,0.657,33,1.117,34,1.024,35,1.117,36,1.002,37,1.117,38,1.002,39,1.904,40,1.117,41,1.024,42,1.441,43,2.321,44,1.002,45,1.117,46,1.024,47,2.124,48,1.804,49,2.011,50,1.024,51,1.73,52,1.002,53,1.117,54,1.024,55,1.002,56,1.002,57,1.117,58,1.002,59,1.046,60,0.919,61,1.117,62,0.98,63,0.844,64,1.117,65,1.024,66,1.069,67,1.024,68,1.117,69,1.024,70,1.804,71,1.002,72,1.117,73,1.024,74,1.024,75,1.002,76,1.002,77,1.117,78,1.024,79,1.884,80,1.002,81,1.117,82,1.024,83,1.024,84,1.002,85,1.002,86,1.117,87,1.024,88,1.519,89,0.39,90,1.587,91,1.024,92,0.939,93,1.002,94,1.002,95,1.117,96,1.024,97,1.488,98,1.002,99,1.117,100,1.024,101,1.002,102,2.037,103,1.117,104,1.117,105,0.005,106,0.005,111,0.317,112,0.596,114,0.354,117,0.886,119,0.454,120,0.45,121,0.49,122,0.979,123,1.465,124,1.498,130,1.093,228,0.519,231,0.944,236,0.79,241,0.881,247,0.612,248,0.596,259,0.596,292,1.676,317,1.725,323,1.338,329,1.115,480,0.972,482,0.246,578,5.551,581,3.95,586,2.077,591,2.763,600,2.563,601,2.437,603,3.874,604,2.322,610,2.812,612,2.487,613,1.338,614,1.167,623,2.213,625,2.077,639,2.589,641,1.948,642,2.452,645,2.41,646,1.884,647,1.338,732,1.902,804,1.728,857,1.093,904,1.775,934,3.058,1036,6.553,1039,1.828,1072,4.947,1073,2.151,1074,2.854,1075,2.233,1076,2.151,1077,2.151,1079,3.173,1083,3.32,1085,2.233,1086,3.173,1087,3.692,1088,3.692,1089,3.557,1090,5,1091,5,1092,4.252,1093,3.518,1094,3.173,1095,5,1096,3.518,1097,3.173,1098,3.518,1099,4.252,1100,3.434,1101,3.518,1102,3.692,1103,3.518,1104,3.692,1105,3.518,1106,2.233,1107,2.233,1108,2.233,1109,3.976,1110,4.572,1111,3.217,1112,3.976,1113,2.992,1114,2.812,1115,2.812,1116,3.976,1117,3.976,1118,3.976,1119,2.812,1120,2.812,1121,2.812]],["title/classes/DefaultAppearanceSettings.html",[24,0.093,275,2.348]],["body/classes/DefaultAppearanceSettings.html",[3,0.108,4,0.09,9,0.063,22,0.009,23,0.209,24,0.147,105,0.006,106,0.006,111,0.303,112,0.662,117,0.82,120,0.457,122,1.164,123,1.639,124,1.522,231,1.452,241,1.389,248,0.494,254,4.456,255,3.999,256,3.999,262,3.522,265,3.522,268,3.522,271,3.522,274,2.594,275,3.276,307,4.338,329,1.185,352,4.814,355,3.999,360,3.999,364,3.999,377,2.412,406,4.338,407,4.865,408,2.814,460,1.484,461,2.698,462,1.898,463,2.944,464,2.944,468,3.997,469,3.82,470,3.997,471,3.997,474,2.944,476,3.999,477,2.944,479,2.944,480,0.627,482,0.473,483,4.628,484,5.842,485,3.566,486,4.653,487,2.698,488,4.865,489,2.698,490,2.944,491,2.944,492,2.814,493,2.814,494,2.698,495,4.653,496,2.814,497,2.814,498,4.338,499,3.853,500,4.159,501,4.338,502,2.814,503,3.82,504,3.82,505,2.944,506,2.944,507,3.522,508,3.82,509,2.944,510,2.944,511,4.539,512,2.944,513,2.944,514,2.944,515,2.944,516,2.944,517,4.539,518,2.944,519,2.944,520,2.944,521,4.539,522,2.944,523,2.944,524,2.944,525,2.944,526,2.944,527,2.944,528,2.814,529,3.997,530,2.944,1122,4.619,1123,4.619,1124,4.619,1125,4.619,1126,4.619]],["title/components/DualChartFormComponent.html",[0,0.366,50,1.157]],["body/components/DualChartFormComponent.html",[0,0.572,1,1.134,2,1.694,3,0.105,4,0.088,5,1.265,6,1.265,7,1.265,8,1.265,9,0.062,12,1.237,13,1.265,14,2.011,15,2.053,16,1.308,18,1.308,20,0.3,21,0.641,22,0.008,23,0.105,24,0.093,26,0.935,27,1.731,28,1.731,29,1.265,30,2.123,31,1.265,32,0.702,33,1.265,34,1.159,35,1.265,36,1.134,37,1.265,38,1.134,39,1.639,40,1.265,41,1.159,42,1.767,43,2.393,44,1.134,45,1.265,46,1.159,47,2.223,48,1.134,49,2.123,50,1.946,51,2.3,52,1.134,53,1.265,54,1.159,55,1.134,56,1.134,57,1.265,58,1.134,59,1.184,60,1.041,61,1.265,62,1.11,63,0.956,64,1.265,65,1.159,66,1.21,67,1.159,68,1.265,69,1.159,70,1.904,71,1.134,72,1.265,73,1.159,74,1.159,75,1.134,76,1.134,77,1.265,78,1.159,79,1.988,80,1.134,81,1.265,82,1.159,83,1.159,84,1.134,85,1.134,86,1.265,87,1.159,88,1.657,89,0.485,90,1.731,91,1.159,92,1.064,93,1.134,94,1.134,95,1.265,96,1.159,97,1.591,98,1.134,99,1.265,100,1.159,101,1.134,102,1.11,103,1.265,104,1.265,105,0.005,106,0.005,111,0.217,112,0.65,113,1.425,114,0.401,117,0.776,119,0.514,120,0.402,121,0.555,123,0.84,124,0.858,130,1.237,185,1.801,228,0.413,246,5.098,247,0.668,248,0.554,259,0.486,277,2.436,291,3.015,292,1.854,320,2.133,321,2.74,322,2.07,323,1.515,329,0.932,612,2.603,613,1.515,614,1.322,623,2.365,624,1.98,641,1.552,644,2.201,645,2.544,646,2.133,647,1.515,659,1.694,666,1.694,694,1.711,703,2.528,704,4.281,705,3.754,706,4.127,707,3.184,708,3.184,709,2.742,710,3.184,711,1.322,712,3.184,713,1.552,714,3.184,715,1.322,716,3.184,717,1.322,718,3.184,719,3.184,720,5.344,721,3.184,722,3.184,723,3.184,724,3.184,725,3.184,726,3.184,727,4.359,728,3.184,729,3.184,730,3.184,731,4.816,732,1.515,1127,5.598,1128,6.404,1129,4.244,1130,3.015]],["title/classes/DualChartInfo.html",[24,0.093,1131,2.739]],["body/classes/DualChartInfo.html",[3,0.093,4,0.078,9,0.055,20,0.261,22,0.009,23,0.167,24,0.117,32,0.757,89,0.391,105,0.005,106,0.005,111,0.273,112,0.598,113,1.523,114,0.639,117,0.924,119,0.865,120,0.482,121,0.933,122,1.207,201,0.884,228,0.8,231,1.478,236,0.791,247,0.614,248,0.693,259,0.672,329,0.751,382,1.912,460,1.282,462,1.458,480,1.159,482,0.35,531,1.428,534,2.105,535,2.105,536,2.014,537,2.105,538,2.105,539,2.684,540,3.181,541,2.86,542,3.181,543,3.181,549,1.663,551,2,553,1.443,555,1.95,556,1.555,558,1.596,559,1.555,561,1.596,565,1.202,598,1.639,605,0.963,606,0.942,659,1.096,666,1.096,676,1.339,711,2.31,713,2.712,715,2.31,717,2.31,760,1.027,761,1.096,763,2.604,764,2.604,768,1.312,770,1.027,772,1.343,774,1.312,775,2.471,776,2.27,777,2.27,785,2.014,787,2.86,794,1.952,797,2.86,801,1.198,803,1.408,804,1.59,907,2.158,916,1.596,928,1.408,1131,3.451,1132,2.671,1133,5.828,1134,3.745,1135,5.664,1136,3.989,1137,3.989,1138,3.989,1139,3.989,1140,3.989,1141,3.989,1142,3.989,1143,4.929,1144,3.989,1145,3.989,1146,3.989,1147,3.989,1148,3.989,1149,3.989,1150,3.989,1151,3.989,1152,4.544,1153,2.543,1154,5.761,1155,2.43,1156,2.78,1157,2.821,1158,2.821,1159,4.006,1160,2.821,1161,2.821,1162,4.006,1163,2.821,1164,2.821,1165,4.006,1166,2.821,1167,2.821,1168,4.006,1169,2.821,1170,2.821,1171,2.821,1172,1.834,1173,2.821,1174,2.821,1175,2.671,1176,2.821,1177,2.821,1178,2.543,1179,2.821,1180,2.821,1181,2.821,1182,2.821,1183,2.543,1184,2.821,1185,2.821,1186,2.821,1187,1.375,1188,2.821,1189,5.723,1190,5.723,1191,2.543,1192,2.821,1193,2.671,1194,2.821,1195,2.671,1196,2.821,1197,2.671,1198,2.821,1199,2.014,1200,2.821,1201,2.543,1202,2.821,1203,2.821,1204,2.821,1205,4.006,1206,2.391,1207,2.821,1208,4.006,1209,1.684,1210,1.684,1211,2.821,1212,2.78,1213,2.821,1214,2.821,1215,2.821,1216,2.821,1217,2.821,1218,2.821,1219,2.821,1220,2.821,1221,2.821]],["title/interfaces/DualChartInfoStorageObject.html",[482,0.278,1143,2.739]],["body/interfaces/DualChartInfoStorageObject.html",[3,0.107,4,0.089,9,0.063,20,0.281,22,0.009,23,0.178,24,0.129,89,0.316,105,0.006,106,0.006,111,0.301,112,0.658,113,1.441,114,0.555,120,0.436,122,1.204,201,1.014,231,1.509,236,0.749,248,0.627,259,0.627,329,0.826,382,1.978,462,1.267,480,1.191,482,0.386,531,1.351,532,1.504,534,1.343,535,1.343,536,1.285,537,1.343,538,1.343,549,1.343,551,1.615,565,1.323,598,1.88,605,1.104,606,1.081,659,1.257,666,1.257,676,1.441,711,2.467,713,2.897,715,2.467,717,2.467,760,1.178,761,1.257,763,2.865,764,2.865,768,1.504,770,1.178,772,1.54,774,1.504,775,2.622,776,2.442,777,2.442,785,2.31,787,3.146,794,2.148,797,3.146,801,1.373,803,1.615,804,1.71,907,2.475,916,1.831,928,1.615,1131,2.787,1132,3.063,1134,2.389,1143,4.634,1152,4.719,1153,2.916,1154,5.855,1155,2.787,1156,2.991,1157,3.236,1158,3.236,1159,4.407,1160,3.236,1161,3.236,1162,4.407,1163,3.236,1164,3.236,1165,4.407,1166,3.236,1167,3.236,1168,4.407,1169,3.236,1170,3.236,1171,3.236,1172,2.103,1173,3.236,1174,3.236,1175,3.063,1176,3.236,1177,3.236,1178,2.916,1179,3.236,1180,3.236,1181,3.236,1182,3.236,1183,2.916,1184,3.236,1185,3.236,1186,3.236,1187,1.577,1188,3.236,1189,5.943,1190,5.943,1191,2.916,1192,3.236,1193,3.063,1194,3.236,1195,3.063,1196,3.236,1197,3.063,1198,3.236,1199,2.31,1200,3.236,1201,2.916,1202,3.236,1203,3.236,1204,3.236,1205,4.407,1206,2.63,1207,3.236,1208,4.407,1209,1.931,1210,1.931,1211,3.236,1212,2.991,1213,3.236,1214,3.236,1215,3.236,1216,3.236,1217,3.236,1218,3.236,1219,3.236,1220,3.236,1221,3.236]],["title/components/DualComponent.html",[0,0.366,52,1.133]],["body/components/DualComponent.html",[0,0.577,1,1.153,2,1.712,3,0.107,4,0.089,5,1.285,6,1.285,7,1.285,8,1.285,9,0.063,12,1.257,13,1.285,14,2.013,15,2.055,16,1.323,18,1.323,20,0.316,21,0.651,22,0.008,23,0.107,24,0.095,26,0.95,27,1.75,28,1.75,29,1.285,30,2.137,31,1.285,32,0.795,33,1.285,34,1.178,35,1.285,36,1.153,37,1.285,38,1.153,39,1.65,40,1.285,41,1.178,42,1.63,43,2.402,44,1.153,45,1.285,46,1.178,47,2.236,48,1.153,49,2.137,50,1.178,51,2.161,52,1.917,53,1.285,54,1.178,55,1.153,56,1.153,57,1.285,58,1.153,59,1.204,60,1.841,61,1.285,62,1.128,63,0.971,64,1.285,65,1.178,66,1.23,67,1.178,68,1.285,69,1.178,70,1.917,71,1.153,72,1.285,73,1.178,74,1.178,75,1.153,76,1.153,77,1.285,78,1.178,79,2.002,80,1.153,81,1.285,82,1.178,83,1.178,84,1.153,85,1.153,86,1.285,87,1.178,88,1.675,89,0.525,90,1.75,91,1.178,92,1.081,93,1.153,94,1.153,95,1.285,96,1.178,97,1.604,98,1.153,99,1.285,100,1.178,101,1.153,102,1.537,103,1.285,104,1.285,105,0.006,106,0.006,111,0.221,114,0.408,117,0.64,119,0.712,120,0.357,121,0.768,122,0.592,130,1.257,174,2.952,190,2.493,228,0.42,247,0.675,248,0.491,259,0.361,317,1.985,318,2.31,319,3.796,321,2.429,323,1.54,624,2.002,662,2.672,676,0.93,694,1.739,732,1.54,768,2.618,774,1.504,806,3.194,807,3.146,872,1.504,874,1.504,881,4.407,882,5.011,883,3.842,884,5.011,885,4.634,887,4.407,890,2.916,891,3.236,892,3.971,893,2.672,894,3.236,895,3.236,896,5.381,897,2.043,898,3.236,899,2.916,900,3.236,901,3.236,902,3.236,903,3.236,904,2.782,905,3.236,906,4.172,907,2.475,908,5.094,909,3.063,910,3.236,911,3.236,912,2.916,913,4.172,1129,4.272,1130,3.063,1222,4.048,1223,7.085,1224,6.23,1225,4.575,1226,4.849,1227,4.575]],["title/classes/DualData.html",[24,0.093,1155,2.739]],["body/classes/DualData.html",[3,0.1,4,0.083,9,0.059,20,0.272,22,0.009,23,0.173,24,0.123,32,0.684,89,0.411,105,0.005,106,0.005,111,0.357,112,0.629,113,1.377,114,0.66,117,0.865,119,0.782,120,0.424,121,0.844,122,1.165,201,0.949,228,0.739,231,1.495,236,0.823,247,0.646,248,0.651,259,0.664,329,0.79,382,1.947,460,1.377,462,1.505,480,1.238,482,0.369,531,1.292,534,1.258,535,1.258,536,1.204,537,1.258,538,1.258,549,1.258,551,1.513,565,1.453,598,2.813,605,1.034,606,1.012,659,1.177,666,1.177,676,1.392,711,2.172,713,2.55,715,2.172,717,2.172,760,1.103,761,1.177,763,2.738,764,2.738,768,1.409,770,1.103,772,1.442,774,1.409,775,2.55,776,2.36,777,2.36,785,2.164,787,3.008,793,3.057,794,2.053,797,3.008,801,1.788,803,2.103,804,1.993,857,1.881,897,2.659,907,2.318,916,2.961,917,3.345,918,2.912,928,2.103,1131,2.61,1132,2.869,1134,2.238,1143,4.171,1152,4.956,1153,2.731,1154,5.811,1155,3.628,1156,2.89,1157,3.03,1158,3.03,1159,4.212,1160,3.03,1161,3.03,1162,4.212,1163,3.03,1164,3.03,1165,4.212,1166,3.03,1167,3.03,1168,4.212,1169,3.03,1170,3.03,1171,3.03,1172,1.97,1173,3.03,1174,3.03,1175,2.869,1176,3.03,1177,3.03,1178,2.731,1179,3.03,1180,3.03,1181,3.03,1182,3.03,1183,2.731,1184,3.03,1185,3.03,1186,3.03,1187,1.477,1188,3.03,1189,5.84,1190,5.84,1191,2.731,1192,3.03,1193,2.869,1194,3.03,1195,2.869,1196,3.03,1197,2.869,1198,3.03,1199,2.164,1200,3.03,1201,2.731,1202,3.03,1203,3.03,1204,3.03,1205,4.212,1206,2.514,1207,3.03,1208,4.212,1209,1.809,1210,1.809,1211,3.03,1212,2.89,1213,3.03,1214,3.03,1215,3.03,1216,3.03,1217,3.03,1218,3.03,1219,3.03,1220,3.03,1221,3.03,1228,5.956,1229,4.285,1230,4.285,1231,4.285,1232,4.285,1233,4.285,1234,4.285]],["title/interfaces/DualDataDict.html",[482,0.278,1152,2.525]],["body/interfaces/DualDataDict.html",[3,0.105,4,0.088,9,0.062,20,0.279,22,0.009,23,0.176,24,0.127,89,0.311,105,0.005,106,0.005,111,0.298,112,0.651,113,1.426,114,0.55,120,0.433,122,1.173,201,0.998,231,1.506,236,0.741,248,0.624,259,0.624,329,0.818,382,2.105,462,1.254,480,1.246,482,0.382,531,1.337,532,1.482,534,1.323,535,1.323,536,1.266,537,1.323,538,1.323,549,1.323,551,1.591,565,1.309,598,1.851,605,1.088,606,1.065,659,1.238,666,1.238,676,1.43,711,2.219,713,2.606,715,2.219,717,2.219,760,1.16,761,1.238,763,3.64,764,3.64,768,1.482,770,1.16,772,1.517,774,1.482,775,2.606,776,2.423,777,2.423,785,2.275,787,3.114,794,2.126,797,3.114,801,1.353,803,1.591,804,1.697,907,2.438,916,1.803,928,1.591,1131,2.745,1132,3.017,1134,2.354,1143,4.283,1152,4.786,1153,4.818,1154,5.897,1155,2.745,1156,2.968,1157,3.187,1158,3.187,1159,4.361,1160,3.187,1161,3.187,1162,4.361,1163,3.187,1164,3.187,1165,4.361,1166,3.187,1167,3.187,1168,4.361,1169,3.187,1170,3.187,1171,3.187,1172,2.072,1173,3.187,1174,3.187,1175,3.017,1176,3.187,1177,3.187,1178,2.872,1179,3.187,1180,3.187,1181,3.187,1182,3.187,1183,2.872,1184,3.187,1185,3.187,1186,3.187,1187,1.553,1188,3.187,1189,5.92,1190,5.92,1191,2.872,1192,3.187,1193,3.017,1194,3.187,1195,3.017,1196,3.187,1197,3.017,1198,3.187,1199,2.275,1200,3.187,1201,2.872,1202,3.187,1203,3.187,1204,3.187,1205,4.361,1206,2.603,1207,3.187,1208,4.361,1209,1.902,1210,1.902,1211,3.187,1212,2.968,1213,3.187,1214,3.187,1215,3.187,1216,3.187,1217,3.187,1218,3.187,1219,3.187,1220,3.187,1221,3.187]],["title/components/DualHighchartComponent.html",[0,0.366,54,1.157]],["body/components/DualHighchartComponent.html",[0,0.52,1,0.952,2,1.497,3,0.088,4,0.073,5,1.061,6,1.061,7,1.061,8,1.061,9,0.052,12,1.038,13,1.061,14,1.99,15,2.031,16,1.157,18,1.157,20,0.277,21,0.538,22,0.009,23,0.088,24,0.078,26,1.328,27,1.531,28,1.531,29,1.061,30,1.965,31,1.061,32,0.699,33,1.061,34,0.973,35,1.061,36,0.952,37,1.061,38,0.952,39,1.517,40,1.061,41,0.973,42,1.607,43,2.29,44,0.952,45,1.061,46,0.973,47,2.083,48,0.952,49,1.965,50,0.973,51,2.218,52,0.952,53,1.061,54,1.801,55,0.952,56,0.952,57,1.061,58,0.952,59,0.994,60,0.874,61,1.061,62,0.932,63,0.802,64,1.061,65,0.973,66,1.016,67,0.973,68,1.061,69,0.973,70,1.762,71,0.952,72,1.061,73,0.973,74,0.973,75,0.952,76,0.952,77,1.061,78,0.973,79,1.84,80,0.952,81,1.061,82,0.973,83,0.973,84,0.952,85,0.952,86,1.061,87,0.973,88,1.465,89,0.376,90,1.531,91,0.973,92,0.893,93,0.952,94,0.952,95,1.061,96,0.973,97,1.446,98,0.952,99,1.061,100,0.973,101,0.952,102,0.932,103,1.061,104,1.061,105,0.005,106,0.005,111,0.182,112,0.575,114,0.337,117,0.918,119,0.622,120,0.456,121,0.671,122,0.489,123,1.383,124,1.413,130,1.038,201,1.207,228,0.774,247,0.591,248,0.673,259,0.68,292,1.207,317,1.64,318,1.908,323,1.272,480,0.513,539,3.028,563,3.733,593,2.843,612,2.439,613,1.272,614,1.109,623,2.151,624,1.751,639,2.53,640,1.79,641,1.878,642,2.365,644,1.847,645,2.355,646,1.79,647,1.272,653,4.035,655,3.012,674,3.473,676,0.768,694,1.436,732,1.834,830,2.3,904,1.687,918,3.419,936,3.183,937,4.52,938,4.52,939,3.748,940,4.52,941,3.854,945,4.52,946,4.52,947,4.52,949,3.854,950,4.164,952,2.948,964,3.854,965,3.854,966,3.649,967,3.649,968,3.854,969,4.947,970,3.649,971,3.473,972,3.854,973,3.854,977,2.302,978,3.854,979,3.854,980,3.854,981,2.672,983,2.672,985,3.854,998,2.302,1127,6.348,1129,3.928,1130,2.53,1235,7.262,1236,2.672,1237,4.808,1238,4.1,1239,5.659,1240,4.808,1241,4.1,1242,2.843,1243,3.778,1244,3.343,1245,3.778,1246,3.778,1247,3.343,1248,3.778,1249,3.778,1250,3.778,1251,3.778,1252,2.843,1253,2.843,1254,2.843,1255,2.843,1256,2.843,1257,3.057,1258,2.843,1259,2.843,1260,3.057,1261,2.843]],["title/modules/DualModule.html",[132,1.513,1262,3.01]],["body/modules/DualModule.html",[3,0.138,4,0.115,9,0.081,20,0.37,21,0.843,22,0.008,23,0.138,24,0.122,26,1.23,42,1.405,50,2.269,51,2.112,52,2.22,54,2.269,55,2.22,63,1.256,89,0.508,92,1.741,105,0.007,106,0.007,132,1.992,134,2.642,135,2.721,136,3.388,137,2.721,138,3.803,139,2.498,150,3.603,151,2.568,152,2.721,154,3.111,155,3.111,178,4.697,180,3.028,184,4.49,185,2.368,321,2.307,322,2.721,939,2.721,1020,4.948,1021,4.948,1025,5.212,1026,4.139,1027,5.212,1029,4.186,1033,4.935,1034,5.212,1037,4.186,1038,5.212,1039,2.721,1049,5.212,1050,2.642,1128,4.788,1129,4.948,1130,3.963,1235,4.788,1262,6.311,1263,5.237,1264,5.237,1265,5.918,1266,5.237,1267,5.918,1268,6.521,1269,3.963,1270,5.918,1271,4.453,1272,4.453]],["title/injectables/DualService.html",[325,2.007,1129,2.525]],["body/injectables/DualService.html",[3,0.09,4,0.075,9,0.053,20,0.309,21,0.55,22,0.009,23,0.09,24,0.08,32,0.834,89,0.516,105,0.005,106,0.005,111,0.312,112,0.584,113,0.893,114,0.577,117,0.953,119,0.953,120,0.513,121,1.029,122,1.182,123,1.495,124,1.528,228,0.833,231,1.395,236,0.464,247,0.6,248,0.71,259,0.713,292,1.877,325,2.472,326,2.257,329,1.032,480,1.187,482,0.437,531,1.738,534,2.075,535,2.075,536,1.985,537,2.075,538,2.075,539,2.624,540,3.109,541,2.796,542,3.109,543,3.109,549,1.626,551,1.955,553,2.003,555,1.889,556,2.159,558,1.546,559,2.159,561,1.546,565,1.5,605,0.933,606,0.913,614,1.134,793,3.155,801,1.662,803,1.955,804,1.979,857,1.942,872,2.324,874,2.324,897,2.472,917,3.109,918,2.707,928,1.955,936,4.369,939,2.546,950,4.502,1129,3.109,1131,4.995,1133,6.253,1143,4.742,1152,4.371,1155,4.995,1273,3.419,1274,4.869,1275,4.869,1276,6.17,1277,5.318,1278,4.166,1279,5.537,1280,3.864,1281,6.253,1282,3.864,1283,3.864,1284,3.864,1285,3.864,1286,3.864,1287,3.864,1288,3.864,1289,3.864,1290,3.864,1291,3.864,1292,3.864,1293,3.864,1294,3.864,1295,3.864,1296,3.864,1297,4.166,1298,3.864,1299,3.864,1300,3.864,1301,3.864,1302,6.052,1303,4.166,1304,3.864,1305,5.629,1306,5.537,1307,3.864,1308,4.166,1309,3.864,1310,5.537,1311,3.864,1312,3.864,1313,3.864,1314,3.864,1315,3.126,1316,3.864,1317,3.864,1318,3.864,1319,3.864,1320,3.864,1321,3.864,1322,3.864,1323,3.864,1324,3.864,1325,7.784,1326,7.784,1327,3.864,1328,7.48,1329,3.864,1330,3.864,1331,3.864,1332,3.864,1333,3.864,1334,7.067,1335,3.864,1336,3.864,1337,3.864,1338,3.864,1339,3.864,1340,4.48]],["title/classes/DualStorage.html",[24,0.093,1276,3.383]],["body/classes/DualStorage.html",[3,0.098,4,0.082,9,0.058,20,0.268,22,0.009,23,0.171,24,0.121,32,0.676,89,0.405,105,0.005,106,0.005,111,0.283,112,0.619,113,1.357,114,0.523,117,0.895,119,0.773,120,0.442,121,0.834,122,1.172,123,1.094,124,1.118,201,0.929,228,0.781,231,1.49,236,0.813,247,0.636,248,0.671,259,0.687,329,0.778,382,1.937,460,1.348,462,1.193,480,1.171,482,0.363,531,1.468,534,1.232,535,1.232,536,1.178,537,1.232,538,1.232,549,1.232,551,1.481,565,1.246,598,1.723,605,1.012,606,0.991,659,1.153,666,1.153,676,1.376,711,2.152,713,2.527,715,2.152,717,2.152,760,1.511,761,1.153,763,2.698,764,2.698,768,1.38,770,1.08,772,1.412,774,1.38,775,2.527,776,2.333,777,2.333,785,2.118,787,2.963,794,2.023,797,2.963,801,1.259,803,1.481,804,1.634,844,2.62,846,2.62,854,2.938,857,1.86,860,2.938,866,1.82,869,1.82,872,2.226,874,2.226,876,2.708,907,2.27,916,1.678,928,1.481,1052,3.93,1053,3.93,1054,3.93,1071,2.809,1131,3.575,1132,2.809,1134,2.191,1143,4.871,1152,4.841,1153,2.674,1154,5.797,1155,3.575,1156,2.857,1157,2.967,1158,2.967,1159,4.151,1160,2.967,1161,2.967,1162,4.151,1163,2.967,1164,2.967,1165,4.151,1166,2.967,1167,2.967,1168,4.151,1169,2.967,1170,2.967,1171,2.967,1172,1.929,1173,2.967,1174,2.967,1175,2.809,1176,2.967,1177,2.967,1178,2.674,1179,2.967,1180,2.967,1181,2.967,1182,2.967,1183,2.674,1184,2.967,1185,2.967,1186,2.967,1187,1.446,1188,2.967,1189,5.805,1190,5.805,1191,2.674,1192,2.967,1193,2.809,1194,2.967,1195,2.809,1196,2.967,1197,2.809,1198,2.967,1199,2.118,1200,2.967,1201,2.674,1202,2.967,1203,2.967,1204,2.967,1205,4.151,1206,2.477,1207,2.967,1208,4.151,1209,1.771,1210,1.771,1211,2.967,1212,2.857,1213,2.967,1214,2.967,1215,2.967,1216,2.967,1217,2.967,1218,2.967,1219,2.967,1220,2.967,1221,2.967,1276,3.156,1341,4.195,1342,4.195,1343,4.195,1344,4.195,1345,4.195,1346,4.195,1347,4.195,1348,4.195,1349,2.356,1350,4.195,1351,4.195,1352,4.195]],["title/classes/DualTable.html",[24,0.093,1353,3.383]],["body/classes/DualTable.html",[0,0.541,3,0.118,4,0.129,9,0.069,14,1.071,15,1.094,16,1.071,18,1.071,20,0.342,21,0.719,22,0.009,23,0.118,24,0.138,32,0.504,51,1.959,55,1.272,70,1.272,102,1.836,105,0.006,106,0.006,111,0.359,112,0.702,114,0.45,117,0.868,119,0.576,120,0.381,121,0.622,122,1.115,123,0.941,124,0.962,130,1.387,228,0.683,231,1.322,236,0.8,241,1.649,247,0.721,248,0.689,259,0.624,292,1.754,329,0.987,460,1.622,480,1.117,482,0.312,581,4.413,586,3.476,612,2.448,613,1.699,614,1.482,623,1.699,624,1.622,625,2.636,639,1.825,640,2.391,641,2.294,642,2.888,644,2.467,645,1.699,647,1.699,763,2.32,764,2.32,770,1.299,786,3.737,804,1.91,806,1.918,857,2.175,934,3.601,1039,2.32,1073,2.731,1074,3.759,1075,4.181,1076,4.283,1077,4.283,1079,4.181,1083,3.997,1084,5.007,1085,2.834,1086,2.834,1087,2.834,1088,2.834,1089,2.731,1092,3.797,1094,3.737,1097,3.737,1100,2.636,1102,2.834,1104,2.834,1106,2.834,1107,2.834,1108,2.834,1127,6.093,1129,3.737,1130,3.379,1152,4.62,1153,3.217,1154,3.217,1260,5.384,1271,6.482,1315,4.083,1353,5.602,1354,5.046,1355,5.046,1356,5.046,1357,5.046,1358,4.465,1359,3.379,1360,3.074,1361,2.548,1362,3.074,1363,3.074,1364,3.074,1365,3.074,1366,2.548,1367,3.074,1368,5.888,1369,4.465,1370,5.888,1371,4.465,1372,5.888,1373,4.465,1374,4.465]],["title/components/DualTableComponent.html",[0,0.366,55,1.133]],["body/components/DualTableComponent.html",[0,0.519,1,0.95,2,1.495,3,0.088,4,0.106,5,1.059,6,1.059,7,1.059,8,1.059,9,0.052,12,1.036,13,1.059,14,1.99,15,2.03,16,1.155,18,1.155,20,0.316,21,0.537,22,0.009,23,0.088,24,0.112,26,0.783,27,1.528,28,1.528,29,1.059,30,1.963,31,1.059,32,0.698,33,1.059,34,0.971,35,1.059,36,0.95,37,1.059,38,0.95,39,1.515,40,1.059,41,0.971,42,1.412,43,2.288,44,0.95,45,1.059,46,0.971,47,2.081,48,0.95,49,1.963,50,0.971,51,2.217,52,0.95,53,1.059,54,0.971,55,1.761,56,0.95,57,1.059,58,0.95,59,0.992,60,0.872,61,1.059,62,0.93,63,0.8,64,1.059,65,0.971,66,1.014,67,0.971,68,1.059,69,0.971,70,1.945,71,0.95,72,1.059,73,0.971,74,0.971,75,0.95,76,0.95,77,1.059,78,0.971,79,1.838,80,0.95,81,1.059,82,0.971,83,0.971,84,0.95,85,0.95,86,1.059,87,0.971,88,1.463,89,0.375,90,1.528,91,0.971,92,0.891,93,0.95,94,0.95,95,1.059,96,0.971,97,1.445,98,0.95,99,1.059,100,0.971,101,0.95,102,2.009,103,1.059,104,1.059,105,0.005,106,0.005,111,0.308,112,0.574,114,0.336,117,0.886,119,0.621,120,0.456,121,0.67,122,0.999,123,1.484,124,1.517,130,1.036,228,0.586,231,1.167,236,0.453,241,0.835,247,0.59,248,0.642,259,0.584,292,1.641,317,1.636,323,1.269,329,1.1,480,1.081,482,0.233,581,3.87,586,1.969,612,2.436,613,1.269,614,1.107,623,2.148,624,1.748,625,1.969,639,2.527,640,1.786,641,1.875,642,2.361,644,1.843,645,2.352,647,1.269,694,1.433,732,1.831,763,1.733,764,1.733,770,0.971,786,3.055,804,1.686,806,1.433,857,1.036,904,1.683,934,2.943,1039,1.733,1073,2.04,1074,2.747,1075,2.117,1076,2.04,1077,2.04,1079,3.055,1083,3.223,1085,2.117,1086,3.055,1087,3.584,1088,3.584,1089,3.453,1092,2.836,1094,3.055,1097,3.055,1100,3.333,1102,3.584,1104,3.584,1106,2.117,1107,2.117,1108,2.117,1113,2.836,1114,2.666,1115,2.666,1119,3.847,1120,2.666,1121,2.666,1127,6.154,1129,3.924,1130,2.524,1152,4.66,1153,2.403,1154,2.403,1260,5.163,1271,6.547,1315,3.05,1353,4.802,1358,4.813,1359,2.524,1360,2.296,1361,1.903,1362,2.296,1363,2.296,1364,2.296,1365,3.314,1366,3.223,1367,2.296,1368,4.813,1369,3.336,1370,4.813,1371,3.336,1372,4.813,1373,3.336,1374,3.336,1375,3.642,1376,3.769,1377,3.769,1378,3.769,1379,3.05,1380,3.769,1381,3.769,1382,3.05]],["title/components/HomeComponent.html",[0,0.366,56,1.133]],["body/components/HomeComponent.html",[0,0.624,1,1.353,2,1.904,3,0.125,4,0.104,5,1.508,6,1.508,7,1.508,8,1.508,9,0.074,11,2.397,12,2.108,13,1.508,14,2.029,15,2.072,16,1.471,18,1.471,20,0.213,21,0.764,22,0.008,23,0.125,24,0.111,25,5.213,26,1.115,27,1.946,28,1.946,29,1.508,30,2.277,31,1.508,32,0.692,33,1.508,34,1.382,35,1.508,36,1.353,37,1.508,38,1.353,39,1.758,40,1.508,41,1.382,42,1.599,43,2.488,44,1.353,45,1.508,46,1.382,47,2.357,48,1.353,49,2.277,50,1.382,51,2.018,52,1.353,53,1.508,54,1.382,55,1.353,56,2.042,57,1.508,58,1.353,59,1.412,60,1.241,61,1.508,62,1.324,63,1.139,64,1.508,65,1.382,66,1.443,67,1.382,68,1.508,69,1.382,70,2.042,71,1.353,72,1.508,73,1.382,74,1.382,75,1.353,76,1.353,77,1.508,78,1.382,79,2.133,80,1.353,81,1.508,82,1.382,83,1.382,84,1.353,85,1.353,86,1.508,87,1.382,88,1.863,89,0.37,90,1.946,91,1.382,92,1.268,93,1.353,94,1.353,95,1.508,96,1.382,97,1.736,98,1.353,99,1.508,100,1.382,101,1.353,102,1.324,103,1.508,104,1.508,105,0.006,106,0.006,128,5.213,204,7.603,1383,4.75,1384,7.671,1385,6.928]],["title/injectables/HonorCodeChartService.html",[325,2.007,885,2.739]],["body/injectables/HonorCodeChartService.html",[3,0.11,4,0.091,9,0.087,11,2.832,20,0.336,21,0.669,22,0.009,23,0.11,24,0.097,32,0.803,42,1.662,60,2.097,105,0.006,106,0.006,108,3.533,111,0.227,114,0.64,117,0.85,119,0.917,120,0.484,121,0.99,122,1.217,174,4.009,201,1.779,227,3.863,228,0.737,231,1.2,247,0.687,248,0.652,259,0.652,325,2.832,326,2.743,329,1.097,379,3.799,564,4.042,602,3.799,660,3.863,676,1.46,885,3.863,939,2.916,950,4.648,971,2.993,1043,5.131,1386,5.984,1387,4.155,1388,6.342,1389,6.342,1390,6.342,1391,6.342,1392,6.342,1393,6.342,1394,6.342,1395,4.696,1396,6.342,1397,7.547,1398,4.696,1399,8.814,1400,6.342,1401,4.696,1402,6.342,1403,4.696,1404,5.612,1405,6.354,1406,7.69,1407,6.342,1408,7.181,1409,6.342,1410,6.342,1411,6.342,1412,4.696,1413,6.342,1414,4.696,1415,3.799,1416,3.799,1417,3.799,1418,5.131,1419,4.696,1420,4.696,1421,4.155,1422,4.696,1423,4.696,1424,4.696,1425,4.696,1426,4.696,1427,4.696,1428,4.696,1429,4.696,1430,4.696,1431,4.696,1432,6.342,1433,4.696,1434,6.342,1435,4.696,1436,6.342,1437,4.696,1438,4.696,1439,4.696,1440,4.696,1441,4.696,1442,5.131,1443,4.696,1444,4.696,1445,4.696,1446,4.696,1447,4.696,1448,4.155,1449,4.696,1450,6.342,1451,6.342,1452,6.342,1453,5.612,1454,6.342,1455,4.696,1456,4.696,1457,4.696,1458,4.696]],["title/components/HonorCodePopupComponent.html",[0,0.366,58,1.133]],["body/components/HonorCodePopupComponent.html",[0,0.562,1,1.098,2,1.656,3,0.102,4,0.085,5,1.224,6,1.224,7,1.224,8,1.224,9,0.06,11,1.946,12,1.198,13,1.224,14,2.007,15,2.049,16,1.279,18,1.279,20,0.274,21,0.621,22,0.008,23,0.102,24,0.09,26,0.906,27,1.693,28,1.693,29,1.224,30,2.094,31,1.224,32,0.782,33,1.224,34,1.122,35,1.224,36,1.098,37,1.224,38,1.098,39,1.616,40,1.224,41,1.122,42,1.491,43,2.375,44,1.098,45,1.224,46,1.122,47,2.198,48,1.098,49,2.094,50,1.122,51,1.818,52,1.098,53,1.224,54,1.122,55,1.098,56,1.098,57,1.224,58,1.878,59,2.286,60,2.138,61,1.224,62,1.075,63,0.925,64,1.224,65,1.122,66,1.172,67,1.122,68,1.224,69,1.122,70,1.878,71,1.098,72,1.224,73,1.122,74,1.122,75,1.098,76,1.098,77,1.224,78,1.122,79,1.961,80,1.098,81,1.224,82,1.122,83,1.122,84,1.098,85,1.098,86,1.224,87,1.122,88,1.621,89,0.301,90,1.693,91,1.122,92,1.849,93,1.098,94,1.098,95,1.224,96,1.122,97,1.564,98,1.098,99,1.224,100,1.122,101,1.098,102,1.075,103,1.224,104,1.224,105,0.005,106,0.005,111,0.21,112,0.636,114,0.389,117,0.804,119,0.498,120,0.345,121,0.537,130,1.198,146,4.036,174,3.835,180,1.791,185,1.744,228,0.634,236,0.724,237,4.626,246,4.209,247,0.653,248,0.344,250,4.991,259,0.588,278,2.919,294,2.919,320,2.065,321,2.906,322,2.004,323,1.467,329,1.073,665,3.28,676,0.886,732,1.467,1051,2.546,1386,5.723,1397,5.59,1459,3.857,1460,7.454,1461,5.333,1462,5.333,1463,6.027,1464,6.027,1465,6.027,1466,6.027,1467,6.909,1468,6.027,1469,7.454,1470,8.092,1471,4.358,1472,8.092,1473,8.295,1474,6.027,1475,4.358,1476,4.358,1477,4.358,1478,4.358,1479,3.526,1480,4.358,1481,4.358,1482,6.027,1483,4.358,1484,6.027,1485,4.876,1486,5.333,1487,5.333,1488,6.027,1489,5.333,1490,6.027,1491,6.027,1492,5.333,1493,5.333,1494,4.876,1495,3.672,1496,6.027,1497,4.358,1498,3.083]],["title/modules/HonorCodePopupModule.html",[132,1.513,146,3.01]],["body/modules/HonorCodePopupModule.html",[3,0.151,4,0.126,9,0.089,11,2.884,20,0.364,21,0.92,22,0.008,23,0.151,24,0.134,26,1.342,58,2.313,59,1.7,60,1.929,63,1.371,105,0.007,106,0.007,132,2.808,134,2.884,135,2.97,136,3.522,137,3.575,138,3.061,139,2.727,146,6.025,150,3.801,151,2.804,152,2.97,154,2.727,155,3.282,174,3.061,178,4.117,179,5.851,180,3.428,184,4.737,185,2.585,188,3.262,189,3.927,190,2.585,1023,6.881,1033,5.207,1044,4.737,1045,3.935,1051,3.773,1386,4.569,1479,5.227,1499,5.716,1500,5.716,1501,6.46,1502,5.716,1503,7.776,1504,4.569,1505,5.716,1506,6.46,1507,7.776]],["title/injectables/HonorCodePopupService.html",[325,2.007,883,2.27]],["body/injectables/HonorCodePopupService.html",[3,0.128,4,0.107,9,0.075,20,0.343,21,0.781,22,0.008,23,0.128,24,0.113,32,0.774,58,1.382,59,1.443,60,2.169,105,0.006,106,0.006,111,0.265,112,0.741,114,0.489,117,0.914,119,0.885,120,0.484,121,0.955,130,1.507,174,4.258,180,2.254,190,2.811,201,1.215,228,0.775,231,0.916,247,0.761,248,0.681,259,0.701,323,1.846,325,3.136,326,3.204,329,1.231,614,1.61,653,2.865,655,2.139,883,3.547,1031,4.127,1302,6.27,1386,6.356,1479,6.27,1502,4.854,1508,4.854,1509,6.27,1510,6.27,1511,8.171,1512,8.171,1513,8.171,1514,7.024,1515,7.024,1516,5.485,1517,8.171,1518,7.024,1519,5.485,1520,5.485,1521,5.485,1522,7.024,1523,6.992,1524,5.485,1525,7.024,1526,6.992,1527,5.485,1528,6.27,1529,5.485,1530,5.485,1531,4.438,1532,5.485,1533,5.485,1534,7.024,1535,5.485,1536,5.485,1537,5.485,1538,5.485]],["title/components/InputSliderComponent.html",[0,0.366,62,1.109]],["body/components/InputSliderComponent.html",[0,0.464,1,0.784,2,1.296,3,0.073,4,0.06,5,0.874,6,0.874,7,0.874,8,0.874,9,0.043,12,0.855,13,0.874,14,1.962,15,1.996,16,1.001,18,1.001,20,0.252,21,0.443,22,0.009,23,0.11,24,0.097,26,0.646,27,1.325,28,1.325,29,0.874,30,1.787,31,0.874,32,0.719,33,0.874,34,0.801,35,0.874,36,0.784,37,0.874,38,0.784,39,1.38,40,0.874,41,0.801,42,1.303,43,2.164,44,0.784,45,0.874,46,0.801,47,1.921,48,0.784,49,1.787,50,0.801,51,1.5,52,0.784,53,0.874,54,0.801,55,0.784,56,0.784,57,0.874,58,0.784,59,0.818,60,0.719,61,0.874,62,1.569,63,1.881,64,0.874,65,0.801,66,0.836,67,0.801,68,0.874,69,0.801,70,1.603,71,0.784,72,0.874,73,0.801,74,0.801,75,0.784,76,0.784,77,0.874,78,0.801,79,1.674,80,0.784,81,0.874,82,0.801,83,0.801,84,0.784,85,0.784,86,0.874,87,0.801,88,1.268,89,0.215,90,1.325,91,0.801,92,0.735,93,0.784,94,0.784,95,0.874,96,0.801,97,1.29,98,0.784,99,0.874,100,0.801,101,0.784,102,0.767,103,0.874,104,0.874,105,0.004,106,0.004,111,0.15,112,0.498,114,0.508,117,0.91,119,0.355,120,0.489,121,0.383,122,1.058,123,1.395,124,1.696,185,1.244,201,1.707,228,0.523,231,1.318,236,0.567,240,5.283,241,1.263,247,0.511,248,0.59,259,0.539,277,4.169,278,2.082,292,1.657,294,2.082,320,2.235,321,1.212,322,1.43,323,1.588,329,0.907,462,1.464,480,1.222,482,0.192,483,1.57,600,2.222,601,2.113,612,2.595,613,1.047,614,0.913,623,1.919,639,2.301,641,2.193,642,2.761,645,2.142,647,1.047,653,2.464,655,2.806,709,1.894,732,1.047,770,1.215,830,3.33,952,1.683,977,4.385,1361,1.57,1366,2.382,1539,6.697,1540,5.673,1541,2.34,1542,5.289,1543,4.611,1544,3.817,1545,4.611,1546,4.611,1547,5.091,1548,4.717,1549,3.817,1550,4.611,1551,6.784,1552,5.533,1553,5.533,1554,5.533,1555,4.611,1556,3.214,1557,4.611,1558,3.817,1559,4.717,1560,3.11,1561,3.11,1562,3.11,1563,3.11,1564,3.11,1565,3.11,1566,3.11,1567,3.11,1568,3.817,1569,3.11,1570,3.11,1571,4.055,1572,3.11,1573,3.11,1574,3.11,1575,3.817,1576,3.11,1577,3.11,1578,4.611,1579,2.34,1580,3.11,1581,3.11,1582,3.817,1583,3.11,1584,3.11,1585,3.11,1586,2.756,1587,1.894,1588,2.516,1589,2.34,1590,2.516,1591,3.817,1592,3.817,1593,3.817,1594,3.817,1595,2.516,1596,2.516,1597,3.55,1598,2.516,1599,2.516,1600,3.817,1601,2.516,1602,2.516,1603,2.516,1604,2.516,1605,3.817,1606,3.817,1607,3.55,1608,3.817,1609,2.516,1610,2.516,1611,3.817,1612,2.516,1613,2.516,1614,2.516,1615,2.516,1616,1.982,1617,2.516,1618,2.516,1619,2.516,1620,2.516,1621,2.516,1622,2.516,1623,2.516,1624,2.516,1625,2.516,1626,4.611,1627,5.147,1628,3.817,1629,2.516,1630,2.516,1631,4.611,1632,3.994,1633,3.817,1634,2.516,1635,2.516,1636,4.611,1637,2.516,1638,2.516,1639,2.516,1640,2.516,1641,4.611,1642,2.516,1643,2.516,1644,4.717,1645,2.516]],["title/interfaces/InputSliderValue.html",[482,0.278,1616,2.865]],["body/interfaces/InputSliderValue.html",[0,0.498,3,0.104,4,0.087,9,0.061,14,0.946,16,0.946,18,0.946,20,0.298,21,0.634,22,0.009,23,0.143,24,0.126,32,0.445,62,1.099,63,1.929,105,0.005,106,0.005,111,0.215,112,0.646,114,0.397,120,0.35,122,1.14,124,1.705,185,1.783,201,1.883,231,1.441,236,0.535,240,4.68,241,0.987,248,0.551,259,0.482,277,4.267,278,2.984,292,1.747,294,2.984,329,1.046,462,1.657,480,1.252,482,0.276,483,3.799,532,1.465,600,2.386,601,2.269,612,2.593,613,1.5,614,1.308,623,1.5,639,1.612,641,2.593,642,3.265,645,1.5,647,1.5,653,3.196,655,2.934,709,2.714,770,1.576,830,3.523,952,2.411,977,4.963,1361,2.25,1366,3.09,1539,3.353,1540,2.84,1541,3.353,1542,4.943,1543,3.605,1544,3.605,1545,3.605,1546,3.605,1547,4.943,1550,3.605,1551,7.129,1552,3.605,1553,3.605,1554,3.605,1555,3.605,1556,3.36,1557,3.605,1568,3.605,1571,4.455,1575,3.605,1578,4.951,1582,3.605,1586,3.575,1587,2.714,1588,3.605,1589,3.353,1590,3.605,1591,4.951,1592,4.951,1593,4.951,1594,4.951,1595,3.605,1596,3.605,1597,4.605,1598,3.605,1599,3.605,1600,4.951,1601,3.605,1602,3.605,1603,3.605,1604,3.605,1605,4.951,1606,4.951,1607,4.605,1608,4.951,1609,3.605,1610,3.605,1611,4.951,1612,3.605,1613,3.605,1614,3.605,1615,3.605,1616,3.9,1617,3.605,1618,3.605,1619,3.605,1620,3.605,1621,3.605,1622,3.605,1623,3.605,1624,3.605,1625,3.605,1626,5.655,1627,6.088,1628,4.951,1629,3.605,1630,3.605,1631,5.655,1632,4.607,1633,4.951,1634,3.605,1635,3.605,1636,5.655,1637,3.605,1638,3.605,1639,3.605,1640,3.605,1641,5.655,1642,3.605,1643,3.605]],["title/modules/InterfaceUtilModule.html",[132,1.513,1646,3.01]],["body/modules/InterfaceUtilModule.html",[3,0.155,4,0.129,9,0.091,20,0.354,21,0.948,22,0.008,23,0.155,24,0.138,26,1.383,62,2.318,63,1.413,105,0.007,106,0.007,132,2.241,134,2.972,135,3.061,136,3.567,137,3.061,138,3.154,139,3.567,150,3.87,151,2.889,152,3.061,154,2.81,155,3.342,179,5.957,184,4.823,185,2.664,1033,5.302,1540,4.243,1589,5.009,1646,6.13,1647,5.891,1648,5.891,1649,5.891,1650,6.657,1651,5.386,1652,7.006,1653,5.891]],["title/components/LineFormComponent.html",[0,0.366,65,1.157]],["body/components/LineFormComponent.html",[0,0.531,1,0.988,2,1.538,3,0.092,4,0.076,5,1.101,6,1.101,7,1.101,8,1.101,9,0.054,11,1.751,12,1.077,13,1.101,14,1.998,15,2.036,16,1.188,18,1.188,20,0.31,21,0.558,22,0.008,23,0.092,24,0.081,26,0.815,27,1.572,28,1.572,29,1.101,30,1.998,31,1.101,32,0.711,33,1.101,34,1.009,35,1.101,36,0.988,37,1.101,38,0.988,39,1.631,40,1.101,41,1.009,42,1.434,43,2.312,44,1.644,45,1.101,46,1.009,47,2.113,48,0.988,49,1.998,50,1.009,51,1.716,52,0.988,53,1.101,54,1.009,55,0.988,56,0.988,57,1.101,58,0.988,59,1.031,60,0.907,61,1.101,62,0.967,63,0.832,64,1.101,65,1.937,66,2.213,67,1.009,68,1.101,69,1.009,70,1.793,71,0.988,72,1.101,73,1.009,74,1.009,75,0.988,76,0.988,77,1.101,78,1.009,79,1.872,80,0.988,81,1.101,82,1.009,83,1.009,84,0.988,85,0.988,86,1.101,87,1.009,88,1.504,89,0.45,90,1.572,91,1.009,92,0.926,93,0.988,94,0.988,95,1.101,96,1.009,97,1.477,98,0.988,99,1.101,100,1.009,101,0.988,102,0.967,103,1.101,104,1.101,105,0.005,106,0.005,111,0.189,112,0.59,114,0.349,117,0.883,119,0.639,120,0.461,121,0.689,123,1.403,124,1.491,130,1.077,180,1.611,185,1.569,190,2.239,228,0.653,236,0.672,247,0.606,248,0.514,259,0.617,277,2.121,292,1.576,309,3.746,314,4.21,320,2.651,321,3.209,322,1.802,323,1.32,480,1.022,499,2.121,600,2.543,601,2.418,603,3.849,604,2.29,608,3.716,610,2.773,612,2.474,613,1.32,614,1.151,617,2.625,623,2.196,624,1.798,639,2.573,645,2.395,646,1.858,647,1.32,666,1.538,681,3.849,685,3.849,688,3.849,691,3.849,694,1.49,703,2.202,704,3.974,705,3.408,731,3.566,732,1.32,767,3.027,830,3.175,839,3.142,998,2.388,1028,7.028,1032,6.295,1048,4.951,1051,2.29,1498,4.614,1579,2.95,1587,2.388,1654,7.686,1655,4.21,1656,7.114,1657,8.051,1658,5.595,1659,6.523,1660,6.523,1661,7.114,1662,5.595,1663,5.595,1664,3.92,1665,3.92,1666,3.469,1667,5.595,1668,3.92,1669,3.469,1670,5.595,1671,3.92,1672,5.595,1673,3.92,1674,6.523,1675,3.92,1676,6.523,1677,3.92,1678,3.92,1679,3.92,1680,3.92,1681,3.92,1682,3.92,1683,3.92,1684,3.92,1685,3.469,1686,3.92,1687,3.92,1688,3.92,1689,3.92,1690,3.92,1691,3.92,1692,3.92,1693,3.92,1694,3.172,1695,4.527,1696,5.595,1697,2.202,1698,3.469]],["title/components/MenubarComponent.html",[0,0.366,67,1.157]],["body/components/MenubarComponent.html",[0,0.651,1,1.169,2,1.729,3,0.167,4,0.09,5,1.304,6,1.304,7,1.304,8,1.304,9,0.064,11,2.072,12,1.275,13,1.304,14,2.014,15,2.061,16,1.336,18,1.336,20,0.327,21,0.661,22,0.008,23,0.147,24,0.13,26,0.964,27,1.767,28,1.767,29,1.304,30,2.15,31,1.304,32,0.629,33,1.304,34,1.195,35,1.304,36,1.169,37,1.304,38,1.169,39,1.66,40,1.304,41,1.195,42,1.525,43,2.41,44,1.169,45,1.304,46,1.195,47,2.247,48,1.169,49,2.15,50,1.195,51,1.878,52,1.169,53,1.304,54,1.195,55,1.169,56,1.169,57,1.304,58,1.169,59,1.221,60,1.073,61,1.304,62,1.145,63,1.515,64,1.304,65,1.195,66,1.248,67,2.172,68,1.304,69,1.195,70,1.928,71,1.169,72,1.304,73,1.195,74,1.195,75,1.169,76,1.169,77,1.304,78,1.195,79,2.014,80,1.169,81,1.304,82,1.195,83,1.195,84,1.169,85,1.169,86,1.304,87,1.195,88,1.692,89,0.32,90,1.767,91,1.195,92,1.096,93,1.928,94,1.585,95,1.304,96,1.195,97,1.616,98,1.169,99,1.304,100,1.195,101,1.169,102,1.145,103,1.304,104,1.304,105,0.006,106,0.006,111,0.224,117,0.646,120,0.266,125,5.091,127,4.735,136,1.959,139,1.959,145,3.675,154,1.959,155,2.656,159,3.283,164,3.108,165,3.755,180,1.907,183,4.45,188,2.344,189,3.177,190,2.518,212,4.735,224,4.213,225,5.413,228,0.426,229,2.585,247,0.682,259,0.366,309,4.213,310,3.755,314,3.492,320,2.199,482,0.389,499,2.511,768,2.069,908,3.108,913,3.108,1044,3.833,1045,2.827,1051,2.711,1549,5.091,1699,3.755,1700,6.192,1701,5.759,1702,5.091,1703,4.735,1704,6.317,1705,5.568,1706,6.772,1707,5.371,1708,4.641,1709,5.568,1710,3.675,1711,4.641,1712,5.568,1713,4.735,1714,5.568,1715,4.107,1716,4.107,1717,4.107,1718,2.958,1719,4.641,1720,4.641,1721,4.641,1722,4.641,1723,4.641,1724,4.641,1725,4.641,1726,4.641]],["title/modules/MenubarModule.html",[132,1.513,1718,2.865]],["body/modules/MenubarModule.html",[0,0.661,3,0.142,4,0.118,9,0.083,11,2.713,14,1.29,15,1.761,16,1.29,18,1.29,20,0.352,21,0.865,22,0.009,23,0.175,24,0.155,26,1.262,63,1.59,67,2.41,93,1.887,94,1.531,105,0.007,106,0.007,132,2.045,134,2.713,135,2.793,136,3.428,137,2.793,138,2.879,139,3.428,145,5.18,150,3.662,151,2.637,152,2.793,154,3.162,155,3.162,159,4.297,164,4.068,165,4.915,180,2.496,183,4.297,188,3.068,189,3.783,190,2.431,225,4.297,229,2.496,482,0.376,1044,4.563,1045,3.701,1051,3.549,1699,4.915,1700,4.915,1701,5.636,1702,4.915,1703,4.572,1704,5.376,1705,5.376,1706,5.376,1707,4.572,1709,5.376,1710,3.549,1712,5.376,1713,4.572,1714,6.628,1715,5.376,1716,5.376,1717,6.628,1718,5.831,1727,5.376,1728,5.376,1729,6.075,1730,5.376]],["title/components/MoonChartFormComponent.html",[0,0.366,69,1.157]],["body/components/MoonChartFormComponent.html",[0,0.571,1,1.132,2,1.691,3,0.105,4,0.087,5,1.262,6,1.262,7,1.262,8,1.262,9,0.062,12,1.235,13,1.262,14,2.011,15,2.053,16,1.306,18,1.306,20,0.299,21,0.64,22,0.008,23,0.105,24,0.093,26,0.934,27,1.729,28,1.729,29,1.262,30,2.121,31,1.262,32,0.702,33,1.262,34,1.157,35,1.262,36,1.132,37,1.262,38,1.132,39,1.637,40,1.262,41,1.157,42,1.767,43,2.392,44,1.132,45,1.262,46,1.157,47,2.222,48,1.132,49,2.121,50,1.157,51,1.847,52,1.132,53,1.262,54,1.157,55,1.132,56,1.132,57,1.262,58,1.132,59,1.182,60,1.039,61,1.262,62,1.108,63,0.954,64,1.262,65,1.157,66,1.208,67,1.157,68,1.262,69,1.944,70,2.224,71,1.132,72,1.262,73,1.157,74,1.157,75,1.132,76,1.132,77,1.262,78,1.157,79,1.987,80,1.132,81,1.262,82,1.157,83,1.157,84,1.132,85,1.132,86,1.262,87,1.157,88,1.655,89,0.484,90,1.729,91,1.157,92,1.062,93,1.132,94,1.132,95,1.262,96,1.157,97,1.589,98,1.132,99,1.262,100,1.157,101,1.132,102,1.108,103,1.262,104,1.262,105,0.005,106,0.005,111,0.217,112,0.65,113,1.423,114,0.401,117,0.776,119,0.513,120,0.402,121,0.554,123,0.838,124,0.856,130,1.235,185,1.798,228,0.412,236,0.74,246,5.095,247,0.667,248,0.553,259,0.485,277,2.431,291,3.009,292,1.853,320,2.129,321,2.737,322,2.066,323,1.513,601,2.602,612,2.601,613,1.513,614,1.319,623,2.363,624,1.978,641,1.549,644,2.197,645,2.542,646,2.129,647,1.513,659,1.691,666,1.691,694,1.708,703,2.523,704,4.276,705,3.749,706,4.121,707,3.178,708,3.178,709,2.737,710,3.178,711,1.319,712,3.178,713,1.549,714,3.178,715,1.319,716,3.178,717,1.319,718,3.178,719,3.178,720,5.34,721,3.178,722,3.178,723,3.178,724,3.178,725,3.178,726,3.178,727,4.353,728,3.178,729,3.178,730,3.178,731,4.813,732,1.513,1731,5.041,1732,5.594,1733,4.086,1734,2.864]],["title/classes/MoonChartInfo.html",[24,0.093,1735,3.179]],["body/classes/MoonChartInfo.html",[3,0.119,4,0.099,9,0.07,20,0.315,22,0.009,23,0.156,24,0.105,32,0.824,89,0.516,105,0.006,106,0.006,111,0.246,112,0.706,113,1.177,114,0.666,117,0.949,119,0.967,120,0.507,121,1.016,122,1.195,201,1.828,228,0.837,229,2.749,236,0.804,247,0.725,248,0.699,259,0.65,329,0.675,382,1.547,460,1.635,462,1.52,480,0.909,482,0.315,531,1.451,534,2.195,535,2.195,536,2.1,537,2.195,538,2.195,539,3.171,540,3.758,541,3.379,542,3.758,543,3.758,549,1.494,551,1.797,553,1.841,555,2.488,556,1.984,558,2.036,559,1.984,561,2.036,565,1.42,605,1.228,606,1.202,676,1.615,711,1.965,713,2.306,715,1.965,717,1.965,760,1.31,761,1.399,774,1.674,916,2.036,1134,3.905,1172,3.076,1187,1.754,1697,2.858,1735,3.599,1736,2.754,1737,6.691,1738,5.089,1739,5.089,1740,5.089,1741,5.089,1742,5.089,1743,5.089,1744,5.617,1745,5.089,1746,5.089,1747,5.089,1748,5.089,1749,5.089,1750,5.089,1751,5.089,1752,5.089,1753,2.209,1754,2.34,1755,3.793,1756,2.754,1757,2.754,1758,2.658,1759,2.973,1760,3.171,1761,3.076,1762,2.858,1763,2.973,1764,2.973,1765,2.973,1766,2.412,1767,2.973,1768,2.973,1769,2.973,1770,2.973,1771,2.973,1772,2.973,1773,2.973,1774,4.367,1775,2.091,1776,2.973,1777,2.658,1778,2.412,1779,2.973]],["title/interfaces/MoonChartInfoStorageObject.html",[482,0.278,1744,3.179]],["body/interfaces/MoonChartInfoStorageObject.html",[3,0.141,4,0.117,9,0.083,20,0.335,22,0.009,23,0.174,24,0.124,89,0.514,105,0.007,106,0.007,111,0.291,112,0.786,114,0.537,119,0.688,120,0.484,122,1.173,201,1.924,228,0.684,229,3.061,236,0.724,248,0.475,329,0.798,382,1.723,462,1.225,480,1.012,482,0.373,531,1.306,532,1.98,565,1.581,605,1.454,606,1.423,676,1.719,711,2.375,713,2.788,715,2.375,717,2.375,760,1.55,761,1.655,774,1.98,916,2.41,1172,3.425,1187,2.076,1697,3.382,1736,3.258,1744,4.259,1753,2.613,1754,2.769,1755,3.993,1756,3.258,1757,3.258,1758,3.145,1759,3.518,1760,3.53,1761,3.425,1762,3.382,1763,3.518,1764,3.518,1765,3.518,1766,2.854,1767,3.518,1768,3.518,1769,3.518,1770,3.518,1771,3.518,1772,3.518,1773,3.518,1774,4.725,1775,2.474,1776,3.518,1777,3.145,1778,2.854,1779,3.518]],["title/components/MoonComponent.html",[0,0.366,71,1.133]],["body/components/MoonComponent.html",[0,0.575,1,1.146,2,1.706,3,0.106,4,0.088,5,1.278,6,1.278,7,1.278,8,1.278,9,0.062,12,1.25,13,1.278,14,2.012,15,2.054,16,1.317,18,1.317,20,0.315,21,0.648,22,0.008,23,0.106,24,0.094,26,0.945,27,1.743,28,1.743,29,1.278,30,2.132,31,1.278,32,0.794,33,1.278,34,1.171,35,1.278,36,1.146,37,1.278,38,1.146,39,1.646,40,1.278,41,1.171,42,1.628,43,2.399,44,1.146,45,1.278,46,1.171,47,2.231,48,1.146,49,2.132,50,1.171,51,1.859,52,1.146,53,1.278,54,1.171,55,1.146,56,1.146,57,1.278,58,1.146,59,1.197,60,1.837,61,1.278,62,1.122,63,0.966,64,1.278,65,1.171,66,1.223,67,1.171,68,1.278,69,1.171,70,2.114,71,1.912,72,1.278,73,1.171,74,1.171,75,1.146,76,1.146,77,1.278,78,1.171,79,1.997,80,1.146,81,1.278,82,1.171,83,1.171,84,1.146,85,1.146,86,1.278,87,1.171,88,1.669,89,0.524,90,1.743,91,1.171,92,1.075,93,1.146,94,1.146,95,1.278,96,1.171,97,1.599,98,1.146,99,1.278,100,1.171,101,1.146,102,1.531,103,1.278,104,1.278,105,0.006,106,0.006,111,0.22,114,0.405,117,0.637,119,0.709,120,0.355,121,0.765,122,0.589,130,1.25,174,2.941,190,2.483,228,0.418,247,0.673,248,0.489,259,0.359,317,1.974,318,2.297,319,3.781,321,2.42,323,1.531,624,1.995,662,2.657,676,0.925,694,1.729,732,1.531,768,2.612,774,1.496,806,3.189,807,3.134,872,1.496,874,1.496,881,4.39,882,4.997,883,3.832,884,4.997,885,4.623,887,4.39,890,2.899,891,3.217,892,3.956,893,2.657,894,3.217,895,3.217,896,5.618,897,2.031,898,3.217,899,2.899,900,3.217,901,3.217,902,3.217,903,3.217,904,2.771,905,3.217,906,4.156,907,2.461,908,5.082,909,3.046,910,3.217,911,3.217,912,2.899,913,4.156,1226,4.837,1733,4.107,1734,2.899,1780,4.025,1781,7.065,1782,6.206,1783,4.549,1784,4.549,1785,3.217,1786,4.549]],["title/classes/MoonData.html",[24,0.093,1758,2.348]],["body/classes/MoonData.html",[3,0.126,4,0.105,9,0.074,20,0.323,22,0.009,23,0.163,24,0.112,32,0.77,89,0.58,105,0.006,106,0.006,111,0.372,112,0.735,114,0.687,117,0.912,119,0.961,120,0.466,121,0.949,201,1.864,228,0.83,229,3.342,236,0.837,247,0.755,248,0.607,259,0.607,329,0.718,382,1.611,460,1.741,462,1.567,480,1.228,482,0.335,531,1.175,565,1.635,605,1.307,606,1.28,676,1.654,760,1.395,761,1.489,774,1.781,793,3.44,801,1.626,803,1.912,804,1.963,857,2.117,897,3.111,916,3.254,917,3.913,918,3.407,928,1.912,1172,3.542,1187,1.867,1697,3.042,1736,2.931,1753,2.351,1754,2.49,1755,4.208,1756,2.931,1757,2.931,1758,3.64,1759,3.164,1760,3.854,1761,3.739,1762,3.913,1763,4.07,1764,4.07,1765,4.07,1766,3.302,1767,4.07,1768,4.07,1769,3.164,1770,3.164,1771,3.164,1772,3.164,1773,3.164,1774,4.5,1775,2.226,1776,3.164,1777,2.829,1778,2.567,1779,3.164,1787,6.968,1788,5.417,1789,5.417,1790,5.417,1791,5.417,1792,5.417,1793,5.417]],["title/interfaces/MoonDataDict.html",[482,0.278,1755,2.067]],["body/interfaces/MoonDataDict.html",[3,0.142,4,0.118,9,0.083,20,0.336,22,0.009,23,0.175,24,0.125,89,0.516,105,0.007,106,0.007,111,0.293,112,0.79,114,0.541,119,0.693,120,0.429,201,1.929,228,0.687,229,3.075,236,0.729,248,0.478,329,0.805,382,2.05,462,1.234,480,1.204,482,0.375,531,1.316,532,1.995,565,1.589,605,1.465,606,1.434,676,1.723,760,1.562,761,1.667,774,1.995,916,2.428,1172,3.441,1187,2.091,1697,3.408,1736,3.283,1753,2.633,1754,2.79,1755,4.076,1756,4.585,1757,4.585,1758,3.169,1759,3.544,1760,3.547,1761,3.441,1762,3.408,1763,3.544,1764,3.544,1765,3.544,1766,2.875,1767,3.544,1768,3.544,1769,3.544,1770,3.544,1771,3.544,1772,3.544,1773,3.544,1774,4.741,1775,2.493,1776,3.544,1777,3.169,1778,2.875,1779,3.544]],["title/components/MoonFormComponent.html",[0,0.366,73,1.157]],["body/components/MoonFormComponent.html",[0,0.535,1,1.002,2,1.553,3,0.093,4,0.128,5,1.117,6,1.117,7,1.117,8,1.117,9,0.055,12,1.093,13,1.117,14,1.996,15,2.038,16,1.199,18,1.199,20,0.312,21,0.566,22,0.009,23,0.093,24,0.082,26,0.826,27,1.587,28,1.587,29,1.117,30,2.011,31,1.117,32,0.715,33,1.117,34,1.024,35,1.117,36,1.002,37,1.117,38,1.002,39,1.553,40,1.117,41,1.024,42,1.441,43,2.321,44,1.002,45,1.117,46,1.024,47,2.124,48,1.002,49,2.011,50,1.024,51,1.73,52,1.002,53,1.117,54,1.024,55,1.002,56,1.002,57,1.117,58,1.002,59,1.046,60,0.919,61,1.117,62,0.98,63,0.844,64,1.117,65,1.024,66,1.069,67,1.024,68,1.117,69,1.024,70,2.173,71,1.002,72,1.117,73,1.843,74,1.024,75,1.002,76,1.002,77,1.117,78,1.024,79,1.884,80,1.002,81,1.117,82,1.024,83,1.024,84,1.002,85,1.002,86,1.117,87,1.024,88,1.519,89,0.274,90,1.587,91,1.024,92,0.939,93,1.002,94,1.002,95,1.117,96,1.024,97,1.488,98,1.002,99,1.117,100,1.024,101,1.002,102,0.98,103,1.117,104,1.117,105,0.005,106,0.005,111,0.192,112,0.596,114,0.354,117,0.876,119,0.645,120,0.45,121,0.696,123,1.465,124,1.498,130,1.093,185,1.591,228,0.603,236,0.679,240,5.832,246,4.787,247,0.612,248,0.518,259,0.596,277,2.151,278,2.662,292,1.96,294,3.784,320,2.678,321,2.563,322,1.828,323,1.902,485,1.775,600,2.563,601,2.437,612,2.983,613,1.338,614,1.167,623,2.213,624,1.816,639,2.589,641,1.37,642,1.725,645,2.41,647,1.338,694,1.511,703,2.233,704,4.005,705,3.442,732,1.338,952,2.151,988,2.812,1100,2.951,1361,2.008,1540,2.534,1542,2.812,1616,4.563,1645,3.217,1651,3.217,1666,3.518,1669,5,1731,5.497,1732,6.099,1733,3.874,1734,2.534,1775,2.322,1777,2.951,1794,6.574,1795,6.574,1796,6.574,1797,6.574,1798,3.976,1799,5,1800,3.976,1801,3.976,1802,4.794,1803,5.651,1804,5.651,1805,5.651,1806,3.976,1807,3.976,1808,3.518,1809,3.976,1810,3.518,1811,3.997,1812,2.992,1813,6.335,1814,3.976,1815,3.976,1816,3.976,1817,3.976,1818,3.976,1819,3.976,1820,3.976,1821,3.976,1822,5.651,1823,5.651,1824,5.651,1825,5.651,1826,3.518,1827,3.518,1828,3.784]],["title/components/MoonHighchartComponent.html",[0,0.366,74,1.157]],["body/components/MoonHighchartComponent.html",[0,0.496,1,0.878,2,1.412,3,0.081,4,0.068,5,0.979,6,0.979,7,0.979,8,0.979,9,0.048,12,0.958,13,0.979,14,1.979,15,2.019,16,1.09,18,1.09,20,0.267,21,0.496,22,0.009,23,0.081,24,0.072,26,1.267,27,1.443,28,1.443,29,0.979,30,1.891,31,0.979,32,0.796,33,0.979,34,0.897,35,0.979,36,0.878,37,0.979,38,0.878,39,1.46,40,0.979,41,0.897,42,1.577,43,2.239,44,0.878,45,0.979,46,0.897,47,2.016,48,0.878,49,1.891,50,0.897,51,1.605,52,0.878,53,0.979,54,0.897,55,0.878,56,0.878,57,0.979,58,0.878,59,0.917,60,0.806,61,0.979,62,0.859,63,0.74,64,0.979,65,0.897,66,1.64,67,0.897,68,0.979,69,0.897,70,2.114,71,0.878,72,0.979,73,0.897,74,1.733,75,0.878,76,0.878,77,0.979,78,0.897,79,1.976,80,0.878,81,0.979,82,0.897,83,0.897,84,0.878,85,0.878,86,0.979,87,0.897,88,1.381,89,0.495,90,1.443,91,0.897,92,0.823,93,0.878,94,0.878,95,0.979,96,0.897,97,1.381,98,0.878,99,0.979,100,0.897,101,0.878,102,0.859,103,0.979,104,0.979,105,0.005,106,0.005,111,0.168,112,0.542,113,1.188,114,0.311,117,0.916,119,0.587,120,0.48,121,0.633,123,1.339,124,1.368,130,0.958,228,0.779,236,0.617,247,0.557,248,0.687,259,0.7,292,1.138,317,1.512,318,1.76,323,1.173,539,3.19,563,3.563,600,2.379,601,2.261,612,2.361,613,1.173,614,1.023,623,2.054,624,1.651,639,2.435,640,1.651,641,2.103,642,2.648,644,1.704,645,2.266,646,1.651,647,1.173,653,4.056,655,2.928,660,3.716,674,3.274,694,1.325,732,1.729,830,2.168,904,1.556,918,3.291,936,3,937,4.315,938,4.315,939,3.664,940,4.315,941,3.633,945,4.761,946,4.761,947,4.761,949,3.633,950,4.031,952,2.779,964,3.633,965,3.633,966,3.44,967,3.44,968,3.633,969,4.761,970,3.44,971,3.274,972,3.633,973,3.633,977,2.123,978,3.633,979,3.633,980,3.633,981,2.465,983,2.465,985,2.465,988,2.465,991,2.622,992,2.622,993,2.622,998,2.123,1236,2.465,1237,4.59,1238,3.865,1239,5.447,1240,5.066,1241,3.865,1242,2.622,1244,3.084,1252,2.622,1253,2.622,1254,2.622,1255,2.622,1256,2.622,1257,2.819,1258,2.622,1259,2.622,1261,3.865,1731,5.71,1733,3.643,1734,2.221,1829,7.248,1830,5.957,1831,5.957,1832,3.485,1833,3.485,1834,3.485,1835,3.485,1836,3.485,1837,3.485,1838,3.084,1839,3.485,1840,3.485,1841,3.084,1842,3.084,1843,3.084,1844,4.156,1845,4.156,1846,3.084,1847,2.885,1848,5.136,1849,3.084,1850,2.819,1851,2.819,1852,2.819,1853,2.819]],["title/interfaces/MoonInterface.html",[482,0.278,1854,3.01]],["body/interfaces/MoonInterface.html",[3,0.125,4,0.104,9,0.073,20,0.321,22,0.009,23,0.161,24,0.111,32,0.838,89,0.477,105,0.006,106,0.006,111,0.258,114,0.477,117,0.933,119,0.98,120,0.48,121,1.033,201,1.857,228,0.843,229,2.84,236,0.643,247,0.749,248,0.422,259,0.677,329,0.709,382,1.599,462,1.088,480,1.252,482,0.331,531,1.16,532,1.76,536,2.151,541,3.491,553,1.935,555,2.616,565,1.467,605,1.291,606,1.264,676,1.646,760,1.378,761,1.47,774,1.76,876,3.065,916,2.141,1172,3.178,1187,1.844,1697,3.005,1736,2.895,1753,2.322,1754,2.46,1755,3.854,1756,2.895,1757,2.895,1758,2.795,1759,3.125,1760,3.276,1761,3.178,1762,3.005,1763,3.125,1764,3.125,1765,3.125,1766,2.535,1767,3.125,1768,3.125,1769,3.125,1770,3.125,1771,3.125,1772,3.125,1773,3.125,1774,4.474,1775,2.84,1776,3.125,1777,3.611,1778,2.535,1779,3.125,1802,3.583,1828,3.583,1854,3.583,1855,6.197,1856,6.197,1857,6.197,1858,6.197,1859,5.593,1860,5.593,1861,5.593,1862,5.593,1863,5.35,1864,5.35,1865,5.35,1866,5.35,1867,5.129,1868,5.35,1869,5.35,1870,4.329,1871,5.35,1872,4.329,1873,5.35,1874,4.329,1875,5.35,1876,5.35,1877,4.329,1878,5.35]],["title/classes/MoonInterfaceImpl.html",[24,0.093,1879,3.383]],["body/classes/MoonInterfaceImpl.html",[3,0.119,4,0.099,9,0.07,20,0.315,22,0.009,23,0.156,24,0.105,32,0.824,89,0.461,105,0.006,106,0.006,111,0.245,112,0.705,114,0.453,117,0.948,119,0.967,120,0.507,121,1.016,201,1.826,228,0.841,229,2.745,236,0.803,247,0.724,248,0.698,259,0.667,329,0.673,382,1.545,460,1.632,462,1.033,480,1.262,482,0.314,531,1.101,536,2.098,541,3.374,553,1.837,555,2.483,565,1.418,605,1.226,606,1.2,676,1.613,736,3.335,760,1.308,761,1.396,774,1.67,876,2.988,916,2.032,1172,3.072,1187,1.75,1697,2.852,1736,2.748,1753,2.204,1754,2.335,1755,3.79,1756,2.748,1757,2.748,1758,2.653,1759,2.966,1760,3.166,1761,3.072,1762,2.852,1763,2.966,1764,2.966,1765,2.966,1766,2.406,1767,2.966,1768,2.966,1769,2.966,1770,2.966,1771,2.966,1772,2.966,1773,2.966,1774,4.362,1775,3.26,1776,2.966,1777,4.144,1778,2.406,1779,2.966,1802,5.001,1828,5.001,1854,3.401,1855,6.042,1856,6.042,1857,6.042,1858,6.042,1859,5.406,1860,5.406,1861,5.406,1862,5.406,1867,5.313,1870,4.109,1872,4.109,1874,4.109,1877,4.109,1879,3.821,1880,5.078,1881,5.078,1882,5.078,1883,5.078,1884,5.078,1885,5.078,1886,5.078,1887,5.078,1888,5.078,1889,5.078,1890,5.078,1891,5.078,1892,5.078,1893,5.078,1894,5.078,1895,5.078]],["title/interfaces/MoonInterfaceStorageObject.html",[482,0.278,1867,3.01]],["body/interfaces/MoonInterfaceStorageObject.html",[3,0.141,4,0.117,9,0.083,20,0.335,22,0.009,23,0.174,24,0.124,89,0.514,105,0.007,106,0.007,111,0.291,112,0.786,114,0.537,119,0.688,120,0.484,201,1.924,228,0.684,229,3.061,236,0.724,248,0.475,329,0.798,382,1.723,462,1.225,480,1.249,482,0.373,531,1.306,532,1.98,565,1.581,605,1.454,606,1.423,676,1.719,760,1.55,761,1.655,774,1.98,916,2.41,1172,3.425,1187,2.076,1697,3.382,1736,3.258,1753,2.613,1754,2.769,1755,3.993,1756,3.258,1757,3.258,1758,3.145,1759,3.518,1760,3.53,1761,3.425,1762,3.382,1763,3.518,1764,3.518,1765,3.518,1766,2.854,1767,3.518,1768,3.518,1769,3.518,1770,3.518,1771,3.518,1772,3.518,1773,3.518,1774,4.725,1775,3.473,1776,3.518,1777,4.415,1778,2.854,1779,3.518,1802,5.417,1828,5.417,1867,4.032]],["title/interfaces/MoonModel.html",[482,0.278,1896,3.383]],["body/interfaces/MoonModel.html",[3,0.144,4,0.12,9,0.085,20,0.338,22,0.009,23,0.177,24,0.128,89,0.522,105,0.007,106,0.007,111,0.298,114,0.551,117,0.634,119,0.705,201,1.938,228,0.751,229,3.109,236,0.742,247,0.82,248,0.487,329,0.819,382,1.75,462,1.256,480,1.028,482,0.382,531,1.34,532,2.031,565,1.606,605,1.491,606,1.459,676,1.734,760,1.59,761,1.698,774,2.031,916,2.472,1172,3.479,1187,2.129,1697,3.469,1736,3.342,1753,2.681,1754,2.84,1755,4.022,1756,3.342,1757,3.342,1758,3.226,1759,3.608,1760,3.586,1761,3.479,1762,3.469,1763,3.608,1764,3.608,1765,3.608,1766,2.927,1767,3.608,1768,3.608,1769,3.608,1770,3.608,1771,3.608,1772,3.608,1773,3.608,1774,4.779,1775,2.538,1776,3.608,1777,3.226,1778,2.927,1779,3.608,1896,4.648,1897,7.239,1898,6.177]],["title/modules/MoonModule.html",[132,1.513,1899,3.01]],["body/modules/MoonModule.html",[3,0.13,4,0.108,9,0.076,20,0.372,21,0.794,22,0.008,23,0.13,24,0.115,26,1.158,42,1.353,60,1.641,63,1.183,69,2.234,70,2.071,71,2.187,73,2.234,74,2.234,75,2.187,89,0.49,92,1.677,105,0.006,106,0.006,132,1.876,134,2.489,135,2.563,136,3.296,137,2.563,138,3.7,139,2.353,150,3.47,151,2.419,152,2.563,154,2.996,155,2.996,174,2.641,178,4.524,180,2.916,184,4.324,185,2.23,321,2.173,322,2.563,883,4.382,892,3.553,893,3.256,939,2.563,1020,4.873,1021,4.873,1025,5.02,1026,3.986,1027,5.02,1029,5.02,1033,4.752,1034,5.02,1037,3.942,1038,5.02,1039,2.563,1049,5.02,1050,2.489,1269,3.733,1272,4.194,1646,5.811,1652,6.28,1653,4.932,1732,5.02,1733,4.696,1734,3.553,1829,4.51,1899,6.355,1900,4.932,1901,4.932,1902,4.932,1903,4.932,1904,6.53,1905,5.574,1906,5.574,1907,4.194,1908,4.932]],["title/injectables/MoonService.html",[325,2.007,1733,2.432]],["body/injectables/MoonService.html",[3,0.084,4,0.07,9,0.049,20,0.311,21,0.511,22,0.009,23,0.084,24,0.074,32,0.869,89,0.501,105,0.005,106,0.005,111,0.3,112,0.554,113,0.829,114,0.553,117,0.964,119,0.993,120,0.515,121,1.071,122,1.105,123,1.575,124,1.643,201,0.795,228,0.848,231,1.14,236,0.431,247,0.849,248,0.727,259,0.695,292,1.927,325,2.342,326,2.095,329,1.143,382,1.213,462,1.261,480,1.259,482,0.384,531,1.742,534,1.821,535,1.821,536,1.742,537,1.821,538,1.821,539,2.486,540,2.946,541,2.649,542,2.946,543,2.946,549,1.053,551,1.266,553,1.297,555,1.753,556,1.398,558,1.435,559,1.398,561,1.435,565,1.542,605,0.866,606,0.847,614,1.053,772,1.766,793,2.77,801,1.077,803,1.266,804,1.647,824,1.941,857,1.705,872,2.04,874,2.04,876,2.482,897,2.342,917,2.946,918,2.565,928,1.266,936,3.987,939,2.412,950,4.079,995,3.174,996,3.174,997,3.174,1274,4.668,1275,4.668,1277,4.668,1278,3.948,1297,2.699,1303,3.948,1305,2.699,1308,3.948,1366,2.649,1375,3.513,1733,2.839,1735,5.366,1753,1.556,1754,1.649,1755,3.138,1758,3.963,1775,1.473,1777,1.873,1802,2.402,1811,2.536,1812,2.699,1828,2.402,1854,5.38,1855,5.019,1856,5.019,1857,5.019,1858,5.019,1859,4.245,1860,4.245,1861,4.245,1862,4.245,1870,2.902,1872,2.902,1874,2.902,1877,2.902,1879,4.668,1896,5.136,1897,6.04,1909,3.174,1910,6.203,1911,5.489,1912,6.046,1913,5.246,1914,3.586,1915,3.586,1916,3.586,1917,3.586,1918,3.586,1919,3.586,1920,3.586,1921,3.586,1922,3.586,1923,3.586,1924,3.586,1925,3.586,1926,3.586,1927,3.586,1928,3.174,1929,3.586,1930,3.174,1931,3.586,1932,3.586,1933,3.586,1934,3.586,1935,3.586,1936,3.586,1937,3.586,1938,3.586,1939,3.586,1940,3.586,1941,3.586,1942,3.586,1943,3.586,1944,3.586,1945,3.586,1946,3.586,1947,5.246,1948,3.586,1949,3.586,1950,5.246,1951,3.586,1952,3.586,1953,4.642,1954,3.586,1955,4.642,1956,3.586,1957,3.586,1958,3.586,1959,3.586,1960,3.586,1961,3.586,1962,3.586,1963,3.586,1964,3.586,1965,3.586,1966,3.586,1967,3.586,1968,3.586,1969,3.586,1970,3.586,1971,3.174,1972,3.174]],["title/classes/MoonStorage.html",[24,0.093,1912,3.383]],["body/classes/MoonStorage.html",[3,0.123,4,0.102,9,0.072,20,0.319,22,0.009,23,0.159,24,0.109,32,0.758,89,0.524,105,0.006,106,0.006,111,0.254,112,0.721,114,0.468,117,0.936,119,0.918,120,0.489,121,0.935,122,0.982,123,1.415,124,1.447,201,1.846,228,0.831,229,2.806,236,0.821,241,1.892,247,0.74,248,0.686,259,0.673,329,0.696,382,1.579,460,1.687,462,1.068,480,0.928,482,0.325,531,1.481,565,1.45,605,1.267,606,1.241,676,1.634,760,1.758,761,1.443,774,1.727,844,3.049,845,3.835,846,3.049,854,3.294,857,2.086,860,3.294,866,2.279,869,2.279,872,2.496,874,2.496,876,3.037,916,2.101,1052,4.573,1053,4.573,1054,4.573,1071,3.516,1172,3.14,1187,1.81,1349,2.949,1697,2.949,1735,3.714,1736,2.841,1744,5.368,1753,2.279,1754,2.414,1755,4.054,1756,2.841,1757,2.841,1758,3.567,1759,3.067,1760,3.236,1761,3.14,1762,2.949,1763,3.067,1764,3.067,1765,3.067,1766,2.488,1767,3.067,1768,3.067,1769,3.067,1770,3.067,1771,3.067,1772,3.067,1773,3.067,1774,4.434,1775,2.157,1776,3.067,1777,2.743,1778,2.488,1779,3.067,1854,3.516,1867,5.083,1912,3.951,1973,5.251,1974,5.251,1975,5.251,1976,5.251,1977,5.251,1978,5.251,1979,5.251,1980,5.251,1981,5.251,1982,5.251,1983,5.251,1984,5.251]],["title/classes/MoonTable.html",[24,0.093,1985,3.383]],["body/classes/MoonTable.html",[0,0.546,3,0.119,4,0.131,9,0.07,14,1.086,15,1.11,16,1.086,18,1.086,20,0.343,21,0.729,22,0.009,23,0.119,24,0.139,32,0.511,70,2.005,75,1.289,102,1.848,105,0.006,106,0.006,111,0.362,112,0.709,114,0.456,117,0.871,119,0.584,120,0.384,121,0.63,122,1.119,123,0.954,124,0.975,130,1.406,228,0.688,231,1.329,236,0.901,241,1.661,247,0.728,248,0.691,259,0.591,292,1.763,329,0.994,460,1.644,462,1.04,480,1.152,482,0.317,581,4.43,586,3.507,600,2.618,601,2.489,612,2.465,613,1.722,614,1.502,623,1.722,624,1.644,625,2.672,639,1.851,640,2.424,641,1.764,645,1.722,646,2.424,647,1.722,770,1.317,804,1.921,806,1.945,857,2.187,934,3.633,986,3.619,1039,2.352,1050,2.284,1073,2.768,1074,3.785,1075,4.209,1076,4.306,1077,4.306,1078,5.053,1079,4.209,1080,4.14,1081,4.14,1082,4.14,1083,4.018,1084,3.85,1085,2.873,1086,2.873,1087,2.873,1088,2.873,1089,2.768,1094,3.771,1097,2.873,1100,2.672,1102,2.873,1104,2.873,1106,2.873,1107,2.873,1108,2.873,1360,4.091,1362,3.117,1363,3.117,1364,3.117,1365,3.117,1366,2.584,1367,3.117,1731,5.509,1733,3.633,1734,3.261,1755,3.799,1756,2.768,1757,2.768,1812,3.85,1907,6.504,1985,5.64,1986,2.672,1987,4.527,1988,4.527,1989,3.85,1990,3.117,1991,5.942,1992,5.942,1993,4.527,1994,5.942,1995,4.527]],["title/components/MoonTableComponent.html",[0,0.366,75,1.133]],["body/components/MoonTableComponent.html",[0,0.518,1,0.945,2,1.489,3,0.088,4,0.105,5,1.053,6,1.053,7,1.053,8,1.053,9,0.051,12,1.03,13,1.053,14,1.989,15,2.03,16,1.15,18,1.15,20,0.315,21,0.534,22,0.009,23,0.088,24,0.112,26,0.779,27,1.522,28,1.522,29,1.053,30,1.958,31,1.053,32,0.696,33,1.053,34,0.965,35,1.053,36,0.945,37,1.053,38,0.945,39,1.511,40,1.053,41,0.965,42,1.409,43,2.285,44,0.945,45,1.053,46,0.965,47,2.077,48,0.945,49,1.958,50,0.965,51,1.674,52,0.945,53,1.053,54,0.965,55,0.945,56,0.945,57,1.053,58,0.945,59,0.986,60,0.867,61,1.053,62,0.925,63,0.796,64,1.053,65,0.965,66,1.008,67,0.965,68,1.053,69,0.965,70,2.19,71,0.945,72,1.053,73,0.965,74,0.965,75,1.756,76,0.945,77,1.053,78,0.965,79,1.834,80,0.945,81,1.053,82,0.965,83,0.965,84,0.945,85,0.945,86,1.053,87,0.965,88,1.457,89,0.374,90,1.522,91,0.965,92,0.886,93,0.945,94,0.945,95,1.053,96,0.965,97,1.44,98,0.945,99,1.053,100,0.965,101,0.945,102,2.006,103,1.053,104,1.053,105,0.005,106,0.005,111,0.307,112,0.572,114,0.334,117,0.893,119,0.619,120,0.466,121,0.668,122,0.997,123,1.517,124,1.55,130,1.03,228,0.584,231,1.164,236,0.764,241,0.831,247,0.587,248,0.641,259,0.549,292,1.638,317,1.627,323,1.262,329,1.099,462,1.294,480,1.126,482,0.232,581,3.861,586,1.958,600,2.48,601,2.358,612,2.431,613,1.262,614,1.101,623,2.142,624,1.741,625,1.958,639,2.521,640,1.776,641,1.292,645,2.346,646,1.776,647,1.262,694,1.425,732,1.824,770,1.395,804,1.682,806,1.425,857,1.03,904,1.674,934,2.932,986,2.651,1039,1.724,1050,2.419,1073,2.029,1074,2.736,1075,2.105,1076,2.029,1077,2.029,1079,3.043,1083,3.213,1085,2.105,1086,3.043,1087,3.573,1088,3.573,1089,3.442,1094,3.043,1097,2.105,1100,3.323,1102,3.573,1104,3.573,1106,2.105,1107,2.105,1108,2.105,1110,4.384,1111,3.033,1113,2.821,1114,2.651,1115,2.651,1119,2.651,1120,2.651,1121,2.651,1360,3.301,1362,2.284,1363,2.284,1364,2.284,1365,3.301,1366,3.213,1367,2.284,1375,3.628,1379,3.033,1382,3.033,1731,5.584,1733,3.771,1734,2.39,1755,3.74,1756,2.029,1757,2.029,1812,2.821,1907,6.593,1985,4.787,1986,3.323,1987,4.794,1988,4.794,1989,4.077,1990,3.301,1991,4.794,1992,4.794,1993,3.317,1994,4.794,1995,3.317,1996,3.317,1997,3.317,1998,3.317,1999,3.317]],["title/interfaces/MyChart.html",[482,0.278,567,2.865]],["body/interfaces/MyChart.html",[3,0.149,4,0.124,9,0.088,20,0.306,22,0.008,23,0.18,32,0.772,89,0.441,105,0.007,106,0.007,111,0.309,117,0.853,119,0.882,120,0.442,121,0.952,122,1.186,228,0.709,247,0.837,259,0.716,482,0.478,531,2.021,532,2.102,533,5.171,534,1.876,535,1.876,536,1.795,537,1.876,538,1.876,549,1.876,551,2.256,553,2.312,556,2.492,559,2.492,562,4.809,563,4.851,564,4.074,565,1.831,566,5.655,567,4.924,568,5.813,569,6.754,570,4.809,571,5.813,572,6.491,582,6.837,583,6.837,2000,6.391,2001,6.391,2002,6.391]],["title/interfaces/MyColorTheme.html",[262,2.525,482,0.278]],["body/interfaces/MyColorTheme.html",[3,0.113,4,0.094,9,0.067,22,0.009,23,0.21,24,0.151,105,0.006,106,0.006,111,0.313,112,0.685,120,0.371,122,1.193,123,1.515,231,1.467,241,1.437,248,0.511,254,3.953,255,2.728,256,2.728,262,4.102,265,3.643,268,3.643,271,3.643,274,2.728,275,2.537,307,2.959,329,1.194,352,4.562,355,3.643,360,3.643,364,3.643,377,2.537,406,3.952,407,4.749,408,2.959,461,2.837,462,1.852,463,3.096,464,3.096,468,4.135,469,3.952,470,4.135,471,4.135,474,3.096,476,4.102,477,3.096,479,3.096,480,0.66,482,0.482,483,4.694,484,5.925,485,3.627,486,4.749,487,2.837,488,4.949,489,2.837,490,3.096,491,3.096,492,2.959,493,2.959,494,2.837,495,4.749,496,2.959,497,2.959,498,4.45,499,3.953,500,4.267,501,4.45,502,2.959,503,3.952,504,3.952,505,3.096,506,3.096,507,3.643,508,3.952,509,3.096,510,3.096,511,4.135,512,3.096,513,3.096,514,3.096,515,3.096,516,3.096,517,4.135,518,3.096,519,3.096,520,3.096,521,4.135,522,3.096,523,3.096,524,3.096,525,3.096,526,3.096,527,3.096,528,2.959,529,4.135,530,3.096,532,1.597]],["title/interfaces/MyData.html",[482,0.278,565,0.954]],["body/interfaces/MyData.html",[3,0.151,4,0.126,9,0.089,22,0.008,23,0.151,32,0.835,89,0.447,105,0.007,106,0.007,111,0.403,117,0.911,119,0.954,120,0.478,121,1.029,228,0.814,247,0.844,259,0.71,480,1.272,482,0.401,532,2.13,565,1.653,793,3.869,801,2.338,803,2.75,804,2.173,857,2.381,897,3.478,917,4.374,918,3.808,928,2.75,2003,5.732,2004,6.477,2005,6.477,2006,6.477,2007,6.477,2008,6.477]],["title/interfaces/MyFontFamily.html",[265,2.525,482,0.278]],["body/interfaces/MyFontFamily.html",[3,0.113,4,0.094,9,0.067,22,0.009,23,0.21,24,0.151,105,0.006,106,0.006,111,0.313,112,0.685,120,0.371,122,1.193,123,1.515,231,1.467,241,1.437,248,0.511,254,3.953,255,2.728,256,2.728,262,3.643,265,4.102,268,3.643,271,3.643,274,2.728,275,2.537,307,2.959,329,1.194,352,4.562,355,3.643,360,3.643,364,3.643,377,2.537,406,3.952,407,4.749,408,2.959,461,2.837,462,1.852,463,3.096,464,3.096,468,4.135,469,3.952,470,4.135,471,4.135,474,3.096,476,4.102,477,3.096,479,3.096,480,0.66,482,0.482,483,4.694,484,5.925,485,3.627,486,4.749,487,2.837,488,4.949,489,2.837,490,3.096,491,3.096,492,2.959,493,2.959,494,2.837,495,4.749,496,2.959,497,2.959,498,4.45,499,3.953,500,4.267,501,4.45,502,2.959,503,3.952,504,3.952,505,3.096,506,3.096,507,3.643,508,3.952,509,3.096,510,3.096,511,4.135,512,3.096,513,3.096,514,3.096,515,3.096,516,3.096,517,4.135,518,3.096,519,3.096,520,3.096,521,4.135,522,3.096,523,3.096,524,3.096,525,3.096,526,3.096,527,3.096,528,2.959,529,4.135,530,3.096,532,1.597]],["title/interfaces/MyFontSize.html",[268,2.525,482,0.278]],["body/interfaces/MyFontSize.html",[3,0.113,4,0.094,9,0.067,22,0.009,23,0.21,24,0.151,105,0.006,106,0.006,111,0.313,112,0.685,120,0.371,122,1.193,123,1.515,231,1.467,241,1.437,248,0.511,254,3.953,255,2.728,256,2.728,262,3.643,265,3.643,268,4.102,271,3.643,274,2.728,275,2.537,307,2.959,329,1.194,352,4.562,355,3.643,360,3.643,364,3.643,377,2.537,406,3.952,407,4.749,408,2.959,461,2.837,462,1.852,463,3.096,464,3.096,468,4.135,469,3.952,470,4.135,471,4.135,474,3.096,476,4.102,477,3.096,479,3.096,480,0.66,482,0.482,483,4.694,484,5.925,485,3.627,486,4.749,487,2.837,488,4.949,489,2.837,490,3.096,491,3.096,492,2.959,493,2.959,494,2.837,495,4.749,496,2.959,497,2.959,498,4.45,499,3.953,500,4.267,501,4.45,502,2.959,503,3.952,504,3.952,505,3.096,506,3.096,507,3.643,508,3.952,509,3.096,510,3.096,511,4.135,512,3.096,513,3.096,514,3.096,515,3.096,516,3.096,517,4.135,518,3.096,519,3.096,520,3.096,521,4.135,522,3.096,523,3.096,524,3.096,525,3.096,526,3.096,527,3.096,528,2.959,529,4.135,530,3.096,532,1.597]],["title/interfaces/MyFontStyle.html",[271,2.525,482,0.278]],["body/interfaces/MyFontStyle.html",[3,0.113,4,0.094,9,0.067,22,0.009,23,0.21,24,0.151,105,0.006,106,0.006,111,0.313,112,0.685,120,0.371,122,1.193,123,1.515,231,1.467,241,1.437,248,0.511,254,3.953,255,2.728,256,2.728,262,3.643,265,3.643,268,3.643,271,4.102,274,2.728,275,2.537,307,2.959,329,1.194,352,4.562,355,3.643,360,3.643,364,3.643,377,2.537,406,3.952,407,4.749,408,2.959,461,2.837,462,1.852,463,3.096,464,3.096,468,4.135,469,3.952,470,4.135,471,4.135,474,3.096,476,4.102,477,3.096,479,3.096,480,0.66,482,0.482,483,4.694,484,5.925,485,3.627,486,4.749,487,2.837,488,4.949,489,2.837,490,3.096,491,3.096,492,2.959,493,2.959,494,2.837,495,4.749,496,2.959,497,2.959,498,4.45,499,3.953,500,4.267,501,4.45,502,2.959,503,3.952,504,3.952,505,3.096,506,3.096,507,3.643,508,3.952,509,3.096,510,3.096,511,4.135,512,3.096,513,3.096,514,3.096,515,3.096,516,3.096,517,4.135,518,3.096,519,3.096,520,3.096,521,4.135,522,3.096,523,3.096,524,3.096,525,3.096,526,3.096,527,3.096,528,2.959,529,4.135,530,3.096,532,1.597]],["title/interfaces/MyStorage.html",[482,0.278,760,1.157]],["body/interfaces/MyStorage.html",[3,0.147,4,0.123,9,0.086,22,0.008,23,0.147,32,0.825,89,0.435,105,0.007,106,0.007,111,0.305,117,0.945,119,0.943,120,0.473,121,1.017,228,0.845,247,0.831,259,0.736,482,0.39,531,1.368,532,2.074,760,1.973,854,3.727,857,2.36,860,3.727,866,3.326,869,3.326,872,2.824,874,2.824,876,3.436,1052,5.132,1053,5.132,1054,5.132,1071,4.223,1349,4.304,2009,5.581,2010,6.307,2011,6.307,2012,6.307,2013,6.307,2014,6.307,2015,6.307,2016,6.307,2017,6.307,2018,6.307]],["title/interfaces/MyTable.html",[482,0.278,1074,2.27]],["body/interfaces/MyTable.html",[3,0.161,4,0.134,9,0.095,20,0.274,22,0.008,23,0.161,105,0.007,106,0.007,111,0.334,117,0.882,228,0.788,247,0.878,259,0.638,482,0.428,532,2.275,857,2.433,1074,4.089,1076,4.791,1077,4.791,1083,4.471,2019,7.834,2020,6.12,2021,6.916,2022,6.916,2023,6.916]],["title/components/PageNotFoundComponent.html",[0,0.366,76,1.133]],["body/components/PageNotFoundComponent.html",[0,0.621,1,1.339,2,1.892,3,0.124,4,0.103,5,1.493,6,1.493,7,1.493,8,1.493,9,0.073,11,2.373,12,2.509,13,1.493,14,2.028,15,2.071,16,1.461,18,1.461,20,0.211,21,0.757,22,0.008,23,0.124,24,0.11,25,5.18,26,1.104,27,1.934,28,1.934,29,1.493,30,2.268,31,1.493,32,0.688,33,1.493,34,1.368,35,1.493,36,1.339,37,1.493,38,1.339,39,1.751,40,1.493,41,1.368,42,1.594,43,2.483,44,1.339,45,1.493,46,1.368,47,2.35,48,1.339,49,2.268,50,1.368,51,2.009,52,1.339,53,1.493,54,1.368,55,1.339,56,1.339,57,1.493,58,1.339,59,1.398,60,1.229,61,1.493,62,1.311,63,1.128,64,1.493,65,1.368,66,1.429,67,1.368,68,1.493,69,1.368,70,2.035,71,1.339,72,1.493,73,1.368,74,1.368,75,1.339,76,2.035,77,1.493,78,1.368,79,2.125,80,1.339,81,1.493,82,1.368,83,1.368,84,1.339,85,1.339,86,1.493,87,1.368,88,1.851,89,0.367,90,1.934,91,1.368,92,1.256,93,1.339,94,1.339,95,1.493,96,1.368,97,1.728,98,1.339,99,1.493,100,1.368,101,1.339,102,1.311,103,1.493,104,1.493,105,0.006,106,0.006,171,3.999,221,6.933,2024,4.703,2025,4.703,2026,7.634,2027,6.883]],["title/components/ScatterChartFormComponent.html",[0,0.366,78,1.157]],["body/components/ScatterChartFormComponent.html",[0,0.571,1,1.132,2,1.691,3,0.105,4,0.087,5,1.262,6,1.262,7,1.262,8,1.262,9,0.062,12,1.235,13,1.262,14,2.011,15,2.053,16,1.306,18,1.306,20,0.299,21,0.64,22,0.008,23,0.105,24,0.093,26,0.934,27,1.729,28,1.729,29,1.262,30,2.121,31,1.262,32,0.702,33,1.262,34,1.157,35,1.262,36,1.132,37,1.262,38,1.132,39,1.637,40,1.262,41,1.157,42,1.767,43,2.392,44,1.132,45,1.262,46,1.157,47,2.222,48,1.132,49,2.121,50,1.157,51,1.847,52,1.132,53,1.262,54,1.157,55,1.132,56,1.132,57,1.262,58,1.132,59,1.182,60,1.039,61,1.262,62,1.108,63,0.954,64,1.262,65,1.157,66,1.208,67,1.157,68,1.262,69,1.157,70,1.903,71,1.132,72,1.262,73,1.157,74,1.157,75,1.132,76,1.132,77,1.262,78,1.944,79,2.322,80,1.132,81,1.262,82,1.157,83,1.157,84,1.132,85,1.132,86,1.262,87,1.157,88,1.655,89,0.484,90,1.729,91,1.157,92,1.062,93,1.132,94,1.132,95,1.262,96,1.157,97,1.589,98,1.132,99,1.262,100,1.157,101,1.132,102,1.108,103,1.262,104,1.262,105,0.005,106,0.005,111,0.217,112,0.65,113,1.423,114,0.401,117,0.776,119,0.513,120,0.402,121,0.554,123,0.838,124,0.856,130,1.235,185,1.798,228,0.412,236,0.74,246,5.095,247,0.667,248,0.553,259,0.485,277,2.431,291,3.009,292,1.853,320,2.129,321,2.737,322,2.066,323,1.513,601,2.602,612,2.601,613,1.513,614,1.319,623,2.363,624,1.978,641,1.549,644,2.197,645,2.542,646,2.129,647,1.513,659,1.691,666,1.691,694,1.708,703,2.523,704,4.276,705,3.749,706,4.121,707,3.178,708,3.178,709,2.737,710,3.178,711,1.319,712,3.178,713,1.549,714,3.178,715,1.319,716,3.178,717,1.319,718,3.178,719,3.178,720,5.34,721,3.178,722,3.178,723,3.178,724,3.178,725,3.178,726,3.178,727,4.353,728,3.178,729,3.178,730,3.178,731,4.813,732,1.513,2028,5.041,2029,5.594,2030,4.086,2031,2.864]],["title/classes/ScatterChartInfo.html",[24,0.093,2032,2.432]],["body/classes/ScatterChartInfo.html",[3,0.091,4,0.076,9,0.053,20,0.257,22,0.009,23,0.187,24,0.134,32,0.749,89,0.489,105,0.005,106,0.005,111,0.188,112,0.587,113,1.501,114,0.668,117,0.916,119,0.856,120,0.479,121,0.924,122,1.207,201,1.661,228,0.788,231,1.434,236,0.851,241,0.861,247,0.603,248,0.703,259,0.699,329,0.861,382,1.803,460,1.249,462,1.586,480,1.223,482,0.438,531,1.408,534,2.08,535,2.08,536,1.99,537,2.08,538,2.08,539,2.634,540,3.122,541,2.807,542,3.122,543,3.122,549,1.632,551,1.963,553,2.011,555,1.9,556,2.167,558,2.224,559,2.167,561,2.224,565,1.18,598,1.596,605,0.938,606,0.918,659,1.784,666,1.784,676,1.633,678,1.64,711,2.29,713,2.688,715,2.29,717,2.29,736,3.347,760,1,761,1.068,770,1,772,1.308,775,2.584,776,2.584,777,2.584,794,1.339,801,1.167,804,1.342,928,1.372,1156,2.74,1187,1.339,1206,1.64,1209,1.64,1210,1.64,1212,3.165,1556,1.735,1986,2.029,2032,3.008,2033,2.27,2034,5.559,2035,3.885,2036,3.885,2037,3.885,2038,3.885,2039,3.885,2040,3.885,2041,4.444,2042,3.885,2043,3.885,2044,3.885,2045,3.885,2046,3.885,2047,3.885,2048,3.885,2049,3.885,2050,3.938,2051,2.182,2052,2.182,2053,2.991,2054,2.102,2055,2.367,2056,2.367,2057,2.367,2058,2.367,2059,2.367,2060,3.387,2061,4.316,2062,3.954,2063,3.387,2064,2.367,2065,3.387,2066,2.367,2067,2.367,2068,2.367,2069,2.367,2070,2.367,2071,1.9,2072,1.9,2073,1.9,2074,1.9,2075,3.834,2076,3.165,2077,3.008,2078,3.247,2079,3.247,2080,2.27,2081,2.27,2082,2.27,2083,2.27,2084,3.247,2085,2.102,2086,3.954,2087,2.367,2088,3.954,2089,2.367,2090,2.27,2091,2.367,2092,2.367,2093,2.367,2094,2.634,2095,1.9]],["title/interfaces/ScatterChartInfoStorageObject.html",[482,0.278,2041,2.432]],["body/interfaces/ScatterChartInfoStorageObject.html",[3,0.103,4,0.086,9,0.06,20,0.276,22,0.009,23,0.194,24,0.144,89,0.479,105,0.005,106,0.005,111,0.213,112,0.641,113,1.404,114,0.619,120,0.429,122,1.203,201,1.74,231,1.469,236,0.835,241,0.976,248,0.668,259,0.686,329,0.921,382,1.878,462,1.523,480,1.242,482,0.463,531,1.317,532,1.449,534,1.294,535,1.294,536,1.238,537,1.294,538,1.294,549,1.294,551,1.556,553,1.594,556,1.718,558,1.763,559,1.718,561,1.763,565,1.289,598,1.811,605,1.064,606,1.041,659,1.91,666,1.91,676,1.692,678,1.86,711,2.443,713,2.868,715,2.443,717,2.443,736,2.712,760,1.135,761,1.211,770,1.135,772,1.483,775,2.707,776,2.707,777,2.707,794,1.519,801,1.323,804,1.466,928,1.556,1156,2.933,1187,1.519,1206,1.86,1209,1.86,1210,1.86,1212,3.316,1556,1.968,1986,2.302,2032,2.384,2033,2.574,2041,4.25,2050,4.1,2051,2.475,2052,2.475,2053,3.161,2054,2.384,2055,2.685,2056,2.685,2057,2.685,2058,2.685,2059,2.685,2060,3.7,2061,4.562,2062,4.233,2063,3.7,2064,2.685,2065,3.7,2066,2.685,2067,2.685,2068,2.685,2069,2.685,2070,2.685,2071,2.154,2072,2.154,2073,2.154,2074,2.154,2075,4.052,2076,3.316,2077,3.286,2078,3.547,2079,3.547,2080,2.574,2081,2.574,2082,2.574,2083,2.574,2084,3.547,2085,2.384,2086,4.233,2087,2.685,2088,4.233,2089,2.685,2090,2.574,2091,2.685,2092,2.685,2093,2.685,2094,2.878,2095,2.154]],["title/components/ScatterComponent.html",[0,0.366,80,1.133]],["body/components/ScatterComponent.html",[0,0.575,1,1.146,2,1.706,3,0.106,4,0.088,5,1.278,6,1.278,7,1.278,8,1.278,9,0.062,12,1.25,13,1.278,14,2.012,15,2.054,16,1.317,18,1.317,20,0.315,21,0.648,22,0.008,23,0.106,24,0.094,26,0.945,27,1.743,28,1.743,29,1.278,30,2.132,31,1.278,32,0.794,33,1.278,34,1.171,35,1.278,36,1.146,37,1.278,38,1.146,39,1.646,40,1.278,41,1.171,42,1.628,43,2.399,44,1.146,45,1.278,46,1.171,47,2.231,48,1.146,49,2.132,50,1.171,51,1.859,52,1.146,53,1.278,54,1.171,55,1.146,56,1.146,57,1.278,58,1.146,59,1.197,60,1.837,61,1.278,62,1.122,63,0.966,64,1.278,65,1.171,66,1.223,67,1.171,68,1.278,69,1.171,70,1.912,71,1.146,72,1.278,73,1.171,74,1.171,75,1.146,76,1.146,77,1.278,78,1.171,79,2.208,80,1.912,81,1.278,82,1.171,83,1.171,84,1.146,85,1.146,86,1.278,87,1.171,88,1.669,89,0.524,90,1.743,91,1.171,92,1.075,93,1.146,94,1.146,95,1.278,96,1.171,97,1.599,98,1.146,99,1.278,100,1.171,101,1.146,102,1.531,103,1.278,104,1.278,105,0.006,106,0.006,111,0.22,114,0.405,117,0.637,119,0.709,120,0.355,121,0.765,122,0.589,130,1.25,174,2.941,190,2.483,228,0.418,247,0.673,248,0.489,259,0.359,317,1.974,318,2.297,319,3.781,321,2.42,323,1.531,624,1.995,662,2.657,676,0.925,694,1.729,732,1.531,768,2.612,774,1.496,806,3.189,807,3.134,872,1.496,874,1.496,881,4.39,882,4.997,883,3.832,884,4.997,885,4.623,887,4.39,890,2.899,891,3.217,892,3.956,893,2.657,894,3.217,895,3.217,896,5.618,897,2.031,898,3.217,899,2.899,900,3.217,901,3.217,902,3.217,903,3.217,904,2.771,905,3.217,906,4.156,907,2.461,908,5.082,909,3.046,910,3.217,911,3.217,912,2.899,913,4.156,1226,4.837,1785,3.217,2030,4.107,2031,2.899,2096,4.025,2097,7.065,2098,6.206,2099,4.549,2100,4.549,2101,4.549]],["title/classes/ScatterData.html",[24,0.093,2054,2.432]],["body/classes/ScatterData.html",[3,0.095,4,0.079,9,0.056,20,0.263,22,0.009,23,0.19,24,0.137,32,0.664,42,0.772,89,0.498,105,0.005,106,0.005,111,0.321,112,0.604,113,1.324,114,0.679,117,0.867,119,0.758,120,0.436,121,0.818,122,1.161,123,0.755,124,0.772,201,1.687,228,0.726,231,1.446,236,0.867,241,1.471,247,0.62,248,0.689,259,0.694,329,0.881,382,1.828,460,1.301,462,1.688,480,1.26,482,0.447,531,1.242,534,1.189,535,1.189,536,1.138,537,1.189,538,1.189,549,1.189,551,1.43,553,1.465,556,1.579,558,1.62,559,1.579,561,1.62,565,1.41,598,2.729,605,0.977,606,0.957,659,1.984,666,1.984,676,1.653,678,1.709,711,2.119,713,2.488,715,2.119,717,2.119,736,2.556,760,1.043,761,1.113,770,1.043,772,1.927,775,2.625,776,2.625,777,2.625,793,2.965,794,1.396,801,1.719,803,1.43,804,1.908,857,1.825,897,2.556,917,3.215,918,2.799,928,2.021,1156,2.803,1187,1.396,1206,1.709,1209,1.709,1210,1.709,1212,3.215,1556,1.808,1986,3.469,2032,2.191,2033,2.365,2041,3.906,2050,4.321,2051,3.215,2052,3.215,2053,3.215,2054,3.098,2055,2.467,2056,4.397,2057,2.467,2058,2.467,2059,2.467,2060,3.488,2061,4.397,2062,4.046,2063,3.488,2064,2.467,2065,3.488,2066,2.467,2067,2.467,2068,2.467,2069,2.467,2070,2.467,2071,1.98,2072,1.98,2073,1.98,2074,1.98,2075,3.906,2076,3.215,2077,3.098,2078,3.344,2079,3.344,2080,2.365,2081,2.365,2082,2.365,2083,2.365,2084,3.344,2085,2.191,2086,4.046,2087,2.467,2088,4.046,2089,2.467,2090,2.365,2091,2.467,2092,2.467,2093,2.467,2094,2.713,2095,1.98,2102,5.725,2103,4.049,2104,4.049,2105,4.049,2106,4.049,2107,4.049,2108,4.049,2109,3.583,2110,4.049,2111,4.049,2112,4.049]],["title/interfaces/ScatterDataDict.html",[482,0.278,2050,2.27]],["body/interfaces/ScatterDataDict.html",[3,0.102,4,0.085,9,0.06,20,0.275,22,0.009,23,0.194,24,0.143,89,0.478,105,0.005,106,0.005,111,0.212,112,0.639,113,1.4,114,0.618,120,0.397,122,1.174,201,1.737,231,1.468,236,0.833,241,0.972,248,0.668,259,0.686,329,0.919,382,2.049,462,1.52,480,1.262,482,0.462,531,1.313,532,1.443,534,1.288,535,1.288,536,1.232,537,1.288,538,1.288,549,1.288,551,1.549,553,1.587,556,1.71,558,1.755,559,1.71,561,1.755,565,1.285,598,1.802,605,1.059,606,1.036,659,1.905,666,1.905,676,1.69,678,1.852,711,2.194,713,2.576,715,2.194,717,2.194,736,2.703,760,1.129,761,1.205,770,1.129,772,1.477,775,2.703,776,2.703,777,2.703,794,1.512,801,1.317,804,1.461,928,1.549,1156,2.926,1187,1.512,1206,1.852,1209,1.852,1210,1.852,1212,3.31,1556,1.959,1986,2.291,2032,2.374,2033,2.562,2041,4.044,2050,4.196,2051,4.197,2052,4.197,2053,3.508,2054,2.374,2055,2.672,2056,2.672,2057,2.672,2058,2.672,2059,2.672,2060,3.688,2061,4.553,2062,4.223,2063,3.688,2064,2.672,2065,3.688,2066,2.672,2067,2.672,2068,2.672,2069,2.672,2070,2.672,2071,2.144,2072,2.144,2073,2.144,2074,2.144,2075,4.044,2076,3.31,2077,3.276,2078,3.536,2079,3.536,2080,2.562,2081,2.562,2082,2.562,2083,2.562,2084,3.536,2085,2.374,2086,4.223,2087,2.672,2088,4.223,2089,2.672,2090,2.562,2091,2.672,2092,2.672,2093,2.672,2094,2.869,2095,2.144]],["title/components/ScatterFormComponent.html",[0,0.366,82,1.157]],["body/components/ScatterFormComponent.html",[0,0.561,1,1.094,2,1.652,3,0.101,4,0.134,5,1.22,6,1.22,7,1.22,8,1.22,9,0.06,12,1.193,13,1.22,14,2.007,15,2.049,16,1.276,18,1.276,20,0.31,21,0.618,22,0.008,23,0.101,24,0.09,26,0.902,27,1.689,28,1.689,29,1.22,30,2.091,31,1.22,32,0.744,33,1.22,34,1.118,35,1.22,36,1.094,37,1.22,38,1.094,39,1.614,40,1.22,41,1.118,42,1.489,43,2.373,44,1.094,45,1.22,46,1.118,47,2.195,48,1.094,49,2.091,50,1.118,51,1.814,52,1.094,53,1.22,54,1.118,55,1.094,56,1.094,57,1.22,58,1.094,59,1.143,60,1.004,61,1.22,62,1.071,63,0.922,64,1.22,65,1.118,66,1.168,67,1.118,68,1.22,69,1.118,70,1.875,71,1.094,72,1.22,73,1.118,74,1.118,75,1.094,76,1.094,77,1.22,78,1.118,79,2.307,80,1.094,81,1.22,82,1.916,83,1.118,84,1.094,85,1.094,86,1.22,87,1.118,88,1.617,89,0.3,90,1.689,91,1.118,92,1.026,93,1.094,94,1.094,95,1.22,96,1.118,97,1.561,98,1.094,99,1.22,100,1.118,101,1.094,102,1.071,103,1.22,104,1.22,105,0.005,106,0.005,111,0.21,112,0.634,114,0.387,117,0.851,119,0.687,120,0.426,121,0.741,123,1.286,124,1.314,130,1.193,228,0.633,236,0.722,240,5.743,247,0.652,248,0.544,259,0.544,292,1.791,320,2.849,321,2.688,322,1.997,323,2.024,485,1.939,600,2.688,601,2.556,612,2.884,613,1.462,614,1.275,623,2.321,624,1.932,639,2.692,641,1.497,642,1.885,645,2.505,647,1.462,694,1.651,703,2.439,704,4.201,705,3.662,706,2.908,732,1.462,952,2.35,988,3.072,1100,3.14,1361,2.193,1540,2.768,1542,3.072,1616,4.744,1645,3.514,1651,3.514,1799,5.32,1808,3.843,1810,3.843,1811,4.252,1813,5.32,1826,3.843,2028,5.384,2029,5.974,2030,4.027,2031,2.768,2053,2.538,2076,2.538,2113,6.895,2114,6.895,2115,6.012,2116,4.343,2117,4.343,2118,4.343,2119,3.268,2120,6.012,2121,6.012,2122,4.343,2123,4.343,2124,4.343,2125,4.343,2126,3.843]],["title/components/ScatterHighchartComponent.html",[0,0.366,83,1.157]],["body/components/ScatterHighchartComponent.html",[0,0.441,1,0.723,2,1.219,3,0.067,4,0.056,5,0.806,6,0.806,7,0.806,8,0.806,9,0.039,12,0.789,13,0.806,14,1.95,15,1.989,16,0.942,18,0.942,20,0.242,21,0.409,22,0.009,23,0.067,24,0.059,26,1.127,27,1.246,28,1.246,29,0.806,30,1.714,31,0.806,32,0.77,33,0.806,34,0.739,35,0.806,36,0.723,37,0.806,38,0.723,39,1.323,40,0.806,41,0.739,42,1.501,43,2.11,44,0.723,45,0.806,46,0.739,47,1.853,48,0.723,49,1.714,50,0.739,51,1.427,52,0.723,53,0.806,54,0.739,55,0.723,56,0.723,57,0.806,58,0.723,59,0.755,60,0.664,61,0.806,62,0.708,63,0.609,64,0.806,65,0.739,66,0.772,67,0.739,68,0.806,69,0.739,70,1.537,71,0.723,72,0.806,73,0.739,74,0.739,75,0.723,76,0.723,77,0.806,78,0.739,79,2.234,80,0.723,81,0.806,82,0.739,83,1.571,84,0.723,85,0.723,86,0.806,87,0.739,88,1.193,89,0.518,90,1.246,91,0.739,92,0.678,93,0.723,94,0.723,95,0.806,96,0.739,97,1.227,98,0.723,99,0.806,100,0.739,101,0.723,102,0.708,103,0.806,104,0.806,105,0.004,106,0.004,111,0.139,112,0.468,113,1.026,114,0.256,117,0.908,119,0.507,120,0.466,121,0.547,123,1.23,124,1.257,130,0.789,201,0.983,228,0.779,236,0.533,247,0.481,248,0.728,259,0.707,292,0.983,306,5.642,317,1.245,318,1.449,323,0.966,382,1.254,469,2.702,480,0.896,487,1.676,489,1.676,528,2.702,539,2.891,563,3.167,600,2.114,601,2.01,612,2.169,613,0.966,614,0.843,623,1.825,624,1.426,639,2.207,640,1.36,641,1.869,642,2.353,644,1.403,645,2.054,647,0.966,653,3.797,655,2.928,659,0.789,660,3.303,666,0.789,674,2.827,676,1.418,694,1.091,731,2.827,732,1.493,770,1.142,772,2.347,830,1.873,904,1.281,918,2.982,936,2.591,937,3.835,938,3.835,939,3.832,940,3.835,941,3.137,945,4.315,946,4.315,947,4.315,949,3.137,950,3.704,952,2.4,964,3.137,965,3.137,966,2.97,967,2.97,968,3.137,969,4.315,970,2.97,971,2.827,972,3.137,973,3.137,977,1.748,978,3.137,979,3.137,980,3.137,981,2.03,983,3.137,985,2.03,988,2.03,991,2.159,992,2.159,993,2.159,998,1.748,1172,1.319,1187,0.989,1236,2.03,1237,4.08,1238,3.338,1239,4.936,1240,4.591,1241,3.338,1242,2.159,1247,2.539,1252,2.159,1253,2.159,1254,2.159,1255,2.159,1256,2.159,1257,2.322,1258,2.159,1259,2.159,1261,3.338,1361,1.449,1504,4.932,1761,1.319,1830,5.398,1831,5.398,1842,2.539,1843,2.539,1844,4.936,1845,3.589,1847,1.612,1849,2.539,1850,2.322,1851,2.322,1852,2.322,1853,2.322,2028,5.658,2030,3.301,2031,1.829,2090,3.167,2127,7.182,2128,6.1,2129,6.1,2130,6.1,2131,6.1,2132,2.87,2133,2.87,2134,2.87,2135,2.87,2136,2.87,2137,2.87,2138,2.87,2139,2.87,2140,2.87,2141,2.87,2142,2.87,2143,2.87,2144,2.87,2145,2.87,2146,4.436,2147,2.87,2148,2.87,2149,2.87,2150,1.829,2151,6.596,2152,5.422,2153,6.1,2154,2.87,2155,1.829,2156,2.87,2157,2.539,2158,2.87,2159,2.87,2160,2.87,2161,2.539,2162,2.87,2163,2.87,2164,5.422,2165,5.422,2166,5.422,2167,4.436,2168,5.422,2169,4.436,2170,5.422,2171,5.422,2172,2.87,2173,2.87,2174,2.539,2175,2.539,2176,2.539,2177,2.87,2178,2.87,2179,1.829,2180,4.436,2181,2.87,2182,2.87,2183,2.87,2184,2.87,2185,4.436,2186,6.17,2187,6.17,2188,6.17,2189,6.17,2190,4.436,2191,4.436,2192,4.436,2193,4.436]],["title/interfaces/ScatterInterfaceStorageObject.html",[482,0.278,2075,2.432]],["body/interfaces/ScatterInterfaceStorageObject.html",[3,0.104,4,0.087,9,0.061,20,0.277,22,0.009,23,0.195,24,0.145,89,0.483,105,0.005,106,0.005,111,0.216,112,0.647,113,1.417,114,0.624,120,0.351,122,1.177,201,1.748,231,1.472,236,0.841,241,0.989,248,0.67,259,0.688,329,0.928,382,1.885,462,1.531,480,1.258,482,0.466,531,1.329,532,1.468,534,1.311,535,1.311,536,1.254,537,1.311,538,1.311,549,1.311,551,1.576,553,1.615,556,1.741,558,1.786,559,1.741,561,1.786,565,1.301,598,1.834,605,1.078,606,1.055,659,1.923,666,1.923,676,1.698,678,1.884,711,2.211,713,2.595,715,2.211,717,2.211,736,2.736,760,1.149,761,1.227,770,1.149,772,1.503,775,2.72,776,2.72,777,2.72,794,1.539,801,1.34,804,1.479,928,1.576,1156,2.953,1187,1.539,1206,1.884,1209,1.884,1210,1.884,1212,3.331,1556,1.993,1986,2.332,2032,2.415,2033,2.608,2041,4.074,2050,4.117,2051,2.507,2052,2.507,2053,3.524,2054,2.415,2055,2.719,2056,2.719,2057,2.719,2058,2.719,2059,2.719,2060,3.733,2061,4.587,2062,4.262,2063,3.733,2064,2.719,2065,3.733,2066,2.719,2067,2.719,2068,2.719,2069,2.719,2070,2.719,2071,2.182,2072,2.182,2073,2.182,2074,2.182,2075,4.27,2076,3.589,2077,3.315,2078,3.579,2079,3.579,2080,2.608,2081,2.608,2082,2.608,2083,2.608,2084,3.579,2085,2.415,2086,4.262,2087,2.719,2088,4.262,2089,2.719,2090,2.608,2091,2.719,2092,2.719,2093,2.719,2094,2.903,2095,2.182]],["title/interfaces/ScatterModel.html",[482,0.278,2077,2.432]],["body/interfaces/ScatterModel.html",[3,0.098,4,0.082,9,0.058,20,0.269,22,0.009,23,0.192,24,0.14,32,0.677,89,0.468,105,0.005,106,0.005,111,0.203,113,1.36,114,0.604,117,0.844,119,0.774,120,0.388,121,0.835,122,1.167,201,1.711,228,0.754,231,1.456,236,0.815,241,0.932,247,0.637,248,0.661,259,0.699,329,0.899,382,1.851,462,1.492,480,1.257,482,0.454,531,1.275,532,1.383,534,1.235,535,1.235,536,1.181,537,1.235,538,1.235,549,1.235,551,1.485,553,1.521,555,2.056,556,1.64,558,1.683,559,1.64,561,1.683,565,1.248,598,1.728,605,1.015,606,0.994,659,1.863,666,1.863,676,1.67,678,1.775,711,2.155,713,2.53,715,2.155,717,2.155,736,2.625,760,1.083,761,1.156,770,1.083,772,1.416,775,2.662,776,2.662,777,2.662,794,1.45,801,1.263,804,1.419,928,1.485,1156,2.861,1187,1.45,1206,1.775,1209,1.775,1210,1.775,1212,3.26,1556,1.878,1986,2.197,2032,2.276,2033,2.457,2041,3.972,2050,4.041,2051,2.362,2052,2.362,2053,3.26,2054,2.276,2055,2.562,2056,2.562,2057,2.562,2058,2.562,2059,2.562,2060,3.582,2061,4.471,2062,4.129,2063,3.582,2064,2.562,2065,3.582,2066,2.562,2067,2.562,2068,2.562,2069,2.562,2070,2.562,2071,2.056,2072,2.056,2073,2.056,2074,2.056,2075,4.445,2076,3.378,2077,3.668,2078,4.512,2079,4.512,2080,3.434,2081,3.434,2082,4.287,2083,3.434,2084,4.512,2085,2.276,2086,4.129,2087,2.562,2088,4.129,2089,2.562,2090,2.457,2091,2.562,2092,2.562,2093,2.562,2094,2.786,2095,2.056,2194,4.757,2195,4.757,2196,4.757,2197,4.206,2198,4.206,2199,4.206,2200,4.206,2201,4.206,2202,4.206,2203,4.206]],["title/classes/ScatterModelInterface.html",[24,0.093,2085,2.432]],["body/classes/ScatterModelInterface.html",[3,0.093,4,0.078,9,0.055,20,0.261,22,0.009,23,0.189,24,0.136,32,0.717,63,0.847,89,0.455,105,0.005,106,0.005,111,0.193,112,0.598,113,1.311,114,0.675,117,0.895,119,0.819,120,0.451,121,0.884,122,1.159,201,1.678,228,0.772,231,1.442,236,0.862,241,0.885,247,0.614,248,0.698,259,0.693,329,0.874,382,1.82,460,1.283,462,1.6,480,1.263,482,0.444,531,1.229,534,1.172,535,1.172,536,1.121,537,1.172,538,1.172,549,1.172,551,1.409,553,1.444,555,1.952,556,1.557,558,1.597,559,1.557,561,1.597,565,1.203,598,1.64,605,0.964,606,0.943,659,1.971,666,1.971,676,1.682,678,1.685,711,2.106,713,2.472,715,2.106,717,2.106,736,3.382,760,1.028,761,1.097,770,1.028,772,1.344,775,2.611,776,2.611,777,2.611,794,1.376,801,1.199,804,1.368,928,1.409,1156,2.782,1187,1.376,1206,1.685,1209,1.685,1210,1.685,1212,3.198,1556,1.783,1986,2.085,2032,2.16,2033,2.332,2041,3.881,2050,3.974,2051,2.242,2052,2.242,2053,3.416,2054,2.16,2055,2.432,2056,2.432,2057,2.432,2058,2.432,2059,2.432,2060,3.453,2061,4.369,2062,4.014,2063,3.453,2064,2.432,2065,3.453,2066,2.432,2067,2.432,2068,2.432,2069,2.432,2070,2.432,2071,1.952,2072,1.952,2073,1.952,2074,1.952,2075,4.475,2076,3.552,2077,3.565,2078,4.425,2079,4.425,2080,3.311,2081,3.311,2082,4.19,2083,3.311,2084,4.425,2085,3.067,2086,4.369,2087,2.432,2088,4.369,2089,2.432,2090,3.311,2091,2.432,2092,2.432,2093,2.432,2094,2.686,2095,1.952,2194,4.586,2195,4.586,2196,4.586,2204,5.667,2205,5.667,2206,3.992,2207,3.992,2208,3.992,2209,3.992,2210,3.992,2211,3.992,2212,3.992,2213,3.992,2214,3.992,2215,3.992,2216,3.992]],["title/modules/ScatterModule.html",[132,1.513,2217,3.01]],["body/modules/ScatterModule.html",[3,0.134,4,0.112,9,0.079,20,0.371,21,0.82,22,0.008,23,0.134,24,0.119,26,1.197,42,1.381,63,1.223,78,2.253,79,2.189,80,2.205,82,2.253,83,2.253,84,2.205,89,0.5,92,1.712,105,0.006,106,0.006,132,1.94,134,2.573,135,2.649,136,3.347,137,2.649,138,3.757,139,2.432,150,3.543,151,2.5,152,2.649,154,3.059,155,3.059,178,4.619,180,2.978,184,4.415,185,2.305,321,2.246,322,2.649,939,2.649,1020,4.915,1021,4.915,1025,5.126,1026,4.07,1027,5.126,1029,5.126,1034,5.126,1037,4.075,1038,5.126,1039,2.649,1049,5.126,1050,2.573,1268,6.413,1269,3.858,1272,4.335,1646,5.86,1908,5.098,2029,5.126,2030,4.736,2031,3.672,2127,4.662,2217,6.339,2218,5.098,2219,5.098,2220,5.098,2221,5.761,2222,5.761,2223,5.761,2224,4.335]],["title/injectables/ScatterService.html",[325,2.007,2030,2.432]],["body/injectables/ScatterService.html",[3,0.078,4,0.065,9,0.046,20,0.304,21,0.477,22,0.009,23,0.078,24,0.069,32,0.842,89,0.487,105,0.004,106,0.004,111,0.288,112,0.527,113,0.775,114,0.532,117,0.956,119,0.962,120,0.51,121,1.038,122,1.154,123,1.529,124,1.562,228,0.837,231,1.407,236,0.403,247,0.854,248,0.713,259,0.724,292,1.904,325,2.229,326,1.959,329,1.068,382,0.775,480,1.228,482,0.369,531,1.663,534,1.94,535,1.94,536,1.856,537,1.94,538,1.94,539,2.366,540,2.804,541,2.521,542,2.804,543,2.804,549,1.466,551,1.762,553,1.806,555,2.441,556,1.946,558,1.342,559,1.946,561,1.342,565,1.402,605,0.809,606,0.792,614,0.984,793,2.95,801,1.499,803,1.762,804,1.902,857,1.816,872,2.173,874,2.173,897,2.229,917,2.804,918,2.441,928,1.762,936,4.126,939,2.295,950,4.307,1274,4.488,1275,4.488,1277,4.971,1278,3.756,1297,3.756,1303,3.756,1305,5.772,1308,3.756,1340,4.039,1785,4.673,1811,2.372,1911,5.277,1953,4.418,1955,4.418,2030,2.701,2032,4.265,2041,3.575,2050,3.739,2053,1.415,2054,4.265,2075,4.007,2076,1.415,2077,3.575,2078,3.859,2079,3.859,2080,2.916,2081,2.916,2082,3.859,2083,2.916,2084,3.859,2085,3.822,2119,2.523,2194,4.039,2195,4.039,2196,4.039,2225,2.967,2226,5.277,2227,5.931,2228,4.992,2229,3.353,2230,3.353,2231,3.353,2232,3.353,2233,3.353,2234,3.353,2235,3.353,2236,3.353,2237,3.353,2238,3.353,2239,3.353,2240,3.353,2241,3.353,2242,3.353,2243,3.353,2244,3.353,2245,3.353,2246,3.353,2247,3.353,2248,3.353,2249,3.353,2250,3.353,2251,3.353,2252,3.353,2253,3.353,2254,3.353,2255,3.353,2256,3.353,2257,4.992,2258,3.353,2259,3.353,2260,4.992,2261,3.353,2262,3.353,2263,3.353,2264,3.353,2265,3.353,2266,3.353,2267,3.353,2268,2.713,2269,4.992,2270,3.353,2271,3.353,2272,3.353,2273,3.353,2274,3.353,2275,3.353,2276,3.353,2277,5.964,2278,5.964,2279,3.353,2280,3.353,2281,3.353,2282,3.353,2283,3.353,2284,3.353,2285,3.353,2286,3.353,2287,3.353,2288,3.353,2289,7.405,2290,7.405,2291,3.353,2292,3.353,2293,3.353,2294,7.064,2295,3.353,2296,3.353,2297,3.353,2298,5.964,2299,3.353,2300,3.353,2301,3.353,2302,3.353,2303,3.353]],["title/classes/ScatterStorage.html",[24,0.093,2227,3.383]],["body/classes/ScatterStorage.html",[3,0.092,4,0.077,9,0.054,20,0.26,22,0.009,23,0.188,24,0.136,32,0.655,89,0.493,105,0.005,106,0.005,111,0.191,112,0.595,113,1.303,114,0.585,117,0.894,119,0.749,120,0.449,121,0.808,122,1.173,123,1.223,124,1.25,201,1.673,228,0.771,231,1.439,236,0.859,241,1.789,247,0.611,248,0.697,259,0.705,329,0.87,382,1.815,460,1.272,462,1.732,480,1.226,482,0.442,531,1.422,534,1.162,535,1.162,536,1.112,537,1.162,538,1.162,549,1.162,551,1.398,553,1.432,556,1.544,558,1.584,559,1.544,561,1.584,565,1.196,598,1.627,605,0.956,606,0.935,659,1.803,666,1.803,676,1.642,678,1.671,711,2.098,713,2.463,715,2.098,717,2.098,736,2.516,760,1.451,761,1.088,770,1.019,772,1.333,775,2.603,776,2.603,777,2.603,794,1.365,801,1.189,804,1.36,844,2.516,845,3.164,846,2.516,854,2.847,857,1.803,860,2.847,866,1.718,869,1.718,872,2.157,874,2.157,876,2.625,928,1.398,1052,3.773,1053,3.773,1054,3.773,1071,2.651,1156,2.769,1187,1.365,1206,1.671,1209,1.671,1210,1.671,1212,3.187,1349,2.223,1556,1.768,1986,2.068,2032,3.049,2033,2.313,2041,4.369,2050,4.24,2051,2.223,2052,2.223,2053,3.016,2054,3.049,2055,2.412,2056,2.412,2057,2.412,2058,2.412,2059,2.412,2060,3.432,2061,4.353,2062,3.996,2063,3.432,2064,2.412,2065,3.432,2066,2.412,2067,2.412,2068,2.412,2069,2.412,2070,2.412,2071,1.936,2072,1.936,2073,1.936,2074,1.936,2075,4.369,2076,3.187,2077,3.049,2078,3.291,2079,3.291,2080,2.313,2081,2.313,2082,2.313,2083,2.313,2084,3.291,2085,2.142,2086,3.996,2087,2.412,2088,3.996,2089,2.412,2090,2.313,2091,2.412,2092,2.412,2093,2.412,2094,2.67,2095,1.936,2226,3.504,2227,2.979,2304,3.959,2305,3.959,2306,3.959,2307,3.959,2308,3.959,2309,3.959,2310,3.959,2311,3.959,2312,3.959,2313,3.959,2314,3.959,2315,3.959]],["title/classes/ScatterTable.html",[24,0.093,2316,3.383]],["body/classes/ScatterTable.html",[0,0.542,3,0.118,4,0.13,9,0.069,14,1.073,15,1.097,16,1.073,18,1.073,20,0.351,21,0.72,22,0.009,23,0.118,24,0.138,32,0.505,79,2.084,84,1.274,102,1.838,105,0.006,106,0.006,111,0.36,112,0.703,114,0.451,117,0.868,119,0.577,120,0.381,121,0.623,122,1.116,123,0.943,124,0.964,130,1.39,228,0.684,231,1.323,236,0.896,241,1.651,247,0.722,248,0.69,259,0.625,292,1.755,329,0.988,460,1.625,462,1.028,480,1.148,482,0.313,565,1.414,581,4.415,586,3.48,600,2.598,601,2.47,606,1.195,612,2.451,613,1.702,614,1.485,623,1.702,624,1.625,625,2.641,639,1.829,640,2.396,641,1.743,645,1.702,647,1.702,770,1.302,804,1.912,806,1.922,857,2.177,934,3.606,986,3.577,1039,2.325,1073,2.736,1074,4,1075,4.185,1076,4.286,1077,4.286,1078,5.014,1079,4.185,1080,4.092,1081,4.092,1082,4.092,1083,4,1084,3.805,1085,2.84,1086,2.84,1087,2.84,1088,2.84,1089,2.736,1094,3.742,1097,2.84,1100,2.641,1102,2.84,1104,2.84,1106,2.84,1107,2.84,1108,2.84,1359,3.386,1360,3.081,1361,2.554,1362,3.081,1363,3.081,1364,3.081,1365,3.081,1366,2.554,1367,3.081,1755,2.325,1986,2.641,2028,5.494,2030,3.606,2031,3.223,2050,4.157,2051,3.742,2052,3.742,2053,2.813,2119,3.805,2224,6.486,2268,4.092,2316,5.014,2317,4.475,2318,4.475,2319,5.896,2320,4.475,2321,5.896,2322,4.475,2323,5.896,2324,4.475]],["title/components/ScatterTableComponent.html",[0,0.366,84,1.133]],["body/components/ScatterTableComponent.html",[0,0.515,1,0.937,2,1.48,3,0.087,4,0.105,5,1.044,6,1.044,7,1.044,8,1.044,9,0.051,12,1.021,13,1.044,14,1.988,15,2.029,16,1.143,18,1.143,20,0.328,21,0.529,22,0.009,23,0.087,24,0.111,26,0.772,27,1.512,28,1.512,29,1.044,30,1.95,31,1.044,32,0.694,33,1.044,34,0.957,35,1.044,36,0.937,37,1.044,38,0.937,39,1.505,40,1.044,41,0.957,42,1.404,43,2.279,44,0.937,45,1.044,46,0.957,47,2.07,48,0.937,49,1.95,50,0.957,51,1.666,52,0.937,53,1.044,54,0.957,55,0.937,56,0.937,57,1.044,58,0.937,59,0.978,60,0.86,61,1.044,62,0.917,63,0.789,64,1.044,65,0.957,66,0.999,67,0.957,68,1.044,69,0.957,70,1.749,71,0.937,72,1.044,73,0.957,74,0.957,75,0.937,76,0.937,77,1.044,78,0.957,79,2.284,80,0.937,81,1.044,82,0.957,83,0.957,84,1.749,85,0.937,86,1.044,87,0.957,88,1.448,89,0.371,90,1.512,91,0.957,92,0.878,93,0.937,94,0.937,95,1.044,96,0.957,97,1.433,98,0.937,99,1.044,100,0.957,101,0.937,102,2.001,103,1.044,104,1.044,105,0.005,106,0.005,111,0.306,112,0.568,114,0.331,117,0.891,119,0.615,120,0.465,121,0.663,122,0.994,123,1.513,124,1.547,130,1.021,228,0.581,231,1.16,236,0.761,241,0.824,247,0.584,248,0.64,259,0.581,292,1.632,317,1.613,323,1.251,329,1.097,462,1.287,480,1.123,482,0.23,565,1.143,581,3.848,586,1.941,600,2.468,601,2.347,606,0.878,612,2.423,613,1.251,614,1.091,623,2.131,624,1.73,625,1.941,639,2.511,640,1.761,641,1.281,645,2.337,647,1.251,694,1.413,732,1.813,770,1.386,804,1.676,806,1.413,857,1.021,904,1.66,934,2.913,986,2.629,1039,1.709,1073,2.011,1074,3.505,1075,2.087,1076,2.011,1077,2.011,1079,3.024,1083,3.197,1085,2.087,1086,3.024,1087,3.556,1088,3.556,1089,3.426,1094,3.024,1097,2.087,1100,3.307,1102,3.556,1104,3.556,1106,2.087,1107,2.087,1108,2.087,1110,3.007,1111,3.007,1114,2.629,1115,2.629,1119,2.629,1120,2.629,1121,2.629,1359,2.489,1360,2.264,1361,1.877,1362,2.264,1363,2.264,1364,2.264,1365,3.28,1366,3.197,1367,2.264,1375,3.606,1382,3.007,1755,1.709,1986,3.307,1996,3.289,1997,3.289,1998,3.289,1999,3.289,2028,5.576,2030,3.756,2031,2.369,2050,4.176,2051,3.556,2052,3.556,2053,2.673,2119,2.797,2224,6.583,2268,3.007,2316,2.797,2317,4.765,2318,3.289,2319,4.765,2320,3.289,2321,4.765,2322,3.289,2323,4.765,2324,3.289,2325,5.384,2326,3.717]],["title/components/SettingsComponent.html",[0,0.366,85,1.133]],["body/components/SettingsComponent.html",[0,0.601,1,1.251,2,1.809,3,0.116,4,0.096,5,1.394,6,1.394,7,1.394,8,1.394,9,0.068,12,1.364,13,1.394,14,2.021,15,2.064,16,1.397,18,1.397,20,0.334,21,0.707,22,0.008,23,0.154,24,0.136,26,1.031,27,1.849,28,1.849,29,1.394,30,2.209,31,1.394,32,0.658,33,1.394,34,1.278,35,1.394,36,1.251,37,1.394,38,1.251,39,1.705,40,1.394,41,1.278,42,1.559,43,2.447,44,1.251,45,1.394,46,1.278,47,2.298,48,1.251,49,2.209,50,1.278,51,1.943,52,1.251,53,1.394,54,1.278,55,1.251,56,1.251,57,1.394,58,1.251,59,1.306,60,1.148,61,1.394,62,1.224,63,1.053,64,1.394,65,1.278,66,1.334,67,1.278,68,1.394,69,1.278,70,1.981,71,1.251,72,1.394,73,1.278,74,1.278,75,1.251,76,1.251,77,1.394,78,1.278,79,2.069,80,1.251,81,1.394,82,1.278,83,1.278,84,1.251,85,2.062,86,1.394,87,1.278,88,1.77,89,0.342,90,1.849,91,1.278,92,1.172,93,1.251,94,1.251,95,1.394,96,1.278,97,1.671,98,1.251,99,1.394,100,1.278,101,1.251,102,1.224,103,1.394,104,1.394,105,0.006,106,0.006,111,0.24,114,0.658,117,0.676,136,2.095,147,3.323,154,2.095,155,2.778,180,2.704,188,2.506,189,3.323,190,1.986,195,3.734,212,4.952,218,4.952,228,0.456,236,0.791,237,4.944,247,0.713,250,5.265,259,0.519,316,4.392,317,2.856,318,2.506,319,3.023,320,2.352,732,1.671,904,2.216,1044,4.009,1045,3.023,2327,4.015,2328,6.534,2329,5.824,2330,4.963,2331,4.963,2332,4.952,2333,3.734,2334,3.734,2335,4.952,2336,3.51,2337,5.325,2338,5.325,2339,5.325,2340,4.963]],["title/modules/SettingsModule.html",[132,1.513,147,3.01]],["body/modules/SettingsModule.html",[0,0.621,3,0.146,4,0.122,9,0.086,14,1.328,15,1.357,16,1.328,18,1.328,20,0.354,21,0.891,22,0.008,23,0.178,24,0.158,26,1.3,85,2.25,105,0.007,106,0.007,114,0.558,132,2.107,134,2.794,135,2.877,136,3.473,137,2.877,138,2.965,139,2.642,147,6.247,150,3.729,151,2.716,152,2.877,154,3.22,155,3.22,180,3.134,188,3.16,189,3.852,190,2.504,195,4.709,212,4.709,236,0.752,237,5.108,250,4.19,259,0.493,1044,4.647,1045,3.812,2327,5.063,2328,5.537,2329,5.537,2332,5.74,2333,4.709,2334,4.709,2335,5.74,2336,4.426,2337,7.226,2338,7.226,2339,7.226,2341,5.537,2342,5.537,2343,5.537]],["title/components/SimpleDataButtonComponent.html",[0,0.366,87,1.157]],["body/components/SimpleDataButtonComponent.html",[0,0.562,1,1.099,2,1.657,3,0.102,4,0.085,5,1.225,6,1.225,7,1.225,8,1.225,9,0.06,12,1.199,13,1.225,14,2.007,15,2.049,16,1.28,18,1.28,20,0.296,21,0.621,22,0.008,23,0.141,24,0.125,26,0.906,27,1.694,28,1.694,29,1.225,30,2.095,31,1.225,32,0.603,33,1.225,34,1.123,35,1.225,36,1.099,37,1.225,38,1.099,39,1.617,40,1.225,41,1.123,42,1.492,43,2.375,44,1.099,45,1.225,46,1.123,47,2.199,48,1.099,49,2.095,50,1.123,51,1.819,52,1.099,53,1.225,54,1.123,55,1.099,56,1.099,57,1.225,58,1.099,59,1.148,60,1.009,61,1.225,62,1.076,63,1.583,64,1.225,65,1.123,66,1.173,67,1.123,68,1.225,69,1.123,70,1.879,71,1.099,72,1.225,73,1.123,74,1.123,75,1.099,76,1.099,77,1.225,78,1.123,79,1.962,80,1.099,81,1.225,82,1.123,83,1.123,84,1.099,85,1.099,86,1.225,87,2.084,88,2.308,89,0.647,90,1.694,91,1.123,92,1.031,93,1.099,94,1.099,95,1.225,96,1.123,97,1.565,98,1.099,99,1.225,100,1.123,101,1.099,102,1.076,103,1.225,104,1.225,105,0.005,106,0.005,111,0.211,114,0.616,117,0.869,120,0.396,123,1.125,124,1.149,136,1.842,139,1.842,151,3.236,154,1.842,155,2.546,180,1.792,188,2.203,189,3.045,190,2.984,228,0.684,236,0.725,237,4.628,247,0.654,250,4.993,259,0.617,292,0.967,655,2.907,806,2.292,830,3.148,874,1.435,897,1.948,998,2.658,1020,2.45,1026,4.821,1269,2.921,1498,3.085,1549,4.88,1558,4.88,1571,4.753,1586,3.523,1785,3.085,1847,3.387,1904,4.538,2344,6.071,2345,3.085,2346,5.201,2347,4.538,2348,6.598,2349,6.598,2350,6.598,2351,6.116,2352,6.116,2353,6.116,2354,5.337,2355,4.362,2356,4.362,2357,4.362,2358,4.362,2359,4.362,2360,4.362,2361,3.53,2362,3.283,2363,3.86,2364,6.116,2365,4.88,2366,6.031,2367,3.283]],["title/modules/SimpleDataButtonModule.html",[132,1.513,1020,2.525]],["body/modules/SimpleDataButtonModule.html",[0,0.609,3,0.141,4,0.118,9,0.083,14,1.286,15,1.314,16,1.286,18,1.286,20,0.336,21,0.863,22,0.008,23,0.175,24,0.155,26,1.259,63,1.722,87,2.392,88,2.181,89,0.6,105,0.007,106,0.007,114,0.54,132,2.04,134,2.706,135,2.786,136,3.424,137,2.786,138,2.872,139,3.424,150,3.656,151,2.63,152,2.786,154,3.157,155,3.157,180,2.49,188,3.06,189,3.777,190,2.993,236,0.728,237,5.008,250,4.058,259,0.478,292,1.343,655,2.916,830,3.157,874,1.993,897,2.706,1020,5.135,1026,3.403,1269,4.058,1571,5.171,1586,4.369,1785,4.286,1904,6.669,2344,4.286,2345,4.286,2346,4.56,2347,4.56,2348,5.362,2349,5.362,2350,5.362,2351,5.362,2352,5.362,2353,5.362,2361,4.903,2362,4.56,2363,5.362,2364,7.178,2368,5.362,2369,5.362,2370,5.362,2371,6.06]],["title/components/SimpleGraphButtonComponent.html",[0,0.366,91,1.157]],["body/components/SimpleGraphButtonComponent.html",[0,0.559,1,1.088,2,1.646,3,0.101,4,0.084,5,1.213,6,1.213,7,1.213,8,1.213,9,0.059,12,1.187,13,1.213,14,2.006,15,2.048,16,1.271,18,1.271,20,0.32,21,0.615,22,0.008,23,0.14,24,0.124,26,0.897,27,1.682,28,1.682,29,1.213,30,2.086,31,1.213,32,0.687,33,1.213,34,1.112,35,1.213,36,1.088,37,1.213,38,1.088,39,1.61,40,1.213,41,1.112,42,1.486,43,2.37,44,1.088,45,1.213,46,1.112,47,2.191,48,1.088,49,2.086,50,1.112,51,1.809,52,1.088,53,1.213,54,1.112,55,1.088,56,1.088,57,1.213,58,1.088,59,1.576,60,1.59,61,1.213,62,1.065,63,0.917,64,1.213,65,1.112,66,1.161,67,1.112,68,1.213,69,1.112,70,1.871,71,1.088,72,1.213,73,1.112,74,1.112,75,1.088,76,1.088,77,1.213,78,1.112,79,1.954,80,1.088,81,1.213,82,1.112,83,1.112,84,1.088,85,1.088,86,1.213,87,1.112,88,2.303,89,0.298,90,1.682,91,2.078,92,2.208,93,1.088,94,1.088,95,1.213,96,1.112,97,1.556,98,1.088,99,1.213,100,1.112,101,1.088,102,1.065,103,1.213,104,1.213,105,0.005,106,0.005,111,0.289,112,0.632,114,0.385,117,0.85,119,0.493,120,0.425,121,0.532,130,1.187,136,1.823,139,1.823,151,2.599,154,1.823,155,2.528,174,2.047,180,1.775,188,2.181,189,3.025,190,2.971,228,0.631,236,0.72,247,0.649,248,0.341,259,0.585,292,0.957,320,2.047,593,4.507,600,2.681,639,2.686,662,2.523,664,3.25,872,1.42,883,3.749,893,2.523,899,4.971,998,3.649,1021,2.426,1026,4.738,1031,3.25,1187,1.489,1226,2.753,1404,5.3,1498,3.055,1509,5.563,1510,5.563,1523,5.563,1526,5.563,1528,4.846,1531,3.495,1558,4.846,1571,4.733,1579,4.507,1586,3.499,1587,2.631,1694,3.495,1695,3.495,2344,5.966,2345,3.055,2346,5.174,2347,4.507,2354,3.822,2362,3.25,2367,3.25,2372,6.57,2373,6.084,2374,4.319,2375,5.989,2376,5.3,2377,4.319,2378,4.319,2379,4.319,2380,4.319,2381,4.319,2382,4.319,2383,5.3,2384,3.822,2385,3.822,2386,3.822,2387,3.822,2388,3.822,2389,5.3,2390,4.319,2391,4.319,2392,3.495,2393,4.319]],["title/modules/SimpleGraphButtonModule.html",[132,1.513,1021,2.525]],["body/modules/SimpleGraphButtonModule.html",[0,0.609,3,0.142,4,0.118,9,0.083,14,1.288,15,1.316,16,1.288,18,1.288,20,0.352,21,0.864,22,0.008,23,0.175,24,0.155,26,1.261,59,1.596,60,1.731,88,2.182,91,2.393,92,2.056,105,0.007,106,0.007,130,1.667,132,2.043,134,2.709,135,2.79,136,3.426,137,2.79,138,2.875,139,3.426,150,3.659,151,2.633,152,2.79,154,2.561,155,3.16,174,2.875,180,2.493,188,3.064,189,3.78,190,2.995,236,0.729,248,0.478,259,0.478,292,1.344,600,2.918,639,2.195,872,1.995,883,3.78,893,3.544,899,4.771,1021,5.045,1026,3.408,1031,4.566,1226,3.867,1509,4.909,1510,4.909,1523,6.056,1526,6.056,1528,4.909,1531,4.909,1571,5.173,1586,4.372,1587,3.696,2344,4.291,2345,4.291,2346,4.566,2347,4.566,2362,4.566,2372,5.369,2373,5.369,2376,5.369,2383,6.623,2384,5.369,2385,5.369,2386,5.369,2387,5.369,2388,5.369,2389,6.623,2394,5.369,2395,5.369,2396,5.369]],["title/classes/SliderUtil.html",[24,0.093,1547,3.179]],["body/classes/SliderUtil.html",[0,0.451,3,0.09,4,0.075,9,0.053,14,0.822,16,0.822,18,0.822,20,0.281,21,0.551,22,0.009,23,0.129,24,0.115,32,0.802,62,0.955,63,1.903,105,0.005,106,0.005,111,0.187,114,0.345,117,0.8,119,0.89,120,0.446,121,0.96,122,1.178,124,1.635,185,1.55,201,1.818,228,0.715,231,1.395,236,0.465,240,4.339,241,0.858,247,0.601,248,0.59,259,0.437,277,4.051,278,2.593,292,1.659,294,2.593,329,0.993,460,1.245,462,1.831,480,1.275,482,0.24,483,1.956,600,2.162,601,2.056,612,2.462,613,1.304,614,1.137,623,1.304,639,1.401,641,2.438,642,3.07,645,1.304,647,1.304,653,2.897,655,2.758,709,2.359,770,1.428,830,3.784,952,3.828,977,4.746,1361,1.956,1366,3.572,1539,6.036,1540,5.113,1541,2.914,1542,4.583,1543,3.134,1544,3.134,1545,3.134,1546,3.134,1547,5.004,1550,3.134,1551,7.367,1552,3.134,1553,3.134,1554,3.134,1555,3.134,1556,3.478,1557,3.134,1568,3.134,1571,4.13,1575,3.134,1578,4.487,1582,3.134,1586,3.24,1587,2.359,1588,3.134,1589,2.914,1590,3.134,1591,4.487,1592,4.487,1593,4.487,1594,4.487,1595,3.134,1596,3.134,1597,4.173,1598,3.134,1599,3.134,1600,4.487,1601,3.134,1602,3.134,1603,3.134,1604,3.134,1605,4.487,1606,4.487,1607,4.173,1608,4.487,1609,3.134,1610,3.134,1611,4.487,1612,3.134,1613,3.134,1614,3.134,1615,3.134,1616,2.469,1617,4.487,1618,3.134,1619,3.134,1620,4.487,1621,3.134,1622,3.134,1623,3.134,1624,3.134,1625,4.487,1626,5.242,1627,6.303,1628,4.487,1629,3.134,1630,4.487,1631,5.242,1632,4.793,1633,4.487,1634,3.134,1635,4.487,1636,5.242,1637,3.134,1638,3.134,1639,3.134,1640,4.487,1641,5.242,1642,3.134,1643,3.134,2397,5.546,2398,5.546,2399,5.546,2400,5.546,2401,5.546,2402,5.546,2403,3.873,2404,3.873,2405,3.873,2406,3.873,2407,3.873,2408,3.873]],["title/components/ToolsNavbarComponent.html",[0,0.366,93,1.133]],["body/components/ToolsNavbarComponent.html",[0,0.544,1,1.033,2,1.587,3,0.096,4,0.08,5,1.151,6,1.151,7,1.151,8,1.151,9,0.056,11,1.83,12,1.126,13,1.151,14,2,15,2.043,16,1.225,18,1.225,20,0.347,21,0.584,22,0.008,23,0.135,24,0.119,26,0.851,27,1.622,28,1.622,29,1.151,30,2.038,31,1.151,32,0.577,33,1.151,34,1.055,35,1.151,36,1.033,37,1.151,38,1.033,39,1.721,40,1.151,41,1.055,42,1.458,43,2.339,44,1.033,45,1.151,46,1.055,47,2.149,48,1.033,49,2.038,50,1.055,51,2.013,52,1.033,53,1.151,54,1.055,55,1.033,56,1.033,57,1.151,58,1.033,59,1.078,60,0.948,61,1.151,62,1.011,63,0.87,64,1.151,65,1.055,66,1.102,67,1.055,68,1.151,69,1.055,70,2,71,1.033,72,1.151,73,1.055,74,1.055,75,1.033,76,1.033,77,1.151,78,1.055,79,2.088,80,1.033,81,1.151,82,1.055,83,1.055,84,1.033,85,1.033,86,1.151,87,1.055,88,1.552,89,0.283,90,1.622,91,1.055,92,0.968,93,2.055,94,2.206,95,1.151,96,1.055,97,1.731,98,1.033,99,1.151,100,1.055,101,1.033,102,1.011,103,1.151,104,1.151,105,0.005,106,0.005,111,0.198,112,0.609,117,0.687,120,0.235,126,4.083,136,1.73,139,1.73,145,3.372,148,2.744,154,1.73,155,2.437,159,2.898,164,4.859,180,2.372,183,4.083,188,2.069,189,2.915,190,1.64,225,5.132,228,0.53,247,0.626,259,0.455,309,3.866,312,3.626,314,3.084,317,2.506,318,2.069,319,4.072,320,2.736,323,1.943,499,2.217,618,4.344,660,3.517,664,3.084,665,3.084,676,1.476,732,1.943,904,1.83,906,3.866,912,2.612,966,3.866,967,3.866,1014,3.866,1044,3.517,1045,2.496,1051,3.904,1262,3.866,1485,5.871,1494,4.671,1498,2.898,1579,3.084,1587,2.496,1655,4.344,1694,3.316,1695,4.671,1701,5.972,1703,4.344,1707,4.344,1713,5.972,1718,3.68,1899,3.866,2217,3.866,2332,4.344,2333,3.084,2334,3.084,2335,4.344,2336,4.727,2367,3.084,2392,3.316,2409,5.871,2410,3.316,2411,5.915,2412,5.109,2413,5.109,2414,5.109,2415,5.109,2416,5.109,2417,5.915,2418,5.109,2419,7.216,2420,7.368,2421,4.098,2422,4.098,2423,5.915,2424,5.109,2425,4.098,2426,5.109,2427,3.626,2428,3.626,2429,3.626,2430,3.866,2431,3.626,2432,3.626,2433,3.626,2434,3.626,2435,3.626,2436,3.626,2437,5.109,2438,5.773,2439,5.773,2440,5.773,2441,5.773,2442,5.773,2443,5.109,2444,5.773,2445,5.773,2446,4.098,2447,4.098,2448,3.626,2449,4.098,2450,4.098]],["title/modules/ToolsNavbarModule.html",[132,1.513,148,3.01]],["body/modules/ToolsNavbarModule.html",[0,0.567,3,0.126,4,0.105,9,0.074,11,2.419,14,1.15,15,1.511,16,1.15,18,1.15,20,0.363,21,0.771,22,0.009,23,0.163,24,0.144,26,1.125,93,2.327,94,2.12,105,0.006,106,0.006,126,3.831,132,1.823,134,2.419,135,2.49,136,3.252,137,2.49,138,2.567,139,3.252,145,5.031,148,6.298,150,3.407,151,2.351,152,2.49,154,2.942,155,2.942,159,3.831,164,3.627,180,2.863,188,2.735,189,3.519,190,2.167,618,4.076,1014,5.768,1044,4.245,1045,3.3,1051,4.5,1262,5.768,1485,4.383,1494,4.383,1587,3.3,1655,4.076,1701,5.797,1703,4.076,1707,4.076,1713,5.797,1718,5.49,1899,5.768,2217,5.768,2332,5.243,2333,4.076,2334,4.076,2335,5.243,2336,3.831,2409,4.383,2410,4.383,2411,4.793,2412,4.793,2413,4.793,2414,4.793,2415,4.793,2416,4.793,2417,4.793,2418,4.793,2419,6.817,2420,6.817,2423,6.166,2424,4.793,2426,4.793,2427,4.793,2428,4.793,2429,4.793,2430,5.768,2431,4.793,2432,4.793,2433,4.793,2434,4.793,2435,4.793,2436,6.166,2451,4.793,2452,4.793,2453,4.793,2454,4.793]],["title/components/VenusChartFormComponent.html",[0,0.366,96,1.157]],["body/components/VenusChartFormComponent.html",[0,0.571,1,1.132,2,1.691,3,0.105,4,0.087,5,1.262,6,1.262,7,1.262,8,1.262,9,0.062,12,1.235,13,1.262,14,2.011,15,2.053,16,1.306,18,1.306,20,0.299,21,0.64,22,0.008,23,0.105,24,0.093,26,0.934,27,1.729,28,1.729,29,1.262,30,2.121,31,1.262,32,0.702,33,1.262,34,1.157,35,1.262,36,1.132,37,1.262,38,1.132,39,1.637,40,1.262,41,1.157,42,1.767,43,2.392,44,1.132,45,1.262,46,1.157,47,2.222,48,1.132,49,2.121,50,1.157,51,1.847,52,1.132,53,1.262,54,1.157,55,1.132,56,1.132,57,1.262,58,1.132,59,1.182,60,1.039,61,1.262,62,1.108,63,0.954,64,1.262,65,1.157,66,1.208,67,1.157,68,1.262,69,1.157,70,1.903,71,1.132,72,1.262,73,1.157,74,1.157,75,1.132,76,1.132,77,1.262,78,1.157,79,1.987,80,1.132,81,1.262,82,1.157,83,1.157,84,1.132,85,1.132,86,1.262,87,1.157,88,1.655,89,0.484,90,1.729,91,1.157,92,1.062,93,1.132,94,1.132,95,1.262,96,1.944,97,1.978,98,1.132,99,1.262,100,1.157,101,1.132,102,1.108,103,1.262,104,1.262,105,0.005,106,0.005,111,0.217,112,0.65,113,1.423,114,0.401,117,0.776,119,0.513,120,0.402,121,0.554,123,0.838,124,0.856,130,1.235,185,1.798,228,0.412,236,0.74,246,5.095,247,0.667,248,0.553,259,0.485,277,2.431,291,3.009,292,1.853,320,2.129,321,2.737,322,2.066,323,1.513,601,2.602,612,2.601,613,1.513,614,1.319,623,2.363,624,1.978,641,1.549,644,2.197,645,2.542,646,2.129,647,1.513,659,1.691,666,1.691,694,1.708,703,2.523,704,4.276,705,3.749,706,4.121,707,3.178,708,3.178,709,2.737,710,3.178,711,1.319,712,3.178,713,1.549,714,3.178,715,1.319,716,3.178,717,1.319,718,3.178,719,3.178,720,5.34,721,3.178,722,3.178,723,3.178,724,3.178,725,3.178,726,3.178,727,4.353,728,3.178,729,3.178,730,3.178,731,4.813,732,1.513,2455,5.594,2456,6.399,2457,4.24,2458,4.493]],["title/classes/VenusChartInfo.html",[24,0.093,2459,2.626]],["body/classes/VenusChartInfo.html",[3,0.077,4,0.064,9,0.045,20,0.26,22,0.009,23,0.172,24,0.136,32,0.702,89,0.596,97,1.59,105,0.004,106,0.004,111,0.239,112,0.522,113,1.369,114,0.585,117,0.894,119,0.802,120,0.46,121,0.866,122,1.205,123,0.922,201,1.455,227,4.653,228,0.779,229,2.032,231,1.432,236,0.789,241,1.096,247,0.536,248,0.702,259,0.698,329,0.871,382,2.013,460,1.064,462,1.687,480,1.203,482,0.306,531,1.284,534,1.928,535,1.928,536,1.844,537,1.928,538,1.928,539,2.344,540,2.778,541,2.498,542,2.778,543,2.778,549,1.452,551,1.746,553,1.789,555,1.619,556,1.928,558,1.979,559,1.928,561,1.979,565,1.05,598,1.361,605,0.799,606,0.782,659,1.804,666,1.359,676,1.597,711,2.243,713,2.633,715,2.243,717,2.243,760,1.273,761,0.91,768,1.089,770,1.273,775,2.422,776,2.422,777,2.422,794,1.141,801,0.994,803,1.169,804,1.429,844,1.479,846,1.479,854,1.437,855,1.619,856,1.619,857,0.91,858,1.619,859,1.619,860,1.437,864,1.619,866,1.437,867,1.619,868,1.619,869,1.437,872,1.089,874,1.089,876,1.325,916,1.325,928,1.169,1050,2.208,1134,3.43,1156,2.499,1199,1.672,1206,1.398,1209,1.398,1210,1.398,1212,2.966,1349,1.86,1495,4.784,1556,2.643,1632,1.934,1710,1.934,1753,1.437,1754,1.523,1760,2.344,1761,3.61,1766,2.344,1775,3.408,1778,1.569,1847,2.778,1990,2.017,2053,2.772,2071,1.619,2072,1.619,2073,1.619,2074,1.619,2076,3.585,2094,3.493,2095,3.21,2150,4.479,2155,2.111,2179,2.111,2459,3.458,2460,2.111,2461,4.946,2462,3.311,2463,3.311,2464,3.311,2465,3.311,2466,3.311,2467,3.311,2468,3.311,2469,4.587,2470,3.311,2471,3.311,2472,3.311,2473,3.311,2474,3.311,2475,3.311,2476,3.311,2477,4.133,2478,2.889,2479,3.312,2480,3.312,2481,3.312,2482,2.111,2483,2.217,2484,2.217,2485,3.013,2486,2.217,2487,2.217,2488,2.217,2489,2.217,2490,1.934,2491,3.312,2492,2.217,2493,3.312,2494,2.217,2495,1.934,2496,2.217,2497,2.217,2498,2.217,2499,2.217,2500,2.017,2501,2.111,2502,2.217,2503,2.217,2504,3.964,2505,3.312,2506,2.217,2507,3.312,2508,2.217,2509,2.217,2510,2.217,2511,3.312,2512,2.111,2513,4.397,2514,5.005,2515,2.217,2516,2.217,2517,2.217,2518,2.217,2519,3.312,2520,2.111,2521,2.111,2522,2.217,2523,2.217,2524,2.111,2525,2.217,2526,2.217,2527,2.111,2528,2.217]],["title/interfaces/VenusChartInfoStorageObject.html",[482,0.278,2469,2.626]],["body/interfaces/VenusChartInfoStorageObject.html",[3,0.087,4,0.072,9,0.051,20,0.275,22,0.009,23,0.179,24,0.143,89,0.603,97,1.666,105,0.005,106,0.005,111,0.26,112,0.567,113,1.243,114,0.479,120,0.397,122,1.194,123,1.002,201,1.536,227,4.824,228,0.493,229,2.209,231,1.461,236,0.76,241,1.191,248,0.678,259,0.689,329,0.919,382,2.049,462,1.681,480,1.221,482,0.333,531,1.166,532,1.22,534,1.089,535,1.089,536,1.042,537,1.089,538,1.089,549,1.089,551,1.309,553,1.341,556,1.446,558,1.484,559,1.446,561,1.484,565,1.141,598,1.524,605,0.895,606,0.876,659,1.906,666,1.477,676,1.649,711,2.325,713,2.729,715,2.325,717,2.325,760,1.384,761,1.019,768,1.22,770,1.384,775,2.537,776,2.537,777,2.537,794,1.278,801,1.113,803,1.309,804,1.526,844,1.656,846,1.656,854,1.609,855,1.813,856,1.813,857,1.019,858,1.813,859,1.813,860,1.609,864,1.813,866,1.609,867,1.813,868,1.813,869,1.609,872,1.22,874,1.22,876,1.484,916,1.484,928,1.309,1050,2.4,1134,1.937,1156,2.669,1199,1.873,1206,1.565,1209,1.565,1210,1.565,1212,3.107,1349,2.083,1495,4.94,1556,2.823,1632,2.166,1710,2.166,1753,1.609,1754,1.705,1760,2.547,1761,3.729,1766,2.547,1775,3.494,1778,1.757,1847,3.019,1990,2.259,2053,2.927,2071,1.813,2072,1.813,2073,1.813,2074,1.813,2076,3.662,2094,3.637,2095,3.39,2150,4.692,2155,2.364,2179,2.364,2459,3.14,2460,2.364,2469,4.484,2477,4.284,2478,3.14,2479,3.6,2480,3.6,2481,3.6,2482,2.364,2483,2.483,2484,2.483,2485,3.275,2486,2.483,2487,2.483,2488,2.483,2489,2.483,2490,2.166,2491,3.6,2492,2.483,2493,3.6,2494,2.483,2495,2.166,2496,2.483,2497,2.483,2498,2.483,2499,2.483,2500,2.259,2501,2.364,2502,2.483,2503,2.483,2504,4.234,2505,3.6,2506,2.483,2507,3.6,2508,2.483,2509,2.483,2510,2.483,2511,3.6,2512,2.364,2513,4.643,2514,5.169,2515,2.483,2516,2.483,2517,2.483,2518,2.483,2519,3.6,2520,2.364,2521,2.364,2522,2.483,2523,2.483,2524,2.364,2525,2.483,2526,2.483,2527,2.364,2528,2.483]],["title/components/VenusComponent.html",[0,0.366,98,1.133]],["body/components/VenusComponent.html",[0,0.577,1,1.153,2,1.712,3,0.107,4,0.089,5,1.285,6,1.285,7,1.285,8,1.285,9,0.063,12,1.257,13,1.285,14,2.013,15,2.055,16,1.323,18,1.323,20,0.316,21,0.651,22,0.008,23,0.107,24,0.095,26,0.95,27,1.75,28,1.75,29,1.285,30,2.137,31,1.285,32,0.795,33,1.285,34,1.178,35,1.285,36,1.153,37,1.285,38,1.153,39,1.65,40,1.285,41,1.178,42,1.63,43,2.402,44,1.153,45,1.285,46,1.178,47,2.236,48,1.153,49,2.137,50,1.178,51,1.864,52,1.153,53,1.285,54,1.178,55,1.153,56,1.153,57,1.285,58,1.153,59,1.204,60,1.841,61,1.285,62,1.128,63,0.971,64,1.285,65,1.178,66,1.23,67,1.178,68,1.285,69,1.178,70,1.917,71,1.153,72,1.285,73,1.178,74,1.178,75,1.153,76,1.153,77,1.285,78,1.178,79,2.002,80,1.153,81,1.285,82,1.178,83,1.178,84,1.153,85,1.153,86,1.285,87,1.178,88,1.675,89,0.525,90,1.75,91,1.178,92,1.081,93,1.153,94,1.153,95,1.285,96,1.178,97,1.859,98,1.917,99,1.285,100,1.178,101,1.153,102,1.537,103,1.285,104,1.285,105,0.006,106,0.006,111,0.221,114,0.408,117,0.64,119,0.712,120,0.357,121,0.768,122,0.592,130,1.257,174,2.952,190,2.493,228,0.42,247,0.675,248,0.491,259,0.361,317,1.985,318,2.31,319,3.796,321,2.429,323,1.54,624,2.002,662,2.672,676,0.93,694,1.739,732,1.54,768,2.618,774,1.504,806,3.194,807,3.146,872,1.504,874,1.504,881,4.407,882,5.011,883,3.842,884,5.011,885,4.634,887,4.407,890,2.916,891,3.236,892,3.971,893,2.672,894,3.236,895,3.236,896,5.381,897,2.043,898,3.236,899,2.916,900,3.236,901,3.236,902,3.236,903,3.236,904,2.782,905,3.236,906,4.172,907,2.475,908,5.094,909,3.063,910,3.236,911,3.236,912,2.916,913,4.172,1226,4.849,2457,4.272,2529,4.048,2530,7.085,2531,6.23,2532,4.575,2533,4.575,2534,3.236]],["title/classes/VenusData.html",[24,0.093,2478,2.626]],["body/classes/VenusData.html",[3,0.082,4,0.068,9,0.048,20,0.268,22,0.009,23,0.176,24,0.14,32,0.613,89,0.602,97,1.631,105,0.005,106,0.005,111,0.326,112,0.546,113,1.195,114,0.603,117,0.821,119,0.7,120,0.387,121,0.755,122,1.161,123,0.964,201,1.498,227,4.744,228,0.733,229,2.124,231,1.448,236,0.812,241,1.145,247,0.56,248,0.683,259,0.697,329,0.896,382,2.032,460,1.13,462,1.709,480,1.244,482,0.32,531,1.121,534,1.032,535,1.032,536,0.987,537,1.032,538,1.032,549,1.032,551,1.241,553,1.271,556,1.371,558,1.407,559,1.371,561,1.407,565,1.302,598,2.519,605,0.849,606,0.831,659,1.858,666,1.421,676,1.625,711,1.985,713,2.33,715,1.985,717,1.985,760,1.331,761,0.966,768,1.156,770,1.331,775,2.483,776,2.483,777,2.483,793,2.738,794,1.212,801,1.552,803,1.825,804,1.88,844,1.57,846,1.57,854,1.526,855,1.719,856,1.719,857,1.858,858,1.719,859,1.719,860,1.526,864,1.719,866,1.526,867,1.719,868,1.719,869,1.526,872,1.156,874,1.156,876,1.407,897,2.308,916,2.705,917,2.903,918,2.527,928,1.825,1050,2.308,1134,1.836,1156,2.588,1199,1.775,1206,1.484,1209,1.484,1210,1.484,1212,3.041,1349,1.974,1495,4.867,1556,2.738,1632,2.053,1710,2.053,1753,1.526,1754,1.616,1760,2.45,1761,3.673,1766,2.45,1775,3.454,1778,1.666,1847,2.903,1990,2.142,2053,2.854,2071,1.719,2072,1.719,2073,1.719,2074,1.719,2076,3.626,2094,3.57,2095,3.305,2150,4.592,2155,2.241,2179,2.241,2459,3.02,2460,2.241,2469,4.208,2477,4.602,2478,3.582,2479,3.462,2480,3.462,2481,3.462,2482,2.241,2483,2.354,2484,2.354,2485,3.149,2486,2.354,2487,2.354,2488,2.354,2489,2.354,2490,2.053,2491,3.462,2492,2.354,2493,3.462,2494,2.354,2495,2.053,2496,2.354,2497,2.354,2498,2.354,2499,2.354,2500,2.142,2501,2.241,2502,2.354,2503,2.354,2504,4.106,2505,3.462,2506,2.354,2507,3.462,2508,2.354,2509,2.354,2510,2.354,2511,3.462,2512,2.241,2513,4.527,2514,5.093,2515,2.354,2516,2.354,2517,2.354,2518,2.354,2519,3.462,2520,2.241,2521,2.241,2522,2.354,2523,2.354,2524,2.241,2525,2.354,2526,2.354,2527,2.241,2528,2.354,2535,5.17,2536,3.515,2537,3.515,2538,3.515,2539,3.515,2540,3.515,2541,3.515]],["title/interfaces/VenusDataDict.html",[482,0.278,2477,2.432]],["body/interfaces/VenusDataDict.html",[3,0.087,4,0.072,9,0.051,20,0.276,22,0.009,23,0.179,24,0.144,89,0.604,97,1.669,105,0.005,106,0.005,111,0.26,112,0.569,113,1.247,114,0.481,120,0.309,122,1.169,123,1.006,201,1.54,227,4.83,228,0.495,229,2.216,231,1.462,236,0.762,241,1.195,248,0.678,259,0.69,329,0.921,382,2.089,462,1.683,480,1.239,482,0.334,531,1.17,532,1.225,534,1.094,535,1.094,536,1.047,537,1.094,538,1.094,549,1.094,551,1.315,553,1.348,556,1.453,558,1.491,559,1.453,561,1.491,565,1.145,598,1.531,605,0.899,606,0.88,659,1.91,666,1.482,676,1.651,711,2.04,713,2.395,715,2.04,717,2.04,760,1.389,761,1.024,768,1.225,770,1.389,775,2.542,776,2.542,777,2.542,794,1.284,801,1.119,803,1.315,804,1.53,844,1.664,846,1.664,854,1.617,855,1.821,856,1.821,857,1.024,858,1.821,859,1.821,860,1.617,864,1.821,866,1.617,867,1.821,868,1.821,869,1.617,872,1.225,874,1.225,876,1.491,916,1.491,928,1.315,1050,2.408,1134,1.946,1156,2.676,1199,1.881,1206,1.573,1209,1.573,1210,1.573,1212,3.113,1349,2.092,1495,4.947,1556,2.831,1632,2.176,1710,2.176,1753,1.617,1754,1.713,1760,2.556,1761,3.733,1766,2.556,1775,3.596,1778,1.765,1847,3.029,1990,2.27,2053,2.933,2071,1.821,2072,1.821,2073,1.821,2074,1.821,2076,3.743,2094,3.643,2095,3.397,2150,4.7,2155,2.375,2179,2.375,2459,3.151,2460,2.375,2469,4.308,2477,4.394,2478,3.151,2479,3.612,2480,3.612,2481,3.612,2482,2.375,2483,2.495,2484,2.495,2485,3.286,2486,2.495,2487,2.495,2488,2.495,2489,2.495,2490,2.176,2491,3.612,2492,2.495,2493,3.612,2494,2.495,2495,2.176,2496,2.495,2497,2.495,2498,2.495,2499,2.495,2500,2.27,2501,2.375,2502,2.495,2503,2.495,2504,4.245,2505,3.612,2506,2.495,2507,3.612,2508,2.495,2509,2.495,2510,2.495,2511,3.612,2512,2.375,2513,4.653,2514,5.176,2515,2.495,2516,2.495,2517,2.495,2518,2.495,2519,3.612,2520,2.375,2521,2.375,2522,2.495,2523,2.495,2524,2.375,2525,2.495,2526,2.495,2527,2.375,2528,2.495]],["title/components/VenusHighchartComponent.html",[0,0.366,100,1.157]],["body/components/VenusHighchartComponent.html",[0,0.494,1,0.87,2,1.403,3,0.081,4,0.067,5,0.97,6,0.97,7,0.97,8,0.97,9,0.047,12,0.949,13,0.97,14,1.978,15,2.018,16,1.083,18,1.083,20,0.284,21,0.492,22,0.009,23,0.081,24,0.071,26,1.261,27,1.434,28,1.434,29,0.97,30,2.103,31,0.97,32,0.811,33,0.97,34,0.889,35,0.97,36,0.87,37,0.97,38,0.87,39,1.454,40,0.97,41,0.889,42,1.574,43,2.233,44,0.87,45,0.97,46,0.889,47,2.009,48,0.87,49,1.883,50,0.889,51,1.597,52,0.87,53,0.97,54,0.889,55,0.87,56,0.87,57,0.97,58,0.87,59,0.909,60,0.799,61,0.97,62,0.852,63,0.733,64,0.97,65,0.889,66,1.372,67,0.889,68,0.97,69,0.889,70,1.689,71,0.87,72,0.97,73,0.889,74,0.889,75,0.87,76,0.87,77,0.97,78,0.889,79,1.97,80,0.87,81,0.97,82,0.889,83,0.889,84,0.87,85,0.87,86,0.97,87,0.889,88,1.372,89,0.516,90,1.434,91,0.889,92,0.816,93,0.87,94,0.87,95,0.97,96,0.889,97,1.869,98,0.87,99,0.97,100,1.726,101,0.87,102,0.852,103,0.97,104,0.97,105,0.005,106,0.005,111,0.167,112,0.539,113,1.18,114,0.308,117,0.9,119,0.583,120,0.485,121,0.629,123,1.334,124,1.363,130,0.949,228,0.745,236,0.613,247,0.553,248,0.708,259,0.681,292,1.131,306,4.911,317,1.499,318,1.744,323,1.163,539,3.177,563,3.545,600,2.366,601,2.25,612,2.352,613,1.163,614,1.014,623,2.043,624,1.64,639,2.425,640,1.637,641,1.759,642,2.215,644,1.689,645,2.257,647,1.163,653,4.045,655,3.019,660,3.698,674,3.253,694,1.313,732,1.718,768,1.996,770,0.889,830,2.154,904,1.543,918,3.277,936,2.981,937,4.293,938,4.293,939,3.937,940,4.293,941,3.61,945,4.741,946,4.741,947,4.741,949,3.61,950,4.017,952,2.762,964,3.61,965,3.61,966,3.418,967,3.418,968,3.61,969,4.741,970,3.418,971,3.253,972,3.61,973,3.61,977,2.105,978,3.61,979,3.61,980,3.61,981,2.443,983,3.61,985,2.443,991,2.599,992,2.599,993,2.599,998,2.105,1236,2.443,1237,4.567,1238,3.84,1240,5.044,1241,3.84,1242,2.599,1252,2.599,1253,2.599,1254,2.599,1255,2.599,1256,2.599,1258,2.599,1259,2.599,1261,3.84,1361,1.744,1504,4.293,1838,3.057,1841,3.057,1844,5.424,1845,4.129,1846,3.057,1850,2.795,1851,2.795,1852,2.795,1853,2.795,2161,3.057,2186,5.371,2187,5.371,2188,3.057,2189,4.516,2455,6.237,2457,3.765,2512,3.253,2527,2.202,2534,2.443,2542,7.134,2543,3.455,2544,3.455,2545,3.455,2546,3.455,2547,3.455,2548,3.455,2549,3.455,2550,5.371,2551,3.455,2552,3.455,2553,3.455,2554,3.455,2555,5.104,2556,3.455,2557,3.455,2558,3.455]],["title/classes/VenusModels.html",[24,0.093,2495,2.626]],["body/classes/VenusModels.html",[3,0.073,4,0.061,9,0.043,11,2.11,20,0.253,22,0.009,23,0.168,24,0.132,32,0.57,89,0.626,97,1.694,105,0.004,106,0.004,111,0.228,112,0.499,113,1.093,114,0.421,117,0.792,119,0.652,120,0.429,121,0.703,122,1.142,123,1.565,124,1.427,201,1.411,227,5.163,228,0.687,229,2.617,231,1.416,236,0.686,241,1.047,247,0.512,248,0.707,259,0.668,329,0.845,382,1.993,460,1.002,462,1.83,480,1.265,482,0.292,531,1.025,534,0.915,535,0.915,536,0.876,537,0.915,538,0.915,549,0.915,551,1.101,553,1.128,556,1.216,558,1.248,559,1.216,561,1.248,565,1.003,598,1.281,605,0.753,606,0.737,659,2.212,666,1.299,676,1.568,711,1.87,713,2.196,715,1.87,717,1.87,760,1.217,761,0.857,768,1.025,770,1.217,775,2.36,776,2.36,777,2.36,794,1.075,801,0.936,803,1.101,804,1.378,844,1.392,846,1.392,854,1.353,855,1.524,856,1.524,857,0.857,858,1.524,859,1.524,860,1.353,864,1.524,866,1.353,867,1.524,868,1.524,869,1.353,872,1.025,874,1.025,876,1.248,916,1.248,928,1.101,1050,2.11,1134,1.628,1156,2.41,1199,1.574,1206,1.316,1209,1.316,1210,1.316,1212,2.89,1349,1.751,1495,5.25,1556,2.549,1632,1.821,1710,1.821,1753,1.353,1754,1.433,1760,3.018,1761,4.093,1766,3.414,1775,3.361,1778,1.477,1847,3.577,1990,1.899,2053,3.255,2071,1.524,2072,1.524,2073,1.524,2074,1.524,2076,3.541,2094,3.929,2095,3.935,2150,5.032,2155,1.987,2179,3.638,2459,2.761,2460,1.987,2469,3.999,2477,4.05,2478,2.761,2479,3.165,2480,3.165,2481,3.165,2482,1.987,2483,2.088,2484,2.088,2485,3.478,2486,2.088,2487,2.088,2488,2.088,2489,2.088,2490,1.821,2491,3.165,2492,2.088,2493,3.165,2494,2.088,2495,2.761,2496,2.088,2497,2.088,2498,2.088,2499,3.823,2500,1.899,2501,1.987,2502,3.823,2503,3.165,2504,3.823,2505,4.825,2506,3.165,2507,4.266,2508,3.823,2509,3.165,2510,3.165,2511,4.266,2512,4.06,2513,5.553,2514,5.565,2515,3.823,2516,3.823,2517,3.823,2518,3.165,2519,3.165,2520,1.987,2521,1.987,2522,2.088,2523,2.088,2524,1.987,2525,2.088,2526,2.088,2527,4.06,2528,3.165,2559,4.726,2560,3.118,2561,3.118,2562,3.118,2563,3.118,2564,3.118,2565,3.118,2566,3.118,2567,3.118,2568,3.118]],["title/modules/VenusModule.html",[132,1.513,2430,3.01]],["body/modules/VenusModule.html",[3,0.139,4,0.116,9,0.082,20,0.369,21,0.847,22,0.008,23,0.139,24,0.123,26,1.236,42,1.409,63,1.262,89,0.51,92,1.747,96,2.271,97,1.821,98,2.223,100,2.271,101,2.223,105,0.007,106,0.007,132,2.002,134,2.656,135,2.734,136,3.396,137,2.734,138,3.812,139,2.511,150,3.614,151,2.581,152,2.734,154,3.121,155,3.121,178,4.712,180,3.037,184,4.503,185,2.38,321,2.319,322,2.734,939,2.734,1020,4.954,1021,4.954,1025,5.228,1026,4.152,1027,5.228,1029,4.206,1033,4.95,1034,5.228,1037,4.206,1038,5.228,1039,2.734,1049,5.228,1050,2.656,1272,4.475,2430,6.314,2456,4.812,2457,4.954,2534,4.206,2542,4.812,2569,5.263,2570,5.263,2571,5.263,2572,5.947,2573,5.947,2574,5.947,2575,4.475]],["title/injectables/VenusService.html",[325,2.007,2457,2.525]],["body/injectables/VenusService.html",[3,0.083,4,0.069,9,0.049,20,0.31,21,0.508,22,0.009,23,0.083,24,0.074,32,0.831,89,0.5,97,1.183,105,0.005,106,0.005,111,0.299,112,0.552,113,0.825,114,0.551,117,0.951,119,0.95,120,0.51,121,1.025,122,1.163,123,1.459,124,1.56,228,0.833,231,1.451,236,0.429,247,0.821,248,0.711,259,0.714,292,1.843,325,2.333,326,2.084,329,1.16,382,0.825,480,1.24,531,1.775,534,1.999,535,1.999,536,1.913,537,1.999,538,1.999,539,2.476,540,2.935,541,2.639,542,2.935,543,2.935,549,1.534,551,1.845,553,1.89,555,1.744,556,2.038,558,1.428,559,2.038,561,1.428,565,1.607,605,0.861,606,0.843,614,1.047,760,1.592,761,0.98,772,2.082,793,3.04,801,1.569,803,1.845,804,1.937,806,1.356,857,1.871,872,2.239,874,2.239,897,2.333,917,2.935,918,2.555,928,1.845,936,4.233,939,2.403,950,4.394,1274,4.654,1275,4.654,1277,5.123,1278,3.932,1297,3.932,1302,5.864,1303,3.932,1305,5.453,1308,3.932,1340,4.228,1366,3.123,1375,3.5,1928,4.624,1930,3.157,1971,3.157,1972,3.157,2457,2.935,2459,4.424,2469,3.612,2477,3.346,2478,4.424,2485,3.767,2490,4.424,2495,2.084,2576,3.157,2577,6.808,2578,6.808,2579,6.808,2580,5.226,2581,3.568,2582,3.568,2583,3.568,2584,3.568,2585,3.568,2586,3.568,2587,3.568,2588,5.226,2589,3.568,2590,3.568,2591,3.568,2592,3.568,2593,3.568,2594,3.568,2595,3.568,2596,3.568,2597,3.568,2598,3.568,2599,3.568,2600,3.568,2601,3.568,2602,3.568,2603,3.568,2604,3.568,2605,3.568,2606,5.226,2607,3.568,2608,3.568,2609,5.226,2610,3.568,2611,3.568,2612,3.568,2613,3.568,2614,2.887,2615,3.568,2616,3.568,2617,5.226,2618,3.568,2619,3.568,2620,3.568,2621,3.568,2622,3.568,2623,3.568,2624,3.568,2625,3.568,2626,3.568,2627,7.573,2628,7.573,2629,3.568,2630,3.568,2631,3.568,2632,5.226,2633,3.568,2634,3.568,2635,3.568,2636,5.226,2637,6.184,2638,3.568,2639,3.568,2640,3.568,2641,3.568,2642,3.568,2643,3.568,2644,3.568]],["title/classes/VenusStorage.html",[24,0.093,2490,2.626]],["body/classes/VenusStorage.html",[3,0.08,4,0.067,9,0.047,20,0.265,22,0.009,23,0.175,24,0.138,32,0.606,89,0.6,97,1.617,105,0.005,106,0.005,111,0.246,112,0.537,113,1.178,114,0.454,117,0.86,119,0.692,120,0.409,121,0.747,122,1.167,123,1.248,124,0.971,201,1.483,227,4.713,228,0.768,229,2.092,231,1.442,236,0.804,241,1.657,247,0.552,248,0.691,259,0.705,329,0.888,382,2.026,460,1.107,462,1.649,480,1.209,482,0.315,531,1.314,534,1.011,535,1.011,536,0.968,537,1.011,538,1.011,549,1.011,551,1.216,553,1.246,556,1.343,558,1.378,559,1.343,561,1.378,565,1.081,598,1.415,605,0.831,606,0.814,659,1.84,666,1.4,676,1.615,711,1.965,713,2.307,715,1.965,717,1.965,760,1.56,761,0.947,768,1.133,770,1.311,775,2.462,776,2.462,777,2.462,794,1.187,801,1.034,803,1.216,804,1.463,844,2.706,846,2.706,854,2.905,855,1.684,856,1.684,857,1.84,858,1.684,859,1.684,860,2.905,864,1.684,866,2.21,867,1.684,868,1.684,869,2.21,872,2.202,874,2.202,876,2.679,916,1.378,928,1.216,1050,2.274,1052,3.41,1053,3.41,1054,3.41,1071,2.307,1134,1.799,1156,2.558,1199,1.739,1206,1.454,1209,1.454,1210,1.454,1212,3.016,1349,2.86,1495,4.839,1556,2.706,1632,2.012,1710,2.012,1753,1.495,1754,1.584,1760,2.413,1761,3.652,1766,2.413,1775,3.439,1778,1.632,1847,2.86,1990,2.098,2053,2.826,2071,1.684,2072,1.684,2073,1.684,2074,1.684,2076,3.612,2094,3.544,2095,3.273,2150,4.553,2155,2.196,2179,2.196,2459,3.539,2460,2.196,2469,4.64,2477,4.465,2478,3.539,2479,3.41,2480,3.41,2481,3.41,2482,2.196,2483,2.307,2484,2.307,2485,3.103,2486,2.307,2487,2.307,2488,2.307,2489,2.307,2490,2.975,2491,3.41,2492,2.307,2493,3.41,2494,2.307,2495,2.012,2496,2.307,2497,2.307,2498,2.307,2499,2.307,2500,2.098,2501,2.196,2502,2.307,2503,2.307,2504,4.057,2505,3.41,2506,2.307,2507,3.41,2508,2.307,2509,2.307,2510,2.307,2511,3.41,2512,2.196,2513,4.483,2514,5.063,2515,2.307,2516,2.307,2517,2.307,2518,2.307,2519,3.41,2520,2.196,2521,2.196,2522,2.307,2523,2.307,2524,2.196,2525,2.307,2526,2.307,2527,2.196,2528,2.307,2645,3.445,2646,3.445,2647,3.445,2648,3.445,2649,3.445,2650,3.445,2651,3.445,2652,3.445,2653,3.445,2654,3.445,2655,3.445]],["title/classes/VenusTable.html",[24,0.093,2656,3.383]],["body/classes/VenusTable.html",[0,0.547,3,0.12,4,0.131,9,0.07,14,1.087,15,1.111,16,1.087,18,1.087,20,0.343,21,0.729,22,0.009,23,0.12,24,0.139,32,0.512,70,1.291,97,1.802,101,1.291,102,1.849,105,0.006,106,0.006,111,0.362,112,0.709,114,0.457,117,0.871,119,0.585,120,0.385,121,0.631,122,1.119,123,0.955,124,0.976,130,1.408,228,0.688,231,1.33,236,0.901,241,1.661,247,0.728,248,0.692,259,0.628,292,1.764,329,0.994,460,1.646,480,1.123,482,0.317,581,4.431,586,3.51,600,2.62,601,2.491,612,2.466,613,1.724,614,1.504,623,1.724,624,1.646,625,2.675,639,1.853,640,2.427,641,1.765,642,2.223,645,1.724,647,1.724,772,1.724,804,1.922,806,1.947,857,2.188,934,3.636,1039,2.355,1050,2.287,1073,2.771,1074,3.787,1075,4.211,1076,4.308,1077,4.308,1078,3.854,1079,4.211,1083,4.02,1085,2.876,1086,2.876,1087,2.876,1088,2.876,1089,2.771,1094,3.774,1097,2.876,1100,2.675,1102,2.876,1104,2.876,1106,2.876,1107,2.876,1108,2.876,1359,3.43,1360,3.12,1361,2.586,1362,4.093,1363,3.12,1364,3.12,1365,3.12,1366,2.586,1367,3.12,1775,2.761,2076,2.836,2455,6.115,2457,3.774,2477,4.473,2534,3.622,2575,6.506,2614,4.144,2656,5.643,2657,6.719,2658,5.122,2659,5.122,2660,5.122,2661,4.532,2662,5.946,2663,4.532,2664,5.946,2665,4.532]],["title/components/VenusTableComponent.html",[0,0.366,101,1.133]],["body/components/VenusTableComponent.html",[0,0.521,1,0.956,2,1.502,3,0.089,4,0.106,5,1.066,6,1.066,7,1.066,8,1.066,9,0.052,12,1.042,13,1.066,14,1.99,15,2.031,16,1.16,18,1.16,20,0.316,21,0.54,22,0.009,23,0.089,24,0.113,26,0.788,27,1.535,28,1.535,29,1.066,30,1.968,31,1.066,32,0.7,33,1.066,34,0.977,35,1.066,36,0.956,37,1.066,38,0.956,39,1.52,40,1.066,41,0.977,42,1.415,43,2.292,44,0.956,45,1.066,46,0.977,47,2.086,48,0.956,49,1.968,50,0.977,51,1.685,52,0.956,53,1.066,54,0.977,55,0.956,56,0.956,57,1.066,58,0.956,59,0.998,60,0.877,61,1.066,62,0.935,63,0.805,64,1.066,65,0.977,66,1.02,67,0.977,68,1.066,69,0.977,70,1.949,71,0.956,72,1.066,73,0.977,74,0.977,75,0.956,76,0.956,77,1.066,78,0.977,79,1.844,80,0.956,81,1.066,82,0.977,83,0.977,84,0.956,85,0.956,86,1.066,87,0.977,88,1.469,89,0.377,90,1.535,91,0.977,92,0.896,93,0.956,94,0.956,95,1.066,96,0.977,97,1.954,98,0.956,99,1.066,100,0.977,101,1.766,102,2.012,103,1.066,104,1.066,105,0.005,106,0.005,111,0.309,112,0.577,114,0.338,117,0.887,119,0.624,120,0.456,121,0.673,122,1.001,123,1.487,124,1.519,130,1.042,228,0.588,231,1.171,236,0.77,241,0.84,247,0.592,248,0.643,259,0.586,292,1.645,317,1.646,323,1.277,329,1.102,480,1.083,482,0.235,581,3.879,586,1.981,600,2.497,601,2.374,612,2.442,613,1.277,614,1.114,623,2.156,624,1.756,625,1.981,639,2.535,640,1.797,641,1.308,642,1.646,645,2.359,647,1.277,694,1.442,732,1.839,772,1.277,804,1.691,806,1.442,857,1.042,904,1.694,934,2.957,1039,1.744,1050,2.44,1073,2.053,1074,2.759,1075,2.13,1076,2.053,1077,2.053,1079,3.069,1083,3.234,1085,2.13,1086,3.069,1087,3.597,1088,3.597,1089,3.465,1094,3.069,1097,2.13,1100,3.345,1102,3.597,1104,3.597,1106,2.13,1107,2.13,1108,2.13,1113,2.854,1114,2.683,1115,2.683,1119,3.865,1120,2.683,1121,2.683,1359,2.54,1360,2.311,1361,1.916,1362,3.329,1363,2.311,1364,2.311,1365,3.329,1366,3.234,1367,2.311,1375,3.659,1379,3.069,1775,2.631,2076,2.704,2455,6.161,2457,3.935,2477,4.497,2534,2.683,2575,6.554,2614,3.069,2656,4.819,2661,4.835,2662,4.835,2663,3.357,2664,4.835,2665,3.357,2666,3.793,2667,3.793,2668,3.793,2669,3.793,2670,3.793,2671,3.793]],["title/coverage.html",[2672,4.981]],["body/coverage.html",[0,0.755,1,0.855,9,0.047,10,3.003,22,0.009,24,0.19,34,0.874,36,0.855,38,0.855,41,0.874,42,1.567,44,0.855,46,0.874,48,0.855,50,0.874,52,0.855,54,0.874,55,0.855,56,0.855,58,0.855,60,1.72,62,0.837,65,0.874,67,0.874,69,0.874,71,0.855,73,0.874,74,0.874,75,0.855,76,0.855,78,0.874,80,0.855,82,0.874,83,0.874,84,0.855,85,0.855,87,0.874,89,0.347,91,0.874,92,1.19,93,0.855,96,0.874,98,0.855,100,0.874,101,0.855,102,0.837,105,0.004,106,0.004,107,3.003,116,1.982,120,0.194,149,2.272,164,2.272,171,2.554,174,2.846,191,2.746,192,2.746,229,3.25,235,3.003,262,1.906,265,1.906,268,1.906,271,1.906,274,1.906,275,1.772,292,0.752,325,3.608,327,3.003,377,1.772,411,3.003,412,3.003,461,4.498,482,0.565,507,1.906,531,0.736,533,4.075,565,0.72,567,2.163,577,2.554,578,4.741,579,3.79,580,4.52,591,1.659,603,1.836,607,1.772,609,1.772,676,1.942,702,2.746,703,4.442,732,2.843,733,4.442,747,1.906,760,0.874,832,1.906,834,1.906,843,1.906,878,3.003,883,1.714,885,2.067,907,1.836,914,2.746,935,2.746,1026,2.829,1028,2.746,1036,3.79,1072,2.554,1073,4.449,1074,1.714,1127,4.7,1128,2.746,1129,1.906,1131,2.067,1132,4.754,1143,2.067,1152,1.906,1155,2.067,1175,3.373,1178,3.21,1183,3.21,1187,1.17,1191,2.163,1201,2.163,1222,3.003,1235,2.746,1236,4.7,1271,3.79,1273,3.003,1276,2.554,1353,2.554,1383,3.003,1386,4.248,1387,3.003,1415,2.746,1416,2.746,1417,2.746,1418,2.746,1459,3.003,1508,3.003,1539,4.52,1540,3.828,1541,4.52,1547,2.4,1616,2.163,1654,3.003,1699,2.746,1731,4.525,1732,3.562,1733,1.836,1735,2.4,1736,4.372,1744,2.4,1753,1.473,1755,1.56,1758,1.772,1780,3.003,1829,2.746,1854,2.272,1867,2.272,1879,2.554,1896,2.554,1907,3.79,1909,3.003,1912,2.554,1985,2.554,2003,3.003,2009,3.003,2019,3.003,2020,3.003,2024,3.003,2025,3.003,2028,4.525,2029,3.562,2030,1.836,2032,1.836,2033,4.62,2041,1.836,2050,1.714,2054,1.836,2075,1.836,2077,1.836,2085,1.836,2096,3.003,2127,2.746,2224,3.79,2225,3.003,2227,2.554,2316,2.554,2327,2.746,2344,3.562,2345,3.562,2409,2.746,2410,2.746,2437,4.457,2455,4.7,2456,2.746,2457,1.906,2459,1.982,2460,4.741,2469,1.982,2477,1.836,2478,1.982,2490,1.982,2495,1.982,2529,3.003,2542,2.746,2575,3.79,2576,3.003,2656,2.554,2672,2.746,2673,3.393,2674,3.393,2675,3.393,2676,3.003,2677,8.221,2678,3.393,2679,3.393,2680,3.393,2681,6.006,2682,5.037,2683,6.006,2684,6.646,2685,8.61,2686,8.61,2687,3.393,2688,3.393,2689,3.393,2690,6.646,2691,5.037,2692,7.099,2693,7.438,2694,3.393,2695,3.393,2696,3.393,2697,3.393,2698,7.438,2699,3.393,2700,6.646,2701,3.393,2702,6.646,2703,5.037,2704,5.037,2705,3.393,2706,3.393,2707,3.393,2708,3.393,2709,3.393,2710,3.393,2711,3.393,2712,6.006,2713,6.582,2714,3.003,2715,6.006,2716,3.003,2717,3.003,2718,3.003,2719,3.393,2720,3.393,2721,3.393,2722,3.393,2723,3.393,2724,3.393,2725,3.003,2726,4.075,2727,3.003,2728,3.393]],["title/dependencies.html",[135,2.488,2729,3.313]],["body/dependencies.html",[9,0.087,21,0.899,22,0.009,105,0.007,106,0.007,135,2.904,137,3.798,157,6.206,158,6.206,185,2.527,195,4.752,564,4.025,614,1.854,624,2.029,939,3.95,971,4.889,1039,2.904,1042,5.588,1043,5.11,1050,2.82,1083,3.189,1269,4.229,1421,6.787,1504,4.467,1505,5.588,1685,5.588,2730,6.315,2731,9.303,2732,6.315,2733,6.315,2734,6.315,2735,6.315,2736,6.315,2737,6.315,2738,6.315,2739,7.67,2740,6.315,2741,6.315,2742,6.315,2743,6.315,2744,7.67,2745,6.315,2746,6.315,2747,6.315,2748,6.315,2749,6.315,2750,6.315,2751,6.315,2752,7.67,2753,6.315,2754,6.315,2755,6.315,2756,6.315,2757,6.315,2758,6.315,2759,6.315,2760,6.315,2761,6.315,2762,6.315,2763,6.315,2764,6.315,2765,6.315,2766,6.315,2767,6.315]],["title/miscellaneous/enumerations.html",[2768,2.281,2769,4.79]],["body/miscellaneous/enumerations.html",[22,0.009,105,0.007,106,0.007,111,0.283,123,1.491,124,1.823,151,3.181,254,3.966,352,4.117,355,4.117,360,4.117,364,4.117,461,3.427,482,0.454,486,4.87,487,3.427,488,4.87,489,3.427,492,3.574,493,3.574,494,3.427,495,4.466,496,3.574,497,3.574,498,4.466,499,3.966,500,4.282,501,4.466,502,3.574,503,3.574,504,3.574,608,3.829,659,2.014,703,4.703,733,3.295,762,4.282,763,3.37,764,3.37,765,4.282,766,4.282,767,3.175,768,1.93,769,3.175,770,1.511,771,3.295,772,1.975,773,3.427,774,1.93,1731,3.74,1732,4.15,1736,3.175,1775,3.012,1777,3.829,1802,4.909,1811,5.184,1827,6.487,1828,4.909,2028,3.74,2029,4.15,2053,3.094,2076,3.094,2126,6.487,2768,3.574,2769,5.192,2770,8.62,2771,7.33,2772,5.867,2773,5.867,2774,5.867,2775,7.33]],["title/miscellaneous/functions.html",[2768,2.281,2776,4.79]],["body/miscellaneous/functions.html",[9,0.073,11,3.822,22,0.008,32,0.883,42,1.661,89,0.556,105,0.006,106,0.006,111,0.331,119,0.995,120,0.499,121,1.074,122,1.217,123,0.987,124,1.008,128,3.982,191,4.281,192,5.553,222,3.982,223,3.982,224,4.596,225,5.388,226,5.553,228,0.786,229,2.82,230,4.682,480,1.232,483,3.466,567,4.375,617,5.978,659,2.094,666,2.094,676,1.549,679,4.281,768,1.74,769,2.863,1089,3.714,1099,3.982,1187,1.824,1397,6.164,1405,4.682,1415,5.553,1416,5.553,1417,5.553,1418,6.522,1442,6.522,1448,4.682,1453,4.682,1607,3.982,1753,2.979,1989,3.982,2174,6.741,2365,4.281,2500,3.223,2501,3.373,2676,6.074,2713,4.682,2714,6.074,2716,6.074,2717,4.682,2768,3.223,2776,4.682,2777,8.713,2778,5.291,2779,5.291,2780,5.291,2781,4.682,2782,5.291,2783,5.291,2784,4.682,2785,5.291,2786,5.291,2787,5.291,2788,5.291,2789,6.863,2790,7.618,2791,5.291,2792,5.291,2793,5.291,2794,5.291,2795,5.291,2796,4.682,2797,5.291,2798,5.291,2799,5.291,2800,5.291,2801,4.682,2802,4.682,2803,5.291,2804,5.291,2805,4.682,2806,5.291,2807,5.291,2808,5.291,2809,6.863,2810,6.863,2811,6.863,2812,6.863,2813,8.353,2814,4.682,2815,4.682,2816,4.682,2817,5.291,2818,5.291,2819,5.291,2820,5.291,2821,5.291,2822,5.291,2823,5.291,2824,6.863,2825,6.863,2826,5.291]],["title/index.html",[111,0.181,2827,3.313,2828,3.313]],["body/index.html",[4,0.122,9,0.086,12,1.722,22,0.007,89,0.432,94,1.924,105,0.007,106,0.007,125,6.661,126,5.823,127,5.744,137,2.881,152,2.881,203,5.545,222,5.744,223,4.715,224,4.196,483,3.164,564,3.994,890,3.994,1050,3.408,1083,3.164,1199,3.164,1504,4.432,1586,3.66,2726,5.07,2829,7.633,2830,6.266,2831,6.755,2832,5.545,2833,6.755,2834,6.266,2835,6.266,2836,6.266,2837,6.266,2838,6.266,2839,6.266,2840,6.266,2841,6.266,2842,6.755,2843,5.545,2844,6.266,2845,6.266,2846,5.545,2847,7.633,2848,6.266,2849,6.266,2850,6.266,2851,6.266,2852,7.633,2853,6.266,2854,5.545,2855,6.266,2856,6.266,2857,6.266,2858,5.545,2859,6.266,2860,6.266,2861,5.545,2862,6.266,2863,6.266,2864,6.266,2865,5.545,2866,6.266,2867,5.545,2868,5.545,2869,5.545,2870,5.545,2871,8.232,2872,6.266,2873,7.633,2874,5.545,2875,6.266,2876,6.266,2877,7.633,2878,6.755,2879,8.136,2880,8.569,2881,6.266,2882,5.545,2883,6.266,2884,7.633,2885,5.545,2886,6.266,2887,7.633,2888,5.545,2889,6.266,2890,6.266,2891,5.545,2892,5.545,2893,6.266,2894,6.266]],["title/license.html",[2827,3.313,2828,3.313,2895,3.313]],["body/license.html",[0,0.349,4,0.165,9,0.032,20,0.053,22,0.002,24,0.027,25,4.8,60,1.902,66,0.356,89,0.216,94,0.334,105,0.003,106,0.002,117,0.136,120,0.134,152,0.609,216,1.172,221,1.072,222,0.997,223,3.564,226,6.244,231,0.221,247,0.144,248,0.104,259,0.104,292,1.133,310,1.072,321,2.411,329,1.032,476,1.31,480,0.317,482,0.316,483,0.669,494,0.774,500,0.774,508,0.807,532,1.028,612,0.436,617,5.017,621,1.072,624,0.75,662,1.363,678,0.559,767,2.563,768,1.412,769,0.717,770,1.106,771,1.31,772,1.446,774,1.028,810,1.363,824,2.563,890,0.845,909,0.887,912,0.845,952,0.717,970,0.887,1051,0.774,1099,0.997,1172,0.609,1178,1.993,1187,1.078,1191,1.487,1195,0.887,1199,1.178,1201,1.487,1281,2.065,1442,3.048,1461,1.172,1462,1.172,1486,3.333,1487,1.172,1489,1.172,1492,2.065,1493,1.172,1495,0.807,1586,1.826,1597,0.997,1655,1.756,1698,4.191,1700,1.072,1702,3.048,1710,2.2,1762,0.744,1847,0.744,1989,0.997,2094,0.628,2109,1.172,2157,1.172,2175,1.172,2176,2.065,2336,1.65,2365,3.048,2367,2.353,2392,1.072,2443,1.172,2448,1.172,2482,0.845,2485,0.807,2500,0.807,2514,0.845,2520,0.845,2521,1.993,2524,5.833,2550,1.172,2672,1.888,2718,1.172,2781,4.811,2784,6.065,2796,4.191,2801,1.172,2802,2.065,2805,1.172,2814,1.172,2815,2.767,2816,2.065,2831,2.065,2832,4.191,2833,5.939,2842,1.172,2843,3.8,2846,2.767,2854,5.799,2858,1.172,2861,7.548,2865,1.172,2867,2.767,2868,3.333,2869,2.065,2870,4.524,2874,3.333,2878,1.172,2879,4.811,2885,1.172,2888,2.065,2891,1.172,2892,2.065,2895,8.133,2896,7.313,2897,7.647,2898,6.887,2899,1.172,2900,1.325,2901,3.126,2902,8.055,2903,5.436,2904,7.406,2905,7.901,2906,4.736,2907,1.325,2908,1.325,2909,2.333,2910,4.294,2911,7.782,2912,4.294,2913,3.126,2914,6.711,2915,3.126,2916,1.325,2917,3.126,2918,1.325,2919,1.325,2920,2.333,2921,4.736,2922,1.325,2923,1.325,2924,1.325,2925,5.436,2926,2.333,2927,4.294,2928,1.325,2929,1.325,2930,6.711,2931,8.621,2932,3.126,2933,3.126,2934,5.718,2935,2.333,2936,2.333,2937,5.112,2938,6.711,2939,4.736,2940,1.325,2941,1.325,2942,3.767,2943,5.436,2944,2.333,2945,5.436,2946,3.126,2947,1.325,2948,2.333,2949,1.325,2950,3.126,2951,7.313,2952,4.294,2953,2.333,2954,3.767,2955,1.325,2956,1.325,2957,2.333,2958,3.767,2959,3.767,2960,2.333,2961,6.379,2962,2.333,2963,4.294,2964,7.492,2965,4.294,2966,2.333,2967,3.767,2968,1.325,2969,5.112,2970,4.294,2971,1.325,2972,5.436,2973,4.736,2974,8.144,2975,3.126,2976,5.112,2977,1.325,2978,5.436,2979,2.333,2980,6.184,2981,5.965,2982,4.294,2983,2.333,2984,1.325,2985,1.325,2986,6.854,2987,2.333,2988,1.325,2989,1.325,2990,6.554,2991,2.333,2992,1.325,2993,3.126,2994,1.325,2995,1.325,2996,2.333,2997,1.325,2998,1.325,2999,4.736,3000,3.767,3001,1.325,3002,1.325,3003,1.325,3004,1.325,3005,1.325,3006,1.325,3007,2.333,3008,1.325,3009,1.325,3010,2.333,3011,3.126,3012,2.333,3013,1.325,3014,1.325,3015,2.333,3016,2.333,3017,6.711,3018,1.325,3019,2.333,3020,2.333,3021,1.325,3022,1.325,3023,2.333,3024,3.126,3025,2.333,3026,3.126,3027,2.333,3028,1.325,3029,1.325,3030,4.736,3031,1.325,3032,1.325,3033,1.325,3034,4.294,3035,1.325,3036,3.767,3037,1.325,3038,1.325,3039,2.333,3040,3.126,3041,1.325,3042,6.379,3043,1.325,3044,5.718,3045,1.325,3046,6.711,3047,3.767,3048,4.294,3049,4.736,3050,1.325,3051,3.126,3052,7.213,3053,2.333,3054,1.325,3055,1.325,3056,1.325,3057,3.126,3058,5.965,3059,1.325,3060,1.325,3061,2.333,3062,2.333,3063,1.325,3064,5.965,3065,1.325,3066,3.767,3067,5.436,3068,1.325,3069,3.126,3070,3.126,3071,2.333,3072,8.452,3073,3.126,3074,5.718,3075,3.767,3076,5.112,3077,2.333,3078,1.325,3079,2.333,3080,3.126,3081,5.718,3082,5.965,3083,3.767,3084,1.325,3085,2.333,3086,2.333,3087,3.767,3088,3.767,3089,5.06,3090,1.325,3091,3.126,3092,1.325,3093,7.843,3094,2.333,3095,1.325,3096,5.436,3097,1.325,3098,3.126,3099,5.436,3100,1.325,3101,6.854,3102,3.767,3103,2.333,3104,5.436,3105,6.184,3106,4.736,3107,1.325,3108,1.325,3109,1.325,3110,1.325,3111,5.436,3112,1.325,3113,2.333,3114,6.554,3115,1.325,3116,3.126,3117,3.126,3118,1.325,3119,1.325,3120,1.325,3121,3.126,3122,3.126,3123,1.325,3124,1.325,3125,1.325,3126,1.325,3127,2.333,3128,5.965,3129,1.325,3130,1.325,3131,1.325,3132,4.294,3133,3.126,3134,3.126,3135,4.736,3136,3.126,3137,3.126,3138,1.325,3139,4.294,3140,1.325,3141,1.325,3142,1.325,3143,3.126,3144,1.325,3145,3.126,3146,1.325,3147,1.325,3148,1.325,3149,2.333,3150,1.325,3151,7.647,3152,5.436,3153,1.325,3154,4.736,3155,2.333,3156,1.325,3157,2.333,3158,2.333,3159,3.767,3160,1.325,3161,1.325,3162,1.325,3163,2.333,3164,3.126,3165,4.294,3166,1.325,3167,2.333,3168,4.736,3169,1.325,3170,3.767,3171,1.325,3172,5.965,3173,5.112,3174,1.325,3175,4.294,3176,1.325,3177,2.333,3178,1.325,3179,1.325,3180,3.126,3181,1.325,3182,1.325,3183,1.325,3184,3.126,3185,1.325,3186,1.325,3187,2.333,3188,4.294,3189,2.333,3190,1.325,3191,2.333,3192,1.325,3193,1.325,3194,1.325,3195,1.325,3196,1.325,3197,1.325,3198,3.126,3199,1.325,3200,6.854,3201,1.325,3202,1.325,3203,1.325,3204,4.294,3205,4.294,3206,1.325,3207,1.325,3208,3.126,3209,1.325,3210,1.325,3211,3.767,3212,1.325,3213,1.325,3214,1.325,3215,1.325,3216,1.325,3217,1.325,3218,1.325,3219,2.333,3220,2.333,3221,1.325,3222,3.126,3223,1.325,3224,1.325,3225,2.333,3226,1.325,3227,1.325,3228,1.325,3229,1.325,3230,2.333,3231,2.333,3232,2.333,3233,2.333,3234,5.718,3235,2.333,3236,1.325,3237,1.325,3238,2.333,3239,3.126,3240,3.126,3241,3.767,3242,3.767,3243,3.126,3244,3.767,3245,1.325,3246,4.294,3247,4.294,3248,2.767,3249,1.325,3250,2.333,3251,2.333,3252,4.294,3253,2.333,3254,3.767,3255,2.333,3256,3.126,3257,6.711,3258,4.294,3259,1.325,3260,1.325,3261,1.325,3262,3.126,3263,3.126,3264,2.333,3265,1.325,3266,1.325,3267,1.325,3268,1.325,3269,2.333,3270,1.325,3271,1.325,3272,3.126,3273,1.325,3274,1.325,3275,2.333,3276,3.126,3277,1.325,3278,2.333,3279,1.325,3280,3.126,3281,1.325,3282,1.325,3283,2.333,3284,2.333,3285,4.736,3286,7.492,3287,3.126,3288,2.333,3289,2.333,3290,2.333,3291,2.333,3292,3.767,3293,3.767,3294,1.325,3295,1.325,3296,1.325,3297,1.325,3298,5.112,3299,4.736,3300,2.333,3301,1.325,3302,4.294,3303,1.325,3304,1.325,3305,1.325,3306,2.333,3307,1.325,3308,2.333,3309,1.325,3310,5.436,3311,1.325,3312,6.184,3313,1.325,3314,1.325,3315,1.325,3316,1.325,3317,1.325,3318,1.325,3319,2.333,3320,1.325,3321,1.325,3322,1.325,3323,2.333,3324,3.126,3325,4.294,3326,2.333,3327,3.767,3328,3.767,3329,2.333,3330,1.325,3331,1.325,3332,2.333,3333,1.325,3334,1.325,3335,1.325,3336,2.333,3337,1.325,3338,1.325,3339,3.126,3340,3.767,3341,1.325,3342,2.333,3343,1.325,3344,2.333,3345,1.325,3346,3.126,3347,1.325,3348,1.325,3349,1.325,3350,1.325,3351,1.325,3352,2.333,3353,1.325,3354,1.325,3355,1.325,3356,1.325,3357,1.325,3358,3.126,3359,1.325,3360,1.325,3361,1.325,3362,1.325,3363,1.325,3364,4.294,3365,1.325,3366,3.767,3367,1.325,3368,1.325,3369,1.325,3370,1.325,3371,1.325,3372,1.325,3373,1.325,3374,1.325,3375,5.112,3376,1.325,3377,3.767,3378,1.325,3379,1.325,3380,3.126,3381,1.325,3382,1.325,3383,3.126,3384,1.325,3385,2.333,3386,1.325,3387,1.325,3388,1.325,3389,1.325,3390,1.325,3391,1.325,3392,1.325,3393,1.325,3394,2.333,3395,1.325,3396,1.325,3397,1.325,3398,1.325,3399,2.333,3400,2.333,3401,1.325,3402,1.325,3403,3.126,3404,1.325,3405,3.126,3406,2.333,3407,1.325,3408,2.333,3409,1.325,3410,2.333,3411,1.325,3412,3.126,3413,5.112,3414,1.325,3415,1.325,3416,1.325,3417,1.325,3418,1.325,3419,1.325,3420,1.325,3421,2.333,3422,3.767,3423,1.325,3424,4.294,3425,1.325,3426,1.325,3427,1.325,3428,1.325,3429,1.325,3430,1.325,3431,2.333,3432,2.333,3433,2.333,3434,3.126,3435,1.325,3436,2.333,3437,2.333,3438,1.325,3439,3.126,3440,1.325,3441,2.333,3442,1.325,3443,2.333,3444,1.325,3445,2.333,3446,1.325,3447,1.325,3448,2.333,3449,7.647,3450,2.333,3451,1.325,3452,4.294,3453,5.965,3454,3.126,3455,1.325,3456,1.325,3457,1.325,3458,3.767,3459,1.325,3460,1.325,3461,3.126,3462,2.333,3463,1.325,3464,1.325,3465,1.325,3466,2.333,3467,1.325,3468,1.325,3469,1.325,3470,1.325,3471,3.767,3472,2.333,3473,1.325,3474,1.325,3475,3.126,3476,1.325,3477,2.333,3478,3.126,3479,2.333,3480,1.325,3481,1.325,3482,1.325,3483,1.325,3484,2.333,3485,3.126,3486,1.325,3487,1.325,3488,2.333,3489,1.325,3490,2.333,3491,1.325,3492,1.325,3493,1.325,3494,1.325,3495,1.325,3496,3.126,3497,2.333,3498,1.325,3499,3.767,3500,1.325,3501,3.126,3502,1.325,3503,1.325,3504,2.333,3505,1.325,3506,1.325,3507,1.325,3508,3.126,3509,2.333,3510,2.333,3511,1.325,3512,5.112,3513,2.333,3514,3.126,3515,3.767,3516,1.325,3517,1.325,3518,1.325,3519,2.333,3520,1.325,3521,3.126,3522,1.325,3523,2.333,3524,1.325,3525,1.325,3526,1.325,3527,1.325,3528,3.126,3529,1.325,3530,2.333,3531,3.126,3532,2.333,3533,1.325,3534,2.333,3535,1.325,3536,1.325,3537,2.333,3538,2.333,3539,1.325,3540,1.325,3541,2.333,3542,1.325,3543,1.325,3544,1.325,3545,1.325,3546,3.126,3547,1.325,3548,1.325,3549,1.325,3550,1.325,3551,1.325,3552,3.767,3553,2.333,3554,3.126,3555,1.325,3556,1.325,3557,1.325,3558,1.325,3559,2.333,3560,1.325,3561,1.325,3562,1.325,3563,1.325,3564,1.325,3565,1.325,3566,1.325,3567,1.325,3568,1.325,3569,1.325,3570,1.325,3571,1.325,3572,1.325,3573,1.325,3574,3.767,3575,1.325,3576,2.333,3577,1.325,3578,1.325,3579,1.325,3580,1.325,3581,1.325,3582,1.325,3583,1.325,3584,1.325,3585,1.325,3586,3.126,3587,1.325,3588,1.325,3589,1.325,3590,2.333,3591,1.325,3592,1.325,3593,1.325,3594,1.325,3595,1.325,3596,1.325,3597,1.325,3598,2.333,3599,2.333,3600,4.294,3601,3.126,3602,1.325,3603,2.333,3604,1.325,3605,1.325,3606,1.325,3607,1.325,3608,3.126,3609,2.333,3610,1.325,3611,2.333,3612,2.333,3613,2.333,3614,1.325,3615,1.325,3616,1.325,3617,1.325,3618,1.325,3619,1.325,3620,1.325,3621,1.325,3622,1.325,3623,2.333,3624,1.325,3625,3.126,3626,1.325,3627,1.325,3628,1.325,3629,1.325,3630,1.325,3631,1.325,3632,1.325,3633,1.325,3634,1.325,3635,1.325,3636,1.325,3637,1.325,3638,1.325,3639,2.333,3640,1.325,3641,1.325,3642,1.325,3643,1.325,3644,1.325,3645,1.325,3646,1.325,3647,1.325,3648,1.325,3649,1.325,3650,1.325,3651,1.325,3652,1.325,3653,1.325,3654,1.325,3655,3.126,3656,2.333,3657,1.325,3658,1.325,3659,1.325,3660,1.325,3661,1.325,3662,1.325,3663,2.333,3664,3.126,3665,2.333,3666,1.325,3667,1.325,3668,1.325,3669,1.325,3670,1.325,3671,1.325,3672,1.325,3673,2.333,3674,1.325,3675,1.325,3676,1.325,3677,1.325,3678,1.325,3679,1.325,3680,1.325,3681,1.325,3682,1.325,3683,1.325,3684,1.325,3685,1.325,3686,1.325,3687,1.325,3688,1.325,3689,1.325,3690,1.325,3691,1.325,3692,1.325,3693,1.325]],["title/modules.html",[134,2.749]],["body/modules.html",[22,0.007,92,1.586,105,0.007,106,0.007,133,5.051,134,2.997,145,3.921,146,4.495,147,4.495,148,4.495,158,7.634,1014,4.495,1020,3.77,1021,3.77,1262,4.495,1646,4.495,1718,4.279,1899,4.495,2217,4.495,2430,4.495,3089,5.94,3248,8.349,3694,9.435,3695,9.458]],["title/overview.html",[3696,5.448]],["body/overview.html",[1,1.681,2,1.122,22,0.009,26,0.848,34,2.097,36,1.681,38,1.681,41,1.718,44,2.053,46,1.718,48,1.681,50,1.718,52,1.681,54,1.718,55,1.681,56,1.681,58,1.681,62,2.009,65,1.718,67,2.097,69,1.718,71,1.681,73,1.718,74,1.718,75,1.681,76,1.681,78,1.718,80,1.681,82,1.718,83,1.718,84,1.681,85,1.681,87,2.097,91,2.097,93,2.053,96,1.718,98,1.681,100,1.718,101,1.681,105,0.005,106,0.005,116,3.897,132,1.375,133,6.961,134,1.824,135,1.878,136,1.724,137,1.878,138,1.935,139,1.724,140,3.614,141,3.614,142,3.614,143,3.614,144,3.614,145,4.463,146,5.116,147,5.805,148,6.114,149,4.468,150,2.816,151,1.772,152,1.878,194,3.073,326,2.386,460,1.312,532,1.343,603,3.61,883,3.659,1014,6.181,1015,3.614,1016,3.614,1017,3.614,1018,3.614,1019,3.614,1020,4.914,1021,4.814,1129,3.747,1183,2.603,1193,2.735,1197,2.735,1262,6.045,1263,3.614,1264,3.614,1266,3.614,1499,3.614,1500,3.614,1646,5.455,1647,3.614,1648,3.614,1649,3.614,1718,5.302,1727,3.614,1728,3.614,1730,3.614,1733,3.61,1899,6.195,1900,3.614,1901,3.614,1902,3.614,1903,3.614,1904,5.452,2030,3.61,2217,6.133,2218,3.614,2219,3.614,2220,3.614,2337,5.398,2338,5.398,2339,5.398,2341,3.614,2342,3.614,2343,3.614,2368,3.614,2369,3.614,2370,3.614,2394,3.614,2395,3.614,2396,3.614,2430,6.045,2451,3.614,2452,3.614,2453,3.614,2454,3.614,2457,3.747,2569,3.614,2570,3.614,2571,3.614,2899,3.614,3696,3.614,3697,4.084,3698,4.084]],["title/properties.html",[112,0.571,2729,3.313]],["body/properties.html",[22,0.008,105,0.007,106,0.007,112,0.781,2898,6.545,3699,7.396]],["title/routes.html",[194,4.633]],["body/routes.html",[22,0.008,105,0.008,106,0.008,194,5.591]],["title/miscellaneous/typealiases.html",[2768,2.281,3700,5.412]],["body/miscellaneous/typealiases.html",[22,0.007,105,0.007,106,0.007,111,0.349,120,0.514,888,7.345,1226,5.291,2361,6.716,2768,4.397,3701,7.218,3702,8.737,3703,7.218,3704,8.737]],["title/miscellaneous/variables.html",[2768,2.281,3705,4.79]],["body/miscellaneous/variables.html",[22,0.008,105,0.007,106,0.007,111,0.343,120,0.471,123,1.533,124,1.567,617,5.506,653,3.709,655,2.768,2725,6.283,2726,7.223,2727,6.283,2768,4.326,2882,7.276,3705,6.283,3706,7.1,3707,7.1]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"modules/CurveModule.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"modules/InterfaceUtilModule.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"modules/MoonModule.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyData.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"modules/ScatterModule.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"modules/VenusModule.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":676,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"classes/DualStorage.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"components/ToolsNavbarComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["0.0.0",{"_index":3699,"title":{},"body":{"properties.html":{}}}],["0.01",{"_index":1568,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["0.1.7",{"_index":2752,"title":{},"body":{"dependencies.html":{}}}],["0.11.4",{"_index":2767,"title":{},"body":{"dependencies.html":{}}}],["0.27",{"_index":2484,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["0.445",{"_index":2618,"title":{},"body":{"injectables/VenusService.html":{}}}],["0.53",{"_index":2483,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["0.7",{"_index":2155,"title":{},"body":{"components/ScatterHighchartComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["0.8",{"_index":2619,"title":{},"body":{"injectables/VenusService.html":{}}}],["0/1",{"_index":2715,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2681,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2703,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2692,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2700,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2704,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2698,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2683,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2691,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2707,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":2682,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":2721,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":2708,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2686,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2712,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2685,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2684,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2693,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2690,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2702,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":768,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"components/MenubarComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["1.0",{"_index":1445,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["1.082e8",{"_index":2510,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["1.1.19",{"_index":2738,"title":{},"body":{"dependencies.html":{}}}],["1.10.3",{"_index":2748,"title":{},"body":{"dependencies.html":{}}}],["1.210e4",{"_index":2506,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["1.496e8",{"_index":2509,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["1.62",{"_index":1773,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{}}}],["1/1",{"_index":2677,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":2710,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":2699,"title":{},"body":{"coverage.html":{}}}],["1/13",{"_index":2711,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2695,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2720,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":2706,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1187,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"components/SimpleGraphButtonComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["100",{"_index":732,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{}}}],["100px",{"_index":906,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusComponent.html":{}}}],["10px",{"_index":998,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/LineFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["11",{"_index":1191,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"coverage.html":{},"license.html":{}}}],["11.1.0",{"_index":2750,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":1193,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"overview.html":{}}}],["12.4.0",{"_index":2739,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":1195,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"license.html":{}}}],["14",{"_index":1197,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"overview.html":{}}}],["14.1.0",{"_index":2740,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":1199,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"index.html":{},"license.html":{}}}],["15.2.9",{"_index":2731,"title":{},"body":{"dependencies.html":{}}}],["15px",{"_index":1696,"title":{},"body":{"components/LineFormComponent.html":{}}}],["16",{"_index":1201,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"coverage.html":{},"license.html":{}}}],["17",{"_index":1203,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["180",{"_index":2061,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["1996",{"_index":3218,"title":{},"body":{"license.html":{}}}],["2",{"_index":770,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SliderUtil.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["2.0.16",{"_index":2762,"title":{},"body":{"dependencies.html":{}}}],["2.0.5",{"_index":2744,"title":{},"body":{"dependencies.html":{}}}],["2.10.2",{"_index":2742,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":2765,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":2679,"title":{},"body":{"coverage.html":{}}}],["2/30",{"_index":2701,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":2719,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":2724,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":3216,"title":{},"body":{"license.html":{}}}],["2007",{"_index":2901,"title":{},"body":{"license.html":{}}}],["200px",{"_index":2447,"title":{},"body":{"components/ToolsNavbarComponent.html":{}}}],["20px",{"_index":319,"title":{},"body":{"components/AppearanceComponent.html":{},"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/SettingsComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusComponent.html":{}}}],["22",{"_index":2723,"title":{},"body":{"coverage.html":{}}}],["250px",{"_index":324,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["27",{"_index":3698,"title":{},"body":{"overview.html":{}}}],["28",{"_index":2718,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["29",{"_index":2899,"title":{},"body":{"license.html":{},"overview.html":{}}}],["2b4162",{"_index":523,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["3",{"_index":772,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"injectables/MoonService.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"injectables/VenusService.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["3.1.2",{"_index":2751,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":2680,"title":{},"body":{"coverage.html":{}}}],["3/33",{"_index":2722,"title":{},"body":{"coverage.html":{}}}],["3/40",{"_index":2709,"title":{},"body":{"coverage.html":{}}}],["3/44",{"_index":2697,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2482,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"license.html":{}}}],["325769",{"_index":526,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["33",{"_index":2694,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":2393,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{}}}],["36",{"_index":3697,"title":{},"body":{"overview.html":{}}}],["360",{"_index":1776,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{}}}],["4",{"_index":774,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{},"components/ScatterComponent.html":{},"components/VenusComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["4.1.1",{"_index":2754,"title":{},"body":{"dependencies.html":{}}}],["4.2.1",{"_index":2749,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":2687,"title":{},"body":{"coverage.html":{}}}],["4/44",{"_index":2705,"title":{},"body":{"coverage.html":{}}}],["45",{"_index":1778,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["5",{"_index":1172,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{},"components/ScatterHighchartComponent.html":{},"license.html":{}}}],["5.0.0",{"_index":2757,"title":{},"body":{"dependencies.html":{}}}],["5.3.0",{"_index":2745,"title":{},"body":{"dependencies.html":{}}}],["5/9",{"_index":2689,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":2095,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["500px",{"_index":1537,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["55",{"_index":2688,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1175,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"coverage.html":{}}}],["6.62",{"_index":1770,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{}}}],["60",{"_index":2485,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"license.html":{}}}],["66",{"_index":2678,"title":{},"body":{"coverage.html":{}}}],["6b",{"_index":3307,"title":{},"body":{"license.html":{}}}],["6d",{"_index":3334,"title":{},"body":{"license.html":{}}}],["7",{"_index":1178,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"coverage.html":{},"license.html":{}}}],["7.5.0",{"_index":2763,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":907,"title":{},"body":{"components/CurveComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/VenusComponent.html":{},"coverage.html":{}}}],["8.0.0",{"_index":2760,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":905,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/VenusComponent.html":{}}}],["9",{"_index":1183,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"coverage.html":{},"overview.html":{}}}],["90",{"_index":1645,"title":{},"body":{"components/InputSliderComponent.html":{},"components/MoonFormComponent.html":{},"components/ScatterFormComponent.html":{}}}],["99",{"_index":2799,"title":{},"body":{"miscellaneous/functions.html":{}}}],["a['x",{"_index":825,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["a[0",{"_index":996,"title":{},"body":{"components/CurveHighChartComponent.html":{},"injectables/MoonService.html":{}}}],["ability",{"_index":3382,"title":{},"body":{"license.html":{}}}],["about'},{'name",{"_index":33,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["about.component.html",{"_index":19,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.scss",{"_index":17,"title":{},"body":{"components/AboutComponent.html":{}}}],["aboutcomponent",{"_index":1,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["above",{"_index":2521,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"license.html":{}}}],["absence",{"_index":3245,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":2392,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"license.html":{}}}],["absolutely",{"_index":3672,"title":{},"body":{"license.html":{}}}],["abuse",{"_index":3009,"title":{},"body":{"license.html":{}}}],["accept",{"_index":3472,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":3471,"title":{},"body":{"license.html":{}}}],["access",{"_index":2999,"title":{},"body":{"license.html":{}}}],["accessible",{"_index":3540,"title":{},"body":{"license.html":{}}}],["accompanied",{"_index":3287,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":3649,"title":{},"body":{"license.html":{}}}],["accord",{"_index":3244,"title":{},"body":{"license.html":{}}}],["according",{"_index":3641,"title":{},"body":{"license.html":{}}}],["achieve",{"_index":3654,"title":{},"body":{"license.html":{}}}],["acknowledges",{"_index":3182,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":3519,"title":{},"body":{"license.html":{}}}],["action.action",{"_index":896,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/VenusComponent.html":{}}}],["actionhandler",{"_index":881,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/VenusComponent.html":{}}}],["actionhandler(actions",{"_index":887,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/VenusComponent.html":{}}}],["actions",{"_index":890,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/VenusComponent.html":{},"index.html":{},"license.html":{}}}],["actions.foreach((action",{"_index":895,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/VenusComponent.html":{}}}],["activities",{"_index":3091,"title":{},"body":{"license.html":{}}}],["activity",{"_index":3566,"title":{},"body":{"license.html":{}}}],["actual",{"_index":3544,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":104,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["actually",{"_index":3357,"title":{},"body":{"license.html":{}}}],["adapt",{"_index":3063,"title":{},"body":{"license.html":{}}}],["add",{"_index":2365,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["added",{"_index":3243,"title":{},"body":{"license.html":{}}}],["addexiftoimage",{"_index":1415,"title":{},"body":{"injectables/HonorCodeChartService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["addexiftoimage(destcanvas.todataurl('image/jpeg",{"_index":1444,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["addexiftoimage(jpegdata",{"_index":2779,"title":{},"body":{"miscellaneous/functions.html":{}}}],["additional",{"_index":3257,"title":{},"body":{"license.html":{}}}],["address",{"_index":3595,"title":{},"body":{"license.html":{}}}],["addressed",{"_index":3060,"title":{},"body":{"license.html":{}}}],["addrow",{"_index":897,"title":{},"body":{"components/CurveComponent.html":{},"classes/CurveData.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"injectables/DualService.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"injectables/MoonService.html":{},"interfaces/MyData.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"injectables/ScatterService.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"injectables/VenusService.html":{}}}],["addrow(index",{"_index":803,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/MoonData.html":{},"injectables/MoonService.html":{},"interfaces/MyData.html":{},"classes/ScatterData.html":{},"injectables/ScatterService.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["adjusting",{"_index":2172,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["adjustscale",{"_index":2128,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["adopted",{"_index":3215,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":3389,"title":{},"body":{"license.html":{}}}],["advised",{"_index":3636,"title":{},"body":{"license.html":{}}}],["affects",{"_index":3390,"title":{},"body":{"license.html":{}}}],["affero",{"_index":3586,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":3500,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":3178,"title":{},"body":{"license.html":{}}}],["afterviewinit",{"_index":600,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["against",{"_index":3233,"title":{},"body":{"license.html":{}}}],["aggregate",{"_index":3272,"title":{},"body":{"license.html":{}}}],["agree",{"_index":3582,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":3624,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":3531,"title":{},"body":{"license.html":{}}}],["aim",{"_index":3006,"title":{},"body":{"license.html":{}}}],["aliases",{"_index":3701,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":966,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["alleging",{"_index":3507,"title":{},"body":{"license.html":{}}}],["allow",{"_index":3032,"title":{},"body":{"license.html":{}}}],["allowed",{"_index":2917,"title":{},"body":{"license.html":{}}}],["along",{"_index":3247,"title":{},"body":{"license.html":{}}}],["alpha1",{"_index":2746,"title":{},"body":{"dependencies.html":{}}}],["already",{"_index":3518,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":3303,"title":{},"body":{"license.html":{}}}],["although",{"_index":3002,"title":{},"body":{"license.html":{}}}],["amount",{"_index":804,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonData.html":{},"injectables/MoonService.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyData.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["amplitude",{"_index":1802,"title":{},"body":{"components/MoonFormComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"injectables/MoonService.html":{},"miscellaneous/enumerations.html":{}}}],["amplitudesubject",{"_index":1794,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["ancillary",{"_index":3473,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":2982,"title":{},"body":{"license.html":{}}}],["angle",{"_index":2824,"title":{},"body":{"miscellaneous/functions.html":{}}}],["angular",{"_index":1050,"title":{},"body":{"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/MoonModule.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"modules/ScatterModule.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"modules/VenusModule.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":2730,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2732,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1269,"title":{},"body":{"modules/DualModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":2733,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":21,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"injectables/DualService.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"modules/InterfaceUtilModule.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"modules/MoonModule.html":{},"injectables/MoonService.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"modules/ScatterModule.html":{},"injectables/ScatterService.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"modules/VenusModule.html":{},"injectables/VenusService.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartFormComponent.html":{},"modules/CurveModule.html":{},"components/DualChartFormComponent.html":{},"modules/DualModule.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"modules/InterfaceUtilModule.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"modules/MoonModule.html":{},"components/ScatterChartFormComponent.html":{},"modules/ScatterModule.html":{},"classes/SliderUtil.html":{},"components/VenusChartFormComponent.html":{},"modules/VenusModule.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":2734,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":2735,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":1031,"title":{},"body":{"modules/CurveModule.html":{},"injectables/HonorCodePopupService.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["angular/material/icon",{"_index":1045,"title":{},"body":{"modules/CurveModule.html":{},"modules/HonorCodePopupModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["angular/material/input",{"_index":1589,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"modules/InterfaceUtilModule.html":{},"classes/SliderUtil.html":{}}}],["angular/material/legacy",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"modules/DualModule.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"modules/VenusModule.html":{}}}],["angular/material/progress",{"_index":1531,"title":{},"body":{"injectables/HonorCodePopupService.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["angular/material/sidenav",{"_index":2333,"title":{},"body":{"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["angular/material/slider",{"_index":1653,"title":{},"body":{"modules/InterfaceUtilModule.html":{},"modules/MoonModule.html":{}}}],["angular/material/toolbar",{"_index":1715,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{}}}],["angular/platform",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":195,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"dependencies.html":{}}}],["angularseparation",{"_index":1757,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{}}}],["animation",{"_index":674,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["anlysis",{"_index":2834,"title":{},"body":{"index.html":{}}}],["anti",{"_index":3203,"title":{},"body":{"license.html":{}}}],["anyone",{"_index":3254,"title":{},"body":{"license.html":{}}}],["anything",{"_index":3075,"title":{},"body":{"license.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppearanceComponent.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["app.component",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":34,"title":{"components/AppComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearance",{"_index":218,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"components/SettingsComponent.html":{}}}],["appearance'},{'name",{"_index":37,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["appearance.component.html",{"_index":239,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["appearance.component.scss",{"_index":238,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["appearance.utils",{"_index":378,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{}}}],["appearancecomponent",{"_index":36,"title":{"components/AppearanceComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearanceservice",{"_index":116,"title":{"injectables/AppearanceService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearanceservice.getfontfamily",{"_index":281,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["appearanceservice.getfontsize",{"_index":283,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["appearanceservice.getfontstyle",{"_index":282,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["appearancestorageservice",{"_index":149,"title":{"injectables/AppearanceStorageService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"coverage.html":{},"overview.html":{}}}],["applicable",{"_index":3081,"title":{},"body":{"license.html":{}}}],["applications",{"_index":3687,"title":{},"body":{"license.html":{}}}],["applied",{"_index":3038,"title":{},"body":{"license.html":{}}}],["applies",{"_index":2935,"title":{},"body":{"license.html":{}}}],["apply",{"_index":2938,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":133,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":3104,"title":{},"body":{"license.html":{}}}],["appropriately",{"_index":3237,"title":{},"body":{"license.html":{}}}],["approutingmodule",{"_index":145,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"modules.html":{},"overview.html":{}}}],["approximates",{"_index":3645,"title":{},"body":{"license.html":{}}}],["arc",{"_index":2497,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["area",{"_index":2550,"title":{},"body":{"components/VenusHighchartComponent.html":{},"license.html":{}}}],["arise",{"_index":3018,"title":{},"body":{"license.html":{}}}],["arising",{"_index":3628,"title":{},"body":{"license.html":{}}}],["arrange",{"_index":3541,"title":{},"body":{"license.html":{}}}],["arrangement",{"_index":3554,"title":{},"body":{"license.html":{}}}],["array",{"_index":1760,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["article",{"_index":3212,"title":{},"body":{"license.html":{}}}],["asking",{"_index":2956,"title":{},"body":{"license.html":{}}}],["assert",{"_index":2977,"title":{},"body":{"license.html":{}}}],["assets",{"_index":3491,"title":{},"body":{"license.html":{}}}],["associated",{"_index":3160,"title":{},"body":{"license.html":{}}}],["assume",{"_index":3619,"title":{},"body":{"license.html":{}}}],["assumption",{"_index":3648,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":3433,"title":{},"body":{"license.html":{}}}],["assures",{"_index":3041,"title":{},"body":{"license.html":{}}}],["astronony",{"_index":2840,"title":{},"body":{"index.html":{}}}],["attach",{"_index":3656,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":3447,"title":{},"body":{"license.html":{}}}],["attest",{"_index":1490,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["attributed",{"_index":2994,"title":{},"body":{"license.html":{}}}],["attributions",{"_index":3416,"title":{},"body":{"license.html":{}}}],["author",{"_index":2892,"title":{},"body":{"index.html":{},"license.html":{}}}],["authorization",{"_index":3368,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":3409,"title":{},"body":{"license.html":{}}}],["authorizes",{"_index":3513,"title":{},"body":{"license.html":{}}}],["authorizing",{"_index":3557,"title":{},"body":{"license.html":{}}}],["authors",{"_index":2870,"title":{},"body":{"index.html":{},"license.html":{}}}],["auto",{"_index":913,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MenubarComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/VenusComponent.html":{}}}],["automatic",{"_index":3482,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":3170,"title":{},"body":{"license.html":{}}}],["available",{"_index":3089,"title":{},"body":{"license.html":{},"modules.html":{}}}],["avoid",{"_index":2175,"title":{},"body":{"components/ScatterHighchartComponent.html":{},"license.html":{}}}],["away",{"_index":2924,"title":{},"body":{"license.html":{}}}],["axis",{"_index":731,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["b",{"_index":824,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"injectables/MoonService.html":{},"license.html":{}}}],["b['x",{"_index":826,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["b[0",{"_index":997,"title":{},"body":{"components/CurveHighChartComponent.html":{},"injectables/MoonService.html":{}}}],["backdrop",{"_index":2413,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["background",{"_index":2554,"title":{},"body":{"components/VenusHighchartComponent.html":{}}}],["bar",{"_index":1701,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["based",{"_index":223,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["basic",{"_index":3171,"title":{},"body":{"license.html":{}}}],["before",{"_index":1463,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["behalf",{"_index":3192,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":2414,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["behaviorsubject",{"_index":1305,"title":{},"body":{"injectables/DualService.html":{},"injectables/MoonService.html":{},"injectables/ScatterService.html":{},"injectables/VenusService.html":{}}}],["behaviorsubject(this.dualchartinfo",{"_index":1306,"title":{},"body":{"injectables/DualService.html":{}}}],["behaviorsubject(this.dualdata",{"_index":1310,"title":{},"body":{"injectables/DualService.html":{}}}],["behaviorsubject(this.getdata",{"_index":1950,"title":{},"body":{"injectables/MoonService.html":{}}}],["behaviorsubject(this.moonchartinfo",{"_index":1947,"title":{},"body":{"injectables/MoonService.html":{}}}],["behaviorsubject(this.scatterchartinfo",{"_index":2257,"title":{},"body":{"injectables/ScatterService.html":{}}}],["behaviorsubject(this.scatterdata",{"_index":2260,"title":{},"body":{"injectables/ScatterService.html":{}}}],["behaviorsubject(this.venuschartinfo",{"_index":2606,"title":{},"body":{"injectables/VenusService.html":{}}}],["behaviorsubject(this.venusdata.getdata",{"_index":2609,"title":{},"body":{"injectables/VenusService.html":{}}}],["behaviorsubject(updatesource.init",{"_index":1955,"title":{},"body":{"injectables/MoonService.html":{},"injectables/ScatterService.html":{}}}],["being",{"_index":3332,"title":{},"body":{"license.html":{}}}],["believe",{"_index":3550,"title":{},"body":{"license.html":{}}}],["below",{"_index":2520,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"license.html":{}}}],["benefit",{"_index":3543,"title":{},"body":{"license.html":{}}}],["best",{"_index":3653,"title":{},"body":{"license.html":{}}}],["beta",{"_index":2502,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["between",{"_index":2500,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["beyond",{"_index":3274,"title":{},"body":{"license.html":{}}}],["black",{"_index":528,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"components/ScatterHighchartComponent.html":{}}}],["blob",{"_index":2790,"title":{},"body":{"miscellaneous/functions.html":{}}}],["block",{"_index":2391,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{}}}],["blue",{"_index":471,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["body",{"_index":3126,"title":{},"body":{"license.html":{}}}],["bold",{"_index":495,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["bolder",{"_index":497,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["boolean",{"_index":830,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/DualHighchartComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"classes/SliderUtil.html":{},"components/VenusHighchartComponent.html":{}}}],["bootstrap",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/InterfaceUtilModule.html":{},"modules/MenubarModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules/SettingsModule.html":{},"modules/SimpleDataButtonModule.html":{},"modules/SimpleGraphButtonModule.html":{},"modules/ToolsNavbarModule.html":{},"modules/VenusModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":1505,"title":{},"body":{"modules/HonorCodePopupModule.html":{},"dependencies.html":{}}}],["both",{"_index":2987,"title":{},"body":{"license.html":{}}}],["bottom",{"_index":665,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["box",{"_index":3678,"title":{},"body":{"license.html":{}}}],["break",{"_index":813,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["browse",{"_index":3695,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{}}}],["browseranimationsmodule",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{}}}],["browsermodule",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["brush",{"_index":1720,"title":{},"body":{"components/MenubarComponent.html":{}}}],["build",{"_index":2877,"title":{},"body":{"index.html":{}}}],["buildto",{"_index":2883,"title":{},"body":{"index.html":{}}}],["business",{"_index":3563,"title":{},"body":{"license.html":{}}}],["button",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"components/AppearanceComponent.html":{},"components/CurveComponent.html":{},"modules/CurveModule.html":{},"components/DualComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"components/VenusComponent.html":{}}}],["button'},{'name",{"_index":90,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["button.component",{"_index":1027,"title":{},"body":{"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules/VenusModule.html":{}}}],["button.component.html",{"_index":2347,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["button.component.scss",{"_index":2346,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["button.component.ts",{"_index":2345,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"coverage.html":{}}}],["button.component.ts:12",{"_index":2356,"title":{},"body":{"components/SimpleDataButtonComponent.html":{}}}],["button.component.ts:13",{"_index":2355,"title":{},"body":{"components/SimpleDataButtonComponent.html":{}}}],["button.component.ts:14",{"_index":2354,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{}}}],["button.component.ts:15",{"_index":2382,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{}}}],["button.component.ts:17",{"_index":2375,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{}}}],["button.component.ts:20",{"_index":2359,"title":{},"body":{"components/SimpleDataButtonComponent.html":{}}}],["button.component.ts:23",{"_index":2360,"title":{},"body":{"components/SimpleDataButtonComponent.html":{}}}],["button.component.ts:24",{"_index":2377,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{}}}],["button.component.ts:27",{"_index":2357,"title":{},"body":{"components/SimpleDataButtonComponent.html":{}}}],["button.component.ts:30",{"_index":2379,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{}}}],["button.component.ts:31",{"_index":2358,"title":{},"body":{"components/SimpleDataButtonComponent.html":{}}}],["button.component.ts:34",{"_index":2378,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{}}}],["button/simple",{"_index":1026,"title":{},"body":{"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"modules/VenusModule.html":{},"coverage.html":{}}}],["buttons",{"_index":972,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["c",{"_index":2903,"title":{},"body":{"license.html":{}}}],["c3cfd4",{"_index":525,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["called",{"_index":3070,"title":{},"body":{"license.html":{}}}],["canvas",{"_index":1430,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["canvas.height",{"_index":1435,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["canvas.width",{"_index":1433,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["carry",{"_index":3250,"title":{},"body":{"license.html":{}}}],["case",{"_index":810,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"license.html":{}}}],["cases",{"_index":3352,"title":{},"body":{"license.html":{}}}],["cause",{"_index":3278,"title":{},"body":{"license.html":{}}}],["cease",{"_index":3451,"title":{},"body":{"license.html":{}}}],["center",{"_index":967,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["certain",{"_index":2959,"title":{},"body":{"license.html":{}}}],["cessation",{"_index":3463,"title":{},"body":{"license.html":{}}}],["change",{"_index":2927,"title":{},"body":{"license.html":{}}}],["changed",{"_index":2992,"title":{},"body":{"license.html":{}}}],["changes",{"_index":934,"title":{},"body":{"classes/CurveData.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["changing",{"_index":2916,"title":{},"body":{"license.html":{}}}],["character",{"_index":2800,"title":{},"body":{"miscellaneous/functions.html":{}}}],["characterized",{"_index":3379,"title":{},"body":{"license.html":{}}}],["charge",{"_index":2943,"title":{},"body":{"license.html":{}}}],["chart",{"_index":42,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"modules/CurveModule.html":{},"classes/CurveStorage.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"modules/MoonModule.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"modules/ScatterModule.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"modules/VenusModule.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["chart'},{'name",{"_index":40,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["chart.canvas",{"_index":1431,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["chart.component",{"_index":1040,"title":{},"body":{"modules/CurveModule.html":{}}}],["chart.component.html",{"_index":615,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveHighChartComponent.html":{}}}],["chart.component.scss",{"_index":616,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveHighChartComponent.html":{}}}],["chart.component.ts",{"_index":580,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveHighChartComponent.html":{},"coverage.html":{}}}],["chart.component.ts:101",{"_index":589,"title":{},"body":{"classes/CurveChart.html":{}}}],["chart.component.ts:104",{"_index":961,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:118",{"_index":958,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:124",{"_index":959,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:13",{"_index":975,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:130",{"_index":956,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:132",{"_index":599,"title":{},"body":{"classes/CurveChart.html":{}}}],["chart.component.ts:134",{"_index":955,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:136",{"_index":594,"title":{},"body":{"classes/CurveChart.html":{}}}],["chart.component.ts:14",{"_index":976,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:15",{"_index":962,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:156",{"_index":597,"title":{},"body":{"classes/CurveChart.html":{}}}],["chart.component.ts:16",{"_index":963,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:17",{"_index":974,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:25",{"_index":699,"title":{},"body":{"components/CurveChartComponent.html":{}}}],["chart.component.ts:29",{"_index":698,"title":{},"body":{"components/CurveChartComponent.html":{}}}],["chart.component.ts:33",{"_index":700,"title":{},"body":{"components/CurveChartComponent.html":{}}}],["chart.component.ts:37",{"_index":701,"title":{},"body":{"components/CurveChartComponent.html":{},"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:38",{"_index":695,"title":{},"body":{"components/CurveChartComponent.html":{}}}],["chart.component.ts:45",{"_index":951,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:50",{"_index":953,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:56",{"_index":696,"title":{},"body":{"components/CurveChartComponent.html":{}}}],["chart.component.ts:81",{"_index":697,"title":{},"body":{"components/CurveChartComponent.html":{},"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:86",{"_index":960,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:88",{"_index":587,"title":{},"body":{"classes/CurveChart.html":{}}}],["chart.component.ts:90",{"_index":957,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["chart.component.ts:94",{"_index":588,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveHighChartComponent.html":{}}}],["chart.defaults.bordercolor",{"_index":628,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["chart.defaults.color",{"_index":626,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["chart.exportchart",{"_index":1449,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["chart.exportchartlocal",{"_index":1455,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["chart.getchart(this.id)?.update('none",{"_index":677,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["chart.js",{"_index":564,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"injectables/HonorCodeChartService.html":{},"interfaces/MyChart.html":{},"dependencies.html":{},"index.html":{}}}],["chart.js/dist/types",{"_index":602,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"injectables/HonorCodeChartService.html":{}}}],["chart.service",{"_index":894,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/VenusComponent.html":{}}}],["chart.service.ts",{"_index":1387,"title":{},"body":{"injectables/HonorCodeChartService.html":{},"coverage.html":{}}}],["chart.service.ts:15",{"_index":1395,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["chart.service.ts:27",{"_index":1403,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["chart.service.ts:44",{"_index":1412,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["chart.service.ts:55",{"_index":1414,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["chart.service.ts:66",{"_index":1398,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["chart.service.ts:70",{"_index":1401,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["chart/curve",{"_index":579,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"modules/CurveModule.html":{},"coverage.html":{}}}],["chartaction",{"_index":1226,"title":{},"body":{"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/VenusComponent.html":{},"miscellaneous/typealiases.html":{}}}],["chartcolor",{"_index":377,"title":{"classes/ChartColor.html":{}},"body":{"injectables/AppearanceService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"coverage.html":{}}}],["chartcolor.getbackgroundcolor(this.getchartcolormode",{"_index":405,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["chartcolor.getfontcolor(this.getchartcolormode",{"_index":404,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["chartcolormode",{"_index":352,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["chartcolormode.dark",{"_index":409,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["chartcolormode.light",{"_index":407,"title":{},"body":{"injectables/AppearanceService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["chartcolormodekey",{"_index":413,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["chartconfiguration",{"_index":562,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"interfaces/MyChart.html":{}}}],["chartconfiguration['data",{"_index":570,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"interfaces/MyChart.html":{}}}],["chartconstructor",{"_index":937,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["chartdata",{"_index":595,"title":{},"body":{"classes/CurveChart.html":{}}}],["chartinfo",{"_index":531,"title":{"interfaces/ChartInfo.html":{}},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"interfaces/MyChart.html":{},"interfaces/MyStorage.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"coverage.html":{}}}],["chartinfokey",{"_index":846,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualStorage.html":{},"classes/MoonStorage.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["chartinfoobject",{"_index":1068,"title":{},"body":{"classes/CurveStorage.html":{}}}],["chartinfosubject",{"_index":1274,"title":{},"body":{"injectables/DualService.html":{},"injectables/MoonService.html":{},"injectables/ScatterService.html":{},"injectables/VenusService.html":{}}}],["chartinitialized",{"_index":941,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["chartinitialized($event",{"_index":949,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["chartobject",{"_index":938,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["chartoptions",{"_index":563,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MyChart.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["chartprecision",{"_index":1910,"title":{},"body":{"injectables/MoonService.html":{}}}],["charts",{"_index":1043,"title":{},"body":{"modules/CurveModule.html":{},"injectables/HonorCodeChartService.html":{},"dependencies.html":{}}}],["charts/utils",{"_index":1419,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["chartservice",{"_index":884,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/VenusComponent.html":{}}}],["charttitle",{"_index":711,"title":{},"body":{"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["charttype",{"_index":1399,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["chartuseractionobs",{"_index":2373,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["check",{"_index":2875,"title":{},"body":{"index.html":{}}}],["children",{"_index":214,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["choose",{"_index":3603,"title":{},"body":{"license.html":{}}}],["choosing",{"_index":3607,"title":{},"body":{"license.html":{}}}],["circle",{"_index":2090,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["circumstances",{"_index":3197,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":3204,"title":{},"body":{"license.html":{}}}],["civil",{"_index":3647,"title":{},"body":{"license.html":{}}}],["claim",{"_index":3504,"title":{},"body":{"license.html":{}}}],["claims",{"_index":3515,"title":{},"body":{"license.html":{}}}],["class",{"_index":24,"title":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"classes/CurveChartInfo.html":{},"classes/CurveData.html":{},"classes/CurveImpl.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"classes/DefaultAppearanceSettings.html":{},"classes/DualChartInfo.html":{},"classes/DualData.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"classes/MoonChartInfo.html":{},"classes/MoonData.html":{},"classes/MoonInterfaceImpl.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"classes/ScatterChartInfo.html":{},"classes/ScatterData.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"classes/SliderUtil.html":{},"classes/VenusChartInfo.html":{},"classes/VenusData.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"modules/CurveModule.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"modules/InterfaceUtilModule.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"modules/MoonModule.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"modules/ScatterModule.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"modules/VenusModule.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"license.html":{}}}],["classes",{"_index":460,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"classes/CurveChartInfo.html":{},"classes/CurveData.html":{},"classes/CurveImpl.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"classes/DefaultAppearanceSettings.html":{},"classes/DualChartInfo.html":{},"classes/DualData.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"classes/MoonChartInfo.html":{},"classes/MoonData.html":{},"classes/MoonInterfaceImpl.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"classes/ScatterChartInfo.html":{},"classes/ScatterData.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"classes/SliderUtil.html":{},"classes/VenusChartInfo.html":{},"classes/VenusData.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"overview.html":{}}}],["clear",{"_index":3315,"title":{},"body":{"license.html":{}}}],["clearly",{"_index":2984,"title":{},"body":{"license.html":{}}}],["click",{"_index":1494,"title":{},"body":{"components/HonorCodePopupComponent.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["close",{"_index":1485,"title":{},"body":{"components/HonorCodePopupComponent.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["closely",{"_index":3644,"title":{},"body":{"license.html":{}}}],["closest",{"_index":2496,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["cluster",{"_index":2441,"title":{},"body":{"components/ToolsNavbarComponent.html":{}}}],["cluster_appmodule",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_curvemodule",{"_index":1015,"title":{},"body":{"modules/CurveModule.html":{},"overview.html":{}}}],["cluster_curvemodule_declarations",{"_index":1016,"title":{},"body":{"modules/CurveModule.html":{},"overview.html":{}}}],["cluster_curvemodule_exports",{"_index":1017,"title":{},"body":{"modules/CurveModule.html":{},"overview.html":{}}}],["cluster_curvemodule_imports",{"_index":1018,"title":{},"body":{"modules/CurveModule.html":{},"overview.html":{}}}],["cluster_curvemodule_providers",{"_index":1019,"title":{},"body":{"modules/CurveModule.html":{},"overview.html":{}}}],["cluster_dualmodule",{"_index":1263,"title":{},"body":{"modules/DualModule.html":{},"overview.html":{}}}],["cluster_dualmodule_declarations",{"_index":1264,"title":{},"body":{"modules/DualModule.html":{},"overview.html":{}}}],["cluster_dualmodule_imports",{"_index":1265,"title":{},"body":{"modules/DualModule.html":{}}}],["cluster_dualmodule_providers",{"_index":1266,"title":{},"body":{"modules/DualModule.html":{},"overview.html":{}}}],["cluster_honorcodepopupmodule",{"_index":1499,"title":{},"body":{"modules/HonorCodePopupModule.html":{},"overview.html":{}}}],["cluster_honorcodepopupmodule_declarations",{"_index":1500,"title":{},"body":{"modules/HonorCodePopupModule.html":{},"overview.html":{}}}],["cluster_interfaceutilmodule",{"_index":1647,"title":{},"body":{"modules/InterfaceUtilModule.html":{},"overview.html":{}}}],["cluster_interfaceutilmodule_declarations",{"_index":1648,"title":{},"body":{"modules/InterfaceUtilModule.html":{},"overview.html":{}}}],["cluster_interfaceutilmodule_exports",{"_index":1649,"title":{},"body":{"modules/InterfaceUtilModule.html":{},"overview.html":{}}}],["cluster_menubarmodule",{"_index":1727,"title":{},"body":{"modules/MenubarModule.html":{},"overview.html":{}}}],["cluster_menubarmodule_declarations",{"_index":1730,"title":{},"body":{"modules/MenubarModule.html":{},"overview.html":{}}}],["cluster_menubarmodule_exports",{"_index":1728,"title":{},"body":{"modules/MenubarModule.html":{},"overview.html":{}}}],["cluster_menubarmodule_imports",{"_index":1729,"title":{},"body":{"modules/MenubarModule.html":{}}}],["cluster_moonmodule",{"_index":1900,"title":{},"body":{"modules/MoonModule.html":{},"overview.html":{}}}],["cluster_moonmodule_declarations",{"_index":1901,"title":{},"body":{"modules/MoonModule.html":{},"overview.html":{}}}],["cluster_moonmodule_imports",{"_index":1903,"title":{},"body":{"modules/MoonModule.html":{},"overview.html":{}}}],["cluster_moonmodule_providers",{"_index":1902,"title":{},"body":{"modules/MoonModule.html":{},"overview.html":{}}}],["cluster_scattermodule",{"_index":2218,"title":{},"body":{"modules/ScatterModule.html":{},"overview.html":{}}}],["cluster_scattermodule_declarations",{"_index":2219,"title":{},"body":{"modules/ScatterModule.html":{},"overview.html":{}}}],["cluster_scattermodule_imports",{"_index":2221,"title":{},"body":{"modules/ScatterModule.html":{}}}],["cluster_scattermodule_providers",{"_index":2220,"title":{},"body":{"modules/ScatterModule.html":{},"overview.html":{}}}],["cluster_settingsmodule",{"_index":2341,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_declarations",{"_index":2342,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_imports",{"_index":2343,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_simpledatabuttonmodule",{"_index":2368,"title":{},"body":{"modules/SimpleDataButtonModule.html":{},"overview.html":{}}}],["cluster_simpledatabuttonmodule_declarations",{"_index":2369,"title":{},"body":{"modules/SimpleDataButtonModule.html":{},"overview.html":{}}}],["cluster_simpledatabuttonmodule_exports",{"_index":2370,"title":{},"body":{"modules/SimpleDataButtonModule.html":{},"overview.html":{}}}],["cluster_simpledatabuttonmodule_imports",{"_index":2371,"title":{},"body":{"modules/SimpleDataButtonModule.html":{}}}],["cluster_simplegraphbuttonmodule",{"_index":2394,"title":{},"body":{"modules/SimpleGraphButtonModule.html":{},"overview.html":{}}}],["cluster_simplegraphbuttonmodule_declarations",{"_index":2396,"title":{},"body":{"modules/SimpleGraphButtonModule.html":{},"overview.html":{}}}],["cluster_simplegraphbuttonmodule_exports",{"_index":2395,"title":{},"body":{"modules/SimpleGraphButtonModule.html":{},"overview.html":{}}}],["cluster_toolsnavbarmodule",{"_index":2451,"title":{},"body":{"modules/ToolsNavbarModule.html":{},"overview.html":{}}}],["cluster_toolsnavbarmodule_declarations",{"_index":2454,"title":{},"body":{"modules/ToolsNavbarModule.html":{},"overview.html":{}}}],["cluster_toolsnavbarmodule_exports",{"_index":2452,"title":{},"body":{"modules/ToolsNavbarModule.html":{},"overview.html":{}}}],["cluster_toolsnavbarmodule_imports",{"_index":2453,"title":{},"body":{"modules/ToolsNavbarModule.html":{},"overview.html":{}}}],["cluster_venusmodule",{"_index":2569,"title":{},"body":{"modules/VenusModule.html":{},"overview.html":{}}}],["cluster_venusmodule_declarations",{"_index":2570,"title":{},"body":{"modules/VenusModule.html":{},"overview.html":{}}}],["cluster_venusmodule_imports",{"_index":2572,"title":{},"body":{"modules/VenusModule.html":{}}}],["cluster_venusmodule_providers",{"_index":2571,"title":{},"body":{"modules/VenusModule.html":{},"overview.html":{}}}],["code",{"_index":60,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"modules/MoonModule.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"license.html":{}}}],["col",{"_index":807,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/VenusComponent.html":{}}}],["collect",{"_index":1462,"title":{},"body":{"components/HonorCodePopupComponent.html":{},"license.html":{}}}],["colnames",{"_index":1088,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["color",{"_index":306,"title":{},"body":{"components/AppearanceComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["color.displayname",{"_index":308,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["colors",{"_index":672,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["colortheme",{"_index":258,"title":{},"body":{"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{}}}],["colorthemekey",{"_index":414,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["colorthemes",{"_index":355,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["colorthemes.dark",{"_index":408,"title":{},"body":{"injectables/AppearanceService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["colorthemes.high_contrast",{"_index":506,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["colorthemes.high_contrast_dark",{"_index":509,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["colorthemes.light",{"_index":406,"title":{},"body":{"injectables/AppearanceService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["colorthemesettings",{"_index":274,"title":{"classes/ColorThemeSettings.html":{}},"body":{"components/AppearanceComponent.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"coverage.html":{}}}],["colorthemesettings.getfontfamilylists",{"_index":266,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["colorthemesettings.getfontsizelists",{"_index":269,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["colorthemesettings.getfontstylelists",{"_index":272,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["colorthemesettings.getthemelists",{"_index":263,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["colorthemeslist",{"_index":242,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["column",{"_index":910,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/VenusComponent.html":{}}}],["combination",{"_index":3589,"title":{},"body":{"license.html":{}}}],["combine",{"_index":3587,"title":{},"body":{"license.html":{}}}],["combined",{"_index":3269,"title":{},"body":{"license.html":{}}}],["comes",{"_index":3255,"title":{},"body":{"license.html":{}}}],["comic",{"_index":503,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["comic_neue",{"_index":502,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["commands",{"_index":3116,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":3362,"title":{},"body":{"license.html":{}}}],["commitment",{"_index":3532,"title":{},"body":{"license.html":{}}}],["common",{"_index":3356,"title":{},"body":{"license.html":{}}}],["commonmodule",{"_index":1268,"title":{},"body":{"modules/DualModule.html":{},"modules/ScatterModule.html":{}}}],["communication",{"_index":3167,"title":{},"body":{"license.html":{}}}],["compilation",{"_index":3264,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":3273,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":3568,"title":{},"body":{"license.html":{}}}],["compiler",{"_index":3148,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":3487,"title":{},"body":{"license.html":{}}}],["comply",{"_index":3190,"title":{},"body":{"license.html":{}}}],["compodoc/compodoc",{"_index":2737,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"license.html":{}}}],["component_template",{"_index":31,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"overview.html":{}}}],["computer",{"_index":3085,"title":{},"body":{"license.html":{}}}],["computers",{"_index":3035,"title":{},"body":{"license.html":{}}}],["concerning",{"_index":3588,"title":{},"body":{"license.html":{}}}],["concerns",{"_index":3596,"title":{},"body":{"license.html":{}}}],["conditioned",{"_index":3562,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":3046,"title":{},"body":{"license.html":{}}}],["configuration",{"_index":619,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["confused",{"_index":2526,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["connection",{"_index":3552,"title":{},"body":{"license.html":{}}}],["consequence",{"_index":3475,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":3627,"title":{},"body":{"license.html":{}}}],["consider",{"_index":3685,"title":{},"body":{"license.html":{}}}],["considered",{"_index":3435,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":3523,"title":{},"body":{"license.html":{}}}],["conspicuously",{"_index":3236,"title":{},"body":{"license.html":{}}}],["const",{"_index":201,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"classes/DualStorage.html":{},"injectables/HonorCodeChartService.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/SliderUtil.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["constantly",{"_index":3029,"title":{},"body":{"license.html":{}}}],["constitutes",{"_index":3181,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"classes/SliderUtil.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["constructor(appearanceservice",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/AppearanceComponent.html":{}}}],["constructor(dataservice",{"_index":1109,"title":{},"body":{"components/CurveTableComponent.html":{}}}],["constructor(defaultdata",{"_index":850,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["constructor(dialog",{"_index":1516,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["constructor(id",{"_index":586,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["constructor(matdialogref",{"_index":1471,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["constructor(popupservice",{"_index":2374,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{}}}],["constructor(private",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["constructor(service",{"_index":694,"title":{},"body":{"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["constructor(storageservice",{"_index":345,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["construed",{"_index":3572,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":3340,"title":{},"body":{"license.html":{}}}],["contact",{"_index":2891,"title":{},"body":{"index.html":{},"license.html":{}}}],["contain",{"_index":3569,"title":{},"body":{"license.html":{}}}],["container",{"_index":317,"title":{},"body":{"components/AppearanceComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/MoonComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["containing",{"_index":2801,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["contains",{"_index":1655,"title":{},"body":{"components/LineFormComponent.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"license.html":{}}}],["content",{"_index":912,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusComponent.html":{},"license.html":{}}}],["contents",{"_index":3527,"title":{},"body":{"license.html":{}}}],["context",{"_index":3142,"title":{},"body":{"license.html":{}}}],["contextbutton",{"_index":973,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["continue",{"_index":3385,"title":{},"body":{"license.html":{}}}],["continued",{"_index":3371,"title":{},"body":{"license.html":{}}}],["contractual",{"_index":3432,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":3578,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":508,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"license.html":{}}}],["contributor",{"_index":3512,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":3514,"title":{},"body":{"license.html":{}}}],["control",{"_index":3154,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":3517,"title":{},"body":{"license.html":{}}}],["convenient",{"_index":3107,"title":{},"body":{"license.html":{}}}],["convert",{"_index":2797,"title":{},"body":{"miscellaneous/functions.html":{}}}],["convey",{"_index":3093,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":3556,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":3380,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":3101,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":3431,"title":{},"body":{"license.html":{}}}],["coordinates",{"_index":2108,"title":{},"body":{"classes/ScatterData.html":{}}}],["copies",{"_index":2914,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2911,"title":{},"body":{"license.html":{}}}],["copying",{"_index":3047,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":2919,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2902,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":3056,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":3194,"title":{},"body":{"license.html":{}}}],["correction",{"_index":3622,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":2817,"title":{},"body":{"miscellaneous/functions.html":{}}}],["corresponding",{"_index":3151,"title":{},"body":{"license.html":{}}}],["cosphi",{"_index":2519,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["cost",{"_index":3300,"title":{},"body":{"license.html":{}}}],["count",{"_index":839,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/LineFormComponent.html":{}}}],["counterclaim",{"_index":3505,"title":{},"body":{"license.html":{}}}],["countries",{"_index":3090,"title":{},"body":{"license.html":{}}}],["country",{"_index":3546,"title":{},"body":{"license.html":{}}}],["course",{"_index":2842,"title":{},"body":{"index.html":{},"license.html":{}}}],["court",{"_index":3577,"title":{},"body":{"license.html":{}}}],["courts",{"_index":3643,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":3535,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":2672,"title":{"coverage.html":{}},"body":{"coverage.html":{},"license.html":{}}}],["covered",{"_index":3072,"title":{},"body":{"license.html":{}}}],["create",{"_index":1446,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["created",{"_index":1457,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["credit",{"_index":1488,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["credits",{"_index":1453,"title":{},"body":{"injectables/HonorCodeChartService.html":{},"miscellaneous/functions.html":{}}}],["criterion",{"_index":3119,"title":{},"body":{"license.html":{}}}],["cross",{"_index":2157,"title":{},"body":{"components/ScatterHighchartComponent.html":{},"license.html":{}}}],["cure",{"_index":3467,"title":{},"body":{"license.html":{}}}],["current",{"_index":2804,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cursive",{"_index":1719,"title":{},"body":{"components/MenubarComponent.html":{}}}],["curve",{"_index":39,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"modules/CurveModule.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["curve'},{'name",{"_index":45,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["curve.component",{"_index":1024,"title":{},"body":{"modules/CurveModule.html":{}}}],["curve.component.html",{"_index":880,"title":{},"body":{"components/CurveComponent.html":{}}}],["curve.component.scss",{"_index":879,"title":{},"body":{"components/CurveComponent.html":{}}}],["curve.service",{"_index":604,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/LineFormComponent.html":{}}}],["curve.service.util",{"_index":610,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/LineFormComponent.html":{}}}],["curvechart",{"_index":577,"title":{"classes/CurveChart.html":{}},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"coverage.html":{}}}],["curvechart(this.id",{"_index":631,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["curvechartcomponent",{"_index":38,"title":{"components/CurveChartComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["curvechartformcomponent",{"_index":41,"title":{"components/CurveChartFormComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["curvechartinfo",{"_index":607,"title":{"classes/CurveChartInfo.html":{}},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"coverage.html":{}}}],["curvechartinfo).getcharttitle",{"_index":671,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["curvechartinfo).gettablelabels",{"_index":651,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["curvechartinfo).getxaxislabel",{"_index":661,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["curvechartinfo).getyaxislabel",{"_index":667,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["curvechartinfostorageobject",{"_index":747,"title":{"interfaces/CurveChartInfoStorageObject.html":{}},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"coverage.html":{}}}],["curvecomponent",{"_index":44,"title":{"components/CurveComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["curvecount",{"_index":592,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["curvecount).join",{"_index":782,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["curvecounts",{"_index":608,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/LineFormComponent.html":{},"miscellaneous/enumerations.html":{}}}],["curvecounts.four",{"_index":691,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/LineFormComponent.html":{}}}],["curvecounts.one",{"_index":681,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/LineFormComponent.html":{}}}],["curvecounts.three",{"_index":688,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/LineFormComponent.html":{}}}],["curvecounts.two",{"_index":685,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/LineFormComponent.html":{}}}],["curvecountskeys",{"_index":1659,"title":{},"body":{"components/LineFormComponent.html":{}}}],["curvedata",{"_index":914,"title":{"classes/CurveData.html":{}},"body":{"classes/CurveData.html":{},"coverage.html":{}}}],["curvedatadict",{"_index":591,"title":{"interfaces/CurveDataDict.html":{}},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"coverage.html":{}}}],["curvehighchartcomponent",{"_index":46,"title":{"components/CurveHighChartComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["curveimpl",{"_index":834,"title":{"classes/CurveImpl.html":{}},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"coverage.html":{}}}],["curveinterface",{"_index":609,"title":{"interfaces/CurveInterface.html":{}},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"coverage.html":{}}}],["curveinterface).getcurvecount",{"_index":650,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["curveinterface).getismagnitudeon",{"_index":669,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["curveinterface.getismagnitudeon",{"_index":1693,"title":{},"body":{"components/LineFormComponent.html":{}}}],["curveinterfacestorageobject",{"_index":832,"title":{"interfaces/CurveInterfaceStorageObject.html":{}},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"coverage.html":{}}}],["curveinterfacestorageobject.curvecount",{"_index":841,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["curveinterfacestorageobject.ismagnitudeon",{"_index":842,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["curvemodule",{"_index":1014,"title":{"modules/CurveModule.html":{}},"body":{"modules/CurveModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"modules.html":{},"overview.html":{}}}],["curveparam",{"_index":762,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"miscellaneous/enumerations.html":{}}}],["curveparam.x",{"_index":811,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["curveparam.y1",{"_index":814,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["curveparam.y2",{"_index":816,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["curveparam.y3",{"_index":818,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["curveparam.y4",{"_index":820,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["curves",{"_index":1656,"title":{},"body":{"components/LineFormComponent.html":{}}}],["curveservice",{"_index":603,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/LineFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["curvestorage",{"_index":843,"title":{"classes/CurveStorage.html":{}},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"coverage.html":{}}}],["curvetable",{"_index":1072,"title":{"classes/CurveTable.html":{}},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"coverage.html":{}}}],["curvetable(this.id",{"_index":1090,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["curvetablecomponent",{"_index":48,"title":{"components/CurveTableComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["custom",{"_index":618,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["customarily",{"_index":3290,"title":{},"body":{"license.html":{}}}],["customer",{"_index":3296,"title":{},"body":{"license.html":{}}}],["d",{"_index":3263,"title":{},"body":{"license.html":{}}}],["d[0",{"_index":2164,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["d[1",{"_index":2165,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["damages",{"_index":3625,"title":{},"body":{"license.html":{}}}],["danger",{"_index":3037,"title":{},"body":{"license.html":{}}}],["dark",{"_index":488,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["dark_theme",{"_index":489,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"components/ScatterHighchartComponent.html":{},"miscellaneous/enumerations.html":{}}}],["data",{"_index":89,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"modules/CurveModule.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"modules/MoonModule.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"components/MoonTableComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyData.html":{},"interfaces/MyStorage.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"modules/ScatterModule.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"modules/VenusModule.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["data.getdata",{"_index":649,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["data.map",{"_index":1367,"title":{},"body":{"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["data.split(\",\").map((label",{"_index":1221,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["data.trim",{"_index":1219,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["data/data.interface",{"_index":566,"title":{},"body":{"interfaces/ChartInfo.html":{},"interfaces/MyChart.html":{}}}],["data[i].x",{"_index":684,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["data[i].y1",{"_index":682,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["data[i].y2",{"_index":686,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["data[i].y3",{"_index":689,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["data[i].y4",{"_index":692,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["dataarray",{"_index":1930,"title":{},"body":{"injectables/MoonService.html":{},"injectables/VenusService.html":{}}}],["dataarray.map",{"_index":2644,"title":{},"body":{"injectables/VenusService.html":{}}}],["datadict",{"_index":598,"title":{},"body":{"classes/CurveChart.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["datakey",{"_index":844,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualStorage.html":{},"classes/MoonStorage.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["datalabel",{"_index":713,"title":{},"body":{"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["datalabel.split(\",\").map((label",{"_index":784,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["datalabelarray",{"_index":783,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["datalabels",{"_index":734,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["dataratio",{"_index":2185,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["datareset",{"_index":2348,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{}}}],["dataservice",{"_index":1091,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["dataset",{"_index":1089,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"miscellaneous/functions.html":{}}}],["datasetindex",{"_index":2809,"title":{},"body":{"miscellaneous/functions.html":{}}}],["datasets",{"_index":679,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"miscellaneous/functions.html":{}}}],["datasorted",{"_index":1964,"title":{},"body":{"injectables/MoonService.html":{}}}],["datasorted.length",{"_index":1970,"title":{},"body":{"injectables/MoonService.html":{}}}],["datasubject",{"_index":1275,"title":{},"body":{"injectables/DualService.html":{},"injectables/MoonService.html":{},"injectables/ScatterService.html":{},"injectables/VenusService.html":{}}}],["dataurl",{"_index":2789,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dataurltoblob",{"_index":1416,"title":{},"body":{"injectables/HonorCodeChartService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["dataurltoblob(dataurl",{"_index":2787,"title":{},"body":{"miscellaneous/functions.html":{}}}],["date",{"_index":1989,"title":{},"body":{"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["dateappendzero",{"_index":2714,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["dateappendzero(num",{"_index":2792,"title":{},"body":{"miscellaneous/functions.html":{}}}],["days",{"_index":3462,"title":{},"body":{"license.html":{}}}],["de",{"_index":2508,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["debouncetime",{"_index":709,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"classes/SliderUtil.html":{},"components/VenusChartFormComponent.html":{}}}],["debouncetime(200",{"_index":720,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["debouncetime(2000",{"_index":1596,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["december",{"_index":3217,"title":{},"body":{"license.html":{}}}],["decide",{"_index":3605,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/InterfaceUtilModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"modules/VenusModule.html":{},"overview.html":{}}}],["declared",{"_index":1466,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["declining",{"_index":3423,"title":{},"body":{"license.html":{}}}],["decorators",{"_index":1579,"title":{},"body":{"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["deemed",{"_index":3206,"title":{},"body":{"license.html":{}}}],["deep",{"_index":2187,"title":{},"body":{"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["default",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/DualChartFormComponent.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterData.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defaultappearancesettings",{"_index":275,"title":{"classes/DefaultAppearanceSettings.html":{}},"body":{"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"coverage.html":{}}}],["defaultappearancesettings.chartcolormode",{"_index":410,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["defaultappearancesettings.fontfamily",{"_index":288,"title":{},"body":{"components/AppearanceComponent.html":{},"injectables/AppearanceStorageService.html":{}}}],["defaultappearancesettings.fontsize",{"_index":290,"title":{},"body":{"components/AppearanceComponent.html":{},"injectables/AppearanceStorageService.html":{}}}],["defaultappearancesettings.fontstyle",{"_index":289,"title":{},"body":{"components/AppearanceComponent.html":{},"injectables/AppearanceStorageService.html":{}}}],["defaultappearancesettings.theme",{"_index":444,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["defaultchartinfo",{"_index":848,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["defaultdata",{"_index":847,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["defaultinterface",{"_index":849,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["defaultvalue",{"_index":1550,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["defective",{"_index":3618,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":3575,"title":{},"body":{"license.html":{}}}],["defined",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyData.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"classes/SliderUtil.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"license.html":{}}}],["definition",{"_index":3158,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":3050,"title":{},"body":{"license.html":{}}}],["degree",{"_index":2826,"title":{},"body":{"miscellaneous/functions.html":{}}}],["degrees",{"_index":2825,"title":{},"body":{"miscellaneous/functions.html":{}}}],["denied",{"_index":3386,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":3533,"title":{},"body":{"license.html":{}}}],["deny",{"_index":2998,"title":{},"body":{"license.html":{}}}],["denying",{"_index":2955,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":135,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/InterfaceUtilModule.html":{},"modules/MenubarModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules/SettingsModule.html":{},"modules/SimpleDataButtonModule.html":{},"modules/SimpleGraphButtonModule.html":{},"modules/ToolsNavbarModule.html":{},"modules/VenusModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deprive",{"_index":3542,"title":{},"body":{"license.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveComponent.html":{},"modules/CurveModule.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/PageNotFoundComponent.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"classes/VenusModels.html":{},"miscellaneous/functions.html":{}}}],["design",{"_index":2864,"title":{},"body":{"index.html":{}}}],["designated",{"_index":3309,"title":{},"body":{"license.html":{}}}],["designed",{"_index":2832,"title":{},"body":{"index.html":{},"license.html":{}}}],["destcanvas",{"_index":1428,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["destcanvas.getcontext('2d",{"_index":1437,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["destcanvas.height",{"_index":1434,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["destcanvas.width",{"_index":1432,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["destctx",{"_index":1436,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["destctx.drawimage(canvas",{"_index":1441,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["destctx.fillrect(0",{"_index":1440,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["destctx.fillstyle",{"_index":1438,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["destroy",{"_index":623,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SliderUtil.html":{},"components/VenusChartFormComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["detail",{"_index":3594,"title":{},"body":{"license.html":{}}}],["details",{"_index":3665,"title":{},"body":{"license.html":{}}}],["details.the",{"_index":3675,"title":{},"body":{"license.html":{}}}],["determining",{"_index":3350,"title":{},"body":{"license.html":{}}}],["develop",{"_index":3650,"title":{},"body":{"license.html":{}}}],["developers",{"_index":2975,"title":{},"body":{"license.html":{}}}],["development",{"_index":2878,"title":{},"body":{"index.html":{},"license.html":{}}}],["device",{"_index":1407,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["devices",{"_index":2997,"title":{},"body":{"license.html":{}}}],["dialog",{"_index":1479,"title":{},"body":{"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{}}}],["diameter",{"_index":2076,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterFormComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["diametersubject",{"_index":2113,"title":{},"body":{"components/ScatterFormComponent.html":{}}}],["diamond",{"_index":2159,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["dictionary",{"_index":2813,"title":{},"body":{"miscellaneous/functions.html":{}}}],["differ",{"_index":3593,"title":{},"body":{"license.html":{}}}],["different",{"_index":1710,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"license.html":{}}}],["differently",{"_index":3414,"title":{},"body":{"license.html":{}}}],["direction",{"_index":3193,"title":{},"body":{"license.html":{}}}],["directions",{"_index":3316,"title":{},"body":{"license.html":{}}}],["directive",{"_index":29,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["directives",{"_index":103,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["directly",{"_index":3077,"title":{},"body":{"license.html":{}}}],["disablesavegraph",{"_index":1511,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["disclaim",{"_index":3228,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":3608,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":3411,"title":{},"body":{"license.html":{}}}],["discriminatory",{"_index":3559,"title":{},"body":{"license.html":{}}}],["dismiss",{"_index":1469,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["display",{"_index":662,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/VenusComponent.html":{},"license.html":{}}}],["displayed",{"_index":3417,"title":{},"body":{"license.html":{}}}],["displayname",{"_index":484,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["displays",{"_index":3103,"title":{},"body":{"license.html":{}}}],["distance",{"_index":2053,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterFormComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"miscellaneous/enumerations.html":{}}}],["distancesubject",{"_index":2114,"title":{},"body":{"components/ScatterFormComponent.html":{}}}],["distinguishing",{"_index":3597,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":2912,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":3661,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":3564,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":3048,"title":{},"body":{"license.html":{}}}],["docsto",{"_index":2884,"title":{},"body":{"index.html":{}}}],["document",{"_index":2915,"title":{},"body":{"license.html":{}}}],["document.createelement('canvas",{"_index":1429,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["documentation",{"_index":2673,"title":{},"body":{"coverage.html":{}}}],["documentations",{"_index":2871,"title":{},"body":{"index.html":{}}}],["documented",{"_index":3395,"title":{},"body":{"license.html":{}}}],["doesn't",{"_index":2523,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["domains",{"_index":3020,"title":{},"body":{"license.html":{}}}],["doubtful",{"_index":3351,"title":{},"body":{"license.html":{}}}],["download",{"_index":2785,"title":{},"body":{"miscellaneous/functions.html":{}}}],["downloading",{"_index":1465,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["downstream",{"_index":3484,"title":{},"body":{"license.html":{}}}],["drawer",{"_index":2340,"title":{},"body":{"components/SettingsComponent.html":{}}}],["dual",{"_index":51,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["dual'},{'name",{"_index":53,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["dual.component.html",{"_index":1224,"title":{},"body":{"components/DualComponent.html":{}}}],["dual.component.scss",{"_index":1223,"title":{},"body":{"components/DualComponent.html":{}}}],["dual.service",{"_index":1130,"title":{},"body":{"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{}}}],["dual.service.util",{"_index":1315,"title":{},"body":{"injectables/DualService.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{}}}],["dual/dual.component",{"_index":1270,"title":{},"body":{"modules/DualModule.html":{}}}],["dualchartformcomponent",{"_index":50,"title":{"components/DualChartFormComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dualchartinfo",{"_index":1131,"title":{"classes/DualChartInfo.html":{}},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"coverage.html":{}}}],["dualchartinfo.getdefaultchartinfo().charttitle",{"_index":1211,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["dualchartinfo.getdefaultchartinfo().datalabel",{"_index":1213,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["dualchartinfo.getdefaultchartinfo().xaxislabel",{"_index":1214,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["dualchartinfo.getdefaultchartinfo().yaxislabel",{"_index":1215,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["dualchartinfostorageobject",{"_index":1143,"title":{"interfaces/DualChartInfoStorageObject.html":{}},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"coverage.html":{}}}],["dualcomponent",{"_index":52,"title":{"components/DualComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dualdata",{"_index":1155,"title":{"classes/DualData.html":{}},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"coverage.html":{}}}],["dualdata.getdefaultdata",{"_index":1157,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["dualdatadict",{"_index":1152,"title":{"interfaces/DualDataDict.html":{}},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"coverage.html":{}}}],["dualhighchartcomponent",{"_index":54,"title":{"components/DualHighchartComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dualmodule",{"_index":1262,"title":{"modules/DualModule.html":{}},"body":{"modules/DualModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"modules.html":{},"overview.html":{}}}],["dualservice",{"_index":1129,"title":{"injectables/DualService.html":{}},"body":{"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"injectables/DualService.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dualstorage",{"_index":1276,"title":{"classes/DualStorage.html":{}},"body":{"injectables/DualService.html":{},"classes/DualStorage.html":{},"coverage.html":{}}}],["dualtable",{"_index":1353,"title":{"classes/DualTable.html":{}},"body":{"classes/DualTable.html":{},"components/DualTableComponent.html":{},"coverage.html":{}}}],["dualtable(this.id",{"_index":1358,"title":{},"body":{"classes/DualTable.html":{},"components/DualTableComponent.html":{}}}],["dualtablecomponent",{"_index":55,"title":{"components/DualTableComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["durable",{"_index":3289,"title":{},"body":{"license.html":{}}}],["duration",{"_index":675,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["dv",{"_index":2505,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["dwelling",{"_index":3349,"title":{},"body":{"license.html":{}}}],["dynamic",{"_index":2736,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":3161,"title":{},"body":{"license.html":{}}}],["e",{"_index":3326,"title":{},"body":{"license.html":{}}}],["each",{"_index":3058,"title":{},"body":{"license.html":{}}}],["earlier",{"_index":3071,"title":{},"body":{"license.html":{}}}],["earth",{"_index":2507,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["easy",{"_index":2835,"title":{},"body":{"index.html":{}}}],["edge",{"_index":2178,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["effect",{"_index":3640,"title":{},"body":{"license.html":{}}}],["effected",{"_index":3226,"title":{},"body":{"license.html":{}}}],["effective",{"_index":3207,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":3039,"title":{},"body":{"license.html":{}}}],["efforts",{"_index":3498,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":3666,"title":{},"body":{"license.html":{}}}],["element",{"_index":28,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["embodied",{"_index":3284,"title":{},"body":{"license.html":{}}}],["employer",{"_index":3679,"title":{},"body":{"license.html":{}}}],["enable",{"_index":3141,"title":{},"body":{"license.html":{}}}],["enabled",{"_index":969,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["enablemousetracking",{"_index":2160,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["enables",{"_index":3095,"title":{},"body":{"license.html":{}}}],["enablesavegraph",{"_index":1512,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["encapsulate",{"_index":2436,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["encapsulating",{"_index":1023,"title":{},"body":{"modules/CurveModule.html":{},"modules/HonorCodePopupModule.html":{}}}],["encapsution",{"_index":1717,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{}}}],["end",{"_index":2514,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"license.html":{}}}],["enforce",{"_index":3534,"title":{},"body":{"license.html":{}}}],["enforcing",{"_index":3232,"title":{},"body":{"license.html":{}}}],["ensure",{"_index":3323,"title":{},"body":{"license.html":{}}}],["entered",{"_index":3570,"title":{},"body":{"license.html":{}}}],["entire",{"_index":1702,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"license.html":{}}}],["entirely",{"_index":3585,"title":{},"body":{"license.html":{}}}],["entity",{"_index":3488,"title":{},"body":{"license.html":{}}}],["entry",{"_index":794,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["entry.diameter",{"_index":2480,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["entry.distance",{"_index":2063,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["entry.phase",{"_index":2481,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["entry.x1",{"_index":1205,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["entry.x2",{"_index":1208,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["entry.y1",{"_index":797,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["entry.y2",{"_index":787,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["entry.y3",{"_index":789,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["entry.y4",{"_index":791,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["entry[0",{"_index":1968,"title":{},"body":{"injectables/MoonService.html":{}}}],["entry[1",{"_index":1969,"title":{},"body":{"injectables/MoonService.html":{}}}],["enum",{"_index":485,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DefaultAppearanceSettings.html":{},"components/MoonFormComponent.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"components/ScatterFormComponent.html":{}}}],["enumerations",{"_index":2769,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":2726,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["equivalent",{"_index":3184,"title":{},"body":{"license.html":{}}}],["erroneously",{"_index":2995,"title":{},"body":{"license.html":{}}}],["error(\"invalid",{"_index":838,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["escape",{"_index":2412,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["essential",{"_index":3143,"title":{},"body":{"license.html":{}}}],["even",{"_index":2869,"title":{},"body":{"index.html":{},"license.html":{}}}],["event",{"_index":952,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/SliderUtil.html":{},"components/VenusHighchartComponent.html":{},"license.html":{}}}],["event.key",{"_index":1813,"title":{},"body":{"components/MoonFormComponent.html":{},"components/ScatterFormComponent.html":{}}}],["eventemitter",{"_index":1571,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{}}}],["everyone",{"_index":2909,"title":{},"body":{"license.html":{}}}],["exact",{"_index":3068,"title":{},"body":{"license.html":{}}}],["example",{"_index":2963,"title":{},"body":{"license.html":{}}}],["except",{"_index":3083,"title":{},"body":{"license.html":{}}}],["exceptions",{"_index":3400,"title":{},"body":{"license.html":{}}}],["excluded",{"_index":3338,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":3573,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":3659,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":3524,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":3187,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":3579,"title":{},"body":{"license.html":{}}}],["executable",{"_index":3134,"title":{},"body":{"license.html":{}}}],["execute",{"_index":3369,"title":{},"body":{"license.html":{}}}],["executing",{"_index":3084,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":3499,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":3227,"title":{},"body":{"license.html":{}}}],["exif",{"_index":2780,"title":{},"body":{"miscellaneous/functions.html":{}}}],["exifimage",{"_index":1443,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["existing",{"_index":2860,"title":{},"body":{"index.html":{}}}],["expected",{"_index":3360,"title":{},"body":{"license.html":{}}}],["expects",{"_index":3359,"title":{},"body":{"license.html":{}}}],["explains",{"_index":2985,"title":{},"body":{"license.html":{}}}],["explicitly",{"_index":3177,"title":{},"body":{"license.html":{}}}],["export",{"_index":23,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"modules/CurveModule.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"modules/InterfaceUtilModule.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"modules/MoonModule.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyData.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"modules/ScatterModule.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"modules/VenusModule.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["exporting",{"_index":971,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{},"dependencies.html":{}}}],["exports",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/InterfaceUtilModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"modules/VenusModule.html":{},"overview.html":{}}}],["express",{"_index":3530,"title":{},"body":{"license.html":{}}}],["expressed",{"_index":3610,"title":{},"body":{"license.html":{}}}],["expressly",{"_index":3446,"title":{},"body":{"license.html":{}}}],["extend",{"_index":3023,"title":{},"body":{"license.html":{}}}],["extended",{"_index":3558,"title":{},"body":{"license.html":{}}}],["extensions",{"_index":3268,"title":{},"body":{"license.html":{}}}],["extent",{"_index":3106,"title":{},"body":{"license.html":{}}}],["extra",{"_index":514,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["extra_bold",{"_index":496,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["extract",{"_index":2887,"title":{},"body":{"index.html":{}}}],["f",{"_index":3429,"title":{},"body":{"license.html":{}}}],["f5f0f6",{"_index":524,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["facilities",{"_index":3189,"title":{},"body":{"license.html":{}}}],["fact",{"_index":1491,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["fails",{"_index":3459,"title":{},"body":{"license.html":{}}}],["failure",{"_index":3634,"title":{},"body":{"license.html":{}}}],["fair",{"_index":3183,"title":{},"body":{"license.html":{}}}],["false",{"_index":655,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/DualHighchartComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"classes/SliderUtil.html":{},"components/VenusHighchartComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":310,"title":{},"body":{"components/AppearanceComponent.html":{},"components/MenubarComponent.html":{},"license.html":{}}}],["family.displayname",{"_index":311,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["fashion",{"_index":3065,"title":{},"body":{"license.html":{}}}],["favor",{"_index":3354,"title":{},"body":{"license.html":{}}}],["feature",{"_index":3110,"title":{},"body":{"license.html":{}}}],["fee",{"_index":2967,"title":{},"body":{"license.html":{}}}],["ffffff",{"_index":1439,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["field",{"_index":322,"title":{},"body":{"components/AppearanceComponent.html":{},"components/CurveChartFormComponent.html":{},"modules/CurveModule.html":{},"components/DualChartFormComponent.html":{},"modules/DualModule.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"modules/MoonModule.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterFormComponent.html":{},"modules/ScatterModule.html":{},"components/VenusChartFormComponent.html":{},"modules/VenusModule.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"modules/CurveModule.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"modules/InterfaceUtilModule.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"modules/MoonModule.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyData.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"modules/ScatterModule.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"modules/VenusModule.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["filename",{"_index":1450,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["files",{"_index":3159,"title":{},"body":{"license.html":{}}}],["fill",{"_index":2189,"title":{},"body":{"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["finally",{"_index":3027,"title":{},"body":{"license.html":{}}}],["find",{"_index":3319,"title":{},"body":{"license.html":{}}}],["first",{"_index":3466,"title":{},"body":{"license.html":{}}}],["fit",{"_index":911,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/VenusComponent.html":{}}}],["fitness",{"_index":3613,"title":{},"body":{"license.html":{}}}],["fix",{"_index":2794,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fixed",{"_index":3288,"title":{},"body":{"license.html":{}}}],["flat",{"_index":1724,"title":{},"body":{"components/MenubarComponent.html":{}}}],["flex",{"_index":908,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MenubarComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/VenusComponent.html":{}}}],["flip",{"_index":1658,"title":{},"body":{"components/LineFormComponent.html":{}}}],["float_precision",{"_index":1986,"title":{},"body":{"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{}}}],["flow",{"_index":909,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/VenusComponent.html":{},"license.html":{}}}],["follow",{"_index":2846,"title":{},"body":{"index.html":{},"license.html":{}}}],["following",{"_index":3528,"title":{},"body":{"license.html":{}}}],["font",{"_index":309,"title":{},"body":{"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["fontfamily",{"_index":254,"title":{},"body":{"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["fontfamily.comic_neue",{"_index":522,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["fontfamily.roboto",{"_index":521,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["fontkey",{"_index":415,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["fontlist",{"_index":243,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["fontsize",{"_index":256,"title":{},"body":{"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["fontsizekey",{"_index":416,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["fontsizes",{"_index":360,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["fontsizes.default",{"_index":517,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["fontsizes.large",{"_index":518,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["fontsizes.larger",{"_index":519,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["fontsizes.small",{"_index":516,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["fontsizeslist",{"_index":244,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["fontstyle",{"_index":255,"title":{},"body":{"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["fontstylekey",{"_index":417,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["fontstyles",{"_index":364,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["fontstyles.bold",{"_index":512,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["fontstyles.default",{"_index":511,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["fontstyles.extra_bold",{"_index":513,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["fontstyleslist",{"_index":245,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["forbid",{"_index":3225,"title":{},"body":{"license.html":{}}}],["force",{"_index":3185,"title":{},"body":{"license.html":{}}}],["forceoverride",{"_index":673,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["form",{"_index":321,"title":{},"body":{"components/AppearanceComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"modules/CurveModule.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"modules/DualModule.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"modules/MoonModule.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"modules/ScatterModule.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"modules/VenusModule.html":{},"license.html":{}}}],["form'},{'name",{"_index":43,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["form.component",{"_index":1029,"title":{},"body":{"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules/VenusModule.html":{}}}],["form.component.html",{"_index":705,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["form.component.scss",{"_index":704,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["form.component.ts",{"_index":703,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterFormComponent.html":{},"components/VenusChartFormComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["form.component.ts:12",{"_index":708,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["form.component.ts:13",{"_index":706,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["form.component.ts:14",{"_index":1806,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["form.component.ts:15",{"_index":2118,"title":{},"body":{"components/ScatterFormComponent.html":{}}}],["form.component.ts:16",{"_index":2115,"title":{},"body":{"components/ScatterFormComponent.html":{}}}],["form.component.ts:19",{"_index":1801,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["form.component.ts:20",{"_index":1807,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["form.component.ts:21",{"_index":1808,"title":{},"body":{"components/MoonFormComponent.html":{},"components/ScatterFormComponent.html":{}}}],["form.component.ts:22",{"_index":1809,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["form.component.ts:23",{"_index":1669,"title":{},"body":{"components/LineFormComponent.html":{},"components/MoonFormComponent.html":{}}}],["form.component.ts:28",{"_index":1800,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["form.component.ts:29",{"_index":1671,"title":{},"body":{"components/LineFormComponent.html":{}}}],["form.component.ts:30",{"_index":1673,"title":{},"body":{"components/LineFormComponent.html":{}}}],["form.component.ts:31",{"_index":1678,"title":{},"body":{"components/LineFormComponent.html":{}}}],["form.component.ts:32",{"_index":1675,"title":{},"body":{"components/LineFormComponent.html":{}}}],["form.component.ts:33",{"_index":1663,"title":{},"body":{"components/LineFormComponent.html":{}}}],["form.component.ts:37",{"_index":2116,"title":{},"body":{"components/ScatterFormComponent.html":{}}}],["form.component.ts:40",{"_index":1666,"title":{},"body":{"components/LineFormComponent.html":{},"components/MoonFormComponent.html":{}}}],["form.component.ts:42",{"_index":2117,"title":{},"body":{"components/ScatterFormComponent.html":{}}}],["form.component.ts:45",{"_index":1668,"title":{},"body":{"components/LineFormComponent.html":{}}}],["form.component.ts:48",{"_index":707,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["form.component.ts:49",{"_index":1664,"title":{},"body":{"components/LineFormComponent.html":{}}}],["form.component.ts:57",{"_index":1665,"title":{},"body":{"components/LineFormComponent.html":{}}}],["form.component.ts:61",{"_index":1798,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["form/curve",{"_index":702,"title":{},"body":{"components/CurveChartFormComponent.html":{},"modules/CurveModule.html":{},"coverage.html":{}}}],["form/dual",{"_index":1128,"title":{},"body":{"components/DualChartFormComponent.html":{},"modules/DualModule.html":{},"coverage.html":{}}}],["form/line",{"_index":1028,"title":{},"body":{"modules/CurveModule.html":{},"components/LineFormComponent.html":{},"coverage.html":{}}}],["form/moon",{"_index":1732,"title":{},"body":{"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"modules/MoonModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["form/scatter",{"_index":2029,"title":{},"body":{"components/ScatterChartFormComponent.html":{},"components/ScatterFormComponent.html":{},"modules/ScatterModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["form/venus",{"_index":2456,"title":{},"body":{"components/VenusChartFormComponent.html":{},"modules/VenusModule.html":{},"coverage.html":{}}}],["format",{"_index":2805,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["formatnumber",{"_index":2204,"title":{},"body":{"classes/ScatterModelInterface.html":{}}}],["formatnumber(input",{"_index":2207,"title":{},"body":{"classes/ScatterModelInterface.html":{}}}],["formattime",{"_index":1417,"title":{},"body":{"injectables/HonorCodeChartService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["formattime(getdatestring",{"_index":1456,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["formattime(time",{"_index":1448,"title":{},"body":{"injectables/HonorCodeChartService.html":{},"miscellaneous/functions.html":{}}}],["formbuilder",{"_index":1473,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["formcontrol",{"_index":277,"title":{},"body":{"components/AppearanceComponent.html":{},"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"classes/SliderUtil.html":{},"components/VenusChartFormComponent.html":{}}}],["formcontrol(30",{"_index":1803,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["formcontrol(colortheme",{"_index":293,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["formcontrol(curvecounts.one",{"_index":1672,"title":{},"body":{"components/LineFormComponent.html":{}}}],["formcontrol(fontfamily",{"_index":295,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["formcontrol(fontsize",{"_index":297,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["formcontrol(fontstyle",{"_index":296,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["formcontrol(this.service.getcharttitle",{"_index":712,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["formcontrol(this.service.getdatalabel",{"_index":714,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["formcontrol(this.service.getxaxislabel",{"_index":716,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["formcontrol(this.service.getyaxislabel",{"_index":718,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["formgroup",{"_index":246,"title":{},"body":{"components/AppearanceComponent.html":{},"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["forms",{"_index":3279,"title":{},"body":{"license.html":{}}}],["formsmodule",{"_index":1033,"title":{},"body":{"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/InterfaceUtilModule.html":{},"modules/MoonModule.html":{},"modules/VenusModule.html":{}}}],["found",{"_index":221,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"license.html":{}}}],["found'},{'name",{"_index":77,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["found.component",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["found.component.html",{"_index":2027,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.scss",{"_index":2026,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":2025,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found/page",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found:page",{"_index":220,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["foundation",{"_index":2906,"title":{},"body":{"license.html":{}}}],["four",{"_index":773,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"miscellaneous/enumerations.html":{}}}],["framework",{"_index":2852,"title":{},"body":{"index.html":{}}}],["free",{"_index":2904,"title":{},"body":{"license.html":{}}}],["freedom",{"_index":2925,"title":{},"body":{"license.html":{}}}],["freedoms",{"_index":2971,"title":{},"body":{"license.html":{}}}],["fu",{"_index":2894,"title":{},"body":{"index.html":{}}}],["fulfilling",{"_index":3210,"title":{},"body":{"license.html":{}}}],["full",{"_index":216,"title":{},"body":{"modules/AppRoutingModule.html":{},"license.html":{}}}],["functinoality",{"_index":2859,"title":{},"body":{"index.html":{}}}],["function",{"_index":229,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functioning",{"_index":3372,"title":{},"body":{"license.html":{}}}],["functions",{"_index":2776,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fundamentally",{"_index":3004,"title":{},"body":{"license.html":{}}}],["further",{"_index":3310,"title":{},"body":{"license.html":{}}}],["future",{"_index":3025,"title":{},"body":{"license.html":{}}}],["general",{"_index":2897,"title":{},"body":{"license.html":{}}}],["generally",{"_index":3156,"title":{},"body":{"license.html":{}}}],["generate",{"_index":222,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["generatechartconfig",{"_index":582,"title":{},"body":{"classes/CurveChart.html":{},"interfaces/MyChart.html":{}}}],["generatechartconfig(data",{"_index":568,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"interfaces/MyChart.html":{}}}],["generatechartoptions",{"_index":583,"title":{},"body":{"classes/CurveChart.html":{},"interfaces/MyChart.html":{}}}],["generatechartoptions(chartinfo",{"_index":571,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"interfaces/MyChart.html":{}}}],["generatecurvechartconfig",{"_index":584,"title":{},"body":{"classes/CurveChart.html":{}}}],["generatecurvechartconfig(chartdata",{"_index":590,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["generated",{"_index":1766,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["generatefilename",{"_index":1390,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["generatefilename(charttype",{"_index":1396,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["generates",{"_index":2511,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["generatesignature",{"_index":1391,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["generatesignature(signature",{"_index":1400,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["geocentric",{"_index":2512,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["geocentric(start",{"_index":2518,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["getamplitude",{"_index":1855,"title":{},"body":{"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{}}}],["getbackgroundcolor",{"_index":465,"title":{},"body":{"classes/ChartColor.html":{}}}],["getbackgroundcolor(mode",{"_index":474,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["getchartbackgroundcolor",{"_index":330,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["getchartcolormode",{"_index":331,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["getchartfontcolor",{"_index":332,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["getchartinfo",{"_index":854,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualStorage.html":{},"classes/MoonStorage.html":{},"interfaces/MyStorage.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["getcharttitle",{"_index":534,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/MoonChartInfo.html":{},"injectables/MoonService.html":{},"interfaces/MyChart.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["getcolortheme",{"_index":333,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{}}}],["getcurvecount",{"_index":827,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["getcurvedata",{"_index":915,"title":{},"body":{"classes/CurveData.html":{}}}],["getcurvedata(curvecount",{"_index":923,"title":{},"body":{"classes/CurveData.html":{}}}],["getdata",{"_index":857,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualData.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonData.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyData.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"classes/ScatterData.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["getdataarray",{"_index":793,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualData.html":{},"injectables/DualService.html":{},"classes/MoonData.html":{},"injectables/MoonService.html":{},"interfaces/MyData.html":{},"classes/ScatterData.html":{},"injectables/ScatterService.html":{},"classes/VenusData.html":{},"injectables/VenusService.html":{}}}],["getdatalabel",{"_index":535,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/MoonChartInfo.html":{},"injectables/MoonService.html":{},"interfaces/MyChart.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["getdatalabelarray",{"_index":1133,"title":{},"body":{"classes/DualChartInfo.html":{},"injectables/DualService.html":{}}}],["getdatalabelbycurvecount",{"_index":735,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["getdatalabelbycurvecount(curvecount",{"_index":744,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["getdatestring",{"_index":1418,"title":{},"body":{"injectables/HonorCodeChartService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getdefaultchartinfo",{"_index":1134,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/MoonChartInfo.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["getdefaultdata",{"_index":916,"title":{},"body":{"classes/CurveData.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["getdefaultdatadict",{"_index":2056,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["getdefaultstorageobject",{"_index":736,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/MoonInterfaceImpl.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["getdiameter",{"_index":2079,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{}}}],["getdistance",{"_index":2078,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{}}}],["getfont",{"_index":418,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["getfontcolor",{"_index":466,"title":{},"body":{"classes/ChartColor.html":{}}}],["getfontcolor(mode",{"_index":477,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["getfontfamily",{"_index":334,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["getfontfamilyclassname",{"_index":335,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["getfontfamilyclassname(font",{"_index":357,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["getfontfamilylists",{"_index":520,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["getfontsize",{"_index":336,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{}}}],["getfontsizeclassname",{"_index":337,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["getfontsizeclassname(fontsize",{"_index":361,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["getfontsizelists",{"_index":515,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["getfontstyle",{"_index":338,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{}}}],["getfontstyleclassname",{"_index":339,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["getfontstyleclassname(fontstyle",{"_index":365,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["getfontstylelists",{"_index":510,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["getformgroup",{"_index":249,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["getformgroup(colortheme",{"_index":253,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["getgeocentricmodeldatalower",{"_index":2577,"title":{},"body":{"injectables/VenusService.html":{}}}],["getgeocentricmodeldataupper",{"_index":2578,"title":{},"body":{"injectables/VenusService.html":{}}}],["getheliocentricmodeldata",{"_index":2579,"title":{},"body":{"injectables/VenusService.html":{}}}],["gethighchart",{"_index":1277,"title":{},"body":{"injectables/DualService.html":{},"injectables/MoonService.html":{},"injectables/ScatterService.html":{},"injectables/VenusService.html":{}}}],["getinterface",{"_index":860,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualStorage.html":{},"classes/MoonStorage.html":{},"interfaces/MyStorage.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["getismagnitudeon",{"_index":829,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["getlinecolor",{"_index":467,"title":{},"body":{"classes/ChartColor.html":{}}}],["getlinecolor(index",{"_index":479,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["getmodel",{"_index":2084,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{}}}],["getmodelstorageobject",{"_index":2082,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{}}}],["getmoonmodeldata",{"_index":1897,"title":{},"body":{"interfaces/MoonModel.html":{},"injectables/MoonService.html":{}}}],["getperiod",{"_index":1856,"title":{},"body":{"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{}}}],["getphase",{"_index":1857,"title":{},"body":{"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{}}}],["getslidermax",{"_index":2397,"title":{},"body":{"classes/SliderUtil.html":{}}}],["getslidermax(max",{"_index":1630,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["getslidermin",{"_index":2398,"title":{},"body":{"classes/SliderUtil.html":{}}}],["getslidermin(min",{"_index":1625,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["getsliderstep",{"_index":2399,"title":{},"body":{"classes/SliderUtil.html":{}}}],["getsliderstep(min",{"_index":1635,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["getstorageobject",{"_index":536,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{},"interfaces/MyChart.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["gettable",{"_index":1076,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyTable.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["gettablelabels",{"_index":737,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["getthemelists",{"_index":505,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["gettilt",{"_index":1858,"title":{},"body":{"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{}}}],["getting",{"_index":2827,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettoolsitename",{"_index":2676,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["gettoolsitename($localize`:about:about",{"_index":206,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["gettoolsitename($localize`:curve:curve",{"_index":207,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["gettoolsitename($localize`:dual:dual",{"_index":211,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["gettoolsitename($localize`:home:home",{"_index":205,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["gettoolsitename($localize`:moon:moon",{"_index":208,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["gettoolsitename($localize`:scatter:scatter",{"_index":210,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["gettoolsitename($localize`:settings:settings",{"_index":213,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["gettoolsitename($localize`:venus:venus",{"_index":209,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["gettoolsitename(tool",{"_index":230,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/functions.html":{}}}],["getxaxislabel",{"_index":537,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/MoonChartInfo.html":{},"injectables/MoonService.html":{},"interfaces/MyChart.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["getyaxislabel",{"_index":538,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/MoonChartInfo.html":{},"injectables/MoonService.html":{},"interfaces/MyChart.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["github",{"_index":2873,"title":{},"body":{"index.html":{}}}],["give",{"_index":3246,"title":{},"body":{"license.html":{}}}],["given",{"_index":2815,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["gives",{"_index":3260,"title":{},"body":{"license.html":{}}}],["giving",{"_index":2979,"title":{},"body":{"license.html":{}}}],["gnu",{"_index":2896,"title":{},"body":{"license.html":{}}}],["goal",{"_index":2856,"title":{},"body":{"index.html":{}}}],["good",{"_index":2863,"title":{},"body":{"index.html":{}}}],["governed",{"_index":3403,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":2976,"title":{},"body":{"license.html":{}}}],["grant",{"_index":3424,"title":{},"body":{"license.html":{}}}],["granted",{"_index":3173,"title":{},"body":{"license.html":{}}}],["grants",{"_index":3478,"title":{},"body":{"license.html":{}}}],["graph",{"_index":92,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"modules/MoonModule.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"modules/ScatterModule.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"modules/VenusModule.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"modules.html":{}}}],["graphing",{"_index":224,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/MenubarComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["gratis",{"_index":2966,"title":{},"body":{"license.html":{}}}],["gravity",{"_index":2439,"title":{},"body":{"components/ToolsNavbarComponent.html":{}}}],["greatest",{"_index":3651,"title":{},"body":{"license.html":{}}}],["green",{"_index":470,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["grey",{"_index":2190,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["guarantee",{"_index":2929,"title":{},"body":{"license.html":{}}}],["gui",{"_index":3677,"title":{},"body":{"license.html":{}}}],["h2",{"_index":1497,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["handsontable",{"_index":1083,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyTable.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"dependencies.html":{},"index.html":{}}}],["handsontable/angular",{"_index":1039,"title":{},"body":{"modules/CurveModule.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"modules/DualModule.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"modules/MoonModule.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"modules/ScatterModule.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"modules/VenusModule.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"dependencies.html":{}}}],["handsontable/registry",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["having",{"_index":2176,"title":{},"body":{"components/ScatterHighchartComponent.html":{},"license.html":{}}}],["hc_dark_theme",{"_index":493,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["hc_exporting",{"_index":1422,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["hc_exporting(highcharts",{"_index":1426,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["hc_offline_exporting",{"_index":1424,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["hc_offline_exporting(highcharts",{"_index":1427,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["hc_theme",{"_index":491,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["height",{"_index":904,"title":{},"body":{"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/MoonComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["heliocentric",{"_index":2527,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["heliocentric(start",{"_index":2528,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["here",{"_index":2876,"title":{},"body":{"index.html":{}}}],["hereafter",{"_index":3520,"title":{},"body":{"license.html":{}}}],["hh:mm:ss",{"_index":2807,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hidden",{"_index":1121,"title":{},"body":{"components/CurveTableComponent.html":{},"components/DualTableComponent.html":{},"components/MoonTableComponent.html":{},"components/ScatterTableComponent.html":{},"components/VenusTableComponent.html":{}}}],["high",{"_index":507,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"coverage.html":{}}}],["high_contrast",{"_index":490,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["high_contrast_dark",{"_index":492,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["highchart",{"_index":936,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"components/MoonHighchartComponent.html":{},"injectables/MoonService.html":{},"components/ScatterHighchartComponent.html":{},"injectables/ScatterService.html":{},"components/VenusHighchartComponent.html":{},"injectables/VenusService.html":{}}}],["highchart'},{'name",{"_index":47,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["highchart.component",{"_index":1272,"title":{},"body":{"modules/DualModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules/VenusModule.html":{}}}],["highchart.component.html",{"_index":1238,"title":{},"body":{"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["highchart.component.scss",{"_index":1237,"title":{},"body":{"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["highchart.component.ts",{"_index":1236,"title":{},"body":{"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{},"coverage.html":{}}}],["highchart.component.ts:100",{"_index":1838,"title":{},"body":{"components/MoonHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["highchart.component.ts:101",{"_index":1250,"title":{},"body":{"components/DualHighchartComponent.html":{}}}],["highchart.component.ts:105",{"_index":1246,"title":{},"body":{"components/DualHighchartComponent.html":{}}}],["highchart.component.ts:108",{"_index":1841,"title":{},"body":{"components/MoonHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["highchart.component.ts:109",{"_index":1247,"title":{},"body":{"components/DualHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{}}}],["highchart.component.ts:112",{"_index":2545,"title":{},"body":{"components/VenusHighchartComponent.html":{}}}],["highchart.component.ts:115",{"_index":1248,"title":{},"body":{"components/DualHighchartComponent.html":{}}}],["highchart.component.ts:117",{"_index":1839,"title":{},"body":{"components/MoonHighchartComponent.html":{}}}],["highchart.component.ts:118",{"_index":2546,"title":{},"body":{"components/VenusHighchartComponent.html":{}}}],["highchart.component.ts:12",{"_index":1255,"title":{},"body":{"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["highchart.component.ts:120",{"_index":2141,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["highchart.component.ts:121",{"_index":1834,"title":{},"body":{"components/MoonHighchartComponent.html":{}}}],["highchart.component.ts:124",{"_index":2548,"title":{},"body":{"components/VenusHighchartComponent.html":{}}}],["highchart.component.ts:125",{"_index":1835,"title":{},"body":{"components/MoonHighchartComponent.html":{}}}],["highchart.component.ts:13",{"_index":1256,"title":{},"body":{"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["highchart.component.ts:131",{"_index":1836,"title":{},"body":{"components/MoonHighchartComponent.html":{}}}],["highchart.component.ts:132",{"_index":2145,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["highchart.component.ts:136",{"_index":2139,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["highchart.component.ts:14",{"_index":1252,"title":{},"body":{"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["highchart.component.ts:15",{"_index":1253,"title":{},"body":{"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["highchart.component.ts:150",{"_index":2144,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["highchart.component.ts:154",{"_index":2143,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["highchart.component.ts:158",{"_index":2136,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["highchart.component.ts:16",{"_index":1254,"title":{},"body":{"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["highchart.component.ts:162",{"_index":2137,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["highchart.component.ts:168",{"_index":2138,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["highchart.component.ts:174",{"_index":2132,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["highchart.component.ts:36",{"_index":1241,"title":{},"body":{"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["highchart.component.ts:44",{"_index":1242,"title":{},"body":{"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["highchart.component.ts:49",{"_index":2134,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["highchart.component.ts:50",{"_index":1244,"title":{},"body":{"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{}}}],["highchart.component.ts:66",{"_index":2544,"title":{},"body":{"components/VenusHighchartComponent.html":{}}}],["highchart.component.ts:68",{"_index":1245,"title":{},"body":{"components/DualHighchartComponent.html":{}}}],["highchart.component.ts:71",{"_index":2543,"title":{},"body":{"components/VenusHighchartComponent.html":{}}}],["highchart.component.ts:73",{"_index":1243,"title":{},"body":{"components/DualHighchartComponent.html":{}}}],["highchart.component.ts:74",{"_index":1833,"title":{},"body":{"components/MoonHighchartComponent.html":{}}}],["highchart.component.ts:75",{"_index":2135,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["highchart.component.ts:76",{"_index":2547,"title":{},"body":{"components/VenusHighchartComponent.html":{}}}],["highchart.component.ts:77",{"_index":1249,"title":{},"body":{"components/DualHighchartComponent.html":{}}}],["highchart.component.ts:79",{"_index":1832,"title":{},"body":{"components/MoonHighchartComponent.html":{}}}],["highchart.component.ts:80",{"_index":2133,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["highchart.component.ts:84",{"_index":1837,"title":{},"body":{"components/MoonHighchartComponent.html":{}}}],["highchart.component.ts:87",{"_index":2142,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["highchart.component.ts:89",{"_index":1251,"title":{},"body":{"components/DualHighchartComponent.html":{}}}],["highchart.component.ts:92",{"_index":1840,"title":{},"body":{"components/MoonHighchartComponent.html":{}}}],["highchart.component.ts:98",{"_index":2140,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["highchart/curve",{"_index":935,"title":{},"body":{"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"coverage.html":{}}}],["highchart/dual",{"_index":1235,"title":{},"body":{"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"coverage.html":{}}}],["highchart/moon",{"_index":1829,"title":{},"body":{"components/MoonHighchartComponent.html":{},"modules/MoonModule.html":{},"coverage.html":{}}}],["highchart/scatter",{"_index":2127,"title":{},"body":{"components/ScatterHighchartComponent.html":{},"modules/ScatterModule.html":{},"coverage.html":{}}}],["highchart/venus",{"_index":2542,"title":{},"body":{"components/VenusHighchartComponent.html":{},"modules/VenusModule.html":{},"coverage.html":{}}}],["highcharts",{"_index":939,"title":{},"body":{"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"injectables/DualService.html":{},"injectables/HonorCodeChartService.html":{},"components/MoonHighchartComponent.html":{},"modules/MoonModule.html":{},"injectables/MoonService.html":{},"components/ScatterHighchartComponent.html":{},"modules/ScatterModule.html":{},"injectables/ScatterService.html":{},"components/VenusHighchartComponent.html":{},"modules/VenusModule.html":{},"injectables/VenusService.html":{},"dependencies.html":{}}}],["highcharts.chart",{"_index":950,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"injectables/HonorCodeChartService.html":{},"components/MoonHighchartComponent.html":{},"injectables/MoonService.html":{},"components/ScatterHighchartComponent.html":{},"injectables/ScatterService.html":{},"components/VenusHighchartComponent.html":{},"injectables/VenusService.html":{}}}],["highcharts.options",{"_index":964,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["highcharts/modules/exporting",{"_index":1423,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["highcharts/modules/offline",{"_index":1425,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["highchartschartmodule",{"_index":1049,"title":{},"body":{"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules/VenusModule.html":{}}}],["holder",{"_index":3453,"title":{},"body":{"license.html":{}}}],["holders",{"_index":3410,"title":{},"body":{"license.html":{}}}],["home",{"_index":204,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":57,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["home.component.html",{"_index":1385,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1384,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":56,"title":{"components/HomeComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["honor",{"_index":59,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["honorcodechartservice",{"_index":885,"title":{"injectables/HonorCodeChartService.html":{}},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/VenusComponent.html":{},"coverage.html":{}}}],["honorcodepopupcomponent",{"_index":58,"title":{"components/HonorCodePopupComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["honorcodepopupmodule",{"_index":146,"title":{"modules/HonorCodePopupModule.html":{}},"body":{"modules/AppModule.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"modules.html":{},"overview.html":{}}}],["honorcodepopupservice",{"_index":883,"title":{"injectables/HonorCodePopupService.html":{}},"body":{"components/CurveComponent.html":{},"modules/CurveModule.html":{},"components/DualComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/MoonComponent.html":{},"modules/MoonModule.html":{},"components/ScatterComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/VenusComponent.html":{},"coverage.html":{},"overview.html":{}}}],["honorcodeservice",{"_index":882,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/VenusComponent.html":{}}}],["honored",{"_index":1513,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["hope",{"_index":3662,"title":{},"body":{"license.html":{}}}],["host",{"_index":2186,"title":{},"body":{"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["hosts",{"_index":3320,"title":{},"body":{"license.html":{}}}],["hotregisterer",{"_index":1075,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["hottablemodule",{"_index":1038,"title":{},"body":{"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules/VenusModule.html":{}}}],["hottableregisterer",{"_index":1079,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["household",{"_index":3345,"title":{},"body":{"license.html":{}}}],["hover",{"_index":656,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["html",{"_index":27,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["htmlinputelement).value",{"_index":1622,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["https://fsf.org",{"_index":2908,"title":{},"body":{"license.html":{}}}],["https://stackoverflow.com/a/30407959/1154380",{"_index":2791,"title":{},"body":{"miscellaneous/functions.html":{}}}],["https://www.gnu.org/licenses",{"_index":3682,"title":{},"body":{"license.html":{}}}],["https://www.gnu.org/licenses/why",{"_index":3692,"title":{},"body":{"license.html":{}}}],["hypothetical",{"_index":3676,"title":{},"body":{"license.html":{}}}],["i'm",{"_index":2525,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["i18n",{"_index":2889,"title":{},"body":{"index.html":{}}}],["icons",{"_index":2747,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":581,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["identifiable",{"_index":3548,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":2674,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":1686,"title":{},"body":{"components/LineFormComponent.html":{}}}],["image",{"_index":1405,"title":{},"body":{"injectables/HonorCodeChartService.html":{},"miscellaneous/functions.html":{}}}],["image/jpeg",{"_index":1452,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["imagination",{"_index":2830,"title":{},"body":{"index.html":{}}}],["implement",{"_index":2858,"title":{},"body":{"index.html":{},"license.html":{}}}],["implementation",{"_index":1281,"title":{},"body":{"injectables/DualService.html":{},"license.html":{}}}],["implements",{"_index":236,"title":{},"body":{"components/AppearanceComponent.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["implied",{"_index":3574,"title":{},"body":{"license.html":{}}}],["import",{"_index":20,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"modules/CurveModule.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"modules/InterfaceUtilModule.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"modules/MoonModule.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyTable.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"modules/ScatterModule.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"modules/VenusModule.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"license.html":{}}}],["important",{"_index":2558,"title":{},"body":{"components/VenusHighchartComponent.html":{}}}],["importing",{"_index":3511,"title":{},"body":{"license.html":{}}}],["imports",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/InterfaceUtilModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"modules/VenusModule.html":{}}}],["impose",{"_index":3434,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":3576,"title":{},"body":{"license.html":{}}}],["inability",{"_index":3629,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":3631,"title":{},"body":{"license.html":{}}}],["inactive",{"_index":2557,"title":{},"body":{"components/VenusHighchartComponent.html":{}}}],["inc",{"_index":2907,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":3626,"title":{},"body":{"license.html":{}}}],["include",{"_index":3135,"title":{},"body":{"license.html":{}}}],["included",{"_index":3137,"title":{},"body":{"license.html":{}}}],["includes",{"_index":3088,"title":{},"body":{"license.html":{}}}],["including",{"_index":3152,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":3277,"title":{},"body":{"license.html":{}}}],["incompatible",{"_index":3005,"title":{},"body":{"license.html":{}}}],["incorporating",{"_index":3683,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":3348,"title":{},"body":{"license.html":{}}}],["indemnification",{"_index":3430,"title":{},"body":{"license.html":{}}}],["independent",{"_index":3266,"title":{},"body":{"license.html":{}}}],["index",{"_index":111,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyData.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"classes/SliderUtil.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index).concat(this.datadict.slice(index",{"_index":1210,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["indicate",{"_index":3481,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":3444,"title":{},"body":{"license.html":{}}}],["individual",{"_index":3275,"title":{},"body":{"license.html":{}}}],["individuals",{"_index":3012,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":3363,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"modules/CurveModule.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"modules/InterfaceUtilModule.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"modules/MoonModule.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyData.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"modules/ScatterModule.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"modules/VenusModule.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["inform",{"_index":3330,"title":{},"body":{"license.html":{}}}],["information",{"_index":2781,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["infringe",{"_index":3479,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":3508,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":3080,"title":{},"body":{"license.html":{}}}],["init",{"_index":2775,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["initchartseries",{"_index":1239,"title":{},"body":{"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{}}}],["initiate",{"_index":3502,"title":{},"body":{"license.html":{}}}],["initiating",{"_index":1464,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["initiation",{"_index":2786,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injectable",{"_index":325,"title":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"injectables/DualService.html":{},"injectables/HonorCodeChartService.html":{},"injectables/HonorCodePopupService.html":{},"injectables/MoonService.html":{},"injectables/ScatterService.html":{},"injectables/VenusService.html":{}},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"injectables/DualService.html":{},"injectables/HonorCodeChartService.html":{},"injectables/HonorCodePopupService.html":{},"injectables/MoonService.html":{},"injectables/ScatterService.html":{},"injectables/VenusService.html":{},"coverage.html":{}}}],["injectables",{"_index":326,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"injectables/DualService.html":{},"injectables/HonorCodeChartService.html":{},"injectables/HonorCodePopupService.html":{},"injectables/MoonService.html":{},"injectables/ScatterService.html":{},"injectables/VenusService.html":{},"overview.html":{}}}],["input",{"_index":63,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"modules/InterfaceUtilModule.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"modules/MoonModule.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterModelInterface.html":{},"modules/ScatterModule.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"classes/SliderUtil.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"modules/VenusModule.html":{},"components/VenusTableComponent.html":{}}}],["inputchild",{"_index":1545,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["inputlabels",{"_index":1220,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["inputs",{"_index":1549,"title":{},"body":{"components/InputSliderComponent.html":{},"components/MenubarComponent.html":{},"components/SimpleDataButtonComponent.html":{}}}],["inputslidercomponent",{"_index":62,"title":{"components/InputSliderComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"modules/InterfaceUtilModule.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"classes/SliderUtil.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["inputslidervalue",{"_index":1616,"title":{"interfaces/InputSliderValue.html":{}},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/MoonFormComponent.html":{},"components/ScatterFormComponent.html":{},"classes/SliderUtil.html":{},"coverage.html":{}}}],["inputtoslider",{"_index":2400,"title":{},"body":{"classes/SliderUtil.html":{}}}],["inputtoslider(input",{"_index":1617,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["inside",{"_index":3001,"title":{},"body":{"license.html":{}}}],["install",{"_index":3000,"title":{},"body":{"license.html":{}}}],["installation",{"_index":3366,"title":{},"body":{"license.html":{}}}],["installed",{"_index":3383,"title":{},"body":{"license.html":{}}}],["instead",{"_index":3689,"title":{},"body":{"license.html":{}}}],["intact",{"_index":3240,"title":{},"body":{"license.html":{}}}],["intended",{"_index":2928,"title":{},"body":{"license.html":{}}}],["intention",{"_index":3229,"title":{},"body":{"license.html":{}}}],["interaction",{"_index":3098,"title":{},"body":{"license.html":{}}}],["interactive",{"_index":3102,"title":{},"body":{"license.html":{}}}],["interchange",{"_index":3291,"title":{},"body":{"license.html":{}}}],["interest",{"_index":3497,"title":{},"body":{"license.html":{}}}],["interface",{"_index":482,"title":{"interfaces/ChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"interfaces/CurveDataDict.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"interfaces/DualChartInfoStorageObject.html":{},"interfaces/DualDataDict.html":{},"interfaces/InputSliderValue.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"interfaces/MyChart.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyData.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"interfaces/VenusDataDict.html":{}},"body":{"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyData.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SliderUtil.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["interface.ts",{"_index":2020,"title":{},"body":{"interfaces/MyTable.html":{},"coverage.html":{}}}],["interface.ts:4",{"_index":2022,"title":{},"body":{"interfaces/MyTable.html":{}}}],["interface.ts:6",{"_index":2023,"title":{},"body":{"interfaces/MyTable.html":{}}}],["interface.ts:8",{"_index":2021,"title":{},"body":{"interfaces/MyTable.html":{}}}],["interfaceinfo",{"_index":1071,"title":{},"body":{"classes/CurveStorage.html":{},"classes/DualStorage.html":{},"classes/MoonStorage.html":{},"interfaces/MyStorage.html":{},"classes/ScatterStorage.html":{},"classes/VenusStorage.html":{}}}],["interfacekey",{"_index":845,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/MoonStorage.html":{},"classes/ScatterStorage.html":{}}}],["interfaces",{"_index":532,"title":{},"body":{"interfaces/ChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"interfaces/CurveDataDict.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"interfaces/DualChartInfoStorageObject.html":{},"interfaces/DualDataDict.html":{},"interfaces/InputSliderValue.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"interfaces/MyChart.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyData.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"interfaces/VenusDataDict.html":{},"license.html":{},"overview.html":{}}}],["interfacesubject",{"_index":1911,"title":{},"body":{"injectables/MoonService.html":{},"injectables/ScatterService.html":{}}}],["interfaceutilmodule",{"_index":1646,"title":{"modules/InterfaceUtilModule.html":{}},"body":{"modules/InterfaceUtilModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules.html":{},"overview.html":{}}}],["interfered",{"_index":3374,"title":{},"body":{"license.html":{}}}],["interpretation",{"_index":3638,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":3150,"title":{},"body":{"license.html":{}}}],["intialize",{"_index":340,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["intimate",{"_index":3166,"title":{},"body":{"license.html":{}}}],["intro",{"_index":2838,"title":{},"body":{"index.html":{}}}],["introduce",{"_index":1767,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{}}}],["invalid",{"_index":1598,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["invalidate",{"_index":3261,"title":{},"body":{"license.html":{}}}],["irrevocable",{"_index":3174,"title":{},"body":{"license.html":{}}}],["isdatarandom",{"_index":2351,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{}}}],["islog",{"_index":1551,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["ismagnitudeon",{"_index":833,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["isnan(entry[0",{"_index":1966,"title":{},"body":{"injectables/MoonService.html":{}}}],["isnan(entry[1",{"_index":1967,"title":{},"body":{"injectables/MoonService.html":{}}}],["it's",{"_index":2845,"title":{},"body":{"index.html":{}}}],["italic",{"_index":2450,"title":{},"body":{"components/ToolsNavbarComponent.html":{}}}],["item",{"_index":2448,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"license.html":{}}}],["itself",{"_index":3387,"title":{},"body":{"license.html":{}}}],["jpeg",{"_index":2783,"title":{},"body":{"miscellaneous/functions.html":{}}}],["jpegdata",{"_index":2782,"title":{},"body":{"miscellaneous/functions.html":{}}}],["jpg",{"_index":1408,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["json.parse(localstorage.getitem(this.chartinfokey",{"_index":856,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["json.parse(localstorage.getitem(this.colorthemekey",{"_index":443,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["json.parse(localstorage.getitem(this.datakey",{"_index":859,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["json.parse(localstorage.getitem(this.fontkey",{"_index":459,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["json.parse(localstorage.getitem(this.fontsizekey",{"_index":454,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["json.parse(localstorage.getitem(this.fontstylekey",{"_index":449,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["json.parse(localstorage.getitem(this.interfacekey",{"_index":862,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["json.stringify(chartinfo",{"_index":2494,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["json.stringify(chartinfoobject",{"_index":865,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["json.stringify(colortheme",{"_index":440,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["json.stringify(data",{"_index":868,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["json.stringify(font",{"_index":456,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["json.stringify(fontsize",{"_index":451,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["json.stringify(fontstyle",{"_index":446,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["json.stringify(interfaceinfo",{"_index":871,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["json.stringify(this.defaultchartinfo",{"_index":873,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["json.stringify(this.defaultdata",{"_index":875,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["json.stringify(this.defaultinterface",{"_index":877,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["julian",{"_index":1988,"title":{},"body":{"classes/MoonTable.html":{},"components/MoonTableComponent.html":{}}}],["juliandate",{"_index":1756,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{}}}],["june",{"_index":2900,"title":{},"body":{"license.html":{}}}],["keep",{"_index":3239,"title":{},"body":{"license.html":{}}}],["kernel",{"_index":3144,"title":{},"body":{"license.html":{}}}],["key",{"_index":483,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"classes/SliderUtil.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["keys",{"_index":1099,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["kind",{"_index":3094,"title":{},"body":{"license.html":{}}}],["kinds",{"_index":2920,"title":{},"body":{"license.html":{}}}],["km",{"_index":2504,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["know",{"_index":2948,"title":{},"body":{"license.html":{}}}],["knowingly",{"_index":3537,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":3545,"title":{},"body":{"license.html":{}}}],["lab",{"_index":2841,"title":{},"body":{"index.html":{}}}],["label",{"_index":1552,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["label.trim",{"_index":785,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["labels",{"_index":593,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/SimpleGraphButtonComponent.html":{}}}],["language",{"_index":2888,"title":{},"body":{"index.html":{},"license.html":{}}}],["large",{"_index":499,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"components/ToolsNavbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["larger",{"_index":500,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["later",{"_index":3600,"title":{},"body":{"license.html":{}}}],["latitude",{"_index":2052,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{}}}],["law",{"_index":3082,"title":{},"body":{"license.html":{}}}],["laws",{"_index":3053,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":3506,"title":{},"body":{"license.html":{}}}],["leading",{"_index":1607,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{},"miscellaneous/functions.html":{}}}],["left",{"_index":1694,"title":{},"body":{"components/LineFormComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["legal",{"_index":2980,"title":{},"body":{"license.html":{}}}],["legend",{"_index":26,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"components/InputSliderComponent.html":{},"modules/InterfaceUtilModule.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"modules/MoonModule.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"modules/ScatterModule.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"modules/VenusModule.html":{},"components/VenusTableComponent.html":{},"overview.html":{}}}],["length",{"_index":2180,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["less",{"_index":2795,"title":{},"body":{"miscellaneous/functions.html":{}}}],["lesser",{"_index":3688,"title":{},"body":{"license.html":{}}}],["level",{"_index":2839,"title":{},"body":{"index.html":{}}}],["lgpl.html",{"_index":3693,"title":{},"body":{"license.html":{}}}],["liability",{"_index":3413,"title":{},"body":{"license.html":{}}}],["liable",{"_index":3079,"title":{},"body":{"license.html":{}}}],["libaries",{"_index":2853,"title":{},"body":{"index.html":{}}}],["libraries",{"_index":3133,"title":{},"body":{"license.html":{}}}],["library",{"_index":3339,"title":{},"body":{"license.html":{}}}],["license",{"_index":2895,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":3057,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":3059,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":3061,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":2921,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":3483,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":3422,"title":{},"body":{"license.html":{}}}],["light",{"_index":486,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["light_theme",{"_index":487,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"components/ScatterHighchartComponent.html":{},"miscellaneous/enumerations.html":{}}}],["lightgray",{"_index":2193,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["likewise",{"_index":3476,"title":{},"body":{"license.html":{}}}],["limit",{"_index":3230,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":3623,"title":{},"body":{"license.html":{}}}],["limited",{"_index":3611,"title":{},"body":{"license.html":{}}}],["limiting",{"_index":3412,"title":{},"body":{"license.html":{}}}],["limitprecision",{"_index":1375,"title":{},"body":{"components/DualTableComponent.html":{},"injectables/MoonService.html":{},"components/MoonTableComponent.html":{},"components/ScatterTableComponent.html":{},"injectables/VenusService.html":{},"components/VenusTableComponent.html":{}}}],["limitprecision(data",{"_index":1365,"title":{},"body":{"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["limitprecision(dataarray",{"_index":1928,"title":{},"body":{"injectables/MoonService.html":{},"injectables/VenusService.html":{}}}],["line",{"_index":66,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"license.html":{}}}],["linear",{"_index":663,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["linechartdata",{"_index":620,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["linechartoptions",{"_index":622,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["linecolordarkarray",{"_index":463,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["linecolorlightarray",{"_index":464,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["lineformcomponent",{"_index":65,"title":{"components/LineFormComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"modules/CurveModule.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["link",{"_index":1051,"title":{},"body":{"modules/CurveModule.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"license.html":{}}}],["linked",{"_index":3162,"title":{},"body":{"license.html":{}}}],["linking",{"_index":3686,"title":{},"body":{"license.html":{}}}],["list",{"_index":2336,"title":{},"body":{"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"license.html":{}}}],["literal",{"_index":3704,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["litigation",{"_index":3503,"title":{},"body":{"license.html":{}}}],["ln(1",{"_index":1771,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{}}}],["ln(750",{"_index":1769,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{}}}],["local",{"_index":3639,"title":{},"body":{"license.html":{}}}],["localize`:page",{"_index":219,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["localize`:site",{"_index":232,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["localstorage.getitem(this.chartinfokey",{"_index":855,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["localstorage.getitem(this.colorthemekey",{"_index":441,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["localstorage.getitem(this.datakey",{"_index":858,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["localstorage.getitem(this.fontkey",{"_index":457,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["localstorage.getitem(this.fontsizekey",{"_index":452,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["localstorage.getitem(this.fontstylekey",{"_index":447,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["localstorage.getitem(this.interfacekey",{"_index":861,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["localstorage.setitem(this.chartinfokey",{"_index":864,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["localstorage.setitem(this.colorthemekey",{"_index":439,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["localstorage.setitem(this.datakey",{"_index":867,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["localstorage.setitem(this.fontkey",{"_index":455,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["localstorage.setitem(this.fontsizekey",{"_index":450,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["localstorage.setitem(this.fontstylekey",{"_index":445,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["localstorage.setitem(this.interfacekey",{"_index":870,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["long",{"_index":2867,"title":{},"body":{"index.html":{},"license.html":{}}}],["longitude",{"_index":2051,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{}}}],["loss",{"_index":3630,"title":{},"body":{"license.html":{}}}],["losses",{"_index":3632,"title":{},"body":{"license.html":{}}}],["machine",{"_index":3281,"title":{},"body":{"license.html":{}}}],["made",{"_index":1492,"title":{},"body":{"components/HonorCodePopupComponent.html":{},"license.html":{}}}],["magnitude",{"_index":1657,"title":{},"body":{"components/LineFormComponent.html":{}}}],["magslider",{"_index":1660,"title":{},"body":{"components/LineFormComponent.html":{}}}],["mail",{"_index":3668,"title":{},"body":{"license.html":{}}}],["maintain",{"_index":3314,"title":{},"body":{"license.html":{}}}],["maintainaspectratio",{"_index":654,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["maintainble",{"_index":2866,"title":{},"body":{"index.html":{}}}],["major",{"_index":3139,"title":{},"body":{"license.html":{}}}],["make",{"_index":2833,"title":{},"body":{"index.html":{},"license.html":{}}}],["makerawdata",{"_index":585,"title":{},"body":{"classes/CurveChart.html":{}}}],["makerawdata(datadict",{"_index":596,"title":{},"body":{"classes/CurveChart.html":{}}}],["makes",{"_index":3201,"title":{},"body":{"license.html":{}}}],["making",{"_index":3067,"title":{},"body":{"license.html":{}}}],["manner",{"_index":3521,"title":{},"body":{"license.html":{}}}],["manufacturer",{"_index":3003,"title":{},"body":{"license.html":{}}}],["map",{"_index":1206,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["march",{"_index":3571,"title":{},"body":{"license.html":{}}}],["margin",{"_index":1498,"title":{},"body":{"components/HonorCodePopupComponent.html":{},"components/LineFormComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["marked",{"_index":2991,"title":{},"body":{"license.html":{}}}],["marker",{"_index":2151,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["marks",{"_index":3428,"title":{},"body":{"license.html":{}}}],["masks",{"_index":3055,"title":{},"body":{"license.html":{}}}],["mat",{"_index":320,"title":{},"body":{"components/AppearanceComponent.html":{},"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterFormComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["matbutton",{"_index":1523,"title":{},"body":{"injectables/HonorCodePopupService.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["matbuttonmodule",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"modules/HonorCodePopupModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["matbuttontogglemodule",{"_index":1030,"title":{},"body":{"modules/CurveModule.html":{}}}],["matching",{"_index":106,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"modules/CurveModule.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"modules/InterfaceUtilModule.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"modules/MoonModule.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyData.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"modules/ScatterModule.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"modules/VenusModule.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":1517,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["matdialogmodule",{"_index":1507,"title":{},"body":{"modules/HonorCodePopupModule.html":{}}}],["matdialogref",{"_index":1472,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["material",{"_index":2854,"title":{},"body":{"index.html":{},"license.html":{}}}],["materially",{"_index":3388,"title":{},"body":{"license.html":{}}}],["matformfieldmodule",{"_index":1035,"title":{},"body":{"modules/CurveModule.html":{}}}],["math.cos(entry.longitude",{"_index":2064,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["math.exp(math.random",{"_index":1772,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{}}}],["math.log(maxnum",{"_index":1638,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["math.log(minnum",{"_index":1639,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["math.log(value",{"_index":1619,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["math.max((1",{"_index":2522,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["math.max(...data.map(d",{"_index":2169,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["math.min(...data.map(d",{"_index":2167,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["math.pi",{"_index":2062,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["math.pi)).tofixed(scatterdata.float_precision",{"_index":2065,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["math.pow(10",{"_index":1642,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["math.random",{"_index":1774,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{}}}],["math.round(value",{"_index":1643,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["math.sin(entry.longitude",{"_index":2066,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["maticonmodule",{"_index":1044,"title":{},"body":{"modules/CurveModule.html":{},"modules/HonorCodePopupModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["matinput",{"_index":1578,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["matinputmodule",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/InterfaceUtilModule.html":{}}}],["matlegacybuttonmodule",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"modules/HonorCodePopupModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["matlegacydialog",{"_index":1530,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["matlegacydialogmodule",{"_index":1506,"title":{},"body":{"modules/HonorCodePopupModule.html":{}}}],["matlegacydialogref",{"_index":1478,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["matlegacyformfieldmodule",{"_index":1034,"title":{},"body":{"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules/VenusModule.html":{}}}],["matlegacyinputmodule",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules/VenusModule.html":{}}}],["matlegacylistmodule",{"_index":2334,"title":{},"body":{"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["matlegacyselectmodule",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{}}}],["matlegacyslidetoggle",{"_index":1679,"title":{},"body":{"components/LineFormComponent.html":{}}}],["matlegacyslidetogglemodule",{"_index":1046,"title":{},"body":{"modules/CurveModule.html":{}}}],["matlistmodule",{"_index":2335,"title":{},"body":{"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["matprogressspinner",{"_index":1526,"title":{},"body":{"injectables/HonorCodePopupService.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["matprogressspinnermodule",{"_index":2383,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["matselectmodule",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{}}}],["matsidenav",{"_index":2423,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["matsidenavmodule",{"_index":2332,"title":{},"body":{"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["matslidermodule",{"_index":1652,"title":{},"body":{"modules/InterfaceUtilModule.html":{},"modules/MoonModule.html":{}}}],["matslidetoggle",{"_index":1676,"title":{},"body":{"components/LineFormComponent.html":{}}}],["matslidetogglemodule",{"_index":1047,"title":{},"body":{"modules/CurveModule.html":{}}}],["mattoolbarmodule",{"_index":1714,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{}}}],["max",{"_index":1632,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["maxa",{"_index":2499,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["maxnum",{"_index":1631,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["maxvalue",{"_index":1553,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["maxx",{"_index":2168,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["maxy",{"_index":2171,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["meaning",{"_index":3438,"title":{},"body":{"license.html":{}}}],["means",{"_index":3052,"title":{},"body":{"license.html":{}}}],["measure",{"_index":3209,"title":{},"body":{"license.html":{}}}],["measures",{"_index":3222,"title":{},"body":{"license.html":{}}}],["medium",{"_index":1698,"title":{},"body":{"components/LineFormComponent.html":{},"license.html":{}}}],["meet",{"_index":3249,"title":{},"body":{"license.html":{}}}],["meets",{"_index":3118,"title":{},"body":{"license.html":{}}}],["menu",{"_index":1700,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"license.html":{}}}],["menubar",{"_index":1703,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["menubar'},{'name",{"_index":68,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["menubar.component.html",{"_index":1705,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{}}}],["menubar.component.scss",{"_index":1704,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{}}}],["menubar/menubar.component",{"_index":2427,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["menubarcomponent",{"_index":67,"title":{"components/MenubarComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["menubarmodule",{"_index":1718,"title":{"modules/MenubarModule.html":{}},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"modules.html":{},"overview.html":{}}}],["merchantability",{"_index":3612,"title":{},"body":{"license.html":{}}}],["mere",{"_index":3097,"title":{},"body":{"license.html":{}}}],["merging",{"_index":3493,"title":{},"body":{"license.html":{}}}],["met",{"_index":3176,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["methods",{"_index":247,"title":{},"body":{"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyData.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"classes/SliderUtil.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"license.html":{}}}],["min",{"_index":1627,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["min/max",{"_index":2173,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["minnum",{"_index":1626,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["minvalue",{"_index":1554,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["minx",{"_index":2166,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["miny",{"_index":2170,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["miscellaneous",{"_index":2768,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["misrepresentation",{"_index":3418,"title":{},"body":{"license.html":{}}}],["modalref",{"_index":1535,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["modalref.afterclosed",{"_index":1538,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["mode",{"_index":476,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"license.html":{}}}],["model",{"_index":1847,"title":{},"body":{"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SimpleDataButtonComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"license.html":{}}}],["modeldata",{"_index":2091,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["modelreset",{"_index":2349,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{}}}],["modelresetvisible",{"_index":2352,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{}}}],["models",{"_index":2588,"title":{},"body":{"injectables/VenusService.html":{}}}],["modern",{"_index":2862,"title":{},"body":{"index.html":{}}}],["modification",{"_index":3049,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":3121,"title":{},"body":{"license.html":{}}}],["modified",{"_index":2990,"title":{},"body":{"license.html":{}}}],["modifies",{"_index":3253,"title":{},"body":{"license.html":{}}}],["modify",{"_index":2961,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":3086,"title":{},"body":{"license.html":{}}}],["module",{"_index":132,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/InterfaceUtilModule.html":{},"modules/MenubarModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules/SettingsModule.html":{},"modules/SimpleDataButtonModule.html":{},"modules/SimpleGraphButtonModule.html":{},"modules/ToolsNavbarModule.html":{},"modules/VenusModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/InterfaceUtilModule.html":{},"modules/MenubarModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules/SettingsModule.html":{},"modules/SimpleDataButtonModule.html":{},"modules/SimpleGraphButtonModule.html":{},"modules/ToolsNavbarModule.html":{},"modules/VenusModule.html":{},"overview.html":{}}}],["modules",{"_index":134,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/InterfaceUtilModule.html":{},"modules/MenubarModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules/SettingsModule.html":{},"modules/SimpleDataButtonModule.html":{},"modules/SimpleGraphButtonModule.html":{},"modules/ToolsNavbarModule.html":{},"modules/VenusModule.html":{},"modules.html":{},"overview.html":{}}}],["moon",{"_index":70,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"modules/MoonModule.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["moon's",{"_index":1763,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{}}}],["moon'},{'name",{"_index":72,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["moon.component.html",{"_index":1782,"title":{},"body":{"components/MoonComponent.html":{}}}],["moon.component.scss",{"_index":1781,"title":{},"body":{"components/MoonComponent.html":{}}}],["moon.service",{"_index":1734,"title":{},"body":{"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"modules/MoonModule.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{}}}],["moon.service.util",{"_index":1812,"title":{},"body":{"components/MoonFormComponent.html":{},"injectables/MoonService.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{}}}],["moon/moon.component",{"_index":1906,"title":{},"body":{"modules/MoonModule.html":{}}}],["moon/moon.service.util",{"_index":2119,"title":{},"body":{"components/ScatterFormComponent.html":{},"injectables/ScatterService.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{}}}],["moonchartformcomponent",{"_index":69,"title":{"components/MoonChartFormComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"modules/MoonModule.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["moonchartinfo",{"_index":1735,"title":{"classes/MoonChartInfo.html":{}},"body":{"classes/MoonChartInfo.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"coverage.html":{}}}],["moonchartinfostorageobject",{"_index":1744,"title":{"interfaces/MoonChartInfoStorageObject.html":{}},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonStorage.html":{},"coverage.html":{}}}],["mooncomponent",{"_index":71,"title":{"components/MoonComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"modules/MoonModule.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["moondata",{"_index":1758,"title":{"classes/MoonData.html":{}},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"coverage.html":{}}}],["moondatadict",{"_index":1755,"title":{"interfaces/MoonDataDict.html":{}},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"coverage.html":{}}}],["moonformcomponent",{"_index":73,"title":{"components/MoonFormComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"modules/MoonModule.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["moonhighchartcomponent",{"_index":74,"title":{"components/MoonHighchartComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"modules/MoonModule.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mooninterface",{"_index":1854,"title":{"interfaces/MoonInterface.html":{}},"body":{"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"coverage.html":{}}}],["mooninterfaceimpl",{"_index":1879,"title":{"classes/MoonInterfaceImpl.html":{}},"body":{"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{},"coverage.html":{}}}],["mooninterfacestorageobject",{"_index":1867,"title":{"interfaces/MoonInterfaceStorageObject.html":{}},"body":{"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"classes/MoonStorage.html":{},"coverage.html":{}}}],["moonmodel",{"_index":1896,"title":{"interfaces/MoonModel.html":{}},"body":{"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"coverage.html":{}}}],["moonmodelparameters",{"_index":1827,"title":{},"body":{"components/MoonFormComponent.html":{},"miscellaneous/enumerations.html":{}}}],["moonmodelparameters.amplitude",{"_index":1814,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["moonmodelparameters.period",{"_index":1816,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["moonmodelparameters.phase",{"_index":1818,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["moonmodelparameters.tilt",{"_index":1820,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["moonmodule",{"_index":1899,"title":{"modules/MoonModule.html":{}},"body":{"modules/MoonModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"modules.html":{},"overview.html":{}}}],["moonservice",{"_index":1733,"title":{"injectables/MoonService.html":{}},"body":{"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"modules/MoonModule.html":{},"injectables/MoonService.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["moonstorage",{"_index":1912,"title":{"classes/MoonStorage.html":{}},"body":{"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"coverage.html":{}}}],["moontable",{"_index":1985,"title":{"classes/MoonTable.html":{}},"body":{"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"coverage.html":{}}}],["moontable(this.id",{"_index":1987,"title":{},"body":{"classes/MoonTable.html":{},"components/MoonTableComponent.html":{}}}],["moontablecomponent",{"_index":75,"title":{"components/MoonTableComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"modules/MoonModule.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["moontablecomponent.float_precision",{"_index":1991,"title":{},"body":{"classes/MoonTable.html":{},"components/MoonTableComponent.html":{}}}],["more",{"_index":3298,"title":{},"body":{"license.html":{}}}],["moreover",{"_index":3464,"title":{},"body":{"license.html":{}}}],["mt",{"_index":1722,"title":{},"body":{"components/MenubarComponent.html":{}}}],["multi",{"_index":2848,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":2819,"title":{},"body":{"miscellaneous/functions.html":{}}}],["multiplier",{"_index":1641,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["myaction",{"_index":888,"title":{},"body":{"components/CurveComponent.html":{},"miscellaneous/typealiases.html":{}}}],["mychart",{"_index":567,"title":{"interfaces/MyChart.html":{}},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"interfaces/MyChart.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mycolortheme",{"_index":262,"title":{"interfaces/MyColorTheme.html":{}},"body":{"components/AppearanceComponent.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"coverage.html":{}}}],["mydata",{"_index":565,"title":{"interfaces/MyData.html":{}},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"interfaces/MyChart.html":{},"interfaces/MyData.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"coverage.html":{}}}],["myfontfamily",{"_index":265,"title":{"interfaces/MyFontFamily.html":{}},"body":{"components/AppearanceComponent.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"coverage.html":{}}}],["myfontsize",{"_index":268,"title":{"interfaces/MyFontSize.html":{}},"body":{"components/AppearanceComponent.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"coverage.html":{}}}],["myfontstyle",{"_index":271,"title":{"interfaces/MyFontStyle.html":{}},"body":{"components/AppearanceComponent.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"coverage.html":{}}}],["myround",{"_index":2401,"title":{},"body":{"classes/SliderUtil.html":{}}}],["myround(value",{"_index":1640,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["mystorage",{"_index":760,"title":{"interfaces/MyStorage.html":{}},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{},"interfaces/MyStorage.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"coverage.html":{}}}],["mytable",{"_index":1074,"title":{"interfaces/MyTable.html":{}},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyTable.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"coverage.html":{}}}],["name",{"_index":32,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyData.html":{},"interfaces/MyStorage.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"classes/SliderUtil.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"miscellaneous/functions.html":{}}}],["name:skynet",{"_index":233,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["names",{"_index":3421,"title":{},"body":{"license.html":{}}}],["nature",{"_index":3267,"title":{},"body":{"license.html":{}}}],["nav",{"_index":2446,"title":{},"body":{"components/ToolsNavbarComponent.html":{}}}],["navbar",{"_index":1707,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["navbar'},{'name",{"_index":95,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["navbar.component",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{}}}],["navbar.component.html",{"_index":2418,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["navbar.component.scss",{"_index":2417,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["navbar.component.ts",{"_index":2410,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"coverage.html":{}}}],["navbar.component.ts:29",{"_index":2425,"title":{},"body":{"components/ToolsNavbarComponent.html":{}}}],["navbar.component.ts:34",{"_index":2422,"title":{},"body":{"components/ToolsNavbarComponent.html":{}}}],["navbar.component.ts:41",{"_index":2421,"title":{},"body":{"components/ToolsNavbarComponent.html":{}}}],["navbar/tools",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"coverage.html":{}}}],["navigation",{"_index":1713,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["nearest",{"_index":657,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["necessary",{"_index":2802,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["need",{"_index":2952,"title":{},"body":{"license.html":{}}}],["needed",{"_index":3026,"title":{},"body":{"license.html":{}}}],["needs",{"_index":1409,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["neo",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/MenubarComponent.html":{},"index.html":{}}}],["network",{"_index":3099,"title":{},"body":{"license.html":{}}}],["neue",{"_index":504,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["new",{"_index":292,"title":{},"body":{"components/AppearanceComponent.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"injectables/MoonService.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"injectables/ScatterService.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/VenusChartFormComponent.html":{},"components/VenusHighchartComponent.html":{},"injectables/VenusService.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"license.html":{}}}],["next",{"_index":3317,"title":{},"body":{"license.html":{}}}],["ng",{"_index":1504,"title":{},"body":{"modules/HonorCodePopupModule.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{},"dependencies.html":{},"index.html":{}}}],["ng2",{"_index":1042,"title":{},"body":{"modules/CurveModule.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":639,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["ngbmodule",{"_index":1503,"title":{},"body":{"modules/HonorCodePopupModule.html":{}}}],["ngchartsmodule",{"_index":1041,"title":{},"body":{"modules/CurveModule.html":{}}}],["ngif",{"_index":1904,"title":{},"body":{"modules/MoonModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"overview.html":{}}}],["ngmodule",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/InterfaceUtilModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"modules/VenusModule.html":{}}}],["ngondestroy",{"_index":645,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SliderUtil.html":{},"components/VenusChartFormComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["ngoninit",{"_index":250,"title":{},"body":{"components/AppearanceComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{}}}],["ngx",{"_index":2755,"title":{},"body":{"dependencies.html":{}}}],["node",{"_index":2758,"title":{},"body":{"dependencies.html":{}}}],["noise",{"_index":1768,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{}}}],["non",{"_index":3044,"title":{},"body":{"license.html":{}}}],["noncommercially",{"_index":3305,"title":{},"body":{"license.html":{}}}],["normal",{"_index":494,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["normally",{"_index":3344,"title":{},"body":{"license.html":{}}}],["nothing",{"_index":3477,"title":{},"body":{"license.html":{}}}],["notice",{"_index":3111,"title":{},"body":{"license.html":{}}}],["notices",{"_index":3105,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":3465,"title":{},"body":{"license.html":{}}}],["notify",{"_index":3460,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":3408,"title":{},"body":{"license.html":{}}}],["npm",{"_index":2880,"title":{},"body":{"index.html":{}}}],["null",{"_index":382,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["num",{"_index":2798,"title":{},"body":{"miscellaneous/functions.html":{}}}],["number",{"_index":480,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyData.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SliderUtil.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["numbered",{"_index":3599,"title":{},"body":{"license.html":{}}}],["numoverride",{"_index":1555,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["object",{"_index":617,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/LineFormComponent.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["object.values(this.curvecounts",{"_index":1670,"title":{},"body":{"components/LineFormComponent.html":{}}}],["obligate",{"_index":3583,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":3322,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":3211,"title":{},"body":{"license.html":{}}}],["observable",{"_index":1302,"title":{},"body":{"injectables/DualService.html":{},"injectables/HonorCodePopupService.html":{},"injectables/VenusService.html":{}}}],["occasionally",{"_index":3304,"title":{},"body":{"license.html":{}}}],["occurring",{"_index":3474,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":3010,"title":{},"body":{"license.html":{}}}],["offer",{"_index":2978,"title":{},"body":{"license.html":{}}}],["offered",{"_index":3333,"title":{},"body":{"license.html":{}}}],["offering",{"_index":3308,"title":{},"body":{"license.html":{}}}],["official",{"_index":3123,"title":{},"body":{"license.html":{}}}],["offline",{"_index":2753,"title":{},"body":{"dependencies.html":{}}}],["onchange",{"_index":1100,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/MoonFormComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/ScatterFormComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["onchange($event",{"_index":1799,"title":{},"body":{"components/MoonFormComponent.html":{},"components/ScatterFormComponent.html":{}}}],["oncurvenumchange",{"_index":1661,"title":{},"body":{"components/LineFormComponent.html":{}}}],["ondestroy",{"_index":601,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SliderUtil.html":{},"components/VenusChartFormComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["one",{"_index":767,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/LineFormComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["oninit",{"_index":237,"title":{},"body":{"components/AppearanceComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{}}}],["oninsert",{"_index":1104,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["onmagnitude",{"_index":1662,"title":{},"body":{"components/LineFormComponent.html":{}}}],["onmagnitude(value",{"_index":1667,"title":{},"body":{"components/LineFormComponent.html":{}}}],["onremove",{"_index":1102,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["opacity",{"_index":2555,"title":{},"body":{"components/VenusHighchartComponent.html":{}}}],["open",{"_index":2420,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["opening",{"_index":1712,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{}}}],["opentoolnavbar",{"_index":1706,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{}}}],["operate",{"_index":3635,"title":{},"body":{"license.html":{}}}],["operated",{"_index":3311,"title":{},"body":{"license.html":{}}}],["operating",{"_index":3146,"title":{},"body":{"license.html":{}}}],["operation",{"_index":3231,"title":{},"body":{"license.html":{}}}],["option",{"_index":3405,"title":{},"body":{"license.html":{}}}],["optional",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyData.html":{},"interfaces/MyStorage.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"classes/SliderUtil.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":621,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"license.html":{}}}],["orange",{"_index":469,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"components/ScatterHighchartComponent.html":{}}}],["orbit",{"_index":1764,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{}}}],["order",{"_index":2816,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["organization",{"_index":3490,"title":{},"body":{"license.html":{}}}],["organizations",{"_index":3062,"title":{},"body":{"license.html":{}}}],["origin",{"_index":3419,"title":{},"body":{"license.html":{}}}],["original",{"_index":2831,"title":{},"body":{"index.html":{},"license.html":{}}}],["others",{"_index":2954,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":2796,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["out",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/InterfaceUtilModule.html":{},"modules/MenubarModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules/SettingsModule.html":{},"modules/SimpleDataButtonModule.html":{},"modules/SimpleGraphButtonModule.html":{},"modules/ToolsNavbarModule.html":{},"modules/VenusModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["outlet",{"_index":2416,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["output",{"_index":1586,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"index.html":{},"license.html":{}}}],["outputs",{"_index":1558,"title":{},"body":{"components/InputSliderComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{}}}],["outside",{"_index":3195,"title":{},"body":{"license.html":{}}}],["over",{"_index":2181,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["overflow",{"_index":1120,"title":{},"body":{"components/CurveTableComponent.html":{},"components/DualTableComponent.html":{},"components/MoonTableComponent.html":{},"components/ScatterTableComponent.html":{},"components/VenusTableComponent.html":{}}}],["overview",{"_index":3696,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owned",{"_index":3516,"title":{},"body":{"license.html":{}}}],["p",{"_index":1697,"title":{},"body":{"components/LineFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{}}}],["package",{"_index":2729,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packaged",{"_index":3259,"title":{},"body":{"license.html":{}}}],["packaging",{"_index":3138,"title":{},"body":{"license.html":{}}}],["padding",{"_index":318,"title":{},"body":{"components/AppearanceComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/SettingsComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["page",{"_index":12,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"index.html":{}}}],["pagenotfoundcomponent",{"_index":76,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["paper",{"_index":3667,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":3450,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":3529,"title":{},"body":{"license.html":{}}}],["param",{"_index":227,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/HonorCodeChartService.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["parameter",{"_index":2515,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["parameters",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyData.html":{},"interfaces/MyStorage.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"classes/SliderUtil.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"miscellaneous/functions.html":{}}}],["parsefloat(($event.target",{"_index":1621,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["parsefloat((math.cos(entry.latitude",{"_index":2060,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["parsefloat(input",{"_index":1618,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["parsefloat(max",{"_index":1633,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["parsefloat(min",{"_index":1628,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["parsefloat(row.angularseparation.tofixed(precision",{"_index":1995,"title":{},"body":{"classes/MoonTable.html":{},"components/MoonTableComponent.html":{}}}],["parsefloat(row.diameter.tofixed(precision",{"_index":2663,"title":{},"body":{"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["parsefloat(row.distance.tofixed(precision",{"_index":2324,"title":{},"body":{"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{}}}],["parsefloat(row.juliandate.tofixed(precision",{"_index":1993,"title":{},"body":{"classes/MoonTable.html":{},"components/MoonTableComponent.html":{}}}],["parsefloat(row.latitude.tofixed(precision",{"_index":2322,"title":{},"body":{"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{}}}],["parsefloat(row.longitude.tofixed(precision",{"_index":2320,"title":{},"body":{"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{}}}],["parsefloat(row.phase.tofixed(precision",{"_index":2665,"title":{},"body":{"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["parsefloat(row.x1.tofixed(precision",{"_index":1369,"title":{},"body":{"classes/DualTable.html":{},"components/DualTableComponent.html":{}}}],["parsefloat(row.x2.tofixed(precision",{"_index":1373,"title":{},"body":{"classes/DualTable.html":{},"components/DualTableComponent.html":{}}}],["parsefloat(row.y1.tofixed(precision",{"_index":1371,"title":{},"body":{"classes/DualTable.html":{},"components/DualTableComponent.html":{}}}],["parsefloat(row.y2.tofixed(precision",{"_index":1374,"title":{},"body":{"classes/DualTable.html":{},"components/DualTableComponent.html":{}}}],["parsefloat(step",{"_index":1637,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["parsefloat(value.tofixed(precision",{"_index":1972,"title":{},"body":{"injectables/MoonService.html":{},"injectables/VenusService.html":{}}}],["part",{"_index":3064,"title":{},"body":{"license.html":{}}}],["particular",{"_index":3128,"title":{},"body":{"license.html":{}}}],["parties",{"_index":3096,"title":{},"body":{"license.html":{}}}],["parts",{"_index":3168,"title":{},"body":{"license.html":{}}}],["party",{"_index":3312,"title":{},"body":{"license.html":{}}}],["party's",{"_index":3495,"title":{},"body":{"license.html":{}}}],["pass",{"_index":2968,"title":{},"body":{"license.html":{}}}],["passing/parsing",{"_index":1680,"title":{},"body":{"components/LineFormComponent.html":{}}}],["password",{"_index":3396,"title":{},"body":{"license.html":{}}}],["patent",{"_index":3449,"title":{},"body":{"license.html":{}}}],["patents",{"_index":3030,"title":{},"body":{"license.html":{}}}],["path",{"_index":203,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{}}}],["pathmatch",{"_index":215,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pattern",{"_index":2865,"title":{},"body":{"index.html":{},"license.html":{}}}],["payment",{"_index":3565,"title":{},"body":{"license.html":{}}}],["peer",{"_index":3328,"title":{},"body":{"license.html":{}}}],["peers",{"_index":3331,"title":{},"body":{"license.html":{}}}],["perform",{"_index":1389,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["performance",{"_index":3616,"title":{},"body":{"license.html":{}}}],["performing",{"_index":3157,"title":{},"body":{"license.html":{}}}],["period",{"_index":1828,"title":{},"body":{"components/MoonFormComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"injectables/MoonService.html":{},"miscellaneous/enumerations.html":{}}}],["periodsubject",{"_index":1795,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["permanently",{"_index":3458,"title":{},"body":{"license.html":{}}}],["permission",{"_index":2981,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":3172,"title":{},"body":{"license.html":{}}}],["permissive",{"_index":3242,"title":{},"body":{"license.html":{}}}],["permit",{"_index":3276,"title":{},"body":{"license.html":{}}}],["permits",{"_index":3440,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":2910,"title":{},"body":{"license.html":{}}}],["perpetuity",{"_index":3378,"title":{},"body":{"license.html":{}}}],["personal",{"_index":3342,"title":{},"body":{"license.html":{}}}],["pertinent",{"_index":3581,"title":{},"body":{"license.html":{}}}],["phase",{"_index":1775,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"components/MoonFormComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["phasesubject",{"_index":1796,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["physical",{"_index":3285,"title":{},"body":{"license.html":{}}}],["physically",{"_index":3301,"title":{},"body":{"license.html":{}}}],["pieces",{"_index":2947,"title":{},"body":{"license.html":{}}}],["piexif",{"_index":2761,"title":{},"body":{"dependencies.html":{}}}],["place",{"_index":2843,"title":{},"body":{"index.html":{},"license.html":{}}}],["please",{"_index":3690,"title":{},"body":{"license.html":{}}}],["pledge",{"_index":1484,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["plotted",{"_index":1681,"title":{},"body":{"components/LineFormComponent.html":{}}}],["plotting",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"index.html":{}}}],["plugins",{"_index":670,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["plus",{"_index":2443,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"license.html":{}}}],["point",{"_index":2513,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["pointer",{"_index":3660,"title":{},"body":{"license.html":{}}}],["points",{"_index":1761,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{},"components/ScatterHighchartComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["popperjs/core",{"_index":2741,"title":{},"body":{"dependencies.html":{}}}],["popup",{"_index":1460,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["popup'},{'name",{"_index":61,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["popup.component",{"_index":1502,"title":{},"body":{"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{}}}],["popup.component.html",{"_index":1468,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["popup.component.scss",{"_index":1467,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["popup.component.ts",{"_index":1459,"title":{},"body":{"components/HonorCodePopupComponent.html":{},"coverage.html":{}}}],["popup.component.ts:16",{"_index":1474,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["popup.component.ts:21",{"_index":1476,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["popup.component.ts:27",{"_index":1475,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["popup.component.ts:31",{"_index":1477,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["popup.module",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["popup.module.ts",{"_index":1501,"title":{},"body":{"modules/HonorCodePopupModule.html":{}}}],["popup.service",{"_index":893,"title":{},"body":{"components/CurveComponent.html":{},"modules/CurveModule.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"modules/MoonModule.html":{},"components/ScatterComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/VenusComponent.html":{}}}],["popup.service.ts",{"_index":1508,"title":{},"body":{"injectables/HonorCodePopupService.html":{},"coverage.html":{}}}],["popup.service.ts:10",{"_index":1529,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["popup.service.ts:11",{"_index":1518,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["popup.service.ts:16",{"_index":1524,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["popup.service.ts:20",{"_index":1527,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["popup.service.ts:24",{"_index":1519,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["popup.service.ts:28",{"_index":1520,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["popup.service.ts:32",{"_index":1521,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["popup/honor",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"components/CurveComponent.html":{},"modules/CurveModule.html":{},"components/DualComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/MoonComponent.html":{},"modules/MoonModule.html":{},"components/ScatterComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/VenusComponent.html":{},"coverage.html":{}}}],["popupservice",{"_index":2376,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["portion",{"_index":3336,"title":{},"body":{"license.html":{}}}],["position",{"_index":664,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["possesses",{"_index":3297,"title":{},"body":{"license.html":{}}}],["possession",{"_index":3256,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":3637,"title":{},"body":{"license.html":{}}}],["possible",{"_index":3652,"title":{},"body":{"license.html":{}}}],["power",{"_index":3224,"title":{},"body":{"license.html":{}}}],["practical",{"_index":2922,"title":{},"body":{"license.html":{}}}],["practice",{"_index":3016,"title":{},"body":{"license.html":{}}}],["pre",{"_index":2793,"title":{},"body":{"miscellaneous/functions.html":{}}}],["preamble",{"_index":2918,"title":{},"body":{"license.html":{}}}],["precise",{"_index":3045,"title":{},"body":{"license.html":{}}}],["precisely",{"_index":3013,"title":{},"body":{"license.html":{}}}],["precision",{"_index":1366,"title":{},"body":{"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"injectables/MoonService.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SliderUtil.html":{},"injectables/VenusService.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["predecessor",{"_index":3496,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":3120,"title":{},"body":{"license.html":{}}}],["present",{"_index":3592,"title":{},"body":{"license.html":{}}}],["presents",{"_index":3115,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":3415,"title":{},"body":{"license.html":{}}}],["prevent",{"_index":2953,"title":{},"body":{"license.html":{}}}],["prevented",{"_index":3373,"title":{},"body":{"license.html":{}}}],["previous",{"_index":2996,"title":{},"body":{"license.html":{}}}],["price",{"_index":2942,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":3567,"title":{},"body":{"license.html":{}}}],["prior",{"_index":3461,"title":{},"body":{"license.html":{}}}],["private",{"_index":248,"title":{},"body":{"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"license.html":{}}}],["pro",{"_index":2442,"title":{},"body":{"components/ToolsNavbarComponent.html":{}}}],["problems",{"_index":2993,"title":{},"body":{"license.html":{}}}],["procedures",{"_index":3367,"title":{},"body":{"license.html":{}}}],["processdata",{"_index":942,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["processdata(data",{"_index":954,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["procuring",{"_index":3555,"title":{},"body":{"license.html":{}}}],["produce",{"_index":3149,"title":{},"body":{"license.html":{}}}],["product",{"_index":3286,"title":{},"body":{"license.html":{}}}],["production",{"_index":2882,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["products",{"_index":3011,"title":{},"body":{"license.html":{}}}],["program",{"_index":2931,"title":{},"body":{"license.html":{}}}],["program's",{"_index":3235,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":3680,"title":{},"body":{"license.html":{}}}],["programming",{"_index":3129,"title":{},"body":{"license.html":{}}}],["programs",{"_index":2939,"title":{},"body":{"license.html":{}}}],["prohibit",{"_index":3015,"title":{},"body":{"license.html":{}}}],["prohibiting",{"_index":3220,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":3561,"title":{},"body":{"license.html":{}}}],["project",{"_index":2851,"title":{},"body":{"index.html":{}}}],["projector",{"_index":2857,"title":{},"body":{"index.html":{}}}],["prominent",{"_index":3117,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":3108,"title":{},"body":{"license.html":{}}}],["prompt",{"_index":2449,"title":{},"body":{"components/ToolsNavbarComponent.html":{}}}],["propagate",{"_index":3074,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":3480,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":3087,"title":{},"body":{"license.html":{}}}],["properties",{"_index":112,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"properties.html":{}}}],["property",{"_index":3343,"title":{},"body":{"license.html":{}}}],["proprietary",{"_index":3040,"title":{},"body":{"license.html":{}}}],["protect",{"_index":2950,"title":{},"body":{"license.html":{}}}],["protected",{"_index":240,"title":{},"body":{"components/AppearanceComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/MoonFormComponent.html":{},"components/ScatterFormComponent.html":{},"classes/SliderUtil.html":{}}}],["protecting",{"_index":3007,"title":{},"body":{"license.html":{}}}],["protection",{"_index":2983,"title":{},"body":{"license.html":{}}}],["protocols",{"_index":3393,"title":{},"body":{"license.html":{}}}],["prove",{"_index":3617,"title":{},"body":{"license.html":{}}}],["provide",{"_index":3188,"title":{},"body":{"license.html":{}}}],["provided",{"_index":3114,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":379,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"injectables/HonorCodeChartService.html":{}}}],["providers",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"components/CurveComponent.html":{},"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/InterfaceUtilModule.html":{},"modules/MenubarModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules/SettingsModule.html":{},"modules/SimpleDataButtonModule.html":{},"modules/SimpleGraphButtonModule.html":{},"modules/ToolsNavbarModule.html":{},"modules/VenusModule.html":{},"overview.html":{}}}],["provides",{"_index":2821,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provision",{"_index":3024,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":3455,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":3604,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":3606,"title":{},"body":{"license.html":{}}}],["public",{"_index":329,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SliderUtil.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"license.html":{}}}],["publicity",{"_index":3420,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":3394,"title":{},"body":{"license.html":{}}}],["publish",{"_index":3238,"title":{},"body":{"license.html":{}}}],["published",{"_index":3601,"title":{},"body":{"license.html":{}}}],["pulsar",{"_index":2444,"title":{},"body":{"components/ToolsNavbarComponent.html":{}}}],["purpose",{"_index":3034,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":3346,"title":{},"body":{"license.html":{}}}],["pursuant",{"_index":3551,"title":{},"body":{"license.html":{}}}],["qualify",{"_index":3470,"title":{},"body":{"license.html":{}}}],["quality",{"_index":3615,"title":{},"body":{"license.html":{}}}],["rad",{"_index":1753,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rad(45",{"_index":2503,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["rad(degree",{"_index":2823,"title":{},"body":{"miscellaneous/functions.html":{}}}],["radians",{"_index":2501,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"miscellaneous/functions.html":{}}}],["radio",{"_index":2440,"title":{},"body":{"components/ToolsNavbarComponent.html":{}}}],["radius",{"_index":2152,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["random",{"_index":2366,"title":{},"body":{"components/SimpleDataButtonComponent.html":{}}}],["randomly",{"_index":1765,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{}}}],["range",{"_index":1644,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["ratio",{"_index":2179,"title":{},"body":{"components/ScatterHighchartComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["re",{"_index":2829,"title":{},"body":{"index.html":{}}}],["reactiveformsmodule",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/InterfaceUtilModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules/VenusModule.html":{}}}],["read",{"_index":3691,"title":{},"body":{"license.html":{}}}],["readable",{"_index":3282,"title":{},"body":{"license.html":{}}}],["readily",{"_index":3539,"title":{},"body":{"license.html":{}}}],["reading",{"_index":3398,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":241,"title":{},"body":{"components/AppearanceComponent.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SliderUtil.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["ready",{"_index":3022,"title":{},"body":{"license.html":{}}}],["reason",{"_index":3549,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":3299,"title":{},"body":{"license.html":{}}}],["receipt",{"_index":3468,"title":{},"body":{"license.html":{}}}],["receive",{"_index":2945,"title":{},"body":{"license.html":{}}}],["received",{"_index":2972,"title":{},"body":{"license.html":{}}}],["receives",{"_index":3485,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":1487,"title":{},"body":{"components/HonorCodePopupComponent.html":{},"license.html":{}}}],["recipient",{"_index":3377,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":3547,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":2969,"title":{},"body":{"license.html":{}}}],["recognized",{"_index":3124,"title":{},"body":{"license.html":{}}}],["red",{"_index":468,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["redirectto",{"_index":217,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redistribute",{"_index":3655,"title":{},"body":{"license.html":{}}}],["reed",{"_index":2893,"title":{},"body":{"index.html":{}}}],["referring",{"_index":2941,"title":{},"body":{"license.html":{}}}],["refers",{"_index":3051,"title":{},"body":{"license.html":{}}}],["refrain",{"_index":3584,"title":{},"body":{"license.html":{}}}],["regard",{"_index":3404,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":3258,"title":{},"body":{"license.html":{}}}],["regenerate",{"_index":3169,"title":{},"body":{"license.html":{}}}],["registerallmodules",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["registersavegraphbutton",{"_index":1514,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["registersavegraphbutton(button",{"_index":1522,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["registersavegraphspinner",{"_index":1515,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["registersavegraphspinner(spinner",{"_index":1525,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["reinstated",{"_index":3454,"title":{},"body":{"license.html":{}}}],["relationship",{"_index":3196,"title":{},"body":{"license.html":{}}}],["released",{"_index":2936,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":3251,"title":{},"body":{"license.html":{}}}],["relicensing",{"_index":3441,"title":{},"body":{"license.html":{}}}],["relying",{"_index":3538,"title":{},"body":{"license.html":{}}}],["remain",{"_index":3321,"title":{},"body":{"license.html":{}}}],["remains",{"_index":2933,"title":{},"body":{"license.html":{}}}],["removal",{"_index":3407,"title":{},"body":{"license.html":{}}}],["remove",{"_index":3406,"title":{},"body":{"license.html":{}}}],["removerow",{"_index":917,"title":{},"body":{"classes/CurveData.html":{},"classes/DualData.html":{},"injectables/DualService.html":{},"classes/MoonData.html":{},"injectables/MoonService.html":{},"interfaces/MyData.html":{},"classes/ScatterData.html":{},"injectables/ScatterService.html":{},"classes/VenusData.html":{},"injectables/VenusService.html":{}}}],["removerow(index",{"_index":928,"title":{},"body":{"classes/CurveData.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/MoonData.html":{},"injectables/MoonService.html":{},"interfaces/MyData.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["render",{"_index":3043,"title":{},"body":{"license.html":{}}}],["renderchart",{"_index":572,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"interfaces/MyChart.html":{}}}],["rendered",{"_index":2109,"title":{},"body":{"classes/ScatterData.html":{},"license.html":{}}}],["renderer",{"_index":328,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["renderer2",{"_index":376,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["rendererfactory",{"_index":346,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["rendererfactory.createrenderer(document.body",{"_index":381,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["rendererfactory2",{"_index":347,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["rendertable",{"_index":1077,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyTable.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["repair",{"_index":3621,"title":{},"body":{"license.html":{}}}],["represent",{"_index":1762,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{},"license.html":{}}}],["represents",{"_index":2516,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["require",{"_index":3165,"title":{},"body":{"license.html":{}}}],["required",{"_index":1486,"title":{},"body":{"components/HonorCodePopupComponent.html":{},"license.html":{}}}],["requirement",{"_index":3252,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":3325,"title":{},"body":{"license.html":{}}}],["requires",{"_index":2989,"title":{},"body":{"license.html":{}}}],["requiring",{"_index":3066,"title":{},"body":{"license.html":{}}}],["reset",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"components/AppearanceComponent.html":{},"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/InterfaceUtilModule.html":{},"modules/MenubarModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"modules/ToolsNavbarModule.html":{},"modules/VenusModule.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["resetchartinfo",{"_index":872,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/DualComponent.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"components/MoonComponent.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"interfaces/MyStorage.html":{},"components/ScatterComponent.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["resetdata",{"_index":874,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/DualComponent.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"components/MoonComponent.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"interfaces/MyStorage.html":{},"components/ScatterComponent.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["resetdefault",{"_index":251,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["resetgraphinfo",{"_index":2372,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["resetinterface",{"_index":876,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualStorage.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"interfaces/MyStorage.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["resetmodel",{"_index":1785,"title":{},"body":{"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"injectables/ScatterService.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{}}}],["resolved",{"_index":3353,"title":{},"body":{"license.html":{}}}],["respect",{"_index":2962,"title":{},"body":{"license.html":{}}}],["responsibilities",{"_index":2960,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":3486,"title":{},"body":{"license.html":{}}}],["responsive",{"_index":652,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["restrict",{"_index":3033,"title":{},"body":{"license.html":{}}}],["restricting",{"_index":3221,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":3439,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":3436,"title":{},"body":{"license.html":{}}}],["result",{"_index":678,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"license.html":{}}}],["result.push(row",{"_index":792,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["result.slice(0",{"_index":781,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["result[0].push([entry.x",{"_index":796,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["result[0].push({x",{"_index":683,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["result[1].push([entry.x",{"_index":798,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["result[1].push({x",{"_index":687,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["result[2].push([entry.x",{"_index":799,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["result[2].push({x",{"_index":690,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["result[3].push([entry.x",{"_index":800,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["result[3].push({x",{"_index":693,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["resulting",{"_index":3069,"title":{},"body":{"license.html":{}}}],["results",{"_index":105,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"modules/CurveModule.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"modules/InterfaceUtilModule.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"modules/MoonModule.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyData.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"modules/ScatterModule.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"modules/VenusModule.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retains",{"_index":3381,"title":{},"body":{"license.html":{}}}],["return",{"_index":231,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"injectables/HonorCodeChartService.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"injectables/MoonService.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SliderUtil.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"license.html":{}}}],["returndata",{"_index":1779,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{}}}],["returned",{"_index":2803,"title":{},"body":{"miscellaneous/functions.html":{}}}],["returns",{"_index":228,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyData.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"classes/SliderUtil.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"miscellaneous/functions.html":{}}}],["reverse",{"_index":668,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["reverseyaxis",{"_index":943,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["reviewing",{"_index":3642,"title":{},"body":{"license.html":{}}}],["revised",{"_index":3590,"title":{},"body":{"license.html":{}}}],["right",{"_index":2367,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"license.html":{}}}],["rights",{"_index":2951,"title":{},"body":{"license.html":{}}}],["risk",{"_index":3614,"title":{},"body":{"license.html":{}}}],["roboto",{"_index":501,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["rom",{"_index":3384,"title":{},"body":{"license.html":{}}}],["root",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"injectables/HonorCodeChartService.html":{}}}],["root'},{'name",{"_index":35,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["router",{"_index":2415,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["routerlink",{"_index":2337,"title":{},"body":{"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"overview.html":{}}}],["routerlinkactive",{"_index":2338,"title":{},"body":{"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"overview.html":{}}}],["routermodule",{"_index":193,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(tools_routes",{"_index":234,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routeroutlet",{"_index":2339,"title":{},"body":{"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"overview.html":{}}}],["routes",{"_index":194,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["routing.module.ts",{"_index":192,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["row",{"_index":806,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/DualComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/MoonComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/ScatterComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/VenusComponent.html":{},"injectables/VenusService.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["row.angularseparation",{"_index":1994,"title":{},"body":{"classes/MoonTable.html":{},"components/MoonTableComponent.html":{}}}],["row.diameter",{"_index":2662,"title":{},"body":{"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["row.distance",{"_index":2323,"title":{},"body":{"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{}}}],["row.juliandate",{"_index":1992,"title":{},"body":{"classes/MoonTable.html":{},"components/MoonTableComponent.html":{}}}],["row.latitude",{"_index":2321,"title":{},"body":{"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{}}}],["row.longitude",{"_index":2319,"title":{},"body":{"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{}}}],["row.map((value",{"_index":1971,"title":{},"body":{"injectables/MoonService.html":{},"injectables/VenusService.html":{}}}],["row.phase",{"_index":2664,"title":{},"body":{"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["row.x1",{"_index":1368,"title":{},"body":{"classes/DualTable.html":{},"components/DualTableComponent.html":{}}}],["row.x2",{"_index":1372,"title":{},"body":{"classes/DualTable.html":{},"components/DualTableComponent.html":{}}}],["row.y1",{"_index":1370,"title":{},"body":{"classes/DualTable.html":{},"components/DualTableComponent.html":{}}}],["row.y2",{"_index":786,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{}}}],["row.y3",{"_index":788,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["row.y4",{"_index":790,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["royalty",{"_index":3501,"title":{},"body":{"license.html":{}}}],["rules",{"_index":3392,"title":{},"body":{"license.html":{}}}],["run",{"_index":2879,"title":{},"body":{"index.html":{},"license.html":{}}}],["running",{"_index":3180,"title":{},"body":{"license.html":{}}}],["runs",{"_index":3147,"title":{},"body":{"license.html":{}}}],["rxjs",{"_index":614,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"injectables/MoonService.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"injectables/ScatterService.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SliderUtil.html":{},"components/VenusChartFormComponent.html":{},"components/VenusHighchartComponent.html":{},"injectables/VenusService.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"dependencies.html":{}}}],["safest",{"_index":3657,"title":{},"body":{"license.html":{}}}],["sake",{"_index":2988,"title":{},"body":{"license.html":{}}}],["sale",{"_index":3510,"title":{},"body":{"license.html":{}}}],["same",{"_index":2970,"title":{},"body":{"license.html":{}}}],["sass",{"_index":2759,"title":{},"body":{"dependencies.html":{}}}],["satisfy",{"_index":3324,"title":{},"body":{"license.html":{}}}],["save",{"_index":1404,"title":{},"body":{"injectables/HonorCodeChartService.html":{},"components/SimpleGraphButtonComponent.html":{}}}],["saveas",{"_index":1420,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["saveas(dataurltoblob(exifimage",{"_index":1447,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["savechartinfo",{"_index":1052,"title":{},"body":{"classes/CurveStorage.html":{},"classes/DualStorage.html":{},"classes/MoonStorage.html":{},"interfaces/MyStorage.html":{},"classes/ScatterStorage.html":{},"classes/VenusStorage.html":{}}}],["savechartinfo(chartinfo",{"_index":1349,"title":{},"body":{"classes/DualStorage.html":{},"classes/MoonStorage.html":{},"interfaces/MyStorage.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["savechartinfo(chartinfoobject",{"_index":863,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["saved",{"_index":1410,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["savedata",{"_index":1053,"title":{},"body":{"classes/CurveStorage.html":{},"classes/DualStorage.html":{},"classes/MoonStorage.html":{},"interfaces/MyStorage.html":{},"classes/ScatterStorage.html":{},"classes/VenusStorage.html":{}}}],["savedata(data",{"_index":866,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualStorage.html":{},"classes/MoonStorage.html":{},"interfaces/MyStorage.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["savegraph",{"_index":899,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/VenusComponent.html":{}}}],["savegraphbutton",{"_index":1509,"title":{},"body":{"injectables/HonorCodePopupService.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["savegraphspinner",{"_index":1510,"title":{},"body":{"injectables/HonorCodePopupService.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["saveimage",{"_index":1392,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["saveimage(chart",{"_index":1402,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["saveimagehighchart",{"_index":1393,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["saveimagehighchart(chart",{"_index":1411,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["saveimagehighchartoffline",{"_index":1394,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["saveimagehighchartoffline(chart",{"_index":1413,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["saveinterface",{"_index":1054,"title":{},"body":{"classes/CurveStorage.html":{},"classes/DualStorage.html":{},"classes/MoonStorage.html":{},"interfaces/MyStorage.html":{},"classes/ScatterStorage.html":{},"classes/VenusStorage.html":{}}}],["saveinterface(interfaceinfo",{"_index":869,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualStorage.html":{},"classes/MoonStorage.html":{},"interfaces/MyStorage.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["saver",{"_index":1421,"title":{},"body":{"injectables/HonorCodeChartService.html":{},"dependencies.html":{}}}],["saying",{"_index":3318,"title":{},"body":{"license.html":{}}}],["scales",{"_index":658,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["scatter",{"_index":79,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"modules/ScatterModule.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["scatter'},{'name",{"_index":81,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["scatter.component.html",{"_index":2098,"title":{},"body":{"components/ScatterComponent.html":{}}}],["scatter.component.scss",{"_index":2097,"title":{},"body":{"components/ScatterComponent.html":{}}}],["scatter.service",{"_index":2031,"title":{},"body":{"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"modules/ScatterModule.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{}}}],["scatter.service.util",{"_index":2268,"title":{},"body":{"injectables/ScatterService.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{}}}],["scatter/scatter.component",{"_index":2223,"title":{},"body":{"modules/ScatterModule.html":{}}}],["scatterchartformcomponent",{"_index":78,"title":{"components/ScatterChartFormComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"modules/ScatterModule.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scatterchartinfo",{"_index":2032,"title":{"classes/ScatterChartInfo.html":{}},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"coverage.html":{}}}],["scatterchartinfo.getdefaultstorageobject().charttitle",{"_index":2067,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["scatterchartinfo.getdefaultstorageobject().datalabel",{"_index":2068,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["scatterchartinfo.getdefaultstorageobject().xaxislabel",{"_index":2069,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["scatterchartinfo.getdefaultstorageobject().yaxislabel",{"_index":2070,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["scatterchartinfostorageobject",{"_index":2041,"title":{"interfaces/ScatterChartInfoStorageObject.html":{}},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"coverage.html":{}}}],["scattercomponent",{"_index":80,"title":{"components/ScatterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"modules/ScatterModule.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scatterdata",{"_index":2054,"title":{"classes/ScatterData.html":{}},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"coverage.html":{}}}],["scatterdata.getdefaultdatadict",{"_index":2055,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["scatterdatadict",{"_index":2050,"title":{"interfaces/ScatterDataDict.html":{}},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"coverage.html":{}}}],["scatterdatadict.distance",{"_index":2059,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["scatterdatadict.latitude",{"_index":2058,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["scatterdatadict.longitude",{"_index":2057,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["scatterformcomponent",{"_index":82,"title":{"components/ScatterFormComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"modules/ScatterModule.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scatterhighchartcomponent",{"_index":83,"title":{"components/ScatterHighchartComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"modules/ScatterModule.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scatterinterface",{"_index":2226,"title":{},"body":{"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{}}}],["scatterinterfacestorageobject",{"_index":2075,"title":{"interfaces/ScatterInterfaceStorageObject.html":{}},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"coverage.html":{}}}],["scattermodel",{"_index":2077,"title":{"interfaces/ScatterModel.html":{}},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"coverage.html":{}}}],["scattermodelinterface",{"_index":2085,"title":{"classes/ScatterModelInterface.html":{}},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"coverage.html":{}}}],["scattermodelinterface.getdefaultstorageobject().diameter",{"_index":2089,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["scattermodelinterface.getdefaultstorageobject().distance",{"_index":2087,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["scattermodelparameters",{"_index":2126,"title":{},"body":{"components/ScatterFormComponent.html":{},"miscellaneous/enumerations.html":{}}}],["scattermodelparameters.diameter",{"_index":2124,"title":{},"body":{"components/ScatterFormComponent.html":{}}}],["scattermodelparameters.distance",{"_index":2122,"title":{},"body":{"components/ScatterFormComponent.html":{}}}],["scattermodule",{"_index":2217,"title":{"modules/ScatterModule.html":{}},"body":{"modules/ScatterModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"modules.html":{},"overview.html":{}}}],["scatterservice",{"_index":2030,"title":{"injectables/ScatterService.html":{}},"body":{"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"modules/ScatterModule.html":{},"injectables/ScatterService.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scatterstorage",{"_index":2227,"title":{"classes/ScatterStorage.html":{}},"body":{"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"coverage.html":{}}}],["scattertable",{"_index":2316,"title":{"classes/ScatterTable.html":{}},"body":{"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"coverage.html":{}}}],["scattertable(this.id",{"_index":2317,"title":{},"body":{"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{}}}],["scattertablecomponent",{"_index":84,"title":{"components/ScatterTableComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"modules/ScatterModule.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scattertablecomponent.float_precision",{"_index":2318,"title":{},"body":{"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{}}}],["school",{"_index":3681,"title":{},"body":{"license.html":{}}}],["scope",{"_index":3560,"title":{},"body":{"license.html":{}}}],["screenratio",{"_index":2182,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["script",{"_index":1721,"title":{},"body":{"components/MenubarComponent.html":{}}}],["scripts",{"_index":3153,"title":{},"body":{"license.html":{}}}],["secondarily",{"_index":3078,"title":{},"body":{"license.html":{}}}],["seconds",{"_index":2498,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["section",{"_index":3200,"title":{},"body":{"license.html":{}}}],["sections",{"_index":3280,"title":{},"body":{"license.html":{}}}],["see",{"_index":3664,"title":{},"body":{"license.html":{}}}],["select",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/ToolsNavbarComponent.html":{}}}],["selecting",{"_index":2426,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["sell",{"_index":3526,"title":{},"body":{"license.html":{}}}],["selling",{"_index":3509,"title":{},"body":{"license.html":{}}}],["semiconductor",{"_index":3054,"title":{},"body":{"license.html":{}}}],["separable",{"_index":3335,"title":{},"body":{"license.html":{}}}],["separate",{"_index":3265,"title":{},"body":{"license.html":{}}}],["separately",{"_index":3262,"title":{},"body":{"license.html":{}}}],["separation",{"_index":1990,"title":{},"body":{"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["series",{"_index":2556,"title":{},"body":{"components/VenusHighchartComponent.html":{}}}],["serif",{"_index":1723,"title":{},"body":{"components/MenubarComponent.html":{}}}],["serve",{"_index":2886,"title":{},"body":{"index.html":{}}}],["server",{"_index":3302,"title":{},"body":{"license.html":{}}}],["serves",{"_index":3140,"title":{},"body":{"license.html":{}}}],["service",{"_index":624,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"dependencies.html":{},"license.html":{}}}],["service/appearance.service",{"_index":279,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["service/appearance.utils",{"_index":276,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["services",{"_index":1388,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["servicing",{"_index":3620,"title":{},"body":{"license.html":{}}}],["set",{"_index":2872,"title":{},"body":{"index.html":{}}}],["setamplitude",{"_index":1859,"title":{},"body":{"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{}}}],["setamplitude(amplitude",{"_index":1870,"title":{},"body":{"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{}}}],["setchartseries",{"_index":944,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["setcharttitle",{"_index":539,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChartInfo.html":{},"components/CurveHighChartComponent.html":{},"classes/DualChartInfo.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/MoonChartInfo.html":{},"components/MoonHighchartComponent.html":{},"injectables/MoonService.html":{},"classes/ScatterChartInfo.html":{},"components/ScatterHighchartComponent.html":{},"injectables/ScatterService.html":{},"classes/VenusChartInfo.html":{},"components/VenusHighchartComponent.html":{},"injectables/VenusService.html":{}}}],["setcharttitle(title",{"_index":549,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/MoonChartInfo.html":{},"injectables/MoonService.html":{},"interfaces/MyChart.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["setchartxaxis",{"_index":945,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["setchartyaxis",{"_index":946,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["setcolortheme",{"_index":341,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{}}}],["setcolortheme(colortheme",{"_index":368,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{}}}],["setcross",{"_index":2129,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["setcurvecount",{"_index":999,"title":{},"body":{"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{}}}],["setcurvecount(curvecount",{"_index":828,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["setdata",{"_index":918,"title":{},"body":{"classes/CurveData.html":{},"classes/DualData.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/MoonData.html":{},"components/MoonHighchartComponent.html":{},"injectables/MoonService.html":{},"interfaces/MyData.html":{},"classes/ScatterData.html":{},"components/ScatterHighchartComponent.html":{},"injectables/ScatterService.html":{},"classes/VenusData.html":{},"components/VenusHighchartComponent.html":{},"injectables/VenusService.html":{}}}],["setdata(data",{"_index":801,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/MoonData.html":{},"injectables/MoonService.html":{},"interfaces/MyData.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["setdatabycell",{"_index":919,"title":{},"body":{"classes/CurveData.html":{}}}],["setdatabycell(value",{"_index":808,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["setdatabycellontablechange",{"_index":920,"title":{},"body":{"classes/CurveData.html":{}}}],["setdatabycellontablechange(changes",{"_index":932,"title":{},"body":{"classes/CurveData.html":{}}}],["setdatalabel",{"_index":540,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChartInfo.html":{},"classes/DualChartInfo.html":{},"injectables/DualService.html":{},"classes/MoonChartInfo.html":{},"injectables/MoonService.html":{},"classes/ScatterChartInfo.html":{},"injectables/ScatterService.html":{},"classes/VenusChartInfo.html":{},"injectables/VenusService.html":{}}}],["setdatalabel(data",{"_index":551,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/MoonChartInfo.html":{},"injectables/MoonService.html":{},"interfaces/MyChart.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["setdatalabel(datalabel",{"_index":753,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["setdiameter",{"_index":2194,"title":{},"body":{"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{}}}],["setdiameter(diameter",{"_index":2081,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{}}}],["setdistance",{"_index":2195,"title":{},"body":{"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{}}}],["setdistance(distance",{"_index":2080,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{}}}],["setfont",{"_index":419,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["setfont(font",{"_index":426,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["setfontfamily",{"_index":342,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["setfontfamily(fontfamily",{"_index":370,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["setfontsize",{"_index":343,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{}}}],["setfontsize(fontsize",{"_index":372,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{}}}],["setfontstyle",{"_index":344,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{}}}],["setfontstyle(fontstyle",{"_index":374,"title":{},"body":{"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{}}}],["sethighchart",{"_index":1278,"title":{},"body":{"injectables/DualService.html":{},"injectables/MoonService.html":{},"injectables/ScatterService.html":{},"injectables/VenusService.html":{}}}],["sethighchart(highchart",{"_index":1297,"title":{},"body":{"injectables/DualService.html":{},"injectables/MoonService.html":{},"injectables/ScatterService.html":{},"injectables/VenusService.html":{}}}],["setismagnitudeon",{"_index":1000,"title":{},"body":{"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{}}}],["setismagnitudeon(ismagnitudeon",{"_index":831,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["setmodel",{"_index":1830,"title":{},"body":{"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{}}}],["setmodelstorageobject",{"_index":2196,"title":{},"body":{"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{}}}],["setmodelstorageobject(storageobject",{"_index":2083,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{}}}],["setperiod",{"_index":1860,"title":{},"body":{"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{}}}],["setperiod(period",{"_index":1872,"title":{},"body":{"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{}}}],["setphase",{"_index":1861,"title":{},"body":{"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{}}}],["setphase(phase",{"_index":1874,"title":{},"body":{"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{}}}],["setstorageobject",{"_index":541,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChartInfo.html":{},"classes/CurveImpl.html":{},"classes/DualChartInfo.html":{},"injectables/DualService.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{},"classes/ScatterChartInfo.html":{},"injectables/ScatterService.html":{},"classes/VenusChartInfo.html":{},"injectables/VenusService.html":{}}}],["setstorageobject(curveinterfacestorageobject",{"_index":840,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["setstorageobject(storageobject",{"_index":553,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChartInfo.html":{},"classes/DualChartInfo.html":{},"injectables/DualService.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{},"interfaces/MyChart.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["setsun",{"_index":2130,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["settilt",{"_index":1862,"title":{},"body":{"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{}}}],["settilt(tilt",{"_index":1877,"title":{},"body":{"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{}}}],["setting",{"_index":316,"title":{},"body":{"components/AppearanceComponent.html":{},"components/SettingsComponent.html":{}}}],["settings",{"_index":212,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MenubarComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{}}}],["settings'},{'name",{"_index":86,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["settings.component.html",{"_index":2329,"title":{},"body":{"components/SettingsComponent.html":{},"modules/SettingsModule.html":{}}}],["settings.component.scss",{"_index":2328,"title":{},"body":{"components/SettingsComponent.html":{},"modules/SettingsModule.html":{}}}],["settingscomponent",{"_index":85,"title":{"components/SettingsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["settingsmodule",{"_index":147,"title":{"modules/SettingsModule.html":{}},"body":{"modules/AppModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["setxaxislabel",{"_index":542,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChartInfo.html":{},"classes/DualChartInfo.html":{},"injectables/DualService.html":{},"classes/MoonChartInfo.html":{},"injectables/MoonService.html":{},"classes/ScatterChartInfo.html":{},"injectables/ScatterService.html":{},"classes/VenusChartInfo.html":{},"injectables/VenusService.html":{}}}],["setxaxislabel(xaxis",{"_index":556,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/DualChartInfo.html":{},"injectables/DualService.html":{},"classes/MoonChartInfo.html":{},"injectables/MoonService.html":{},"interfaces/MyChart.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["setxaxislabel(xaxislabel",{"_index":756,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["setyaxislabel",{"_index":543,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChartInfo.html":{},"classes/DualChartInfo.html":{},"injectables/DualService.html":{},"classes/MoonChartInfo.html":{},"injectables/MoonService.html":{},"classes/ScatterChartInfo.html":{},"injectables/ScatterService.html":{},"classes/VenusChartInfo.html":{},"injectables/VenusService.html":{}}}],["setyaxislabel(yaxis",{"_index":559,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/DualChartInfo.html":{},"injectables/DualService.html":{},"classes/MoonChartInfo.html":{},"injectables/MoonService.html":{},"interfaces/MyChart.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["setyaxislabel(yaxislabel",{"_index":758,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["shall",{"_index":3205,"title":{},"body":{"license.html":{}}}],["share",{"_index":2926,"title":{},"body":{"license.html":{}}}],["shared",{"_index":970,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{},"license.html":{}}}],["shared/about/about.component",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["shared/charts/chart.interface",{"_index":605,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["shared/data/data.interface",{"_index":606,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["shared/data/utils",{"_index":1754,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["shared/home/home.component",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["shared/honor",{"_index":892,"title":{},"body":{"components/CurveComponent.html":{},"modules/CurveModule.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"modules/MoonModule.html":{},"components/ScatterComponent.html":{},"components/VenusComponent.html":{}}}],["shared/interface/input",{"_index":1810,"title":{},"body":{"components/MoonFormComponent.html":{},"components/ScatterFormComponent.html":{}}}],["shared/interface/util",{"_index":1908,"title":{},"body":{"modules/MoonModule.html":{},"modules/ScatterModule.html":{}}}],["shared/page",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["shared/settings/appearance/appearance.component",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["shared/settings/appearance/service/appearance",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/settings/appearance/service/appearance.service",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["shared/settings/appearance/service/appearance.utils",{"_index":611,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["shared/settings/settings.component",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["shared/simple",{"_index":1025,"title":{},"body":{"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules/VenusModule.html":{}}}],["shared/storage/storage.interface",{"_index":761,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["shared/tables/table",{"_index":1085,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["shared/tools",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/types/actions",{"_index":891,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/VenusComponent.html":{}}}],["short",{"_index":3670,"title":{},"body":{"license.html":{}}}],["show",{"_index":2973,"title":{},"body":{"license.html":{}}}],["showinlegend",{"_index":2161,"title":{},"body":{"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["sidenav",{"_index":2411,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["sign",{"_index":1489,"title":{},"body":{"components/HonorCodePopupComponent.html":{},"license.html":{}}}],["signature",{"_index":1397,"title":{},"body":{"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"miscellaneous/functions.html":{}}}],["significant",{"_index":3365,"title":{},"body":{"license.html":{}}}],["similar",{"_index":3219,"title":{},"body":{"license.html":{}}}],["simple",{"_index":88,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["simpledatabuttoncomponent",{"_index":87,"title":{"components/SimpleDataButtonComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["simpledatabuttonmodule",{"_index":1020,"title":{"modules/SimpleDataButtonModule.html":{}},"body":{"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"modules/VenusModule.html":{},"modules.html":{},"overview.html":{}}}],["simplegraphbuttoncomponent",{"_index":91,"title":{"components/SimpleGraphButtonComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["simplegraphbuttonmodule",{"_index":1021,"title":{"modules/SimpleGraphButtonModule.html":{}},"body":{"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"modules/VenusModule.html":{},"modules.html":{},"overview.html":{}}}],["simultaneously",{"_index":3580,"title":{},"body":{"license.html":{}}}],["single",{"_index":3553,"title":{},"body":{"license.html":{}}}],["site",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"miscellaneous/functions.html":{}}}],["size",{"_index":314,"title":{},"body":{"components/AppearanceComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["size.displayname",{"_index":315,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["skynet",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/MenubarComponent.html":{},"index.html":{}}}],["skynet.unc.edu",{"_index":1458,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["slide",{"_index":1048,"title":{},"body":{"modules/CurveModule.html":{},"components/LineFormComponent.html":{}}}],["slider",{"_index":1542,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/MoonFormComponent.html":{},"components/ScatterFormComponent.html":{},"classes/SliderUtil.html":{}}}],["slider'},{'name",{"_index":64,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["slider.component",{"_index":1651,"title":{},"body":{"modules/InterfaceUtilModule.html":{},"components/MoonFormComponent.html":{},"components/ScatterFormComponent.html":{}}}],["slider.component.html",{"_index":1544,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["slider.component.scss",{"_index":1543,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["slider.component.ts",{"_index":1541,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{},"coverage.html":{}}}],["slider.component.ts:107",{"_index":2408,"title":{},"body":{"classes/SliderUtil.html":{}}}],["slider.component.ts:116",{"_index":2404,"title":{},"body":{"classes/SliderUtil.html":{}}}],["slider.component.ts:121",{"_index":2403,"title":{},"body":{"classes/SliderUtil.html":{}}}],["slider.component.ts:126",{"_index":2405,"title":{},"body":{"classes/SliderUtil.html":{}}}],["slider.component.ts:13",{"_index":1564,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["slider.component.ts:137",{"_index":2407,"title":{},"body":{"classes/SliderUtil.html":{}}}],["slider.component.ts:14",{"_index":1563,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["slider.component.ts:15",{"_index":1560,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["slider.component.ts:16",{"_index":1567,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["slider.component.ts:17",{"_index":1569,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["slider.component.ts:18",{"_index":1561,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["slider.component.ts:19",{"_index":1566,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["slider.component.ts:20",{"_index":1565,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["slider.component.ts:21",{"_index":1562,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["slider.component.ts:22",{"_index":1570,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["slider.component.ts:23",{"_index":1572,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["slider.component.ts:26",{"_index":1581,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["slider.component.ts:27",{"_index":1584,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["slider.component.ts:28",{"_index":1585,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["slider.component.ts:29",{"_index":1577,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["slider.component.ts:30",{"_index":1583,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["slider.component.ts:31",{"_index":1559,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["slider.component.ts:40",{"_index":1573,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["slider.component.ts:82",{"_index":1574,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["slider.component.ts:87",{"_index":1576,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["slider.component.ts:98",{"_index":2406,"title":{},"body":{"classes/SliderUtil.html":{}}}],["slider/input",{"_index":1540,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"modules/InterfaceUtilModule.html":{},"components/MoonFormComponent.html":{},"components/ScatterFormComponent.html":{},"classes/SliderUtil.html":{},"coverage.html":{}}}],["slidersubject",{"_index":1546,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["slidertoinput",{"_index":2402,"title":{},"body":{"classes/SliderUtil.html":{}}}],["slidertoinput($event",{"_index":1620,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["sliderutil",{"_index":1547,"title":{"classes/SliderUtil.html":{}},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{},"coverage.html":{}}}],["sliderutil.inputtoslider(maxnum",{"_index":1634,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["sliderutil.inputtoslider(minnum",{"_index":1629,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["small",{"_index":498,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"miscellaneous/enumerations.html":{}}}],["software",{"_index":2905,"title":{},"body":{"license.html":{}}}],["sold",{"_index":3347,"title":{},"body":{"license.html":{}}}],["sole",{"_index":3186,"title":{},"body":{"license.html":{}}}],["solely",{"_index":3198,"title":{},"body":{"license.html":{}}}],["sort((a",{"_index":995,"title":{},"body":{"components/CurveHighChartComponent.html":{},"injectables/MoonService.html":{}}}],["sortdatabyx",{"_index":822,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"modules/CurveModule.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"modules/DualModule.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"modules/InterfaceUtilModule.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"modules/MoonModule.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyData.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"modules/ScatterModule.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"modules/VenusModule.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"index.html":{},"license.html":{}}}],["space",{"_index":2844,"title":{},"body":{"index.html":{}}}],["spacer",{"_index":1726,"title":{},"body":{"components/MenubarComponent.html":{}}}],["spare",{"_index":3295,"title":{},"body":{"license.html":{}}}],["speak",{"_index":2940,"title":{},"body":{"license.html":{}}}],["special",{"_index":3036,"title":{},"body":{"license.html":{}}}],["specific",{"_index":3145,"title":{},"body":{"license.html":{}}}],["specifically",{"_index":3164,"title":{},"body":{"license.html":{}}}],["specified",{"_index":3127,"title":{},"body":{"license.html":{}}}],["specifies",{"_index":3598,"title":{},"body":{"license.html":{}}}],["specify",{"_index":3602,"title":{},"body":{"license.html":{}}}],["spectrum",{"_index":2438,"title":{},"body":{"components/ToolsNavbarComponent.html":{}}}],["spinner",{"_index":1528,"title":{},"body":{"injectables/HonorCodePopupService.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["spirit",{"_index":3591,"title":{},"body":{"license.html":{}}}],["sqr",{"_index":2559,"title":{},"body":{"classes/VenusModels.html":{}}}],["sqr(x",{"_index":2567,"title":{},"body":{"classes/VenusModels.html":{}}}],["src/.../actions.ts",{"_index":3702,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../app",{"_index":2778,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../appearance.utils.ts",{"_index":2770,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../curve.service.util.ts",{"_index":2771,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.ts",{"_index":3706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":3707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../moon",{"_index":2772,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../moon.service.util.ts",{"_index":2774,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../scatter",{"_index":2773,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../utils.ts",{"_index":2777,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":191,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/app.component.ts",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:16",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/shared/about/about.component.ts",{"_index":10,"title":{},"body":{"components/AboutComponent.html":{},"coverage.html":{}}}],["src/app/shared/home/home.component.ts",{"_index":1383,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/shared/menubar/menubar.component.ts",{"_index":1699,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"coverage.html":{}}}],["src/app/shared/menubar/menubar.component.ts:20",{"_index":1708,"title":{},"body":{"components/MenubarComponent.html":{}}}],["src/app/shared/menubar/menubar.component.ts:25",{"_index":1711,"title":{},"body":{"components/MenubarComponent.html":{}}}],["src/app/shared/page",{"_index":2024,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/shared/settings/appearance/appearance.component.ts",{"_index":235,"title":{},"body":{"components/AppearanceComponent.html":{},"coverage.html":{}}}],["src/app/shared/settings/appearance/appearance.component.ts:20",{"_index":264,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["src/app/shared/settings/appearance/appearance.component.ts:21",{"_index":273,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["src/app/shared/settings/appearance/appearance.component.ts:22",{"_index":270,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["src/app/shared/settings/appearance/appearance.component.ts:23",{"_index":267,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["src/app/shared/settings/appearance/appearance.component.ts:25",{"_index":252,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["src/app/shared/settings/appearance/appearance.component.ts:34",{"_index":260,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["src/app/shared/settings/appearance/appearance.component.ts:37",{"_index":261,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["src/app/shared/settings/appearance/appearance.component.ts:47",{"_index":257,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["src/app/shared/settings/appearance/service/appearance",{"_index":411,"title":{},"body":{"injectables/AppearanceStorageService.html":{},"coverage.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts",{"_index":327,"title":{},"body":{"injectables/AppearanceService.html":{},"coverage.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:17",{"_index":348,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:23",{"_index":367,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:31",{"_index":373,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:37",{"_index":359,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:41",{"_index":369,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:47",{"_index":354,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:51",{"_index":375,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:57",{"_index":363,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:61",{"_index":371,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:67",{"_index":356,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:71",{"_index":353,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:75",{"_index":350,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:79",{"_index":362,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:83",{"_index":366,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:87",{"_index":358,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.service.ts:91",{"_index":351,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts",{"_index":461,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:100",{"_index":478,"title":{},"body":{"classes/ChartColor.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:104",{"_index":475,"title":{},"body":{"classes/ChartColor.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:108",{"_index":481,"title":{},"body":{"classes/ChartColor.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:47",{"_index":576,"title":{},"body":{"classes/ColorThemeSettings.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:56",{"_index":575,"title":{},"body":{"classes/ColorThemeSettings.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:64",{"_index":574,"title":{},"body":{"classes/ColorThemeSettings.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:73",{"_index":573,"title":{},"body":{"classes/ColorThemeSettings.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:88",{"_index":1126,"title":{},"body":{"classes/DefaultAppearanceSettings.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:89",{"_index":1125,"title":{},"body":{"classes/DefaultAppearanceSettings.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:90",{"_index":1124,"title":{},"body":{"classes/DefaultAppearanceSettings.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:91",{"_index":1123,"title":{},"body":{"classes/DefaultAppearanceSettings.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:92",{"_index":1122,"title":{},"body":{"classes/DefaultAppearanceSettings.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:97",{"_index":473,"title":{},"body":{"classes/ChartColor.html":{}}}],["src/app/shared/settings/appearance/service/appearance.utils.ts:98",{"_index":472,"title":{},"body":{"classes/ChartColor.html":{}}}],["src/app/shared/settings/settings.component.ts",{"_index":2327,"title":{},"body":{"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"coverage.html":{}}}],["src/app/shared/settings/settings.component.ts:13",{"_index":2330,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/shared/settings/settings.component.ts:18",{"_index":2331,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/shared/tools",{"_index":2409,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"coverage.html":{}}}],["src/app/tools/curve/curve",{"_index":578,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"coverage.html":{}}}],["src/app/tools/curve/curve.component.ts",{"_index":878,"title":{},"body":{"components/CurveComponent.html":{},"coverage.html":{}}}],["src/app/tools/curve/curve.component.ts:16",{"_index":886,"title":{},"body":{"components/CurveComponent.html":{}}}],["src/app/tools/curve/curve.component.ts:22",{"_index":889,"title":{},"body":{"components/CurveComponent.html":{}}}],["src/app/tools/curve/curve.module.ts",{"_index":1022,"title":{},"body":{"modules/CurveModule.html":{}}}],["src/app/tools/curve/curve.service.ts",{"_index":2696,"title":{},"body":{"coverage.html":{}}}],["src/app/tools/curve/curve.service.util.ts",{"_index":733,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/tools/curve/curve.service.util.ts:101",{"_index":748,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:110",{"_index":755,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:121",{"_index":921,"title":{},"body":{"classes/CurveData.html":{}}}],["src/app/tools/curve/curve.service.util.ts:127",{"_index":927,"title":{},"body":{"classes/CurveData.html":{}}}],["src/app/tools/curve/curve.service.util.ts:147",{"_index":924,"title":{},"body":{"classes/CurveData.html":{}}}],["src/app/tools/curve/curve.service.util.ts:165",{"_index":926,"title":{},"body":{"classes/CurveData.html":{}}}],["src/app/tools/curve/curve.service.util.ts:176",{"_index":930,"title":{},"body":{"classes/CurveData.html":{}}}],["src/app/tools/curve/curve.service.util.ts:182",{"_index":922,"title":{},"body":{"classes/CurveData.html":{}}}],["src/app/tools/curve/curve.service.util.ts:191",{"_index":929,"title":{},"body":{"classes/CurveData.html":{}}}],["src/app/tools/curve/curve.service.util.ts:195",{"_index":925,"title":{},"body":{"classes/CurveData.html":{}}}],["src/app/tools/curve/curve.service.util.ts:199",{"_index":933,"title":{},"body":{"classes/CurveData.html":{}}}],["src/app/tools/curve/curve.service.util.ts:205",{"_index":931,"title":{},"body":{"classes/CurveData.html":{}}}],["src/app/tools/curve/curve.service.util.ts:246",{"_index":1010,"title":{},"body":{"interfaces/CurveInterface.html":{}}}],["src/app/tools/curve/curve.service.util.ts:248",{"_index":1012,"title":{},"body":{"interfaces/CurveInterface.html":{}}}],["src/app/tools/curve/curve.service.util.ts:250",{"_index":1011,"title":{},"body":{"interfaces/CurveInterface.html":{}}}],["src/app/tools/curve/curve.service.util.ts:252",{"_index":1013,"title":{},"body":{"interfaces/CurveInterface.html":{}}}],["src/app/tools/curve/curve.service.util.ts:263",{"_index":1001,"title":{},"body":{"classes/CurveImpl.html":{}}}],["src/app/tools/curve/curve.service.util.ts:264",{"_index":1002,"title":{},"body":{"classes/CurveImpl.html":{}}}],["src/app/tools/curve/curve.service.util.ts:266",{"_index":1004,"title":{},"body":{"classes/CurveImpl.html":{}}}],["src/app/tools/curve/curve.service.util.ts:270",{"_index":1003,"title":{},"body":{"classes/CurveImpl.html":{}}}],["src/app/tools/curve/curve.service.util.ts:274",{"_index":1005,"title":{},"body":{"classes/CurveImpl.html":{}}}],["src/app/tools/curve/curve.service.util.ts:278",{"_index":1007,"title":{},"body":{"classes/CurveImpl.html":{}}}],["src/app/tools/curve/curve.service.util.ts:285",{"_index":1008,"title":{},"body":{"classes/CurveImpl.html":{}}}],["src/app/tools/curve/curve.service.util.ts:289",{"_index":1006,"title":{},"body":{"classes/CurveImpl.html":{}}}],["src/app/tools/curve/curve.service.util.ts:293",{"_index":1009,"title":{},"body":{"classes/CurveImpl.html":{}}}],["src/app/tools/curve/curve.service.util.ts:302",{"_index":1057,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:303",{"_index":1060,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:304",{"_index":1056,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:305",{"_index":1059,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:306",{"_index":1058,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:307",{"_index":1055,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:315",{"_index":1061,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:322",{"_index":1062,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:329",{"_index":1063,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:336",{"_index":1067,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:340",{"_index":1069,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:344",{"_index":1070,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:348",{"_index":1064,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:352",{"_index":1065,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:356",{"_index":1066,"title":{},"body":{"classes/CurveStorage.html":{}}}],["src/app/tools/curve/curve.service.util.ts:36",{"_index":739,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:37",{"_index":740,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:38",{"_index":741,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:39",{"_index":738,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:48",{"_index":746,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:57",{"_index":742,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:61",{"_index":743,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:65",{"_index":749,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:69",{"_index":745,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:74",{"_index":750,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:78",{"_index":751,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:82",{"_index":752,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:86",{"_index":754,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:93",{"_index":757,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/curve.service.util.ts:97",{"_index":759,"title":{},"body":{"classes/CurveChartInfo.html":{}}}],["src/app/tools/curve/line",{"_index":1654,"title":{},"body":{"components/LineFormComponent.html":{},"coverage.html":{}}}],["src/app/tools/dual/dual",{"_index":1127,"title":{},"body":{"components/DualChartFormComponent.html":{},"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"coverage.html":{}}}],["src/app/tools/dual/dual.module.ts",{"_index":1267,"title":{},"body":{"modules/DualModule.html":{}}}],["src/app/tools/dual/dual.service.ts",{"_index":1273,"title":{},"body":{"injectables/DualService.html":{},"coverage.html":{}}}],["src/app/tools/dual/dual.service.ts:100",{"_index":1283,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:104",{"_index":1284,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:108",{"_index":1291,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:11",{"_index":1313,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:114",{"_index":1295,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:12",{"_index":1312,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:120",{"_index":1293,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:126",{"_index":1298,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:130",{"_index":1287,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:14",{"_index":1314,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:16",{"_index":1311,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:17",{"_index":1309,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:18",{"_index":1307,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:19",{"_index":1304,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:21",{"_index":1279,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:30",{"_index":1282,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:34",{"_index":1285,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:38",{"_index":1286,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:42",{"_index":1288,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:46",{"_index":1289,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:50",{"_index":1290,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:54",{"_index":1294,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:60",{"_index":1296,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:67",{"_index":1299,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:73",{"_index":1300,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:79",{"_index":1301,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:85",{"_index":1292,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.ts:94",{"_index":1280,"title":{},"body":{"injectables/DualService.html":{}}}],["src/app/tools/dual/dual.service.util.ts",{"_index":1132,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"coverage.html":{}}}],["src/app/tools/dual/dual.service.util.ts:104",{"_index":1142,"title":{},"body":{"classes/DualChartInfo.html":{}}}],["src/app/tools/dual/dual.service.util.ts:113",{"_index":1139,"title":{},"body":{"classes/DualChartInfo.html":{}}}],["src/app/tools/dual/dual.service.util.ts:117",{"_index":1140,"title":{},"body":{"classes/DualChartInfo.html":{}}}],["src/app/tools/dual/dual.service.util.ts:125",{"_index":1144,"title":{},"body":{"classes/DualChartInfo.html":{}}}],["src/app/tools/dual/dual.service.util.ts:13",{"_index":1228,"title":{},"body":{"classes/DualData.html":{}}}],["src/app/tools/dual/dual.service.util.ts:134",{"_index":1145,"title":{},"body":{"classes/DualChartInfo.html":{}}}],["src/app/tools/dual/dual.service.util.ts:138",{"_index":1146,"title":{},"body":{"classes/DualChartInfo.html":{}}}],["src/app/tools/dual/dual.service.util.ts:142",{"_index":1147,"title":{},"body":{"classes/DualChartInfo.html":{}}}],["src/app/tools/dual/dual.service.util.ts:146",{"_index":1148,"title":{},"body":{"classes/DualChartInfo.html":{}}}],["src/app/tools/dual/dual.service.util.ts:159",{"_index":1149,"title":{},"body":{"classes/DualChartInfo.html":{}}}],["src/app/tools/dual/dual.service.util.ts:166",{"_index":1150,"title":{},"body":{"classes/DualChartInfo.html":{}}}],["src/app/tools/dual/dual.service.util.ts:170",{"_index":1151,"title":{},"body":{"classes/DualChartInfo.html":{}}}],["src/app/tools/dual/dual.service.util.ts:174",{"_index":1141,"title":{},"body":{"classes/DualChartInfo.html":{}}}],["src/app/tools/dual/dual.service.util.ts:181",{"_index":1342,"title":{},"body":{"classes/DualStorage.html":{}}}],["src/app/tools/dual/dual.service.util.ts:182",{"_index":1341,"title":{},"body":{"classes/DualStorage.html":{}}}],["src/app/tools/dual/dual.service.util.ts:184",{"_index":1343,"title":{},"body":{"classes/DualStorage.html":{}}}],["src/app/tools/dual/dual.service.util.ts:19",{"_index":1232,"title":{},"body":{"classes/DualData.html":{}}}],["src/app/tools/dual/dual.service.util.ts:192",{"_index":1344,"title":{},"body":{"classes/DualStorage.html":{}}}],["src/app/tools/dual/dual.service.util.ts:200",{"_index":1345,"title":{},"body":{"classes/DualStorage.html":{}}}],["src/app/tools/dual/dual.service.util.ts:203",{"_index":1346,"title":{},"body":{"classes/DualStorage.html":{}}}],["src/app/tools/dual/dual.service.util.ts:207",{"_index":1347,"title":{},"body":{"classes/DualStorage.html":{}}}],["src/app/tools/dual/dual.service.util.ts:211",{"_index":1348,"title":{},"body":{"classes/DualStorage.html":{}}}],["src/app/tools/dual/dual.service.util.ts:214",{"_index":1350,"title":{},"body":{"classes/DualStorage.html":{}}}],["src/app/tools/dual/dual.service.util.ts:218",{"_index":1351,"title":{},"body":{"classes/DualStorage.html":{}}}],["src/app/tools/dual/dual.service.util.ts:222",{"_index":1352,"title":{},"body":{"classes/DualStorage.html":{}}}],["src/app/tools/dual/dual.service.util.ts:41",{"_index":1229,"title":{},"body":{"classes/DualData.html":{}}}],["src/app/tools/dual/dual.service.util.ts:51",{"_index":1230,"title":{},"body":{"classes/DualData.html":{}}}],["src/app/tools/dual/dual.service.util.ts:55",{"_index":1231,"title":{},"body":{"classes/DualData.html":{}}}],["src/app/tools/dual/dual.service.util.ts:72",{"_index":1233,"title":{},"body":{"classes/DualData.html":{}}}],["src/app/tools/dual/dual.service.util.ts:76",{"_index":1234,"title":{},"body":{"classes/DualData.html":{}}}],["src/app/tools/dual/dual.service.util.ts:92",{"_index":1136,"title":{},"body":{"classes/DualChartInfo.html":{}}}],["src/app/tools/dual/dual.service.util.ts:93",{"_index":1137,"title":{},"body":{"classes/DualChartInfo.html":{}}}],["src/app/tools/dual/dual.service.util.ts:94",{"_index":1138,"title":{},"body":{"classes/DualChartInfo.html":{}}}],["src/app/tools/dual/dual.service.util.ts:95",{"_index":1135,"title":{},"body":{"classes/DualChartInfo.html":{}}}],["src/app/tools/dual/dual/dual.component.ts",{"_index":1222,"title":{},"body":{"components/DualComponent.html":{},"coverage.html":{}}}],["src/app/tools/dual/dual/dual.component.ts:12",{"_index":1225,"title":{},"body":{"components/DualComponent.html":{}}}],["src/app/tools/dual/dual/dual.component.ts:18",{"_index":1227,"title":{},"body":{"components/DualComponent.html":{}}}],["src/app/tools/moon/moon",{"_index":1731,"title":{},"body":{"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/tools/moon/moon.module.ts",{"_index":1905,"title":{},"body":{"modules/MoonModule.html":{}}}],["src/app/tools/moon/moon.service.ts",{"_index":1909,"title":{},"body":{"injectables/MoonService.html":{},"coverage.html":{}}}],["src/app/tools/moon/moon.service.ts:101",{"_index":1940,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:107",{"_index":1941,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:113",{"_index":1943,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:120",{"_index":1916,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:124",{"_index":1926,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:128",{"_index":1927,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:132",{"_index":1919,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:136",{"_index":1924,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:140",{"_index":1936,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:146",{"_index":1944,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:152",{"_index":1945,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:158",{"_index":1938,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:165",{"_index":1942,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:169",{"_index":1932,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:177",{"_index":1914,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:183",{"_index":1917,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:187",{"_index":1918,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:191",{"_index":1931,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:197",{"_index":1937,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:20",{"_index":1959,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:203",{"_index":1933,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:209",{"_index":1939,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:21",{"_index":1957,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:213",{"_index":1920,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:217",{"_index":1929,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:22",{"_index":1958,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:23",{"_index":1960,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:24",{"_index":1952,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:26",{"_index":1949,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:28",{"_index":1956,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:29",{"_index":1954,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:30",{"_index":1948,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:31",{"_index":1946,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:32",{"_index":1951,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:33",{"_index":1913,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:42",{"_index":1921,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:73",{"_index":1915,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:77",{"_index":1922,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:81",{"_index":1923,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:85",{"_index":1925,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:89",{"_index":1934,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.ts:95",{"_index":1935,"title":{},"body":{"injectables/MoonService.html":{}}}],["src/app/tools/moon/moon.service.util.ts",{"_index":1736,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/tools/moon/moon.service.util.ts:104",{"_index":1743,"title":{},"body":{"classes/MoonChartInfo.html":{}}}],["src/app/tools/moon/moon.service.util.ts:113",{"_index":1741,"title":{},"body":{"classes/MoonChartInfo.html":{}}}],["src/app/tools/moon/moon.service.util.ts:117",{"_index":1742,"title":{},"body":{"classes/MoonChartInfo.html":{}}}],["src/app/tools/moon/moon.service.util.ts:12",{"_index":1787,"title":{},"body":{"classes/MoonData.html":{}}}],["src/app/tools/moon/moon.service.util.ts:121",{"_index":1746,"title":{},"body":{"classes/MoonChartInfo.html":{}}}],["src/app/tools/moon/moon.service.util.ts:125",{"_index":1747,"title":{},"body":{"classes/MoonChartInfo.html":{}}}],["src/app/tools/moon/moon.service.util.ts:129",{"_index":1748,"title":{},"body":{"classes/MoonChartInfo.html":{}}}],["src/app/tools/moon/moon.service.util.ts:133",{"_index":1749,"title":{},"body":{"classes/MoonChartInfo.html":{}}}],["src/app/tools/moon/moon.service.util.ts:137",{"_index":1751,"title":{},"body":{"classes/MoonChartInfo.html":{}}}],["src/app/tools/moon/moon.service.util.ts:141",{"_index":1752,"title":{},"body":{"classes/MoonChartInfo.html":{}}}],["src/app/tools/moon/moon.service.util.ts:145",{"_index":1745,"title":{},"body":{"classes/MoonChartInfo.html":{}}}],["src/app/tools/moon/moon.service.util.ts:154",{"_index":1750,"title":{},"body":{"classes/MoonChartInfo.html":{}}}],["src/app/tools/moon/moon.service.util.ts:165",{"_index":1863,"title":{},"body":{"interfaces/MoonInterface.html":{}}}],["src/app/tools/moon/moon.service.util.ts:167",{"_index":1864,"title":{},"body":{"interfaces/MoonInterface.html":{}}}],["src/app/tools/moon/moon.service.util.ts:169",{"_index":1865,"title":{},"body":{"interfaces/MoonInterface.html":{}}}],["src/app/tools/moon/moon.service.util.ts:171",{"_index":1868,"title":{},"body":{"interfaces/MoonInterface.html":{}}}],["src/app/tools/moon/moon.service.util.ts:173",{"_index":1866,"title":{},"body":{"interfaces/MoonInterface.html":{}}}],["src/app/tools/moon/moon.service.util.ts:175",{"_index":1871,"title":{},"body":{"interfaces/MoonInterface.html":{}}}],["src/app/tools/moon/moon.service.util.ts:177",{"_index":1873,"title":{},"body":{"interfaces/MoonInterface.html":{}}}],["src/app/tools/moon/moon.service.util.ts:179",{"_index":1875,"title":{},"body":{"interfaces/MoonInterface.html":{}}}],["src/app/tools/moon/moon.service.util.ts:181",{"_index":1878,"title":{},"body":{"interfaces/MoonInterface.html":{}}}],["src/app/tools/moon/moon.service.util.ts:183",{"_index":1876,"title":{},"body":{"interfaces/MoonInterface.html":{}}}],["src/app/tools/moon/moon.service.util.ts:185",{"_index":1869,"title":{},"body":{"interfaces/MoonInterface.html":{}}}],["src/app/tools/moon/moon.service.util.ts:198",{"_index":1880,"title":{},"body":{"classes/MoonInterfaceImpl.html":{}}}],["src/app/tools/moon/moon.service.util.ts:199",{"_index":1881,"title":{},"body":{"classes/MoonInterfaceImpl.html":{}}}],["src/app/tools/moon/moon.service.util.ts:200",{"_index":1882,"title":{},"body":{"classes/MoonInterfaceImpl.html":{}}}],["src/app/tools/moon/moon.service.util.ts:201",{"_index":1883,"title":{},"body":{"classes/MoonInterfaceImpl.html":{}}}],["src/app/tools/moon/moon.service.util.ts:203",{"_index":1884,"title":{},"body":{"classes/MoonInterfaceImpl.html":{}}}],["src/app/tools/moon/moon.service.util.ts:207",{"_index":1886,"title":{},"body":{"classes/MoonInterfaceImpl.html":{}}}],["src/app/tools/moon/moon.service.util.ts:211",{"_index":1887,"title":{},"body":{"classes/MoonInterfaceImpl.html":{}}}],["src/app/tools/moon/moon.service.util.ts:215",{"_index":1889,"title":{},"body":{"classes/MoonInterfaceImpl.html":{}}}],["src/app/tools/moon/moon.service.util.ts:219",{"_index":1890,"title":{},"body":{"classes/MoonInterfaceImpl.html":{}}}],["src/app/tools/moon/moon.service.util.ts:223",{"_index":1891,"title":{},"body":{"classes/MoonInterfaceImpl.html":{}}}],["src/app/tools/moon/moon.service.util.ts:227",{"_index":1892,"title":{},"body":{"classes/MoonInterfaceImpl.html":{}}}],["src/app/tools/moon/moon.service.util.ts:23",{"_index":1791,"title":{},"body":{"classes/MoonData.html":{}}}],["src/app/tools/moon/moon.service.util.ts:231",{"_index":1893,"title":{},"body":{"classes/MoonInterfaceImpl.html":{}}}],["src/app/tools/moon/moon.service.util.ts:235",{"_index":1895,"title":{},"body":{"classes/MoonInterfaceImpl.html":{}}}],["src/app/tools/moon/moon.service.util.ts:239",{"_index":1888,"title":{},"body":{"classes/MoonInterfaceImpl.html":{}}}],["src/app/tools/moon/moon.service.util.ts:248",{"_index":1894,"title":{},"body":{"classes/MoonInterfaceImpl.html":{}}}],["src/app/tools/moon/moon.service.util.ts:255",{"_index":1885,"title":{},"body":{"classes/MoonInterfaceImpl.html":{}}}],["src/app/tools/moon/moon.service.util.ts:268",{"_index":1973,"title":{},"body":{"classes/MoonStorage.html":{}}}],["src/app/tools/moon/moon.service.util.ts:269",{"_index":1974,"title":{},"body":{"classes/MoonStorage.html":{}}}],["src/app/tools/moon/moon.service.util.ts:270",{"_index":1975,"title":{},"body":{"classes/MoonStorage.html":{}}}],["src/app/tools/moon/moon.service.util.ts:272",{"_index":1976,"title":{},"body":{"classes/MoonStorage.html":{}}}],["src/app/tools/moon/moon.service.util.ts:280",{"_index":1977,"title":{},"body":{"classes/MoonStorage.html":{}}}],["src/app/tools/moon/moon.service.util.ts:288",{"_index":1978,"title":{},"body":{"classes/MoonStorage.html":{}}}],["src/app/tools/moon/moon.service.util.ts:296",{"_index":1979,"title":{},"body":{"classes/MoonStorage.html":{}}}],["src/app/tools/moon/moon.service.util.ts:300",{"_index":1980,"title":{},"body":{"classes/MoonStorage.html":{}}}],["src/app/tools/moon/moon.service.util.ts:304",{"_index":1981,"title":{},"body":{"classes/MoonStorage.html":{}}}],["src/app/tools/moon/moon.service.util.ts:308",{"_index":1982,"title":{},"body":{"classes/MoonStorage.html":{}}}],["src/app/tools/moon/moon.service.util.ts:312",{"_index":1983,"title":{},"body":{"classes/MoonStorage.html":{}}}],["src/app/tools/moon/moon.service.util.ts:316",{"_index":1984,"title":{},"body":{"classes/MoonStorage.html":{}}}],["src/app/tools/moon/moon.service.util.ts:324",{"_index":1898,"title":{},"body":{"interfaces/MoonModel.html":{}}}],["src/app/tools/moon/moon.service.util.ts:50",{"_index":1788,"title":{},"body":{"classes/MoonData.html":{}}}],["src/app/tools/moon/moon.service.util.ts:60",{"_index":1789,"title":{},"body":{"classes/MoonData.html":{}}}],["src/app/tools/moon/moon.service.util.ts:64",{"_index":1790,"title":{},"body":{"classes/MoonData.html":{}}}],["src/app/tools/moon/moon.service.util.ts:72",{"_index":1792,"title":{},"body":{"classes/MoonData.html":{}}}],["src/app/tools/moon/moon.service.util.ts:76",{"_index":1793,"title":{},"body":{"classes/MoonData.html":{}}}],["src/app/tools/moon/moon.service.util.ts:92",{"_index":1738,"title":{},"body":{"classes/MoonChartInfo.html":{}}}],["src/app/tools/moon/moon.service.util.ts:93",{"_index":1739,"title":{},"body":{"classes/MoonChartInfo.html":{}}}],["src/app/tools/moon/moon.service.util.ts:94",{"_index":1740,"title":{},"body":{"classes/MoonChartInfo.html":{}}}],["src/app/tools/moon/moon.service.util.ts:95",{"_index":1737,"title":{},"body":{"classes/MoonChartInfo.html":{}}}],["src/app/tools/moon/moon/moon.component.ts",{"_index":1780,"title":{},"body":{"components/MoonComponent.html":{},"coverage.html":{}}}],["src/app/tools/moon/moon/moon.component.ts:12",{"_index":1783,"title":{},"body":{"components/MoonComponent.html":{}}}],["src/app/tools/moon/moon/moon.component.ts:18",{"_index":1784,"title":{},"body":{"components/MoonComponent.html":{}}}],["src/app/tools/scatter/scatter",{"_index":2028,"title":{},"body":{"components/ScatterChartFormComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/tools/scatter/scatter.module.ts",{"_index":2222,"title":{},"body":{"modules/ScatterModule.html":{}}}],["src/app/tools/scatter/scatter.service.ts",{"_index":2225,"title":{},"body":{"injectables/ScatterService.html":{},"coverage.html":{}}}],["src/app/tools/scatter/scatter.service.ts:103",{"_index":2239,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:107",{"_index":2246,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:113",{"_index":2254,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:119",{"_index":2255,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:125",{"_index":2248,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:132",{"_index":2253,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:138",{"_index":2243,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:147",{"_index":2229,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:153",{"_index":2231,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:157",{"_index":2232,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:161",{"_index":2242,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:167",{"_index":2247,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:173",{"_index":2244,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:179",{"_index":2251,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:183",{"_index":2236,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:21",{"_index":2265,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:22",{"_index":2264,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:23",{"_index":2266,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:25",{"_index":2267,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:27",{"_index":2262,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:29",{"_index":2261,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:30",{"_index":2259,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:31",{"_index":2258,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:32",{"_index":2256,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:33",{"_index":2263,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:34",{"_index":2228,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:44",{"_index":2234,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:48",{"_index":2235,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:52",{"_index":2237,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:56",{"_index":2238,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:60",{"_index":2249,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:66",{"_index":2250,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:72",{"_index":2252,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:77",{"_index":2245,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:87",{"_index":2230,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:91",{"_index":2240,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:95",{"_index":2241,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.ts:99",{"_index":2233,"title":{},"body":{"injectables/ScatterService.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts",{"_index":2033,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"coverage.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:107",{"_index":2038,"title":{},"body":{"classes/ScatterChartInfo.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:111",{"_index":2039,"title":{},"body":{"classes/ScatterChartInfo.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:115",{"_index":2042,"title":{},"body":{"classes/ScatterChartInfo.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:12",{"_index":2103,"title":{},"body":{"classes/ScatterData.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:124",{"_index":2043,"title":{},"body":{"classes/ScatterChartInfo.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:128",{"_index":2044,"title":{},"body":{"classes/ScatterChartInfo.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:13",{"_index":2102,"title":{},"body":{"classes/ScatterData.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:132",{"_index":2045,"title":{},"body":{"classes/ScatterChartInfo.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:136",{"_index":2046,"title":{},"body":{"classes/ScatterChartInfo.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:140",{"_index":2047,"title":{},"body":{"classes/ScatterChartInfo.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:147",{"_index":2048,"title":{},"body":{"classes/ScatterChartInfo.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:151",{"_index":2049,"title":{},"body":{"classes/ScatterChartInfo.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:165",{"_index":2198,"title":{},"body":{"interfaces/ScatterModel.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:167",{"_index":2197,"title":{},"body":{"interfaces/ScatterModel.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:169",{"_index":2202,"title":{},"body":{"interfaces/ScatterModel.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:171",{"_index":2201,"title":{},"body":{"interfaces/ScatterModel.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:173",{"_index":2200,"title":{},"body":{"interfaces/ScatterModel.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:175",{"_index":2203,"title":{},"body":{"interfaces/ScatterModel.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:177",{"_index":2199,"title":{},"body":{"interfaces/ScatterModel.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:182",{"_index":2206,"title":{},"body":{"classes/ScatterModelInterface.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:183",{"_index":2205,"title":{},"body":{"classes/ScatterModelInterface.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:19",{"_index":2110,"title":{},"body":{"classes/ScatterData.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:190",{"_index":2209,"title":{},"body":{"classes/ScatterModelInterface.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:197",{"_index":2210,"title":{},"body":{"classes/ScatterModelInterface.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:201",{"_index":2211,"title":{},"body":{"classes/ScatterModelInterface.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:208",{"_index":2212,"title":{},"body":{"classes/ScatterModelInterface.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:227",{"_index":2213,"title":{},"body":{"classes/ScatterModelInterface.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:234",{"_index":2214,"title":{},"body":{"classes/ScatterModelInterface.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:238",{"_index":2215,"title":{},"body":{"classes/ScatterModelInterface.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:242",{"_index":2216,"title":{},"body":{"classes/ScatterModelInterface.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:247",{"_index":2208,"title":{},"body":{"classes/ScatterModelInterface.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:255",{"_index":2305,"title":{},"body":{"classes/ScatterStorage.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:256",{"_index":2304,"title":{},"body":{"classes/ScatterStorage.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:257",{"_index":2306,"title":{},"body":{"classes/ScatterStorage.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:259",{"_index":2307,"title":{},"body":{"classes/ScatterStorage.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:267",{"_index":2308,"title":{},"body":{"classes/ScatterStorage.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:275",{"_index":2309,"title":{},"body":{"classes/ScatterStorage.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:283",{"_index":2310,"title":{},"body":{"classes/ScatterStorage.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:287",{"_index":2311,"title":{},"body":{"classes/ScatterStorage.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:291",{"_index":2312,"title":{},"body":{"classes/ScatterStorage.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:295",{"_index":2313,"title":{},"body":{"classes/ScatterStorage.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:299",{"_index":2314,"title":{},"body":{"classes/ScatterStorage.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:303",{"_index":2315,"title":{},"body":{"classes/ScatterStorage.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:31",{"_index":2104,"title":{},"body":{"classes/ScatterData.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:41",{"_index":2105,"title":{},"body":{"classes/ScatterData.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:49",{"_index":2106,"title":{},"body":{"classes/ScatterData.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:66",{"_index":2111,"title":{},"body":{"classes/ScatterData.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:70",{"_index":2112,"title":{},"body":{"classes/ScatterData.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:85",{"_index":2035,"title":{},"body":{"classes/ScatterChartInfo.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:86",{"_index":2036,"title":{},"body":{"classes/ScatterChartInfo.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:87",{"_index":2037,"title":{},"body":{"classes/ScatterChartInfo.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:88",{"_index":2034,"title":{},"body":{"classes/ScatterChartInfo.html":{}}}],["src/app/tools/scatter/scatter.service.util.ts:98",{"_index":2040,"title":{},"body":{"classes/ScatterChartInfo.html":{}}}],["src/app/tools/scatter/scatter/scatter.component.ts",{"_index":2096,"title":{},"body":{"components/ScatterComponent.html":{},"coverage.html":{}}}],["src/app/tools/scatter/scatter/scatter.component.ts:12",{"_index":2099,"title":{},"body":{"components/ScatterComponent.html":{}}}],["src/app/tools/scatter/scatter/scatter.component.ts:18",{"_index":2100,"title":{},"body":{"components/ScatterComponent.html":{}}}],["src/app/tools/shared/charts/chart.interface.ts",{"_index":533,"title":{},"body":{"interfaces/ChartInfo.html":{},"interfaces/MyChart.html":{},"coverage.html":{}}}],["src/app/tools/shared/charts/chart.interface.ts:11",{"_index":545,"title":{},"body":{"interfaces/ChartInfo.html":{}}}],["src/app/tools/shared/charts/chart.interface.ts:13",{"_index":546,"title":{},"body":{"interfaces/ChartInfo.html":{}}}],["src/app/tools/shared/charts/chart.interface.ts:15",{"_index":550,"title":{},"body":{"interfaces/ChartInfo.html":{}}}],["src/app/tools/shared/charts/chart.interface.ts:17",{"_index":557,"title":{},"body":{"interfaces/ChartInfo.html":{}}}],["src/app/tools/shared/charts/chart.interface.ts:19",{"_index":560,"title":{},"body":{"interfaces/ChartInfo.html":{}}}],["src/app/tools/shared/charts/chart.interface.ts:21",{"_index":552,"title":{},"body":{"interfaces/ChartInfo.html":{}}}],["src/app/tools/shared/charts/chart.interface.ts:23",{"_index":554,"title":{},"body":{"interfaces/ChartInfo.html":{}}}],["src/app/tools/shared/charts/chart.interface.ts:28",{"_index":2000,"title":{},"body":{"interfaces/MyChart.html":{}}}],["src/app/tools/shared/charts/chart.interface.ts:30",{"_index":2001,"title":{},"body":{"interfaces/MyChart.html":{}}}],["src/app/tools/shared/charts/chart.interface.ts:32",{"_index":2002,"title":{},"body":{"interfaces/MyChart.html":{}}}],["src/app/tools/shared/charts/chart.interface.ts:5",{"_index":544,"title":{},"body":{"interfaces/ChartInfo.html":{}}}],["src/app/tools/shared/charts/chart.interface.ts:7",{"_index":547,"title":{},"body":{"interfaces/ChartInfo.html":{}}}],["src/app/tools/shared/charts/chart.interface.ts:9",{"_index":548,"title":{},"body":{"interfaces/ChartInfo.html":{}}}],["src/app/tools/shared/charts/utils.ts",{"_index":2713,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/tools/shared/data/data.interface.ts",{"_index":2003,"title":{},"body":{"interfaces/MyData.html":{},"coverage.html":{}}}],["src/app/tools/shared/data/data.interface.ts:10",{"_index":2007,"title":{},"body":{"interfaces/MyData.html":{}}}],["src/app/tools/shared/data/data.interface.ts:2",{"_index":2005,"title":{},"body":{"interfaces/MyData.html":{}}}],["src/app/tools/shared/data/data.interface.ts:4",{"_index":2006,"title":{},"body":{"interfaces/MyData.html":{}}}],["src/app/tools/shared/data/data.interface.ts:6",{"_index":2008,"title":{},"body":{"interfaces/MyData.html":{}}}],["src/app/tools/shared/data/data.interface.ts:8",{"_index":2004,"title":{},"body":{"interfaces/MyData.html":{}}}],["src/app/tools/shared/data/utils.ts",{"_index":2717,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/tools/shared/honor",{"_index":1386,"title":{},"body":{"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"modules/HonorCodePopupModule.html":{},"injectables/HonorCodePopupService.html":{},"coverage.html":{}}}],["src/app/tools/shared/interface/input",{"_index":1539,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{},"coverage.html":{}}}],["src/app/tools/shared/interface/util.ts",{"_index":1650,"title":{},"body":{"modules/InterfaceUtilModule.html":{}}}],["src/app/tools/shared/simple",{"_index":2344,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"coverage.html":{}}}],["src/app/tools/shared/storage/storage.interface.ts",{"_index":2009,"title":{},"body":{"interfaces/MyStorage.html":{},"coverage.html":{}}}],["src/app/tools/shared/storage/storage.interface.ts:10",{"_index":2012,"title":{},"body":{"interfaces/MyStorage.html":{}}}],["src/app/tools/shared/storage/storage.interface.ts:12",{"_index":2018,"title":{},"body":{"interfaces/MyStorage.html":{}}}],["src/app/tools/shared/storage/storage.interface.ts:14",{"_index":2014,"title":{},"body":{"interfaces/MyStorage.html":{}}}],["src/app/tools/shared/storage/storage.interface.ts:16",{"_index":2015,"title":{},"body":{"interfaces/MyStorage.html":{}}}],["src/app/tools/shared/storage/storage.interface.ts:18",{"_index":2013,"title":{},"body":{"interfaces/MyStorage.html":{}}}],["src/app/tools/shared/storage/storage.interface.ts:2",{"_index":2011,"title":{},"body":{"interfaces/MyStorage.html":{}}}],["src/app/tools/shared/storage/storage.interface.ts:4",{"_index":2017,"title":{},"body":{"interfaces/MyStorage.html":{}}}],["src/app/tools/shared/storage/storage.interface.ts:6",{"_index":2010,"title":{},"body":{"interfaces/MyStorage.html":{}}}],["src/app/tools/shared/storage/storage.interface.ts:8",{"_index":2016,"title":{},"body":{"interfaces/MyStorage.html":{}}}],["src/app/tools/shared/tables/table",{"_index":2019,"title":{},"body":{"interfaces/MyTable.html":{},"coverage.html":{}}}],["src/app/tools/shared/types/actions.ts",{"_index":3703,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/tools/venus/venus",{"_index":2455,"title":{},"body":{"components/VenusChartFormComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"coverage.html":{}}}],["src/app/tools/venus/venus.module.ts",{"_index":2573,"title":{},"body":{"modules/VenusModule.html":{}}}],["src/app/tools/venus/venus.service.ts",{"_index":2576,"title":{},"body":{"injectables/VenusService.html":{},"coverage.html":{}}}],["src/app/tools/venus/venus.service.ts:100",{"_index":2602,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:106",{"_index":2596,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:115",{"_index":2581,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:121",{"_index":2583,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:125",{"_index":2584,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:129",{"_index":2595,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:135",{"_index":2599,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:141",{"_index":2597,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:145",{"_index":2601,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:149",{"_index":2590,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:154",{"_index":2594,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:19",{"_index":2613,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:20",{"_index":2612,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:21",{"_index":2611,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:24",{"_index":2610,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:26",{"_index":2608,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:27",{"_index":2607,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:29",{"_index":2605,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:31",{"_index":2580,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:40",{"_index":2587,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:44",{"_index":2586,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:48",{"_index":2589,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:55",{"_index":2582,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:59",{"_index":2592,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:63",{"_index":2593,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:67",{"_index":2585,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:71",{"_index":2591,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:75",{"_index":2598,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:81",{"_index":2603,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:87",{"_index":2604,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.ts:93",{"_index":2600,"title":{},"body":{"injectables/VenusService.html":{}}}],["src/app/tools/venus/venus.service.util.ts",{"_index":2460,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"coverage.html":{}}}],["src/app/tools/venus/venus.service.util.ts:108",{"_index":2470,"title":{},"body":{"classes/VenusChartInfo.html":{}}}],["src/app/tools/venus/venus.service.util.ts:112",{"_index":2471,"title":{},"body":{"classes/VenusChartInfo.html":{}}}],["src/app/tools/venus/venus.service.util.ts:116",{"_index":2472,"title":{},"body":{"classes/VenusChartInfo.html":{}}}],["src/app/tools/venus/venus.service.util.ts:120",{"_index":2473,"title":{},"body":{"classes/VenusChartInfo.html":{}}}],["src/app/tools/venus/venus.service.util.ts:124",{"_index":2474,"title":{},"body":{"classes/VenusChartInfo.html":{}}}],["src/app/tools/venus/venus.service.util.ts:13",{"_index":2535,"title":{},"body":{"classes/VenusData.html":{}}}],["src/app/tools/venus/venus.service.util.ts:131",{"_index":2475,"title":{},"body":{"classes/VenusChartInfo.html":{}}}],["src/app/tools/venus/venus.service.util.ts:135",{"_index":2476,"title":{},"body":{"classes/VenusChartInfo.html":{}}}],["src/app/tools/venus/venus.service.util.ts:139",{"_index":2467,"title":{},"body":{"classes/VenusChartInfo.html":{}}}],["src/app/tools/venus/venus.service.util.ts:151",{"_index":2646,"title":{},"body":{"classes/VenusStorage.html":{}}}],["src/app/tools/venus/venus.service.util.ts:152",{"_index":2645,"title":{},"body":{"classes/VenusStorage.html":{}}}],["src/app/tools/venus/venus.service.util.ts:153",{"_index":2647,"title":{},"body":{"classes/VenusStorage.html":{}}}],["src/app/tools/venus/venus.service.util.ts:163",{"_index":2648,"title":{},"body":{"classes/VenusStorage.html":{}}}],["src/app/tools/venus/venus.service.util.ts:172",{"_index":2649,"title":{},"body":{"classes/VenusStorage.html":{}}}],["src/app/tools/venus/venus.service.util.ts:175",{"_index":2650,"title":{},"body":{"classes/VenusStorage.html":{}}}],["src/app/tools/venus/venus.service.util.ts:179",{"_index":2651,"title":{},"body":{"classes/VenusStorage.html":{}}}],["src/app/tools/venus/venus.service.util.ts:183",{"_index":2652,"title":{},"body":{"classes/VenusStorage.html":{}}}],["src/app/tools/venus/venus.service.util.ts:186",{"_index":2653,"title":{},"body":{"classes/VenusStorage.html":{}}}],["src/app/tools/venus/venus.service.util.ts:19",{"_index":2536,"title":{},"body":{"classes/VenusData.html":{}}}],["src/app/tools/venus/venus.service.util.ts:190",{"_index":2654,"title":{},"body":{"classes/VenusStorage.html":{}}}],["src/app/tools/venus/venus.service.util.ts:194",{"_index":2655,"title":{},"body":{"classes/VenusStorage.html":{}}}],["src/app/tools/venus/venus.service.util.ts:202",{"_index":2564,"title":{},"body":{"classes/VenusModels.html":{}}}],["src/app/tools/venus/venus.service.util.ts:204",{"_index":2560,"title":{},"body":{"classes/VenusModels.html":{}}}],["src/app/tools/venus/venus.service.util.ts:206",{"_index":2563,"title":{},"body":{"classes/VenusModels.html":{}}}],["src/app/tools/venus/venus.service.util.ts:208",{"_index":2561,"title":{},"body":{"classes/VenusModels.html":{}}}],["src/app/tools/venus/venus.service.util.ts:210",{"_index":2562,"title":{},"body":{"classes/VenusModels.html":{}}}],["src/app/tools/venus/venus.service.util.ts:221",{"_index":2565,"title":{},"body":{"classes/VenusModels.html":{}}}],["src/app/tools/venus/venus.service.util.ts:251",{"_index":2566,"title":{},"body":{"classes/VenusModels.html":{}}}],["src/app/tools/venus/venus.service.util.ts:271",{"_index":2568,"title":{},"body":{"classes/VenusModels.html":{}}}],["src/app/tools/venus/venus.service.util.ts:29",{"_index":2537,"title":{},"body":{"classes/VenusData.html":{}}}],["src/app/tools/venus/venus.service.util.ts:33",{"_index":2538,"title":{},"body":{"classes/VenusData.html":{}}}],["src/app/tools/venus/venus.service.util.ts:44",{"_index":2540,"title":{},"body":{"classes/VenusData.html":{}}}],["src/app/tools/venus/venus.service.util.ts:48",{"_index":2541,"title":{},"body":{"classes/VenusData.html":{}}}],["src/app/tools/venus/venus.service.util.ts:52",{"_index":2539,"title":{},"body":{"classes/VenusData.html":{}}}],["src/app/tools/venus/venus.service.util.ts:78",{"_index":2462,"title":{},"body":{"classes/VenusChartInfo.html":{}}}],["src/app/tools/venus/venus.service.util.ts:79",{"_index":2463,"title":{},"body":{"classes/VenusChartInfo.html":{}}}],["src/app/tools/venus/venus.service.util.ts:80",{"_index":2464,"title":{},"body":{"classes/VenusChartInfo.html":{}}}],["src/app/tools/venus/venus.service.util.ts:81",{"_index":2461,"title":{},"body":{"classes/VenusChartInfo.html":{}}}],["src/app/tools/venus/venus.service.util.ts:91",{"_index":2465,"title":{},"body":{"classes/VenusChartInfo.html":{}}}],["src/app/tools/venus/venus.service.util.ts:95",{"_index":2466,"title":{},"body":{"classes/VenusChartInfo.html":{}}}],["src/app/tools/venus/venus.service.util.ts:99",{"_index":2468,"title":{},"body":{"classes/VenusChartInfo.html":{}}}],["src/app/tools/venus/venus/venus.component.ts",{"_index":2529,"title":{},"body":{"components/VenusComponent.html":{},"coverage.html":{}}}],["src/app/tools/venus/venus/venus.component.ts:12",{"_index":2532,"title":{},"body":{"components/VenusComponent.html":{}}}],["src/app/tools/venus/venus/venus.component.ts:19",{"_index":2533,"title":{},"body":{"components/VenusComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":2725,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2727,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/locale",{"_index":2890,"title":{},"body":{"index.html":{}}}],["stand",{"_index":3021,"title":{},"body":{"license.html":{}}}],["standard",{"_index":3122,"title":{},"body":{"license.html":{}}}],["standards",{"_index":3125,"title":{},"body":{"license.html":{}}}],["start",{"_index":1495,"title":{},"body":{"components/HonorCodePopupComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"license.html":{}}}],["started",{"_index":2828,"title":{"index.html":{},"license.html":{}},"body":{}}],["starts",{"_index":3671,"title":{},"body":{"license.html":{}}}],["startto",{"_index":2881,"title":{},"body":{"index.html":{}}}],["state",{"_index":3658,"title":{},"body":{"license.html":{}}}],["stated",{"_index":3175,"title":{},"body":{"license.html":{}}}],["statement",{"_index":3443,"title":{},"body":{"license.html":{}}}],["statements",{"_index":2675,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":3031,"title":{},"body":{"license.html":{}}}],["static",{"_index":462,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DefaultAppearanceSettings.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SliderUtil.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["stating",{"_index":3241,"title":{},"body":{"license.html":{}}}],["status",{"_index":1597,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{},"license.html":{}}}],["step",{"_index":1556,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/SliderUtil.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["stepnum",{"_index":1636,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["steps",{"_index":2094,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"license.html":{}}}],["stepvalue",{"_index":1557,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["storage",{"_index":3271,"title":{},"body":{"license.html":{}}}],["storage.service",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppearanceService.html":{}}}],["storage.service.ts",{"_index":412,"title":{},"body":{"injectables/AppearanceStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:15",{"_index":431,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:16",{"_index":437,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:17",{"_index":435,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:18",{"_index":433,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:19",{"_index":430,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:20",{"_index":432,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:21",{"_index":438,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:22",{"_index":436,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:23",{"_index":434,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:24",{"_index":420,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:29",{"_index":425,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:33",{"_index":421,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:42",{"_index":429,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:46",{"_index":424,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:55",{"_index":428,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:59",{"_index":423,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:68",{"_index":427,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storage.service.ts:72",{"_index":422,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["storageobject",{"_index":555,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChartInfo.html":{},"classes/DualChartInfo.html":{},"injectables/DualService.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/VenusChartInfo.html":{},"injectables/VenusService.html":{}}}],["storageobject.charttitle",{"_index":2071,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["storageobject.datalabel",{"_index":2072,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["storageobject.xaxislabel",{"_index":2073,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["storageobject.yaxislabel",{"_index":2074,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["storageservice",{"_index":349,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["string",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/ColorThemeSettings.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/MoonComponent.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SliderUtil.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"miscellaneous/functions.html":{}}}],["string(sliderutil.myround(math.exp(slider",{"_index":1623,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["string(sliderutil.myround(slider",{"_index":1624,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["stroke",{"_index":2188,"title":{},"body":{"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["students",{"_index":2836,"title":{},"body":{"index.html":{}}}],["style",{"_index":312,"title":{},"body":{"components/AppearanceComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["style.displayname",{"_index":313,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["styledmode",{"_index":965,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["styleurls",{"_index":16,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["subdividing",{"_index":3492,"title":{},"body":{"license.html":{}}}],["subject",{"_index":612,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SliderUtil.html":{},"components/VenusChartFormComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"license.html":{}}}],["sublicenses",{"_index":3522,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":3199,"title":{},"body":{"license.html":{}}}],["submit",{"_index":1470,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["subprograms",{"_index":3163,"title":{},"body":{"license.html":{}}}],["subroutine",{"_index":3684,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":642,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/SliderUtil.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["subscribe((curveinterface",{"_index":1690,"title":{},"body":{"components/LineFormComponent.html":{}}}],["subscribe((data",{"_index":986,"title":{},"body":{"components/CurveHighChartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{}}}],["subscribe((info",{"_index":984,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["subscribe(info",{"_index":710,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["subscribe(label",{"_index":727,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["subscribe(labels",{"_index":724,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["subscribe(title",{"_index":721,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["subsection",{"_index":3306,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":3361,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":3019,"title":{},"body":{"license.html":{}}}],["such",{"_index":2964,"title":{},"body":{"license.html":{}}}],["sue",{"_index":3536,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":3370,"title":{},"body":{"license.html":{}}}],["sun",{"_index":2150,"title":{},"body":{"components/ScatterHighchartComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["supplement",{"_index":3399,"title":{},"body":{"license.html":{}}}],["support",{"_index":3248,"title":{},"body":{"license.html":{},"modules.html":{}}}],["supports",{"_index":3313,"title":{},"body":{"license.html":{}}}],["sure",{"_index":2932,"title":{},"body":{"license.html":{}}}],["surrender",{"_index":2957,"title":{},"body":{"license.html":{}}}],["survive",{"_index":3442,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":3633,"title":{},"body":{"license.html":{}}}],["svg",{"_index":3694,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":809,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["symbol",{"_index":2153,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["system",{"_index":3132,"title":{},"body":{"license.html":{}}}],["systematic",{"_index":3008,"title":{},"body":{"license.html":{}}}],["table",{"_index":102,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":49,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["table.component",{"_index":1037,"title":{},"body":{"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules/VenusModule.html":{}}}],["table.component.html",{"_index":1086,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["table.component.scss",{"_index":1087,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["table.component.ts",{"_index":1073,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"coverage.html":{}}}],["table.component.ts:15",{"_index":1379,"title":{},"body":{"components/DualTableComponent.html":{},"components/MoonTableComponent.html":{},"components/VenusTableComponent.html":{}}}],["table.component.ts:16",{"_index":1113,"title":{},"body":{"components/CurveTableComponent.html":{},"components/DualTableComponent.html":{},"components/MoonTableComponent.html":{},"components/VenusTableComponent.html":{}}}],["table.component.ts:17",{"_index":1114,"title":{},"body":{"components/CurveTableComponent.html":{},"components/DualTableComponent.html":{},"components/MoonTableComponent.html":{},"components/ScatterTableComponent.html":{},"components/VenusTableComponent.html":{}}}],["table.component.ts:18",{"_index":1115,"title":{},"body":{"components/CurveTableComponent.html":{},"components/DualTableComponent.html":{},"components/MoonTableComponent.html":{},"components/ScatterTableComponent.html":{},"components/VenusTableComponent.html":{}}}],["table.component.ts:19",{"_index":1119,"title":{},"body":{"components/CurveTableComponent.html":{},"components/DualTableComponent.html":{},"components/MoonTableComponent.html":{},"components/ScatterTableComponent.html":{},"components/VenusTableComponent.html":{}}}],["table.component.ts:20",{"_index":1110,"title":{},"body":{"components/CurveTableComponent.html":{},"components/MoonTableComponent.html":{},"components/ScatterTableComponent.html":{}}}],["table.component.ts:21",{"_index":2326,"title":{},"body":{"components/ScatterTableComponent.html":{}}}],["table.component.ts:22",{"_index":2325,"title":{},"body":{"components/ScatterTableComponent.html":{}}}],["table.component.ts:25",{"_index":1377,"title":{},"body":{"components/DualTableComponent.html":{}}}],["table.component.ts:26",{"_index":2667,"title":{},"body":{"components/VenusTableComponent.html":{}}}],["table.component.ts:27",{"_index":1111,"title":{},"body":{"components/CurveTableComponent.html":{},"components/MoonTableComponent.html":{},"components/ScatterTableComponent.html":{}}}],["table.component.ts:36",{"_index":1996,"title":{},"body":{"components/MoonTableComponent.html":{},"components/ScatterTableComponent.html":{}}}],["table.component.ts:37",{"_index":2668,"title":{},"body":{"components/VenusTableComponent.html":{}}}],["table.component.ts:41",{"_index":1997,"title":{},"body":{"components/MoonTableComponent.html":{},"components/ScatterTableComponent.html":{}}}],["table.component.ts:42",{"_index":2669,"title":{},"body":{"components/VenusTableComponent.html":{}}}],["table.component.ts:44",{"_index":1378,"title":{},"body":{"components/DualTableComponent.html":{}}}],["table.component.ts:45",{"_index":1112,"title":{},"body":{"components/CurveTableComponent.html":{}}}],["table.component.ts:47",{"_index":1999,"title":{},"body":{"components/MoonTableComponent.html":{},"components/ScatterTableComponent.html":{}}}],["table.component.ts:48",{"_index":2671,"title":{},"body":{"components/VenusTableComponent.html":{}}}],["table.component.ts:49",{"_index":1380,"title":{},"body":{"components/DualTableComponent.html":{}}}],["table.component.ts:50",{"_index":1116,"title":{},"body":{"components/CurveTableComponent.html":{}}}],["table.component.ts:51",{"_index":1998,"title":{},"body":{"components/MoonTableComponent.html":{},"components/ScatterTableComponent.html":{}}}],["table.component.ts:53",{"_index":2670,"title":{},"body":{"components/VenusTableComponent.html":{}}}],["table.component.ts:55",{"_index":1382,"title":{},"body":{"components/DualTableComponent.html":{},"components/MoonTableComponent.html":{},"components/ScatterTableComponent.html":{}}}],["table.component.ts:56",{"_index":1118,"title":{},"body":{"components/CurveTableComponent.html":{}}}],["table.component.ts:57",{"_index":2666,"title":{},"body":{"components/VenusTableComponent.html":{}}}],["table.component.ts:59",{"_index":1381,"title":{},"body":{"components/DualTableComponent.html":{}}}],["table.component.ts:60",{"_index":1117,"title":{},"body":{"components/CurveTableComponent.html":{}}}],["table.component.ts:63",{"_index":1376,"title":{},"body":{"components/DualTableComponent.html":{}}}],["table.component.ts:69",{"_index":1080,"title":{},"body":{"classes/CurveTable.html":{},"classes/MoonTable.html":{},"classes/ScatterTable.html":{}}}],["table.component.ts:70",{"_index":1078,"title":{},"body":{"classes/CurveTable.html":{},"classes/MoonTable.html":{},"classes/ScatterTable.html":{},"classes/VenusTable.html":{}}}],["table.component.ts:71",{"_index":2657,"title":{},"body":{"classes/VenusTable.html":{}}}],["table.component.ts:76",{"_index":1082,"title":{},"body":{"classes/CurveTable.html":{},"classes/MoonTable.html":{},"classes/ScatterTable.html":{}}}],["table.component.ts:77",{"_index":2659,"title":{},"body":{"classes/VenusTable.html":{}}}],["table.component.ts:79",{"_index":1354,"title":{},"body":{"classes/DualTable.html":{}}}],["table.component.ts:80",{"_index":1084,"title":{},"body":{"classes/CurveTable.html":{},"classes/DualTable.html":{},"classes/MoonTable.html":{},"classes/ScatterTable.html":{}}}],["table.component.ts:81",{"_index":2660,"title":{},"body":{"classes/VenusTable.html":{}}}],["table.component.ts:84",{"_index":1081,"title":{},"body":{"classes/CurveTable.html":{},"classes/MoonTable.html":{},"classes/ScatterTable.html":{}}}],["table.component.ts:85",{"_index":2658,"title":{},"body":{"classes/VenusTable.html":{}}}],["table.component.ts:86",{"_index":1356,"title":{},"body":{"classes/DualTable.html":{}}}],["table.component.ts:90",{"_index":1357,"title":{},"body":{"classes/DualTable.html":{}}}],["table.component.ts:94",{"_index":1355,"title":{},"body":{"classes/DualTable.html":{}}}],["table/curve",{"_index":1036,"title":{},"body":{"modules/CurveModule.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"coverage.html":{}}}],["table/dual",{"_index":1271,"title":{},"body":{"modules/DualModule.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"coverage.html":{}}}],["table/moon",{"_index":1907,"title":{},"body":{"modules/MoonModule.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"coverage.html":{}}}],["table/scatter",{"_index":2224,"title":{},"body":{"modules/ScatterModule.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"coverage.html":{}}}],["table/venus",{"_index":2575,"title":{},"body":{"modules/VenusModule.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"coverage.html":{}}}],["tableaction",{"_index":2361,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"miscellaneous/typealiases.html":{}}}],["tableaddrow",{"_index":2350,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{}}}],["tabledata",{"_index":2820,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2728,"title":{},"body":{"coverage.html":{}}}],["tableuseractionobs",{"_index":2353,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{}}}],["take",{"_index":2923,"title":{},"body":{"license.html":{}}}],["takes",{"_index":2812,"title":{},"body":{"miscellaneous/functions.html":{}}}],["takeuntil",{"_index":613,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SliderUtil.html":{},"components/VenusChartFormComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["takeuntil(this.destroy",{"_index":641,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SliderUtil.html":{},"components/VenusChartFormComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["taking",{"_index":2837,"title":{},"body":{"index.html":{}}}],["tangible",{"_index":3341,"title":{},"body":{"license.html":{}}}],["technological",{"_index":3208,"title":{},"body":{"license.html":{}}}],["tells",{"_index":3112,"title":{},"body":{"license.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["term",{"_index":2868,"title":{},"body":{"index.html":{},"license.html":{}}}],["terminal",{"_index":3669,"title":{},"body":{"license.html":{}}}],["terminate",{"_index":3448,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":3469,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":3457,"title":{},"body":{"license.html":{}}}],["termination",{"_index":3445,"title":{},"body":{"license.html":{}}}],["terms",{"_index":2974,"title":{},"body":{"license.html":{}}}],["text",{"_index":660,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveHighChartComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["theme",{"_index":307,"title":{},"body":{"components/AppearanceComponent.html":{},"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["therefore",{"_index":2958,"title":{},"body":{"license.html":{}}}],["things",{"_index":2949,"title":{},"body":{"license.html":{}}}],["third",{"_index":3234,"title":{},"body":{"license.html":{}}}],["this.adjustscale",{"_index":2146,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["this.amplitudesubject.next(this.service.getamplitude",{"_index":1822,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["this.appearanceservice.getchartbackgroundcolor",{"_index":629,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.appearanceservice.getchartfontcolor",{"_index":627,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.appearanceservice.intialize",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["this.appearanceservice.setcolortheme(defaultappearancesettings.theme",{"_index":284,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["this.appearanceservice.setcolortheme(value",{"_index":299,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["this.appearanceservice.setfontfamily(value",{"_index":301,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["this.appearanceservice.setfontsize(defaultappearancesettings.fontsize",{"_index":286,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["this.appearanceservice.setfontsize(value",{"_index":305,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["this.appearanceservice.setfontstyle(defaultappearancesettings.fontstyle",{"_index":285,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["this.appearanceservice.setfontstyle(value",{"_index":303,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["this.chart",{"_index":630,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.chart.generatechartconfig",{"_index":633,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.chart.generatechartoptions",{"_index":638,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.chart.renderchart",{"_index":643,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.chartinfosubject.asobservable",{"_index":1303,"title":{},"body":{"injectables/DualService.html":{},"injectables/MoonService.html":{},"injectables/ScatterService.html":{},"injectables/VenusService.html":{}}}],["this.chartinfosubject.next(this.dualchartinfo",{"_index":1326,"title":{},"body":{"injectables/DualService.html":{}}}],["this.chartinfosubject.next(this.scatterchartinfo",{"_index":2290,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.chartinfosubject.next(this.venuschartinfo",{"_index":2628,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.chartobject",{"_index":981,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["this.chartobject.addseries",{"_index":1844,"title":{},"body":{"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["this.chartobject.plotheight",{"_index":2184,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["this.chartobject.plotwidth",{"_index":2183,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["this.chartobject.series[0].update",{"_index":1846,"title":{},"body":{"components/MoonHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["this.chartobject.series[1].update",{"_index":1849,"title":{},"body":{"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{}}}],["this.chartobject.series[2].setdata(this.service.getmodel",{"_index":2156,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["this.chartobject.series[3].setdata([[this.service.getdistance",{"_index":2162,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["this.chartoptions.title",{"_index":992,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["this.chartoptions.xaxis",{"_index":1850,"title":{},"body":{"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["this.chartoptions.yaxis",{"_index":1852,"title":{},"body":{"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["this.chartservice.saveimagehighchartoffline(this.service.gethighchart",{"_index":901,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/VenusComponent.html":{}}}],["this.charttitle",{"_index":775,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["this.chartuseractionobs",{"_index":2386,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["this.chartuseractionobs$.emit([{action",{"_index":2389,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["this.colnames",{"_index":1092,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{}}}],["this.colortheme",{"_index":442,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["this.curvecount",{"_index":835,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.curvedatadict",{"_index":795,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.curvedatadict.sort",{"_index":823,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.curvedatadict[row][curveparam.x",{"_index":812,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.curvedatadict[row][curveparam.y1",{"_index":815,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.curvedatadict[row][curveparam.y2",{"_index":817,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.curvedatadict[row][curveparam.y3",{"_index":819,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.curvedatadict[row][curveparam.y4",{"_index":821,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.datadict",{"_index":1156,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["this.datadict.filter((entry",{"_index":1207,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["this.datadict.slice(0",{"_index":1209,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["this.datalabel",{"_index":1212,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["this.datalabel.join",{"_index":1218,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["this.datalabel[0",{"_index":1216,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["this.datalabel[1",{"_index":1217,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["this.datalabels",{"_index":778,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.datalabels.join",{"_index":779,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.dataservice.addrow(index",{"_index":1105,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["this.dataservice.data$.pipe",{"_index":1096,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["this.dataservice.datakeys$.pipe",{"_index":1098,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["this.dataservice.getdata",{"_index":1095,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["this.dataservice.getdatalabelarray",{"_index":1093,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["this.dataservice.removerow(index",{"_index":1103,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["this.dataservice.setdata(this.table.getdata",{"_index":1101,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{}}}],["this.dataset",{"_index":1094,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["this.datasubject.asobservable",{"_index":1308,"title":{},"body":{"injectables/DualService.html":{},"injectables/MoonService.html":{},"injectables/ScatterService.html":{},"injectables/VenusService.html":{}}}],["this.datasubject.next(this.dualdata",{"_index":1328,"title":{},"body":{"injectables/DualService.html":{}}}],["this.datasubject.next(this.getdata",{"_index":2632,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.datasubject.next(this.scatterdata",{"_index":2294,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.datasubject.next(this.venusdata.getdata",{"_index":2637,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.defaultchartinfo",{"_index":852,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.defaultdata",{"_index":851,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.defaultinterface",{"_index":853,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.defaultvalue",{"_index":1592,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["this.destroy$.complete",{"_index":647,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SliderUtil.html":{},"components/VenusChartFormComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["this.destroy$.next",{"_index":1361,"title":{},"body":{"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/MoonFormComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/SliderUtil.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["this.destroy$.next(null",{"_index":646,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualHighchartComponent.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["this.dialog.open(honorcodepopupcomponent",{"_index":1536,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["this.diameter",{"_index":2088,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["this.diametersubject.next(this.service.getdiameter",{"_index":2121,"title":{},"body":{"components/ScatterFormComponent.html":{}}}],["this.distance",{"_index":2086,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["this.distancesubject.next(this.service.getdistance",{"_index":2120,"title":{},"body":{"components/ScatterFormComponent.html":{}}}],["this.dualchartinfo.getcharttitle",{"_index":1318,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualchartinfo.getdatalabel",{"_index":1319,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualchartinfo.getdatalabelarray",{"_index":1320,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualchartinfo.getstorageobject",{"_index":1321,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualchartinfo.getxaxislabel",{"_index":1322,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualchartinfo.getyaxislabel",{"_index":1323,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualchartinfo.setcharttitle(title",{"_index":1324,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualchartinfo.setdatalabel(data",{"_index":1327,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualchartinfo.setstorageobject(dualchartinfo.getdefaultchartinfo",{"_index":1332,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualchartinfo.setstorageobject(storageobject",{"_index":1329,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualchartinfo.setstorageobject(this.dualstorage.getchartinfo",{"_index":1317,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualchartinfo.setxaxislabel(xaxis",{"_index":1330,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualchartinfo.setyaxislabel(yaxis",{"_index":1331,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualdata.addrow(index",{"_index":1333,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualdata.getdata",{"_index":1335,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualdata.getdataarray",{"_index":1336,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualdata.removerow(index",{"_index":1337,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualdata.setdata(data",{"_index":1338,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualdata.setdata(dualdata.getdefaultdata",{"_index":1339,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualdata.setdata(this.dualstorage.getdata",{"_index":1316,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualstorage.savechartinfo(this.dualchartinfo.getstorageobject",{"_index":1325,"title":{},"body":{"injectables/DualService.html":{}}}],["this.dualstorage.savedata(this.dualdata.getdata",{"_index":1334,"title":{},"body":{"injectables/DualService.html":{}}}],["this.font",{"_index":458,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["this.fontsize",{"_index":453,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["this.fontstyle",{"_index":448,"title":{},"body":{"injectables/AppearanceStorageService.html":{}}}],["this.form",{"_index":1480,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["this.form.setvalue(curveinterface.getcurvecount",{"_index":1691,"title":{},"body":{"components/LineFormComponent.html":{}}}],["this.form.setvalue(this.service.getcurvecount",{"_index":1683,"title":{},"body":{"components/LineFormComponent.html":{}}}],["this.form.valid",{"_index":1483,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["this.formbuilder.group",{"_index":1481,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["this.formcontrol",{"_index":1591,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["this.formcontrol.haserror('max",{"_index":1602,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["this.formcontrol.haserror('min",{"_index":1599,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["this.formcontrol.setvalue(this.maxvalue",{"_index":1603,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["this.formcontrol.setvalue(this.minvalue",{"_index":1601,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["this.formcontrol.setvalue(value",{"_index":1611,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["this.formcontrol.statuschanges.pipe",{"_index":1595,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["this.formcontrol.valuechanges.pipe",{"_index":1604,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["this.formgroup",{"_index":291,"title":{},"body":{"components/AppearanceComponent.html":{},"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["this.formgroup.controls['charttitle'].valuechanges.pipe",{"_index":719,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["this.formgroup.controls['datalabel'].valuechanges.pipe",{"_index":723,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["this.formgroup.controls['xaxislabel'].valuechanges.pipe",{"_index":726,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["this.formgroup.controls['yaxislabel'].valuechanges.pipe",{"_index":729,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["this.formgroup.get(\"colortheme\")?.valuechanges.subscribe(value",{"_index":298,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["this.formgroup.get(\"fontfamily\")?.valuechanges.subscribe(value",{"_index":300,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["this.formgroup.get(\"fontsize\")?.valuechanges.subscribe(value",{"_index":304,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["this.formgroup.get(\"fontstyle\")?.valuechanges.subscribe(value",{"_index":302,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["this.generatecurvechartconfig",{"_index":648,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.generatefilename(charttype",{"_index":1451,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["this.generatesignature(signature",{"_index":1454,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["this.getcolortheme",{"_index":393,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.getdiameter",{"_index":2093,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["this.getdistance",{"_index":2092,"title":{},"body":{"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{}}}],["this.getfontfamilyclassname(fontfamily",{"_index":401,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.getfontfamilyclassname(this.getfontfamily",{"_index":400,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.getfontsizeclassname(fontsize",{"_index":390,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.getfontsizeclassname(this.getfontsize",{"_index":388,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.getfontstyleclassname(fontstyle",{"_index":397,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.getfontstyleclassname(this.getfontstyle",{"_index":396,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.getformgroup(appearanceservice.getcolortheme",{"_index":280,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["this.getformgroup(defaultappearancesettings.theme",{"_index":287,"title":{},"body":{"components/AppearanceComponent.html":{}}}],["this.gettable().getsourcedata",{"_index":1108,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["this.gettable().render",{"_index":1107,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["this.highchart",{"_index":1340,"title":{},"body":{"injectables/DualService.html":{},"injectables/ScatterService.html":{},"injectables/VenusService.html":{}}}],["this.honorcodeservice.honored().subscribe((name",{"_index":900,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/VenusComponent.html":{}}}],["this.hotregisterer.getinstance(this.id",{"_index":1106,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["this.id",{"_index":625,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["this.initchartseries",{"_index":1257,"title":{},"body":{"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{}}}],["this.interfacesubject.asobservable",{"_index":1953,"title":{},"body":{"injectables/MoonService.html":{},"injectables/ScatterService.html":{}}}],["this.interfacesubject.next(updatesource.interface",{"_index":2278,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.interfacesubject.next(updatesource.reset",{"_index":2282,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.ismagnitudeon",{"_index":836,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.limitprecision(this.service.getdata",{"_index":1360,"title":{},"body":{"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["this.limitprecision(venusmodels.geocentric(10.15",{"_index":2617,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.limitprecision(venusmodels.heliocentric(10.15",{"_index":2620,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.linechartdata",{"_index":632,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.linechartoptions",{"_index":637,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.linecolordarkarray[index",{"_index":530,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["this.linecolorlightarray.length",{"_index":527,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["this.linecolorlightarray[index",{"_index":529,"title":{},"body":{"classes/ChartColor.html":{},"classes/ColorThemeSettings.html":{},"classes/DefaultAppearanceSettings.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{}}}],["this.magnitude",{"_index":1684,"title":{},"body":{"components/LineFormComponent.html":{}}}],["this.magslider.checked",{"_index":1692,"title":{},"body":{"components/LineFormComponent.html":{}}}],["this.makerawdata(chartdata",{"_index":680,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.matdialogref.close",{"_index":1482,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["this.moonchartinfo.setstorageobject(this.moonstorage.getchartinfo",{"_index":1962,"title":{},"body":{"injectables/MoonService.html":{}}}],["this.moondata.getdataarray().filter((entry",{"_index":1965,"title":{},"body":{"injectables/MoonService.html":{}}}],["this.moondata.setdata(this.moonstorage.getdata",{"_index":1963,"title":{},"body":{"injectables/MoonService.html":{}}}],["this.mooninterface.setstorageobject(this.moonstorage.getinterface",{"_index":1961,"title":{},"body":{"injectables/MoonService.html":{}}}],["this.name",{"_index":1615,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["this.navbar.open",{"_index":1716,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{}}}],["this.numoverride",{"_index":1600,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["this.periodsubject.next(this.service.getperiod",{"_index":1823,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["this.phasesubject.next(this.service.getphase",{"_index":1824,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["this.popupservice.registersavegraphbutton(this.savegraphbutton",{"_index":2387,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["this.popupservice.registersavegraphspinner(this.savegraphspinner",{"_index":2388,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["this.renderer",{"_index":380,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.renderer.addclass(document.body",{"_index":389,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.renderer.removeclass(document.body",{"_index":387,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.reverseyaxis",{"_index":989,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["this.savechartinfo(venuschartinfo.getdefaultchartinfo",{"_index":2491,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["this.savedata(venusdata.getdefaultdata",{"_index":2493,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["this.savegraphbutton",{"_index":1532,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["this.savegraphbutton.disabled",{"_index":1534,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["this.savegraphspinner",{"_index":1533,"title":{},"body":{"injectables/HonorCodePopupService.html":{}}}],["this.scatterchartinfo.getcharttitle",{"_index":2283,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterchartinfo.getdatalabel",{"_index":2286,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterchartinfo.getstorageobject",{"_index":2287,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterchartinfo.getxaxislabel",{"_index":2284,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterchartinfo.getyaxislabel",{"_index":2285,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterchartinfo.setcharttitle(title",{"_index":2288,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterchartinfo.setdatalabel(data",{"_index":2293,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterchartinfo.setstorageobject(scatterchartinfo.getdefaultstorageobject",{"_index":2296,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterchartinfo.setstorageobject(storageobject",{"_index":2295,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterchartinfo.setstorageobject(this.scatterstorage.getchartinfo",{"_index":2270,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterchartinfo.setxaxislabel(xaxis",{"_index":2291,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterchartinfo.setyaxislabel(yaxis",{"_index":2292,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterdata.addrow(index",{"_index":2297,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterdata.getdata",{"_index":2299,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterdata.getdataarray",{"_index":2300,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterdata.removerow(index",{"_index":2301,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterdata.setdata(data",{"_index":2302,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterdata.setdata(this.scatterstorage.getdata",{"_index":2269,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterinterface.getdiameter",{"_index":2272,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterinterface.getdistance",{"_index":2273,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterinterface.getmodel",{"_index":2274,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterinterface.getmodelstorageobject",{"_index":2275,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterinterface.setdiameter(diameter",{"_index":2276,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterinterface.setdistance(distance",{"_index":2279,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterinterface.setmodelstorageobject(scattermodelinterface.getdefaultstorageobject",{"_index":2281,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterinterface.setmodelstorageobject(storageobject",{"_index":2280,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterinterface.setmodelstorageobject(this.scatterstorage.getinterface",{"_index":2271,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterstorage.resetdata",{"_index":2303,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterstorage.savechartinfo(this.scatterchartinfo.getstorageobject",{"_index":2289,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterstorage.savedata(this.scatterdata.getdata",{"_index":2298,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.scatterstorage.saveinterface(this.scatterinterface.getmodelstorageobject",{"_index":2277,"title":{},"body":{"injectables/ScatterService.html":{}}}],["this.service.addrow",{"_index":898,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/VenusComponent.html":{}}}],["this.service.addrow(index",{"_index":1364,"title":{},"body":{"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["this.service.chartinfo$.pipe",{"_index":644,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveHighChartComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["this.service.data$.pipe",{"_index":640,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/MoonHighchartComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["this.service.datakeys$.pipe",{"_index":990,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["this.service.getchartinfoobject",{"_index":635,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.service.getcharttitle",{"_index":993,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["this.service.getdata",{"_index":1359,"title":{},"body":{"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["this.service.getdataarray",{"_index":1261,"title":{},"body":{"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["this.service.getdataarray().filter(d",{"_index":2163,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["this.service.getdatalabel",{"_index":1845,"title":{},"body":{"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["this.service.getdatalabelarray",{"_index":1260,"title":{},"body":{"components/DualHighchartComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{}}}],["this.service.getdataobject",{"_index":634,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.service.getdistance",{"_index":2158,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["this.service.getgeocentricmodeldatalower",{"_index":2551,"title":{},"body":{"components/VenusHighchartComponent.html":{}}}],["this.service.getgeocentricmodeldataupper",{"_index":2549,"title":{},"body":{"components/VenusHighchartComponent.html":{}}}],["this.service.getheliocentricmodeldata",{"_index":2552,"title":{},"body":{"components/VenusHighchartComponent.html":{}}}],["this.service.getinterfaceobject",{"_index":636,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{}}}],["this.service.getismagnitudeon",{"_index":1674,"title":{},"body":{"components/LineFormComponent.html":{}}}],["this.service.getmodel",{"_index":2154,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["this.service.getmoonmodeldata",{"_index":1848,"title":{},"body":{"components/MoonHighchartComponent.html":{}}}],["this.service.getxaxislabel",{"_index":1851,"title":{},"body":{"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["this.service.getyaxislabel",{"_index":1853,"title":{},"body":{"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["this.service.interface$.pipe",{"_index":988,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{}}}],["this.service.interface$.pipe(takeuntil(this.destroy",{"_index":1689,"title":{},"body":{"components/LineFormComponent.html":{}}}],["this.service.removerow(index",{"_index":1363,"title":{},"body":{"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["this.service.resetchartinfo",{"_index":903,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/VenusComponent.html":{}}}],["this.service.resetdata",{"_index":902,"title":{},"body":{"components/CurveComponent.html":{},"components/DualComponent.html":{},"components/MoonComponent.html":{},"components/ScatterComponent.html":{},"components/VenusComponent.html":{}}}],["this.service.resetinterface",{"_index":1786,"title":{},"body":{"components/MoonComponent.html":{}}}],["this.service.resetmodel",{"_index":2101,"title":{},"body":{"components/ScatterComponent.html":{}}}],["this.service.setamplitude($event.value",{"_index":1815,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["this.service.setcharttitle(title",{"_index":722,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["this.service.setcurvecount(this.form.value",{"_index":1687,"title":{},"body":{"components/LineFormComponent.html":{}}}],["this.service.setdata(this.table.getdata",{"_index":1362,"title":{},"body":{"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["this.service.setdatalabel(labels",{"_index":725,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["this.service.setdiameter(parsefloat($event.value",{"_index":2125,"title":{},"body":{"components/ScatterFormComponent.html":{}}}],["this.service.setdistance(parsefloat($event.value",{"_index":2123,"title":{},"body":{"components/ScatterFormComponent.html":{}}}],["this.service.sethighchart(this.chartobject",{"_index":983,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["this.service.setismagnitudeon(value",{"_index":1688,"title":{},"body":{"components/LineFormComponent.html":{}}}],["this.service.setperiod($event.value",{"_index":1817,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["this.service.setphase($event.value",{"_index":1819,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["this.service.settilt($event.value",{"_index":1821,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["this.service.setxaxislabel(label",{"_index":728,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["this.service.setyaxislabel(label",{"_index":730,"title":{},"body":{"components/CurveChartFormComponent.html":{},"components/DualChartFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/VenusChartFormComponent.html":{}}}],["this.setchartseries",{"_index":982,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["this.setcharttitle",{"_index":978,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["this.setchartxaxis",{"_index":979,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["this.setchartyaxis",{"_index":980,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["this.setcolortheme(this.getcolortheme",{"_index":383,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.setcross",{"_index":2149,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["this.setdata",{"_index":1259,"title":{},"body":{"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["this.setdata(moondata.getdefaultdata",{"_index":1759,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"classes/MoonStorage.html":{}}}],["this.setdata(venusdata.getdefaultdata",{"_index":2643,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.setdatabycell(newvalue",{"_index":805,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.setfontfamily(this.getfontfamily",{"_index":384,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.setfontsize(this.getfontsize",{"_index":385,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.setfontstyle(this.getfontstyle",{"_index":386,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.setmodel",{"_index":1843,"title":{},"body":{"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{}}}],["this.setsun",{"_index":2148,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["this.slider$.pipe",{"_index":1610,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["this.slidersubject.asobservable",{"_index":1582,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["this.sortdatabyx",{"_index":802,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["this.storageservice.getcolortheme",{"_index":395,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.storageservice.getfont",{"_index":403,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.storageservice.getfontsize",{"_index":392,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.storageservice.getfontstyle",{"_index":399,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.storageservice.setcolortheme(colortheme",{"_index":394,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.storageservice.setfont(fontfamily",{"_index":402,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.storageservice.setfontsize(fontsize",{"_index":391,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.storageservice.setfontstyle(fontstyle",{"_index":398,"title":{},"body":{"injectables/AppearanceService.html":{}}}],["this.table.rendertable",{"_index":1097,"title":{},"body":{"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["this.tableuseractionobs",{"_index":2363,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{}}}],["this.tableuseractionobs$.emit([{action",{"_index":2364,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{}}}],["this.tiltsubject.next(this.service.gettilt",{"_index":1825,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["this.toolsnav.close",{"_index":2435,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["this.toolsnav.open",{"_index":2434,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["this.updatechart",{"_index":985,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["this.updatechartseries",{"_index":987,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["this.updatecross",{"_index":2147,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["this.updatedata",{"_index":1258,"title":{},"body":{"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["this.updateflag",{"_index":991,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["this.updatemodel",{"_index":1842,"title":{},"body":{"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{}}}],["this.value$?.pipe",{"_index":1613,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["this.value.emit({key",{"_index":1614,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["this.valuechange(this.formcontrol.value",{"_index":1612,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["this.valuechange(value",{"_index":1609,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["this.venuschartinfo.getcharttitle",{"_index":2621,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.venuschartinfo.getdatalabel",{"_index":2624,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.venuschartinfo.getstorageobject",{"_index":2625,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.venuschartinfo.getxaxislabel",{"_index":2622,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.venuschartinfo.getyaxislabel",{"_index":2623,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.venuschartinfo.setcharttitle(title",{"_index":2626,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.venuschartinfo.setdatalabel(data",{"_index":2631,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.venuschartinfo.setstorageobject(storageobject",{"_index":2633,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.venuschartinfo.setstorageobject(this.venusstorage.getchartinfo",{"_index":2616,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.venuschartinfo.setstorageobject(venuschartinfo.getdefaultchartinfo",{"_index":2634,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.venuschartinfo.setxaxislabel(xaxis",{"_index":2629,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.venuschartinfo.setyaxislabel(yaxis",{"_index":2630,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.venusdata.addrow(index",{"_index":2635,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.venusdata.getdata",{"_index":2638,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.venusdata.getdataarray",{"_index":2639,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.venusdata.removerow(index",{"_index":2640,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.venusdata.setdata(data",{"_index":2641,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.venusdata.setdata(this.venusstorage.getdata",{"_index":2615,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.venusstorage.savechartinfo(this.venuschartinfo.getstorageobject",{"_index":2627,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.venusstorage.savedata(data",{"_index":2642,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.venusstorage.savedata(this.venusdata.getdata",{"_index":2636,"title":{},"body":{"injectables/VenusService.html":{}}}],["this.xaxislabel",{"_index":776,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["this.yaxislabel",{"_index":777,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["those",{"_index":3017,"title":{},"body":{"license.html":{}}}],["though",{"_index":3402,"title":{},"body":{"license.html":{}}}],["threatened",{"_index":3028,"title":{},"body":{"license.html":{}}}],["three",{"_index":771,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["throttletime",{"_index":1588,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["throttletime(25",{"_index":1605,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["through",{"_index":2874,"title":{},"body":{"index.html":{},"license.html":{}}}],["throw",{"_index":837,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["thus",{"_index":3191,"title":{},"body":{"license.html":{}}}],["tilt",{"_index":1777,"title":{},"body":{"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"components/MoonFormComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"interfaces/MoonModel.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"miscellaneous/enumerations.html":{}}}],["tiltsubject",{"_index":1797,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["time",{"_index":1442,"title":{},"body":{"injectables/HonorCodeChartService.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["title",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"components/MoonHighchartComponent.html":{},"injectables/MoonService.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["toggle",{"_index":1032,"title":{},"body":{"modules/CurveModule.html":{},"components/LineFormComponent.html":{}}}],["tool",{"_index":225,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/ToolsNavbarComponent.html":{},"miscellaneous/functions.html":{}}}],["toolbar",{"_index":1725,"title":{},"body":{"components/MenubarComponent.html":{}}}],["toolinterface",{"_index":569,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"interfaces/MyChart.html":{}}}],["tools",{"_index":94,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"index.html":{},"license.html":{}}}],["tools/curve/curve.component",{"_index":196,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["tools/curve/curve.module",{"_index":2428,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["tools/dual/dual.module",{"_index":2433,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["tools/dual/dual/dual.component",{"_index":200,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["tools/moon/moon.module",{"_index":2429,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["tools/moon/moon/moon.component",{"_index":197,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["tools/scatter/scatter.module",{"_index":2432,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["tools/scatter/scatter/scatter.component",{"_index":199,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["tools/shared/honor",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["tools/venus/venus.module",{"_index":2431,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["tools/venus/venus/venus.component",{"_index":198,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["tools_routes",{"_index":202,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["toolsbar",{"_index":1709,"title":{},"body":{"components/MenubarComponent.html":{},"modules/MenubarModule.html":{}}}],["toolsnav",{"_index":2419,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["toolsnavbarcomponent",{"_index":93,"title":{"components/ToolsNavbarComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"modules/MenubarModule.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toolsnavbarmodule",{"_index":148,"title":{"modules/ToolsNavbarModule.html":{}},"body":{"modules/AppModule.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"modules.html":{},"overview.html":{}}}],["tooltip",{"_index":968,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["top",{"_index":1695,"title":{},"body":{"components/LineFormComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{}}}],["trade",{"_index":3426,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":3425,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":3427,"title":{},"body":{"license.html":{}}}],["trailing",{"_index":1608,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["transaction",{"_index":3375,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":3100,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":3376,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":3489,"title":{},"body":{"license.html":{}}}],["transforms",{"_index":2107,"title":{},"body":{"classes/ScatterData.html":{}}}],["transient",{"_index":2445,"title":{},"body":{"components/ToolsNavbarComponent.html":{}}}],["transmission",{"_index":3329,"title":{},"body":{"license.html":{}}}],["treated",{"_index":3401,"title":{},"body":{"license.html":{}}}],["treaty",{"_index":3214,"title":{},"body":{"license.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["true",{"_index":653,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/SliderUtil.html":{},"components/VenusHighchartComponent.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":1685,"title":{},"body":{"components/LineFormComponent.html":{},"dependencies.html":{}}}],["tslib",{"_index":2764,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":2788,"title":{},"body":{"miscellaneous/functions.html":{}}}],["two",{"_index":769,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["type",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"interfaces/MoonDataDict.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"interfaces/MoonInterfaceStorageObject.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyColorTheme.html":{},"interfaces/MyData.html":{},"interfaces/MyFontFamily.html":{},"interfaces/MyFontSize.html":{},"interfaces/MyFontStyle.html":{},"interfaces/MyStorage.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"classes/SliderUtil.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":3700,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":977,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"classes/SliderUtil.html":{},"components/VenusHighchartComponent.html":{}}}],["types/actions",{"_index":2362,"title":{},"body":{"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["types/file",{"_index":2743,"title":{},"body":{"dependencies.html":{}}}],["typical",{"_index":3355,"title":{},"body":{"license.html":{}}}],["typing",{"_index":1496,"title":{},"body":{"components/HonorCodePopupComponent.html":{}}}],["ultimate",{"_index":2855,"title":{},"body":{"index.html":{}}}],["unacceptable",{"_index":3014,"title":{},"body":{"license.html":{}}}],["undefined",{"_index":1606,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["under",{"_index":2861,"title":{},"body":{"index.html":{},"license.html":{}}}],["universe",{"_index":2850,"title":{},"body":{"index.html":{}}}],["unless",{"_index":3364,"title":{},"body":{"license.html":{}}}],["unlimited",{"_index":3179,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":3073,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":3202,"title":{},"body":{"license.html":{}}}],["unpacking",{"_index":3397,"title":{},"body":{"license.html":{}}}],["until",{"_index":3456,"title":{},"body":{"license.html":{}}}],["up",{"_index":2847,"title":{},"body":{"index.html":{}}}],["update",{"_index":2818,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updatechart",{"_index":947,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["updatechartseries",{"_index":948,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["updatecross",{"_index":2131,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["updated",{"_index":2822,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updatedata",{"_index":1240,"title":{},"body":{"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["updateflag",{"_index":940,"title":{},"body":{"components/CurveHighChartComponent.html":{},"components/DualHighchartComponent.html":{},"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/VenusHighchartComponent.html":{}}}],["updateline",{"_index":2716,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["updateline(tabledata",{"_index":2808,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updatemodel",{"_index":1831,"title":{},"body":{"components/MoonHighchartComponent.html":{},"components/ScatterHighchartComponent.html":{}}}],["updates",{"_index":2814,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["updatesource",{"_index":1811,"title":{},"body":{"components/MoonFormComponent.html":{},"injectables/MoonService.html":{},"components/ScatterFormComponent.html":{},"injectables/ScatterService.html":{},"miscellaneous/enumerations.html":{}}}],["updatesource.interface",{"_index":1826,"title":{},"body":{"components/MoonFormComponent.html":{},"components/ScatterFormComponent.html":{}}}],["url(\"https://code.highcharts.com/css/highcharts.css",{"_index":2553,"title":{},"body":{"components/VenusHighchartComponent.html":{}}}],["use",{"_index":226,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["used",{"_index":3042,"title":{},"body":{"license.html":{}}}],["useful",{"_index":3663,"title":{},"body":{"license.html":{}}}],["user",{"_index":2784,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["user's",{"_index":1406,"title":{},"body":{"injectables/HonorCodeChartService.html":{}}}],["users",{"_index":2934,"title":{},"body":{"license.html":{}}}],["uses",{"_index":3358,"title":{},"body":{"license.html":{}}}],["using",{"_index":3327,"title":{},"body":{"license.html":{}}}],["valid",{"_index":3293,"title":{},"body":{"license.html":{}}}],["validators",{"_index":278,"title":{},"body":{"components/AppearanceComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/MoonFormComponent.html":{},"classes/SliderUtil.html":{}}}],["validators.max(750",{"_index":1805,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["validators.max(this.maxvalue",{"_index":1594,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["validators.min(1",{"_index":1804,"title":{},"body":{"components/MoonFormComponent.html":{}}}],["validators.min(this.minvalue",{"_index":1593,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["validators.required",{"_index":294,"title":{},"body":{"components/AppearanceComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/MoonFormComponent.html":{},"classes/SliderUtil.html":{}}}],["value",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"injectables/AppearanceStorageService.html":{},"classes/ChartColor.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"classes/DefaultAppearanceSettings.html":{},"components/DualChartFormComponent.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterData.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SimpleDataButtonComponent.html":{},"classes/SliderUtil.html":{},"components/VenusChartFormComponent.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value[0",{"_index":994,"title":{},"body":{"components/CurveHighChartComponent.html":{}}}],["valuechange",{"_index":1548,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["valuechange(value",{"_index":1575,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["values",{"_index":2174,"title":{},"body":{"components/ScatterHighchartComponent.html":{},"miscellaneous/functions.html":{}}}],["var",{"_index":30,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["variable",{"_index":2437,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"coverage.html":{}}}],["variables",{"_index":3705,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["venus",{"_index":97,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"modules/VenusModule.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["venus'},{'name",{"_index":99,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["venus.component.html",{"_index":2531,"title":{},"body":{"components/VenusComponent.html":{}}}],["venus.component.scss",{"_index":2530,"title":{},"body":{"components/VenusComponent.html":{}}}],["venus.service",{"_index":2534,"title":{},"body":{"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"modules/VenusModule.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["venus.service.util",{"_index":2614,"title":{},"body":{"injectables/VenusService.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["venus/venus.component",{"_index":2574,"title":{},"body":{"modules/VenusModule.html":{}}}],["venus/venus.service",{"_index":2458,"title":{},"body":{"components/VenusChartFormComponent.html":{}}}],["venuschartformcomponent",{"_index":96,"title":{"components/VenusChartFormComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"modules/VenusModule.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["venuschartinfo",{"_index":2459,"title":{"classes/VenusChartInfo.html":{}},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"coverage.html":{}}}],["venuschartinfo.getdefaultchartinfo",{"_index":2492,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["venuschartinfo.getdefaultchartinfo().charttitle",{"_index":2486,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["venuschartinfo.getdefaultchartinfo().datalabel",{"_index":2487,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["venuschartinfo.getdefaultchartinfo().xaxislabel",{"_index":2488,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["venuschartinfo.getdefaultchartinfo().yaxislabel",{"_index":2489,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["venuschartinfostorageobject",{"_index":2469,"title":{"interfaces/VenusChartInfoStorageObject.html":{}},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"coverage.html":{}}}],["venuscomponent",{"_index":98,"title":{"components/VenusComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"modules/VenusModule.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["venusdata",{"_index":2478,"title":{"classes/VenusData.html":{}},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"coverage.html":{}}}],["venusdata.getdefaultdata",{"_index":2479,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["venusdatadict",{"_index":2477,"title":{"interfaces/VenusDataDict.html":{}},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"coverage.html":{}}}],["venushighchartcomponent",{"_index":100,"title":{"components/VenusHighchartComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"modules/VenusModule.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["venusmodels",{"_index":2495,"title":{"classes/VenusModels.html":{}},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"coverage.html":{}}}],["venusmodule",{"_index":2430,"title":{"modules/VenusModule.html":{}},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{},"modules/VenusModule.html":{},"modules.html":{},"overview.html":{}}}],["venusservice",{"_index":2457,"title":{"injectables/VenusService.html":{}},"body":{"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"modules/VenusModule.html":{},"injectables/VenusService.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["venusstorage",{"_index":2490,"title":{"classes/VenusStorage.html":{}},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"coverage.html":{}}}],["venustable",{"_index":2656,"title":{"classes/VenusTable.html":{}},"body":{"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"coverage.html":{}}}],["venustable(this.id",{"_index":2661,"title":{},"body":{"classes/VenusTable.html":{},"components/VenusTableComponent.html":{}}}],["venustablecomponent",{"_index":101,"title":{"components/VenusTableComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/AppearanceComponent.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HomeComponent.html":{},"components/HonorCodePopupComponent.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"components/SimpleDataButtonComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"modules/VenusModule.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["verbatim",{"_index":2913,"title":{},"body":{"license.html":{}}}],["version",{"_index":2898,"title":{},"body":{"license.html":{},"properties.html":{}}}],["versions",{"_index":2930,"title":{},"body":{"license.html":{}}}],["versus",{"_index":2517,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["very",{"_index":2177,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["view",{"_index":2885,"title":{},"body":{"index.html":{},"license.html":{}}}],["viewchild",{"_index":1587,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["viewchild(\"input",{"_index":1590,"title":{},"body":{"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"classes/SliderUtil.html":{}}}],["viewchild(\"magslider",{"_index":1682,"title":{},"body":{"components/LineFormComponent.html":{}}}],["viewchild(\"savegraphbutton",{"_index":2384,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["viewchild(\"savegraphspinner",{"_index":2385,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{}}}],["viewchild('input",{"_index":1580,"title":{},"body":{"components/InputSliderComponent.html":{}}}],["viewchild('magslider",{"_index":1677,"title":{},"body":{"components/LineFormComponent.html":{}}}],["viewchild('savegraphbutton",{"_index":2380,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{}}}],["viewchild('savegraphspinner",{"_index":2381,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{}}}],["viewchild('toolsnav",{"_index":2424,"title":{},"body":{"components/ToolsNavbarComponent.html":{},"modules/ToolsNavbarModule.html":{}}}],["violates",{"_index":3391,"title":{},"body":{"license.html":{}}}],["violation",{"_index":3452,"title":{},"body":{"license.html":{}}}],["visible",{"_index":3109,"title":{},"body":{"license.html":{}}}],["void",{"_index":259,"title":{},"body":{"components/AppearanceComponent.html":{},"injectables/AppearanceService.html":{},"injectables/AppearanceStorageService.html":{},"interfaces/ChartInfo.html":{},"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"components/CurveComponent.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"components/CurveHighChartComponent.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/CurveTable.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"components/DualComponent.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"components/DualHighchartComponent.html":{},"injectables/DualService.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"injectables/HonorCodeChartService.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"interfaces/InputSliderValue.html":{},"components/LineFormComponent.html":{},"components/MenubarComponent.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"components/MoonComponent.html":{},"classes/MoonData.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"interfaces/MoonInterface.html":{},"classes/MoonInterfaceImpl.html":{},"injectables/MoonService.html":{},"classes/MoonStorage.html":{},"classes/MoonTable.html":{},"components/MoonTableComponent.html":{},"interfaces/MyChart.html":{},"interfaces/MyData.html":{},"interfaces/MyStorage.html":{},"interfaces/MyTable.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"components/ScatterComponent.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/ScatterTable.html":{},"components/ScatterTableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SimpleDataButtonComponent.html":{},"modules/SimpleDataButtonModule.html":{},"components/SimpleGraphButtonComponent.html":{},"modules/SimpleGraphButtonModule.html":{},"classes/SliderUtil.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"components/VenusComponent.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"components/VenusHighchartComponent.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{},"classes/VenusTable.html":{},"components/VenusTableComponent.html":{},"license.html":{}}}],["volume",{"_index":3270,"title":{},"body":{"license.html":{}}}],["w",{"_index":3673,"title":{},"body":{"license.html":{}}}],["waive",{"_index":3223,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":3646,"title":{},"body":{"license.html":{}}}],["want",{"_index":2946,"title":{},"body":{"license.html":{}}}],["warranties",{"_index":3113,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2986,"title":{},"body":{"license.html":{}}}],["wavelength",{"_index":2849,"title":{},"body":{"index.html":{}}}],["way",{"_index":2937,"title":{},"body":{"license.html":{}}}],["ways",{"_index":3283,"title":{},"body":{"license.html":{}}}],["webstorage",{"_index":2756,"title":{},"body":{"dependencies.html":{}}}],["welcome",{"_index":3674,"title":{},"body":{"license.html":{}}}],["well",{"_index":3092,"title":{},"body":{"license.html":{}}}],["whatever",{"_index":3494,"title":{},"body":{"license.html":{}}}],["whether",{"_index":2965,"title":{},"body":{"license.html":{}}}],["white",{"_index":2192,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["whole",{"_index":3136,"title":{},"body":{"license.html":{}}}],["whose",{"_index":3337,"title":{},"body":{"license.html":{}}}],["widely",{"_index":3130,"title":{},"body":{"license.html":{}}}],["width",{"_index":323,"title":{},"body":{"components/AppearanceComponent.html":{},"components/CurveChartFormComponent.html":{},"components/CurveComponent.html":{},"components/CurveHighChartComponent.html":{},"components/CurveTableComponent.html":{},"components/DualChartFormComponent.html":{},"components/DualComponent.html":{},"components/DualHighchartComponent.html":{},"components/DualTableComponent.html":{},"components/HonorCodePopupComponent.html":{},"injectables/HonorCodePopupService.html":{},"components/InputSliderComponent.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/MoonComponent.html":{},"components/MoonFormComponent.html":{},"components/MoonHighchartComponent.html":{},"components/MoonTableComponent.html":{},"components/ScatterChartFormComponent.html":{},"components/ScatterComponent.html":{},"components/ScatterFormComponent.html":{},"components/ScatterHighchartComponent.html":{},"components/ScatterTableComponent.html":{},"components/ToolsNavbarComponent.html":{},"components/VenusChartFormComponent.html":{},"components/VenusComponent.html":{},"components/VenusHighchartComponent.html":{},"components/VenusTableComponent.html":{}}}],["window",{"_index":1461,"title":{},"body":{"components/HonorCodePopupComponent.html":{},"license.html":{}}}],["wipo",{"_index":3213,"title":{},"body":{"license.html":{}}}],["wish",{"_index":2944,"title":{},"body":{"license.html":{}}}],["within",{"_index":3437,"title":{},"body":{"license.html":{}}}],["without",{"_index":3076,"title":{},"body":{"license.html":{}}}],["work",{"_index":2524,"title":{},"body":{"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"license.html":{}}}],["work's",{"_index":3155,"title":{},"body":{"license.html":{}}}],["working",{"_index":3131,"title":{},"body":{"license.html":{}}}],["works",{"_index":25,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"license.html":{}}}],["worldwide",{"_index":3525,"title":{},"body":{"license.html":{}}}],["writing",{"_index":3609,"title":{},"body":{"license.html":{}}}],["written",{"_index":3292,"title":{},"body":{"license.html":{}}}],["x",{"_index":659,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["x\"].concat(this.datalabels",{"_index":780,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{}}}],["x1",{"_index":1153,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{}}}],["x1:0",{"_index":1158,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["x1:1",{"_index":1161,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["x1:2",{"_index":1164,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["x1:3",{"_index":1167,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["x1:4",{"_index":1170,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["x1:5",{"_index":1174,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["x1:6",{"_index":1177,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["x1:7",{"_index":1180,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["x1:8",{"_index":1182,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["x1:9",{"_index":1185,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["x1:null",{"_index":1189,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["x2",{"_index":1154,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{}}}],["xaxis",{"_index":558,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/DualChartInfo.html":{},"injectables/DualService.html":{},"classes/MoonChartInfo.html":{},"injectables/MoonService.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["xaxislabel",{"_index":715,"title":{},"body":{"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["xkey",{"_index":2810,"title":{},"body":{"miscellaneous/functions.html":{}}}],["y",{"_index":666,"title":{},"body":{"classes/CurveChart.html":{},"components/CurveChartComponent.html":{},"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"components/LineFormComponent.html":{},"components/MoonChartFormComponent.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"components/ScatterHighchartComponent.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{},"miscellaneous/functions.html":{}}}],["y1",{"_index":763,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["y1:1",{"_index":1171,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y1:16",{"_index":1162,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y1:25",{"_index":1159,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y1:36",{"_index":1186,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y1:4",{"_index":1168,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y1:9",{"_index":1165,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y1:null",{"_index":1190,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y2",{"_index":764,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"classes/DualTable.html":{},"components/DualTableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["y2:10",{"_index":1160,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y2:14.1421356237309",{"_index":1163,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y2:17.3205080756887",{"_index":1166,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y2:20",{"_index":1169,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y2:22.3606797749978",{"_index":1173,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y2:24.4948974278317",{"_index":1176,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y2:26.4575131106459",{"_index":1179,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y2:28.2842712474619",{"_index":1181,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y2:30",{"_index":1184,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y2:31.6227766016837",{"_index":1188,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y2:33.166247903554",{"_index":1192,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y2:34.6410161513775",{"_index":1194,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y2:36.0555127546398",{"_index":1196,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y2:37.4165738677394",{"_index":1198,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y2:38.7298334620741",{"_index":1200,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y2:40",{"_index":1202,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y2:41.2310562561766",{"_index":1204,"title":{},"body":{"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{}}}],["y3",{"_index":765,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"miscellaneous/enumerations.html":{}}}],["y4",{"_index":766,"title":{},"body":{"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"miscellaneous/enumerations.html":{}}}],["yaxis",{"_index":561,"title":{},"body":{"interfaces/ChartInfo.html":{},"classes/DualChartInfo.html":{},"injectables/DualService.html":{},"classes/MoonChartInfo.html":{},"injectables/MoonService.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"injectables/ScatterService.html":{},"classes/ScatterStorage.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"injectables/VenusService.html":{},"classes/VenusStorage.html":{}}}],["yaxislabel",{"_index":717,"title":{},"body":{"components/CurveChartFormComponent.html":{},"classes/CurveChartInfo.html":{},"interfaces/CurveChartInfoStorageObject.html":{},"classes/CurveData.html":{},"interfaces/CurveDataDict.html":{},"classes/CurveImpl.html":{},"interfaces/CurveInterface.html":{},"interfaces/CurveInterfaceStorageObject.html":{},"classes/CurveStorage.html":{},"components/DualChartFormComponent.html":{},"classes/DualChartInfo.html":{},"interfaces/DualChartInfoStorageObject.html":{},"classes/DualData.html":{},"interfaces/DualDataDict.html":{},"classes/DualStorage.html":{},"components/MoonChartFormComponent.html":{},"classes/MoonChartInfo.html":{},"interfaces/MoonChartInfoStorageObject.html":{},"components/ScatterChartFormComponent.html":{},"classes/ScatterChartInfo.html":{},"interfaces/ScatterChartInfoStorageObject.html":{},"classes/ScatterData.html":{},"interfaces/ScatterDataDict.html":{},"interfaces/ScatterInterfaceStorageObject.html":{},"interfaces/ScatterModel.html":{},"classes/ScatterModelInterface.html":{},"classes/ScatterStorage.html":{},"components/VenusChartFormComponent.html":{},"classes/VenusChartInfo.html":{},"interfaces/VenusChartInfoStorageObject.html":{},"classes/VenusData.html":{},"interfaces/VenusDataDict.html":{},"classes/VenusModels.html":{},"classes/VenusStorage.html":{}}}],["years",{"_index":3294,"title":{},"body":{"license.html":{}}}],["yellow",{"_index":2191,"title":{},"body":{"components/ScatterHighchartComponent.html":{}}}],["ykey",{"_index":2811,"title":{},"body":{"miscellaneous/functions.html":{}}}],["yourself",{"_index":1493,"title":{},"body":{"components/HonorCodePopupComponent.html":{},"license.html":{}}}],["yyyy:mm:dd",{"_index":2806,"title":{},"body":{"miscellaneous/functions.html":{}}}],["z",{"_index":2390,"title":{},"body":{"components/SimpleGraphButtonComponent.html":{}}}],["zone.js",{"_index":2766,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"modules/CurveModule.html":{},"modules/DualModule.html":{},"modules/HonorCodePopupModule.html":{},"modules/InterfaceUtilModule.html":{},"modules/MenubarModule.html":{},"modules/MoonModule.html":{},"modules/ScatterModule.html":{},"modules/SettingsModule.html":{},"modules/SimpleDataButtonModule.html":{},"modules/SimpleGraphButtonModule.html":{},"modules/ToolsNavbarModule.html":{},"modules/VenusModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/about/about.component.ts\n\n\n\n    \n        Description\n    \n    \n        The About page component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n\n\n            \n                styleUrls\n                ./about.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component} from '@angular/core';\n\n/**\n * The About page component\n */\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent {\n\n}\n\n    \n\n    \n        about works!\n\n    \n\n    \n                \n                    ./about.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'about works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        App Component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(appearanceService: AppearanceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appearanceService\n                                                  \n                                                        \n                                                                        AppearanceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'skynet-plotting-neo'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n            \n                \n                    Default title of the site\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {AppearanceService} from \"./shared/settings/appearance/service/appearance.service\";\n\n/**\n * App Component\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  /**\n   * Default title of the site\n   */\n  title = 'skynet-plotting-neo';\n\n  constructor(private appearanceService: AppearanceService) {\n    this.appearanceService.intialize();\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppearanceComponent\n\nAppearanceComponent\n\nAppModule -->\n\nAppearanceComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nHonorCodePopupModule\n\nHonorCodePopupModule\n\nAppModule -->\n\nHonorCodePopupModule->AppModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nAppModule -->\n\nSettingsModule->AppModule\n\n\n\n\n\nToolsNavbarModule\n\nToolsNavbarModule\n\nAppModule -->\n\nToolsNavbarModule->AppModule\n\n\n\n\n\nAppearanceService\n\nAppearanceService\n\nAppModule -->\n\nAppearanceService->AppModule\n\n\n\n\n\nAppearanceStorageService\n\nAppearanceStorageService\n\nAppModule -->\n\nAppearanceStorageService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            AppearanceComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            PageNotFoundComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AppearanceService\n                        \n                        \n                            AppearanceStorageService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            HonorCodePopupModule\n                        \n                        \n                            SettingsModule\n                        \n                        \n                            ToolsNavbarModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {ToolsNavbarModule} from './shared/tools-navbar/tools-navbar.component';\nimport {registerAllModules} from 'handsontable/registry';\nimport {HomeComponent} from \"./shared/home/home.component\";\nimport {AboutComponent} from \"./shared/about/about.component\";\nimport {PageNotFoundComponent} from \"./shared/page-not-found/page-not-found.component\";\nimport {HonorCodePopupModule} from \"./tools/shared/honor-code-popup/honor-code-popup.module\";\nimport {SettingsModule} from './shared/settings/settings.component';\nimport {AppearanceComponent} from './shared/settings/appearance/appearance.component';\nimport {MatLegacyInputModule as MatInputModule} from \"@angular/material/legacy-input\";\nimport {MatLegacySelectModule as MatSelectModule} from \"@angular/material/legacy-select\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {AppearanceStorageService} from \"./shared/settings/appearance/service/appearance-storage.service\";\nimport {MatLegacyButtonModule as MatButtonModule} from \"@angular/material/legacy-button\";\nimport {AppearanceService} from \"./shared/settings/appearance/service/appearance.service\";\n\n\nregisterAllModules();\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ToolsNavbarModule,\n    HonorCodePopupModule,\n    SettingsModule,\n    MatInputModule,\n    MatSelectModule,\n    ReactiveFormsModule,\n    MatButtonModule\n  ],\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    AboutComponent,\n    PageNotFoundComponent,\n    AppearanceComponent,\n  ],\n  providers: [AppearanceStorageService, AppearanceService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {CurveComponent} from \"./tools/curve/curve.component\";\nimport {HomeComponent} from \"./shared/home/home.component\";\nimport {AboutComponent} from \"./shared/about/about.component\";\nimport {PageNotFoundComponent} from \"./shared/page-not-found/page-not-found.component\";\nimport {SettingsComponent} from \"./shared/settings/settings.component\";\nimport {AppearanceComponent} from \"./shared/settings/appearance/appearance.component\";\nimport {MoonComponent} from \"./tools/moon/moon/moon.component\";\nimport {VenusComponent} from \"./tools/venus/venus/venus.component\";\nimport {ScatterComponent} from \"./tools/scatter/scatter/scatter.component\";\nimport {DualComponent} from \"./tools/dual/dual/dual.component\";\n\n/**\n * Routes for the site\n */\nconst TOOLS_ROUTES: Routes = [\n  {path: \"home\", component: HomeComponent, data: {title: \"getToolSiteName($localize`:home:Home`)\"}},\n  {path: \"about\", component: AboutComponent, data: {title: \"getToolSiteName($localize`:about:About`)\"}},\n  {path: \"curve\", component: CurveComponent, data: {title: \"getToolSiteName($localize`:curve:Curve`)\"}},\n  {path: \"moon\", component: MoonComponent, data: {title: \"getToolSiteName($localize`:moon:Moon`)\"}},\n  {path: \"venus\", component: VenusComponent, data: {title: \"getToolSiteName($localize`:venus:Venus`)\"}},\n  {path: \"scatter\", component: ScatterComponent, data: {title: \"getToolSiteName($localize`:scatter:Scatter`)\"}},\n  {path: \"dual\", component: DualComponent, data: {title: \"getToolSiteName($localize`:dual:Dual`)\"}},\n  {\n    path: \"settings\", component: SettingsComponent, data: {title: \"getToolSiteName($localize`:settings:Settings`)\"},\n    children: [\n      {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'appearance'\n      },\n      {\n        path: 'appearance',\n        component: AppearanceComponent,\n        data: {title: 'Appearance Settings'},\n      },]\n  },\n  {path: '', redirectTo: '/home', pathMatch: 'full'},\n  {path: '**', component: PageNotFoundComponent, data: {title: $localize`:page-not-found:Page Not Found`}}\n]\n\n/**\n * Generate name of the site based on the graphing tool in use.\n * @param tool the graphing tool in use\n * @returns\n */\nfunction getToolSiteName(tool: string): string {\n  return $localize`:site-name:Skynet Plotting Neo` + tool;\n}\n\n@NgModule({\n  imports: [RouterModule.forRoot(TOOLS_ROUTES)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppearanceComponent.html":{"url":"components/AppearanceComponent.html","title":"component - AppearanceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppearanceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/settings/appearance/appearance.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-appearance\n            \n\n\n\n            \n                styleUrls\n                ./appearance.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./appearance.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                ColorThemesList\n                            \n                            \n                                    Protected\n                                    Readonly\n                                FontList\n                            \n                            \n                                    Protected\n                                    Readonly\n                                FontSizesList\n                            \n                            \n                                    Protected\n                                    Readonly\n                                FontStylesList\n                            \n                            \n                                    Protected\n                                formGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getFormGroup\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                resetDefault\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(appearanceService: AppearanceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/settings/appearance/appearance.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appearanceService\n                                                  \n                                                        \n                                                                        AppearanceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getFormGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormGroup(colorTheme: string, fontFamily: string, fontStyle: string, fontSize: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/appearance.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    colorTheme\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fontFamily\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fontStyle\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fontSize\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/appearance.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        resetDefault\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetDefault()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/appearance.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        ColorThemesList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MyColorTheme[]\n\n                    \n                \n                \n                    \n                        Default value : ColorThemeSettings.getThemeLists()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/appearance.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        FontList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MyFontFamily[]\n\n                    \n                \n                \n                    \n                        Default value : ColorThemeSettings.getFontFamilyLists()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/appearance.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        FontSizesList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MyFontSize[]\n\n                    \n                \n                \n                    \n                        Default value : ColorThemeSettings.getFontSizeLists()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/appearance.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        FontStylesList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MyFontStyle[]\n\n                    \n                \n                \n                    \n                        Default value : ColorThemeSettings.getFontStyleLists()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/appearance.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/appearance.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {\n  ColorThemeSettings,\n  DefaultAppearanceSettings,\n  MyColorTheme,\n  MyFontFamily,\n  MyFontSize,\n  MyFontStyle\n} from \"./service/appearance.utils\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {AppearanceService} from \"./service/appearance.service\";\n\n@Component({\n  selector: 'app-appearance',\n  templateUrl: './appearance.component.html',\n  styleUrls: ['./appearance.component.scss']\n})\nexport class AppearanceComponent implements OnInit {\n\n  protected readonly ColorThemesList: MyColorTheme[] = ColorThemeSettings.getThemeLists();\n  protected readonly FontStylesList: MyFontStyle[] = ColorThemeSettings.getFontStyleLists();\n  protected readonly FontSizesList: MyFontSize[] = ColorThemeSettings.getFontSizeLists();\n  protected readonly FontList: MyFontFamily[] = ColorThemeSettings.getFontFamilyLists();\n\n  protected formGroup!: FormGroup;\n\n  constructor(private appearanceService: AppearanceService) {\n    this.getFormGroup(appearanceService.getColorTheme(),\n      appearanceService.getFontFamily(),\n      appearanceService.getFontStyle(),\n      appearanceService.getFontSize());\n  }\n\n  ngOnInit(): void {\n  }\n\n  protected resetDefault(): void {\n    this.appearanceService.setColorTheme(DefaultAppearanceSettings.theme);\n    this.appearanceService.setFontStyle(DefaultAppearanceSettings.fontStyle);\n    this.appearanceService.setFontSize(DefaultAppearanceSettings.fontSize);\n    this.getFormGroup(DefaultAppearanceSettings.theme,\n      DefaultAppearanceSettings.fontFamily,\n      DefaultAppearanceSettings.fontStyle,\n      DefaultAppearanceSettings.fontSize);\n  }\n\n  private getFormGroup(colorTheme: string,\n                       fontFamily: string,\n                       fontStyle: string,\n                       fontSize: string): void {\n    this.formGroup = new FormGroup({\n      colorTheme: new FormControl(colorTheme, [Validators.required]),\n      fontFamily: new FormControl(fontFamily, [Validators.required]),\n      fontStyle: new FormControl(fontStyle, [Validators.required],\n      ),\n      fontSize: new FormControl(fontSize, [Validators.required])\n    });\n    this.formGroup.get(\"colorTheme\")?.valueChanges.subscribe(value => {\n      this.appearanceService.setColorTheme(value);\n    });\n    this.formGroup.get(\"fontFamily\")?.valueChanges.subscribe(value => {\n      this.appearanceService.setFontFamily(value);\n    });\n    this.formGroup.get(\"fontStyle\")?.valueChanges.subscribe(value => {\n      this.appearanceService.setFontStyle(value);\n    });\n    this.formGroup.get(\"fontSize\")?.valueChanges.subscribe(value => {\n      this.appearanceService.setFontSize(value);\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Color Theme\n        \n          {{color.displayName}}\n        \n      \n    \n    \n      \n        Font Family\n        \n          {{family.displayName}}\n        \n      \n    \n    \n      \n        Font Style\n        \n          {{style.displayName}}\n        \n      \n    \n    \n      \n        Font Size\n        \n          {{size.displayName}}\n        \n      \n    \n    \n      Reset Default\n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./appearance.component.scss\n                \n                \n.setting-container {\n  padding: 20px;\n}\n\nmat-form-field {\n  width: 250px;\n}\n\nbutton {\n  width: 250px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Color Theme                  {{color.displayName}}                                    Font Family                  {{family.displayName}}                                    Font Style                  {{style.displayName}}                                    Font Size                  {{size.displayName}}                            Reset Default            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppearanceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppearanceService.html":{"url":"injectables/AppearanceService.html","title":"injectable - AppearanceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppearanceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/settings/appearance/service/appearance.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                renderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getChartBackgroundColor\n                            \n                            \n                                    Private\n                                getChartColorMode\n                            \n                            \n                                    Public\n                                getChartFontColor\n                            \n                            \n                                    Public\n                                getColorTheme\n                            \n                            \n                                    Public\n                                getFontFamily\n                            \n                            \n                                    Private\n                                getFontFamilyClassname\n                            \n                            \n                                    Public\n                                getFontSize\n                            \n                            \n                                    Private\n                                getFontSizeClassname\n                            \n                            \n                                    Public\n                                getFontStyle\n                            \n                            \n                                    Private\n                                getFontStyleClassname\n                            \n                            \n                                    Public\n                                intialize\n                            \n                            \n                                    Public\n                                setColorTheme\n                            \n                            \n                                    Public\n                                setFontFamily\n                            \n                            \n                                    Public\n                                setFontSize\n                            \n                            \n                                    Public\n                                setFontStyle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: AppearanceStorageService, rendererFactory: RendererFactory2)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/settings/appearance/service/appearance.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        AppearanceStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rendererFactory\n                                                  \n                                                        \n                                                                    RendererFactory2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getChartBackgroundColor\n                        \n                    \n                \n            \n            \n                \n                    \n                    getChartBackgroundColor()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getChartColorMode\n                        \n                    \n                \n            \n            \n                \n                    \n                    getChartColorMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ChartColorMode\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getChartFontColor\n                        \n                    \n                \n            \n            \n                \n                    \n                    getChartFontColor()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getColorTheme\n                        \n                    \n                \n            \n            \n                \n                    \n                    getColorTheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ColorThemes\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getFontFamily\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFontFamily()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FontFamily\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getFontFamilyClassname\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFontFamilyClassname(font: FontFamily)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    font\n                                    \n                                                FontFamily\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getFontSize\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFontSize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FontSizes\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getFontSizeClassname\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFontSizeClassname(fontSize: FontSizes)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fontSize\n                                    \n                                                FontSizes\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getFontStyle\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFontStyle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FontStyles\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getFontStyleClassname\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFontStyleClassname(fontStyle: FontStyles)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fontStyle\n                                    \n                                                FontStyles\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        intialize\n                        \n                    \n                \n            \n            \n                \n                    \n                    intialize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setColorTheme\n                        \n                    \n                \n            \n            \n                \n                    \n                    setColorTheme(colorTheme: ColorThemes)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    colorTheme\n                                    \n                                                ColorThemes\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setFontFamily\n                        \n                    \n                \n            \n            \n                \n                    \n                    setFontFamily(fontFamily: FontFamily)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fontFamily\n                                    \n                                                FontFamily\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setFontSize\n                        \n                    \n                \n            \n            \n                \n                    \n                    setFontSize(fontSize: FontSizes)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fontSize\n                                    \n                                                FontSizes\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setFontStyle\n                        \n                    \n                \n            \n            \n                \n                    \n                    setFontStyle(fontStyle: FontStyles)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fontStyle\n                                    \n                                                FontStyles\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        renderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Renderer2\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable, Renderer2, RendererFactory2} from '@angular/core';\nimport {\n  ChartColor,\n  ChartColorMode,\n  ColorThemes,\n  DefaultAppearanceSettings,\n  FontFamily,\n  FontSizes,\n  FontStyles\n} from \"./appearance.utils\";\nimport {AppearanceStorageService} from \"./appearance-storage.service\";\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AppearanceService {\n  private renderer: Renderer2;\n\n  constructor(private storageService: AppearanceStorageService, private rendererFactory: RendererFactory2) {\n    this.renderer = rendererFactory.createRenderer(document.body, null);\n  }\n\n  public intialize(): void {\n    this.setColorTheme(this.getColorTheme());\n    this.setFontFamily(this.getFontFamily());\n    this.setFontSize(this.getFontSize());\n    this.setFontStyle(this.getFontStyle());\n  }\n\n\n  public setFontSize(fontSize: FontSizes): void {\n    this.renderer.removeClass(document.body, this.getFontSizeClassname(this.getFontSize()));\n    this.renderer.addClass(document.body, this.getFontSizeClassname(fontSize));\n    this.storageService.setFontSize(fontSize);\n  }\n\n  public getFontSize(): FontSizes {\n    return this.storageService.getFontSize();\n  }\n\n  public setColorTheme(colorTheme: ColorThemes): void {\n    this.renderer.removeClass(document.body, this.getColorTheme());\n    this.renderer.addClass(document.body, colorTheme);\n    this.storageService.setColorTheme(colorTheme);\n  }\n\n  public getColorTheme(): ColorThemes {\n    return this.storageService.getColorTheme();\n  }\n\n  public setFontStyle(fontStyle: FontStyles): void {\n    this.renderer.removeClass(document.body, this.getFontStyleClassname(this.getFontStyle()));\n    this.renderer.addClass(document.body, this.getFontStyleClassname(fontStyle));\n    this.storageService.setFontStyle(fontStyle);\n  }\n\n  public getFontStyle(): FontStyles {\n    return this.storageService.getFontStyle();\n  }\n\n  public setFontFamily(fontFamily: FontFamily): void {\n    this.renderer.removeClass(document.body, this.getFontFamilyClassname(this.getFontFamily()));\n    this.renderer.addClass(document.body, this.getFontFamilyClassname(fontFamily));\n    this.storageService.setFont(fontFamily);\n  }\n\n  public getFontFamily(): FontFamily {\n    return this.storageService.getFont();\n  }\n\n  public getChartFontColor(): string {\n    return ChartColor.getFontColor(this.getChartColorMode());\n  }\n\n  public getChartBackgroundColor(): string {\n    return ChartColor.getBackgroundColor(this.getChartColorMode());\n  }\n\n  private getFontSizeClassname(fontSize: FontSizes): string {\n    return 'fontSize-' + fontSize;\n  }\n\n  private getFontStyleClassname(fontStyle: FontStyles): string {\n    return 'fontStyle-' + fontStyle;\n  }\n\n  private getFontFamilyClassname(font: FontFamily): string {\n    return 'fontFamily-' + font;\n  }\n\n  private getChartColorMode(): ChartColorMode {\n    if (this.getColorTheme() === ColorThemes.LIGHT)\n      return ChartColorMode.LIGHT;\n    else if (this.getColorTheme() === ColorThemes.DARK)\n      return ChartColorMode.DARK;\n    else\n      return DefaultAppearanceSettings.chartColorMode;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppearanceStorageService.html":{"url":"injectables/AppearanceStorageService.html","title":"injectable - AppearanceStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppearanceStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/settings/appearance/service/appearance-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chartColorMode\n                            \n                            \n                                    Private\n                                    Readonly\n                                chartColorModeKey\n                            \n                            \n                                    Private\n                                colorTheme\n                            \n                            \n                                    Private\n                                    Readonly\n                                colorThemeKey\n                            \n                            \n                                    Private\n                                font\n                            \n                            \n                                    Private\n                                    Readonly\n                                fontKey\n                            \n                            \n                                    Private\n                                fontSize\n                            \n                            \n                                    Private\n                                    Readonly\n                                fontSizeKey\n                            \n                            \n                                    Private\n                                fontStyle\n                            \n                            \n                                    Private\n                                    Readonly\n                                fontStyleKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getColorTheme\n                            \n                            \n                                    Public\n                                getFont\n                            \n                            \n                                    Public\n                                getFontSize\n                            \n                            \n                                    Public\n                                getFontStyle\n                            \n                            \n                                    Public\n                                setColorTheme\n                            \n                            \n                                    Public\n                                setFont\n                            \n                            \n                                    Public\n                                setFontSize\n                            \n                            \n                                    Public\n                                setFontStyle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:24\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getColorTheme\n                        \n                    \n                \n            \n            \n                \n                    \n                    getColorTheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ColorThemes\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getFont\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFont()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FontFamily\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getFontSize\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFontSize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FontSizes\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getFontStyle\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFontStyle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FontStyles\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setColorTheme\n                        \n                    \n                \n            \n            \n                \n                    \n                    setColorTheme(colorTheme: ColorThemes)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    colorTheme\n                                    \n                                                ColorThemes\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setFont\n                        \n                    \n                \n            \n            \n                \n                    \n                    setFont(font: FontFamily)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    font\n                                    \n                                                FontFamily\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setFontSize\n                        \n                    \n                \n            \n            \n                \n                    \n                    setFontSize(fontSize: FontSizes)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fontSize\n                                    \n                                                FontSizes\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setFontStyle\n                        \n                    \n                \n            \n            \n                \n                    \n                    setFontStyle(fontStyle: FontStyles)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fontStyle\n                                    \n                                                FontStyles\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartColorMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChartColorMode\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        chartColorModeKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"chartColorMode\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        colorTheme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ColorThemes\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        colorThemeKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"colorTheme\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        font\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FontFamily\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        fontKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"font\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fontSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FontSizes\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        fontSizeKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"fontSize\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fontStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FontStyles\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        fontStyleKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"fontStyle\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance-storage.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {\n  ChartColorMode,\n  ColorThemes,\n  DefaultAppearanceSettings,\n  FontFamily,\n  FontSizes,\n  FontStyles\n} from \"./appearance.utils\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppearanceStorageService {\n  private colorTheme!: ColorThemes;\n  private fontStyle!: FontStyles;\n  private fontSize!: FontSizes;\n  private font!: FontFamily;\n  private chartColorMode!: ChartColorMode;\n  private readonly colorThemeKey = \"colorTheme\";\n  private readonly fontStyleKey = \"fontStyle\";\n  private readonly fontSizeKey = \"fontSize\";\n  private readonly fontKey = \"font\";\n  private readonly chartColorModeKey = \"chartColorMode\";\n\n  constructor() {\n  }\n\n  public setColorTheme(colorTheme: ColorThemes): void {\n    localStorage.setItem(this.colorThemeKey, JSON.stringify(colorTheme));\n  }\n\n  public getColorTheme(): ColorThemes {\n    if (localStorage.getItem(this.colorThemeKey) !== null) {\n      this.colorTheme = JSON.parse(localStorage.getItem(this.colorThemeKey) as string);\n    } else {\n      this.colorTheme = DefaultAppearanceSettings.theme;\n    }\n    return this.colorTheme;\n  }\n\n  public setFontStyle(fontStyle: FontStyles): void {\n    localStorage.setItem(this.fontStyleKey, JSON.stringify(fontStyle));\n  }\n\n  public getFontStyle(): FontStyles {\n    if (localStorage.getItem(this.fontStyleKey) !== null) {\n      this.fontStyle = JSON.parse(localStorage.getItem(this.fontStyleKey) as string);\n    } else {\n      this.fontStyle = DefaultAppearanceSettings.fontStyle;\n    }\n    return this.fontStyle;\n  }\n\n  public setFontSize(fontSize: FontSizes): void {\n    localStorage.setItem(this.fontSizeKey, JSON.stringify(fontSize));\n  }\n\n  public getFontSize(): FontSizes {\n    if (localStorage.getItem(this.fontSizeKey) !== null) {\n      this.fontSize = JSON.parse(localStorage.getItem(this.fontSizeKey) as string);\n    } else {\n      this.fontSize = DefaultAppearanceSettings.fontSize;\n    }\n    return this.fontSize;\n  }\n\n  public setFont(font: FontFamily): void {\n    localStorage.setItem(this.fontKey, JSON.stringify(font));\n  }\n\n  public getFont(): FontFamily {\n    if (localStorage.getItem(this.fontKey) !== null) {\n      this.font = JSON.parse(localStorage.getItem(this.fontKey) as string);\n    } else {\n      this.font = DefaultAppearanceSettings.fontFamily;\n    }\n    return this.font;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChartColor.html":{"url":"classes/ChartColor.html","title":"class - ChartColor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChartColor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/settings/appearance/service/appearance.utils.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                lineColorDarkArray\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                lineColorLightArray\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getBackgroundColor\n                            \n                            \n                                    Static\n                                getFontColor\n                            \n                            \n                                    Static\n                                getLineColor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        lineColorDarkArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\"red\", \"orange\", \"green\", \"blue\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        lineColorLightArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\"red\", \"orange\", \"green\", \"blue\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:97\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getBackgroundColor\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBackgroundColor(mode: ChartColorMode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mode\n                                    \n                                                ChartColorMode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getFontColor\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFontColor(mode: ChartColorMode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mode\n                                    \n                                                ChartColorMode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getLineColor\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLineColor(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface MyColorTheme {\n  key: string;\n  displayName: string;\n}\n\nexport enum ColorThemes {\n  LIGHT = 'LIGHT_THEME',\n  DARK = 'DARK_THEME',\n  // HIGH_CONTRAST = 'HC_THEME',\n  HIGH_CONTRAST_DARK = 'HC_DARK_THEME'\n}\n\nexport interface MyFontStyle {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontStyles {\n  DEFAULT = 'normal',\n  BOLD = 'bold',\n  EXTRA_BOLD = 'bolder',\n}\n\nexport interface MyFontSize {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontSizes {\n  SMALL = \"small\",\n  DEFAULT = \"default\",\n  LARGE = \"large\",\n  LARGER = \"larger\",\n}\n\nexport enum FontFamily {\n  ROBOTO = 'Roboto',\n  COMIC_NEUE = 'Comic-Neue',\n}\n\nexport interface MyFontFamily {\n  key: string;\n  displayName: string;\n}\n\nexport class ColorThemeSettings {\n  public static getThemeLists(): MyColorTheme[] {\n    return [\n      {key: ColorThemes.LIGHT, displayName: 'Light'},\n      {key: ColorThemes.DARK, displayName: 'Dark'},\n      // {key: ColorThemes.HIGH_CONTRAST, displayName: 'High Contrast'},\n      {key: ColorThemes.HIGH_CONTRAST_DARK, displayName: 'High Contrast Dark'}\n    ];\n  }\n\n  public static getFontStyleLists(): MyFontStyle[] {\n    return [\n      {key: FontStyles.DEFAULT, displayName: 'Default'},\n      {key: FontStyles.BOLD, displayName: 'Bold'},\n      {key: FontStyles.EXTRA_BOLD, displayName: 'Extra Bold'}\n    ]\n  }\n\n  public static getFontSizeLists(): MyFontSize[] {\n    return [\n      {key: FontSizes.SMALL, displayName: 'Small'},\n      {key: FontSizes.DEFAULT, displayName: 'Default'},\n      {key: FontSizes.LARGE, displayName: 'Large'},\n      {key: FontSizes.LARGER, displayName: 'Larger'}\n    ]\n  }\n\n  public static getFontFamilyLists(): MyFontFamily[] {\n    return [\n      {key: FontFamily.ROBOTO, displayName: 'Roboto'},\n      {key: FontFamily.COMIC_NEUE, displayName: 'Comic Neue'}\n    ]\n  }\n}\n\nexport enum ChartColorMode {\n  LIGHT = 'LIGHT',\n  DARK = 'DARK'\n}\n\n\nexport class DefaultAppearanceSettings {\n  public static theme: ColorThemes = ColorThemes.LIGHT;\n  public static fontStyle: FontStyles = FontStyles.DEFAULT;\n  public static fontSize: FontSizes = FontSizes.DEFAULT;\n  public static fontFamily: FontFamily = FontFamily.ROBOTO;\n  public static chartColorMode: ChartColorMode = ChartColorMode.LIGHT;\n}\n\n\nexport class ChartColor {\n  private static readonly lineColorLightArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n  private static readonly lineColorDarkArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n\n  public static getFontColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#2b4162' : '#f5f0f6';\n  }\n\n  public static getBackgroundColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#C3CFD4' : '#325769';\n  }\n\n  public static getLineColor(index: number): string {\n    if (index = this.lineColorLightArray.length)\n      return 'black';\n    else\n      // return mode === ChartColorMode.LIGHT ? this.lineColorLightArray[index] : this.lineColorDarkArray[index];\n      return this.lineColorLightArray[index];\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChartInfo.html":{"url":"interfaces/ChartInfo.html","title":"interface - ChartInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChartInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/shared/charts/chart.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getChartTitle\n                                    \n                                \n                                \n                                    \n                                        getDataLabel\n                                    \n                                \n                                \n                                    \n                                        getStorageObject\n                                    \n                                \n                                \n                                    \n                                        getXAxisLabel\n                                    \n                                \n                                \n                                    \n                                        getYAxisLabel\n                                    \n                                \n                                \n                                    \n                                        setChartTitle\n                                    \n                                \n                                \n                                    \n                                        setDataLabel\n                                    \n                                \n                                \n                                    \n                                        setStorageObject\n                                    \n                                \n                                \n                                    \n                                        setXAxisLabel\n                                    \n                                \n                                \n                                    \n                                        setYAxisLabel\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getChartTitle\n                        \n                    \n                \n            \n            \n                \ngetChartTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/charts/chart.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataLabel\n                        \n                    \n                \n            \n            \n                \ngetDataLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/charts/chart.interface.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStorageObject\n                        \n                    \n                \n            \n            \n                \ngetStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/charts/chart.interface.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getXAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetXAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/charts/chart.interface.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getYAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetYAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/charts/chart.interface.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setChartTitle\n                        \n                    \n                \n            \n            \n                \nsetChartTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/charts/chart.interface.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDataLabel\n                        \n                    \n                \n            \n            \n                \nsetDataLabel(data: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/charts/chart.interface.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStorageObject\n                        \n                    \n                \n            \n            \n                \nsetStorageObject(storageObject: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/charts/chart.interface.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storageObject\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setXAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetXAxisLabel(xAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/charts/chart.interface.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    xAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setYAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetYAxisLabel(yAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/charts/chart.interface.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    yAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {ChartConfiguration, ChartOptions} from \"chart.js\";\nimport {MyData} from \"../data/data.interface\";\n\nexport interface ChartInfo {\n  getChartTitle(): string;\n\n  getXAxisLabel(): string;\n\n  getYAxisLabel(): string;\n\n  getDataLabel(): string;\n\n  getStorageObject(): any;\n\n  setChartTitle(title: string): void;\n\n  setXAxisLabel(xAxis: string): void;\n\n  setYAxisLabel(yAxis: string): void;\n\n  setDataLabel(data: string): void;\n\n  setStorageObject(storageObject: any): void;\n\n}\n\nexport interface MyChart {\n  generateChartConfig(data: MyData, chartInfo: ChartInfo, toolInterface: any): ChartConfiguration['data'];\n\n  generateChartOptions(chartInfo: ChartInfo, toolInterface: any): ChartOptions;\n\n  renderChart(): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ColorThemeSettings.html":{"url":"classes/ColorThemeSettings.html","title":"class - ColorThemeSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ColorThemeSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/settings/appearance/service/appearance.utils.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getFontFamilyLists\n                            \n                            \n                                    Static\n                                getFontSizeLists\n                            \n                            \n                                    Static\n                                getFontStyleLists\n                            \n                            \n                                    Static\n                                getThemeLists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getFontFamilyLists\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFontFamilyLists()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MyFontFamily[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getFontSizeLists\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFontSizeLists()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MyFontSize[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getFontStyleLists\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFontStyleLists()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MyFontStyle[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getThemeLists\n                        \n                    \n                \n            \n            \n                \n                    \n                    getThemeLists()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MyColorTheme[]\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface MyColorTheme {\n  key: string;\n  displayName: string;\n}\n\nexport enum ColorThemes {\n  LIGHT = 'LIGHT_THEME',\n  DARK = 'DARK_THEME',\n  // HIGH_CONTRAST = 'HC_THEME',\n  HIGH_CONTRAST_DARK = 'HC_DARK_THEME'\n}\n\nexport interface MyFontStyle {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontStyles {\n  DEFAULT = 'normal',\n  BOLD = 'bold',\n  EXTRA_BOLD = 'bolder',\n}\n\nexport interface MyFontSize {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontSizes {\n  SMALL = \"small\",\n  DEFAULT = \"default\",\n  LARGE = \"large\",\n  LARGER = \"larger\",\n}\n\nexport enum FontFamily {\n  ROBOTO = 'Roboto',\n  COMIC_NEUE = 'Comic-Neue',\n}\n\nexport interface MyFontFamily {\n  key: string;\n  displayName: string;\n}\n\nexport class ColorThemeSettings {\n  public static getThemeLists(): MyColorTheme[] {\n    return [\n      {key: ColorThemes.LIGHT, displayName: 'Light'},\n      {key: ColorThemes.DARK, displayName: 'Dark'},\n      // {key: ColorThemes.HIGH_CONTRAST, displayName: 'High Contrast'},\n      {key: ColorThemes.HIGH_CONTRAST_DARK, displayName: 'High Contrast Dark'}\n    ];\n  }\n\n  public static getFontStyleLists(): MyFontStyle[] {\n    return [\n      {key: FontStyles.DEFAULT, displayName: 'Default'},\n      {key: FontStyles.BOLD, displayName: 'Bold'},\n      {key: FontStyles.EXTRA_BOLD, displayName: 'Extra Bold'}\n    ]\n  }\n\n  public static getFontSizeLists(): MyFontSize[] {\n    return [\n      {key: FontSizes.SMALL, displayName: 'Small'},\n      {key: FontSizes.DEFAULT, displayName: 'Default'},\n      {key: FontSizes.LARGE, displayName: 'Large'},\n      {key: FontSizes.LARGER, displayName: 'Larger'}\n    ]\n  }\n\n  public static getFontFamilyLists(): MyFontFamily[] {\n    return [\n      {key: FontFamily.ROBOTO, displayName: 'Roboto'},\n      {key: FontFamily.COMIC_NEUE, displayName: 'Comic Neue'}\n    ]\n  }\n}\n\nexport enum ChartColorMode {\n  LIGHT = 'LIGHT',\n  DARK = 'DARK'\n}\n\n\nexport class DefaultAppearanceSettings {\n  public static theme: ColorThemes = ColorThemes.LIGHT;\n  public static fontStyle: FontStyles = FontStyles.DEFAULT;\n  public static fontSize: FontSizes = FontSizes.DEFAULT;\n  public static fontFamily: FontFamily = FontFamily.ROBOTO;\n  public static chartColorMode: ChartColorMode = ChartColorMode.LIGHT;\n}\n\n\nexport class ChartColor {\n  private static readonly lineColorLightArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n  private static readonly lineColorDarkArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n\n  public static getFontColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#2b4162' : '#f5f0f6';\n  }\n\n  public static getBackgroundColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#C3CFD4' : '#325769';\n  }\n\n  public static getLineColor(index: number): string {\n    if (index = this.lineColorLightArray.length)\n      return 'black';\n    else\n      // return mode === ChartColorMode.LIGHT ? this.lineColorLightArray[index] : this.lineColorDarkArray[index];\n      return this.lineColorLightArray[index];\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CurveChart.html":{"url":"classes/CurveChart.html","title":"class - CurveChart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CurveChart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/curve/curve-chart/curve-chart.component.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyChart\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                generateChartConfig\n                            \n                            \n                                    Public\n                                generateChartOptions\n                            \n                            \n                                    Private\n                                generateCurveChartConfig\n                            \n                            \n                                    Private\n                                makeRawData\n                            \n                            \n                                    Public\n                                renderChart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:88\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:88\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        generateChartConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateChartConfig(data: MyData, chartInfo: ChartInfo, toolInterface: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                MyData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    chartInfo\n                                    \n                                                ChartInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    toolInterface\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        generateChartOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateChartOptions(chartInfo: ChartInfo, toolInterface: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartInfo\n                                    \n                                                ChartInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    toolInterface\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ChartOptions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generateCurveChartConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCurveChartConfig(chartData: CurveDataDict[], curveCount: number, labels: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartData\n                                    \n                                                CurveDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    curveCount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    labels\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        makeRawData\n                        \n                    \n                \n            \n            \n                \n                    \n                    makeRawData(dataDict: CurveDataDict[], curveCount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dataDict\n                                    \n                                                CurveDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    curveCount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [][]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        renderChart\n                        \n                    \n                \n            \n            \n                \n                    \n                    renderChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {AfterViewInit, Component, OnDestroy} from '@angular/core';\nimport {Chart} from \"chart.js\";\nimport {ChartConfiguration, ChartOptions} from \"chart.js/dist/types\";\nimport {CurveService} from \"../curve.service\";\nimport {ChartInfo, MyChart} from \"../../shared/charts/chart.interface\";\nimport {MyData} from \"../../shared/data/data.interface\";\nimport {CurveChartInfo, CurveCounts, CurveDataDict, CurveInterface} from \"../curve.service.util\";\nimport {AppearanceService} from \"../../../shared/settings/appearance/service/appearance.service\";\nimport {ChartColor} from \"../../../shared/settings/appearance/service/appearance.utils\";\nimport {Subject, takeUntil} from 'rxjs';\n\n/**\n * Chart for the curve graphing tools.\n *\n */\n@Component({\n  selector: 'app-curve-chart',\n  templateUrl: './curve-chart.component.html',\n  styleUrls: ['./curve-chart.component.scss'],\n})\nexport class CurveChartComponent implements AfterViewInit, OnDestroy {\n  /**\n   * Chart.js object id\n   */\n  id!: string;\n  /**\n   * Custom Chart object\n   */\n  chart!: CurveChart;\n  /**\n   * Chart.js object data configuration\n   */\n  lineChartData!: ChartConfiguration['data'];\n  /**\n   * Chart.js object options configuration\n   */\n  lineChartOptions!: ChartOptions;\n  private destroy$: Subject = new Subject();\n\n  constructor(private service: CurveService, private appearanceService: AppearanceService) {\n    this.id = \"curve-chart\";\n    Chart.defaults.color = this.appearanceService.getChartFontColor();\n    Chart.defaults.borderColor = this.appearanceService.getChartBackgroundColor();\n    this.chart = new CurveChart(this.id);\n    this.lineChartData = this.chart.generateChartConfig(\n      this.service.getDataObject(),\n      this.service.getChartInfoObject(),\n      this.service.getInterfaceObject());\n    this.lineChartOptions = this.chart.generateChartOptions(\n      this.service.getChartInfoObject(),\n      this.service.getInterfaceObject()\n    );\n  }\n\n\n  ngAfterViewInit(): void {\n    this.service.data$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      () => {\n        this.lineChartData = this.chart.generateChartConfig(\n          this.service.getDataObject(),\n          this.service.getChartInfoObject(),\n          this.service.getInterfaceObject());\n        this.chart.renderChart();\n      }\n    )\n    this.service.chartInfo$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      () => {\n        this.lineChartOptions = this.chart.generateChartOptions(\n          this.service.getChartInfoObject(),\n          this.service.getInterfaceObject()\n        );\n        this.chart.renderChart();\n      }\n    )\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n  }\n}\n\nclass CurveChart implements MyChart {\n  private readonly id: string;\n\n  constructor(id: string) {\n    this.id = id;\n  }\n\n  public generateChartConfig(data: MyData, chartInfo: ChartInfo, toolInterface: any): ChartConfiguration['data'] {\n    return this.generateCurveChartConfig(\n      data.getData(),\n      (toolInterface as CurveInterface).getCurveCount(),\n      (chartInfo as CurveChartInfo).getTableLabels());\n  }\n\n  public generateChartOptions(chartInfo: ChartInfo, toolInterface: any): ChartOptions {\n    return {\n      responsive: true,\n      maintainAspectRatio: false,\n      hover: {mode: 'nearest'},\n      scales: {\n        x: {\n          title: {text: (chartInfo as CurveChartInfo).getXAxisLabel(), display: true},\n          type: 'linear',\n          position: 'bottom',\n        },\n        y: {\n          title: {text: (chartInfo as CurveChartInfo).getYAxisLabel(), display: true},\n          reverse: (toolInterface as CurveInterface).getIsMagnitudeOn(),\n        }\n      },\n      plugins: {\n        title: {\n          text: (chartInfo as CurveChartInfo).getChartTitle(),\n          display: true,\n        },\n        colors: {\n          forceOverride: true,\n        }\n      },\n      animation: {\n        duration: 0,\n      }\n    };\n  }\n\n  public renderChart(): void {\n    Chart.getChart(this.id)?.update('none');\n  }\n\n  private generateCurveChartConfig(chartData: CurveDataDict[], curveCount: number, labels: string[]): ChartConfiguration['data'] {\n    let result: any = {datasets: []};\n    const data = this.makeRawData(chartData, curveCount);\n    for (let i = 0; i = CurveCounts.ONE && data[i].y1 != null)\n        result[0].push({x: data[i].x, y: data[i].y1});\n      if (curveCount >= CurveCounts.TWO && data[i].y2 != null)\n        result[1].push({x: data[i].x, y: data[i].y2});\n      if (curveCount >= CurveCounts.THREE && data[i].y3 != null)\n        result[2].push({x: data[i].x, y: data[i].y3});\n      if (curveCount >= CurveCounts.FOUR && data[i].y4 != null)\n        result[3].push({x: data[i].x, y: data[i].y4});\n    }\n    return result;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CurveChartComponent.html":{"url":"components/CurveChartComponent.html","title":"component - CurveChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CurveChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/curve/curve-chart/curve-chart.component.ts\n\n\n\n    \n        Description\n    \n    \n        Chart for the curve graphing tools.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-curve-chart\n            \n\n\n\n            \n                styleUrls\n                ./curve-chart.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./curve-chart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chart\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                id\n                            \n                            \n                                lineChartData\n                            \n                            \n                                lineChartOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: CurveService, appearanceService: AppearanceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        CurveService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appearanceService\n                                                  \n                                                        \n                                                                        AppearanceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CurveChart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:29\n                        \n                    \n\n            \n                \n                    Custom Chart object\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:25\n                        \n                    \n\n            \n                \n                    Chart.js object id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lineChartData\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:33\n                        \n                    \n\n            \n                \n                    Chart.js object data configuration\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lineChartOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ChartOptions\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-chart/curve-chart.component.ts:37\n                        \n                    \n\n            \n                \n                    Chart.js object options configuration\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnDestroy} from '@angular/core';\nimport {Chart} from \"chart.js\";\nimport {ChartConfiguration, ChartOptions} from \"chart.js/dist/types\";\nimport {CurveService} from \"../curve.service\";\nimport {ChartInfo, MyChart} from \"../../shared/charts/chart.interface\";\nimport {MyData} from \"../../shared/data/data.interface\";\nimport {CurveChartInfo, CurveCounts, CurveDataDict, CurveInterface} from \"../curve.service.util\";\nimport {AppearanceService} from \"../../../shared/settings/appearance/service/appearance.service\";\nimport {ChartColor} from \"../../../shared/settings/appearance/service/appearance.utils\";\nimport {Subject, takeUntil} from 'rxjs';\n\n/**\n * Chart for the curve graphing tools.\n *\n */\n@Component({\n  selector: 'app-curve-chart',\n  templateUrl: './curve-chart.component.html',\n  styleUrls: ['./curve-chart.component.scss'],\n})\nexport class CurveChartComponent implements AfterViewInit, OnDestroy {\n  /**\n   * Chart.js object id\n   */\n  id!: string;\n  /**\n   * Custom Chart object\n   */\n  chart!: CurveChart;\n  /**\n   * Chart.js object data configuration\n   */\n  lineChartData!: ChartConfiguration['data'];\n  /**\n   * Chart.js object options configuration\n   */\n  lineChartOptions!: ChartOptions;\n  private destroy$: Subject = new Subject();\n\n  constructor(private service: CurveService, private appearanceService: AppearanceService) {\n    this.id = \"curve-chart\";\n    Chart.defaults.color = this.appearanceService.getChartFontColor();\n    Chart.defaults.borderColor = this.appearanceService.getChartBackgroundColor();\n    this.chart = new CurveChart(this.id);\n    this.lineChartData = this.chart.generateChartConfig(\n      this.service.getDataObject(),\n      this.service.getChartInfoObject(),\n      this.service.getInterfaceObject());\n    this.lineChartOptions = this.chart.generateChartOptions(\n      this.service.getChartInfoObject(),\n      this.service.getInterfaceObject()\n    );\n  }\n\n\n  ngAfterViewInit(): void {\n    this.service.data$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      () => {\n        this.lineChartData = this.chart.generateChartConfig(\n          this.service.getDataObject(),\n          this.service.getChartInfoObject(),\n          this.service.getInterfaceObject());\n        this.chart.renderChart();\n      }\n    )\n    this.service.chartInfo$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      () => {\n        this.lineChartOptions = this.chart.generateChartOptions(\n          this.service.getChartInfoObject(),\n          this.service.getInterfaceObject()\n        );\n        this.chart.renderChart();\n      }\n    )\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n  }\n}\n\nclass CurveChart implements MyChart {\n  private readonly id: string;\n\n  constructor(id: string) {\n    this.id = id;\n  }\n\n  public generateChartConfig(data: MyData, chartInfo: ChartInfo, toolInterface: any): ChartConfiguration['data'] {\n    return this.generateCurveChartConfig(\n      data.getData(),\n      (toolInterface as CurveInterface).getCurveCount(),\n      (chartInfo as CurveChartInfo).getTableLabels());\n  }\n\n  public generateChartOptions(chartInfo: ChartInfo, toolInterface: any): ChartOptions {\n    return {\n      responsive: true,\n      maintainAspectRatio: false,\n      hover: {mode: 'nearest'},\n      scales: {\n        x: {\n          title: {text: (chartInfo as CurveChartInfo).getXAxisLabel(), display: true},\n          type: 'linear',\n          position: 'bottom',\n        },\n        y: {\n          title: {text: (chartInfo as CurveChartInfo).getYAxisLabel(), display: true},\n          reverse: (toolInterface as CurveInterface).getIsMagnitudeOn(),\n        }\n      },\n      plugins: {\n        title: {\n          text: (chartInfo as CurveChartInfo).getChartTitle(),\n          display: true,\n        },\n        colors: {\n          forceOverride: true,\n        }\n      },\n      animation: {\n        duration: 0,\n      }\n    };\n  }\n\n  public renderChart(): void {\n    Chart.getChart(this.id)?.update('none');\n  }\n\n  private generateCurveChartConfig(chartData: CurveDataDict[], curveCount: number, labels: string[]): ChartConfiguration['data'] {\n    let result: any = {datasets: []};\n    const data = this.makeRawData(chartData, curveCount);\n    for (let i = 0; i = CurveCounts.ONE && data[i].y1 != null)\n        result[0].push({x: data[i].x, y: data[i].y1});\n      if (curveCount >= CurveCounts.TWO && data[i].y2 != null)\n        result[1].push({x: data[i].x, y: data[i].y2});\n      if (curveCount >= CurveCounts.THREE && data[i].y3 != null)\n        result[2].push({x: data[i].x, y: data[i].y3});\n      if (curveCount >= CurveCounts.FOUR && data[i].y4 != null)\n        result[3].push({x: data[i].x, y: data[i].y4});\n    }\n    return result;\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./curve-chart.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CurveChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CurveChartFormComponent.html":{"url":"components/CurveChartFormComponent.html","title":"component - CurveChartFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CurveChartFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/curve/curve-chart-form/curve-chart-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-curve-chart-form\n            \n\n\n\n            \n                styleUrls\n                ./curve-chart-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./curve-chart-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Public\n                                formGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: CurveService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/curve/curve-chart-form/curve-chart-form.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        CurveService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-chart-form/curve-chart-form.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-chart-form/curve-chart-form.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-chart-form/curve-chart-form.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnDestroy} from '@angular/core';\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {CurveService} from \"../curve.service\";\nimport {debounceTime, Subject, takeUntil} from \"rxjs\";\n\n@Component({\n  selector: 'app-curve-chart-form',\n  templateUrl: './curve-chart-form.component.html',\n  styleUrls: ['./curve-chart-form.component.scss']\n})\nexport class CurveChartFormComponent implements OnDestroy {\n  public formGroup!: FormGroup;\n  private destroy$: Subject = new Subject();\n\n  constructor(private service: CurveService) {\n    this.service.chartInfo$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(info => {\n      this.formGroup = new FormGroup({\n        chartTitle: new FormControl(this.service.getChartTitle()),\n        dataLabel: new FormControl(this.service.getDataLabel()),\n        xAxisLabel: new FormControl(this.service.getXAxisLabel()),\n        yAxisLabel: new FormControl(this.service.getYAxisLabel()),\n      })\n      this.formGroup.controls['chartTitle'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(title => {\n        this.service.setChartTitle(title);\n      });\n      this.formGroup.controls['dataLabel'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(labels => {\n        this.service.setDataLabel(labels);\n      });\n      this.formGroup.controls['xAxisLabel'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(label => {\n        this.service.setXAxisLabel(label);\n      });\n      this.formGroup.controls['yAxisLabel'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(label => {\n        this.service.setYAxisLabel(label);\n      });\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n  }\n\n}\n\n\n    \n\n    \n        \n  \n    \n      \n        Title\n        \n      \n    \n    \n      \n        Data\n        \n      \n    \n  \n  \n    \n      \n        X Axis\n        \n      \n    \n    \n      \n        Y Axis\n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./curve-chart-form.component.scss\n                \n                mat-form-field {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Title                                    Data                                        X Axis                                    Y Axis                    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CurveChartFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CurveChartInfo.html":{"url":"classes/CurveChartInfo.html","title":"class - CurveChartInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CurveChartInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/curve/curve.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ChartInfo\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chartTitle\n                            \n                            \n                                    Private\n                                dataLabels\n                            \n                            \n                                    Private\n                                xAxisLabel\n                            \n                            \n                                    Private\n                                yAxisLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getChartTitle\n                            \n                            \n                                getDataLabel\n                            \n                            \n                                getDataLabelByCurveCount\n                            \n                            \n                                    Static\n                                getDefaultStorageObject\n                            \n                            \n                                getStorageObject\n                            \n                            \n                                getTableLabels\n                            \n                            \n                                getXAxisLabel\n                            \n                            \n                                getYAxisLabel\n                            \n                            \n                                setChartTitle\n                            \n                            \n                                setDataLabel\n                            \n                            \n                                setStorageObject\n                            \n                            \n                                setXAxisLabel\n                            \n                            \n                                setYAxisLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/curve/curve.service.util.ts:39\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.util.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataLabels\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.util.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        xAxisLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.util.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        yAxisLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.util.ts:38\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getChartTitle\n                        \n                    \n                \n            \n            \n                \ngetChartTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataLabel\n                        \n                    \n                \n            \n            \n                \ngetDataLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataLabelByCurveCount\n                        \n                    \n                \n            \n            \n                \ngetDataLabelByCurveCount(curveCount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    curveCount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getDefaultStorageObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         CurveChartInfoStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStorageObject\n                        \n                    \n                \n            \n            \n                \ngetStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         CurveChartInfoStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTableLabels\n                        \n                    \n                \n            \n            \n                \ngetTableLabels()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getXAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetXAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getYAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetYAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setChartTitle\n                        \n                    \n                \n            \n            \n                \nsetChartTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDataLabel\n                        \n                    \n                \n            \n            \n                \nsetDataLabel(dataLabel: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dataLabel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStorageObject\n                        \n                    \n                \n            \n            \n                \nsetStorageObject(storageObject: CurveChartInfoStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storageObject\n                                    \n                                                CurveChartInfoStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setXAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetXAxisLabel(xAxisLabel: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    xAxisLabel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setYAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetYAxisLabel(yAxisLabel: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    yAxisLabel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\n\nexport enum CurveParam {\n  X = 'x',\n  Y1 = 'y1',\n  Y2 = 'y2',\n  Y3 = 'y3',\n  Y4 = 'y4'\n}\n\nexport enum CurveCounts {\n  ONE = 1,\n  TWO = 2,\n  THREE = 3,\n  FOUR = 4\n}\n\nexport interface CurveDataDict {\n  x: number | null;\n  y1: number | null;\n  y2?: number | null;\n  y3?: number | null;\n  y4?: number | null;\n}\n\nexport interface CurveChartInfoStorageObject {\n  chartTitle: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n  dataLabels: string;\n}\n\nexport class CurveChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n  private dataLabels: string[];\n\n  constructor() {\n    this.chartTitle = \"Title\";\n    this.xAxisLabel = \"x\";\n    this.yAxisLabel = \"y\";\n    this.dataLabels = [\"y1\", \"y2\", \"y3\", \"y4\"];\n  }\n\n  static getDefaultStorageObject(): CurveChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n      dataLabels: \"y1, y2, y3, y4\"\n    };\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabels.join(\", \");\n  }\n\n  getTableLabels(): string[] {\n    return [\"x\"].concat(this.dataLabels);\n  }\n\n  getDataLabelByCurveCount(curveCount: number): string {\n    const result = this.dataLabels;\n    return result.slice(0, curveCount).join(\", \");\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(dataLabel: string): void {\n    const dataLabelArray = dataLabel.split(\",\").map((label) => label.trim());\n    for (let i = 0; i = CurveCounts.TWO) {\n        row.y2 = entry.y2;\n      }\n      if (curveCount >= CurveCounts.THREE) {\n        row.y3 = entry.y3;\n      }\n      if (curveCount >= CurveCounts.FOUR) {\n        row.y4 = entry.y4;\n      }\n      result.push(row);\n    }\n    return result;\n  }\n\n  public getDataArray(): any[] {\n    let result: any[] = [[], [], [], []];\n    for (const entry of this.curveDataDict) {\n      result[0].push([entry.x, entry.y1]);\n      result[1].push([entry.x, entry.y2]);\n      result[2].push([entry.x, entry.y3]);\n      result[3].push([entry.x, entry.y4]);\n    }\n    return result;\n  }\n\n  public setData(data: CurveDataDict[]): void {\n    this.curveDataDict = data;\n    // this.sortDataByX();\n  }\n\n\n  addRow(index: number, amount: number) {\n    if (index > 0) {\n      for (let i = 0; i  {\n      this.setDataByCell(newValue, row, col);\n    });\n  }\n\n  private setDataByCell(value: number | null, row: number, col: string): void {\n    switch (col) {\n      case CurveParam.X:\n        this.curveDataDict[row][CurveParam.X] = value;\n        break;\n      case CurveParam.Y1:\n        this.curveDataDict[row][CurveParam.Y1] = value;\n        break;\n      case CurveParam.Y2:\n        this.curveDataDict[row][CurveParam.Y2] = value;\n        break;\n      case CurveParam.Y3:\n        this.curveDataDict[row][CurveParam.Y3] = value;\n        break;\n      case CurveParam.Y4:\n        this.curveDataDict[row][CurveParam.Y4] = value;\n        break;\n    }\n    // this.sortDataByX();\n  }\n\n  // private sortDataByX(): void {\n  //   this.curveDataDict = this.curveDataDict.sort(\n  //     (a, b) => {\n  //       if (a['x'] === null)\n  //         return 1;\n  //       if (b['x'] === null)\n  //         return -1;\n  //       if (a['x']  b['x'])\n  //         return 1;\n  //       else\n  //         return 0;\n  //     }\n  //   );\n  // }\n}\n\n\nexport interface CurveInterface {\n  getCurveCount(): number;\n\n  setCurveCount(curveCount: number): void;\n\n  getIsMagnitudeOn(): boolean;\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void;\n}\n\n\nexport interface CurveInterfaceStorageObject {\n  curveCount: CurveCounts;\n  isMagnitudeOn: boolean;\n}\n\n\nexport class CurveImpl implements CurveInterface {\n  private curveCount: number = CurveCounts.ONE;\n  private isMagnitudeOn: boolean = false;\n\n  public static getDefaultStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: CurveCounts.ONE, isMagnitudeOn: false};\n  }\n\n  getCurveCount(): number {\n    return this.curveCount;\n  }\n\n  getIsMagnitudeOn(): boolean {\n    return this.isMagnitudeOn;\n  }\n\n  setCurveCount(curveCount: number): void {\n    if (curveCount in CurveCounts)\n      this.curveCount = curveCount;\n    else\n      throw new Error(\"Invalid curve count\");\n  }\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void {\n    this.isMagnitudeOn = isMagnitudeOn;\n  }\n\n  public getStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: this.curveCount, isMagnitudeOn: this.isMagnitudeOn};\n  }\n\n  public setStorageObject(curveInterfaceStorageObject: CurveInterfaceStorageObject): void {\n    this.curveCount = curveInterfaceStorageObject.curveCount;\n    this.isMagnitudeOn = curveInterfaceStorageObject.isMagnitudeOn;\n  }\n\n}\n\n\nexport class CurveStorage implements MyStorage {\n  private readonly dataKey: string = \"curve-data\";\n  private readonly interfaceKey: string = \"curve-interface\";\n  private readonly chartInfoKey: string = \"curve-chart-info\";\n  private readonly defaultData: CurveDataDict[]\n  private readonly defaultChartInfo!: CurveChartInfoStorageObject\n  private readonly defaultInterface!: CurveInterfaceStorageObject\n\n  constructor(defaultData: CurveDataDict[], defaultChartInfo: CurveChartInfoStorageObject, defaultInterface: CurveInterfaceStorageObject) {\n    this.defaultData = defaultData;\n    this.defaultChartInfo = defaultChartInfo;\n    this.defaultInterface = defaultInterface;\n  }\n\n  getChartInfo(): CurveChartInfoStorageObject {\n    if (localStorage.getItem(this.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(this.chartInfoKey)!);\n    } else\n      return this.defaultChartInfo;\n  }\n\n  getData(): CurveDataDict[] {\n    if (localStorage.getItem(this.dataKey)) {\n      return JSON.parse(localStorage.getItem(this.dataKey)!);\n    } else\n      return this.defaultData;\n  }\n\n  getInterface(): any {\n    if (localStorage.getItem(this.interfaceKey)) {\n      return JSON.parse(localStorage.getItem(this.interfaceKey)!);\n    } else\n      return this.defaultInterface;\n  }\n\n  saveChartInfo(chartInfoObject: CurveChartInfoStorageObject): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(chartInfoObject));\n  }\n\n  saveData(data: CurveDataDict[]): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: any): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(interfaceInfo));\n  }\n\n  resetChartInfo(): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(this.defaultChartInfo));\n  }\n\n  resetData(): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(this.defaultData));\n  }\n\n  resetInterface(): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(this.defaultInterface));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CurveChartInfoStorageObject.html":{"url":"interfaces/CurveChartInfoStorageObject.html","title":"interface - CurveChartInfoStorageObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CurveChartInfoStorageObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/curve/curve.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            chartTitle\n                                        \n                                \n                                \n                                        \n                                            dataLabels\n                                        \n                                \n                                \n                                        \n                                            xAxisLabel\n                                        \n                                \n                                \n                                        \n                                            yAxisLabel\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chartTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chartTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataLabels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dataLabels:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xAxisLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        xAxisLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yAxisLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        yAxisLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\n\nexport enum CurveParam {\n  X = 'x',\n  Y1 = 'y1',\n  Y2 = 'y2',\n  Y3 = 'y3',\n  Y4 = 'y4'\n}\n\nexport enum CurveCounts {\n  ONE = 1,\n  TWO = 2,\n  THREE = 3,\n  FOUR = 4\n}\n\nexport interface CurveDataDict {\n  x: number | null;\n  y1: number | null;\n  y2?: number | null;\n  y3?: number | null;\n  y4?: number | null;\n}\n\nexport interface CurveChartInfoStorageObject {\n  chartTitle: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n  dataLabels: string;\n}\n\nexport class CurveChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n  private dataLabels: string[];\n\n  constructor() {\n    this.chartTitle = \"Title\";\n    this.xAxisLabel = \"x\";\n    this.yAxisLabel = \"y\";\n    this.dataLabels = [\"y1\", \"y2\", \"y3\", \"y4\"];\n  }\n\n  static getDefaultStorageObject(): CurveChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n      dataLabels: \"y1, y2, y3, y4\"\n    };\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabels.join(\", \");\n  }\n\n  getTableLabels(): string[] {\n    return [\"x\"].concat(this.dataLabels);\n  }\n\n  getDataLabelByCurveCount(curveCount: number): string {\n    const result = this.dataLabels;\n    return result.slice(0, curveCount).join(\", \");\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(dataLabel: string): void {\n    const dataLabelArray = dataLabel.split(\",\").map((label) => label.trim());\n    for (let i = 0; i = CurveCounts.TWO) {\n        row.y2 = entry.y2;\n      }\n      if (curveCount >= CurveCounts.THREE) {\n        row.y3 = entry.y3;\n      }\n      if (curveCount >= CurveCounts.FOUR) {\n        row.y4 = entry.y4;\n      }\n      result.push(row);\n    }\n    return result;\n  }\n\n  public getDataArray(): any[] {\n    let result: any[] = [[], [], [], []];\n    for (const entry of this.curveDataDict) {\n      result[0].push([entry.x, entry.y1]);\n      result[1].push([entry.x, entry.y2]);\n      result[2].push([entry.x, entry.y3]);\n      result[3].push([entry.x, entry.y4]);\n    }\n    return result;\n  }\n\n  public setData(data: CurveDataDict[]): void {\n    this.curveDataDict = data;\n    // this.sortDataByX();\n  }\n\n\n  addRow(index: number, amount: number) {\n    if (index > 0) {\n      for (let i = 0; i  {\n      this.setDataByCell(newValue, row, col);\n    });\n  }\n\n  private setDataByCell(value: number | null, row: number, col: string): void {\n    switch (col) {\n      case CurveParam.X:\n        this.curveDataDict[row][CurveParam.X] = value;\n        break;\n      case CurveParam.Y1:\n        this.curveDataDict[row][CurveParam.Y1] = value;\n        break;\n      case CurveParam.Y2:\n        this.curveDataDict[row][CurveParam.Y2] = value;\n        break;\n      case CurveParam.Y3:\n        this.curveDataDict[row][CurveParam.Y3] = value;\n        break;\n      case CurveParam.Y4:\n        this.curveDataDict[row][CurveParam.Y4] = value;\n        break;\n    }\n    // this.sortDataByX();\n  }\n\n  // private sortDataByX(): void {\n  //   this.curveDataDict = this.curveDataDict.sort(\n  //     (a, b) => {\n  //       if (a['x'] === null)\n  //         return 1;\n  //       if (b['x'] === null)\n  //         return -1;\n  //       if (a['x']  b['x'])\n  //         return 1;\n  //       else\n  //         return 0;\n  //     }\n  //   );\n  // }\n}\n\n\nexport interface CurveInterface {\n  getCurveCount(): number;\n\n  setCurveCount(curveCount: number): void;\n\n  getIsMagnitudeOn(): boolean;\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void;\n}\n\n\nexport interface CurveInterfaceStorageObject {\n  curveCount: CurveCounts;\n  isMagnitudeOn: boolean;\n}\n\n\nexport class CurveImpl implements CurveInterface {\n  private curveCount: number = CurveCounts.ONE;\n  private isMagnitudeOn: boolean = false;\n\n  public static getDefaultStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: CurveCounts.ONE, isMagnitudeOn: false};\n  }\n\n  getCurveCount(): number {\n    return this.curveCount;\n  }\n\n  getIsMagnitudeOn(): boolean {\n    return this.isMagnitudeOn;\n  }\n\n  setCurveCount(curveCount: number): void {\n    if (curveCount in CurveCounts)\n      this.curveCount = curveCount;\n    else\n      throw new Error(\"Invalid curve count\");\n  }\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void {\n    this.isMagnitudeOn = isMagnitudeOn;\n  }\n\n  public getStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: this.curveCount, isMagnitudeOn: this.isMagnitudeOn};\n  }\n\n  public setStorageObject(curveInterfaceStorageObject: CurveInterfaceStorageObject): void {\n    this.curveCount = curveInterfaceStorageObject.curveCount;\n    this.isMagnitudeOn = curveInterfaceStorageObject.isMagnitudeOn;\n  }\n\n}\n\n\nexport class CurveStorage implements MyStorage {\n  private readonly dataKey: string = \"curve-data\";\n  private readonly interfaceKey: string = \"curve-interface\";\n  private readonly chartInfoKey: string = \"curve-chart-info\";\n  private readonly defaultData: CurveDataDict[]\n  private readonly defaultChartInfo!: CurveChartInfoStorageObject\n  private readonly defaultInterface!: CurveInterfaceStorageObject\n\n  constructor(defaultData: CurveDataDict[], defaultChartInfo: CurveChartInfoStorageObject, defaultInterface: CurveInterfaceStorageObject) {\n    this.defaultData = defaultData;\n    this.defaultChartInfo = defaultChartInfo;\n    this.defaultInterface = defaultInterface;\n  }\n\n  getChartInfo(): CurveChartInfoStorageObject {\n    if (localStorage.getItem(this.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(this.chartInfoKey)!);\n    } else\n      return this.defaultChartInfo;\n  }\n\n  getData(): CurveDataDict[] {\n    if (localStorage.getItem(this.dataKey)) {\n      return JSON.parse(localStorage.getItem(this.dataKey)!);\n    } else\n      return this.defaultData;\n  }\n\n  getInterface(): any {\n    if (localStorage.getItem(this.interfaceKey)) {\n      return JSON.parse(localStorage.getItem(this.interfaceKey)!);\n    } else\n      return this.defaultInterface;\n  }\n\n  saveChartInfo(chartInfoObject: CurveChartInfoStorageObject): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(chartInfoObject));\n  }\n\n  saveData(data: CurveDataDict[]): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: any): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(interfaceInfo));\n  }\n\n  resetChartInfo(): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(this.defaultChartInfo));\n  }\n\n  resetData(): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(this.defaultData));\n  }\n\n  resetInterface(): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(this.defaultInterface));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CurveComponent.html":{"url":"components/CurveComponent.html","title":"component - CurveComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CurveComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/curve/curve.component.ts\n\n\n\n    \n        Description\n    \n    \n        Curve Component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-curve\n            \n\n\n\n            \n                styleUrls\n                ./curve.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./curve.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                actionHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: CurveService, honorCodeService: HonorCodePopupService, chartService: HonorCodeChartService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/curve/curve.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        CurveService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        honorCodeService\n                                                  \n                                                        \n                                                                        HonorCodePopupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chartService\n                                                  \n                                                        \n                                                                        HonorCodeChartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        actionHandler\n                        \n                    \n                \n            \n            \n                \nactionHandler(actions: MyAction[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    actions\n                                    \n                                                MyAction[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component,} from '@angular/core';\nimport {MyAction} from \"../shared/types/actions\";\nimport {CurveService} from \"./curve.service\";\nimport {HonorCodePopupService} from \"../shared/honor-code-popup/honor-code-popup.service\";\nimport {HonorCodeChartService} from \"../shared/honor-code-popup/honor-code-chart.service\";\n\n/**\n * Curve Component\n */\n@Component({\n  selector: 'app-curve',\n  templateUrl: './curve.component.html',\n  styleUrls: ['./curve.component.scss'],\n  providers: [],\n})\nexport class CurveComponent {\n  constructor(private service: CurveService,\n              private honorCodeService: HonorCodePopupService,\n              private chartService: HonorCodeChartService) {\n  }\n\n  actionHandler(actions: MyAction[]) {\n    actions.forEach((action) => {\n      if (action.action === \"addRow\") {\n        this.service.addRow(-1, 1);\n      } else if (action.action === \"saveGraph\") {\n        this.honorCodeService.honored().subscribe((name: string) => {\n          this.chartService.saveImageHighChartOffline(this.service.getHighChart(), \"curve\", name);\n        })\n      } else if (action.action === \"resetData\") {\n        this.service.resetData();\n      } else if (action.action === \"resetChartInfo\") {\n        this.service.resetChartInfo();\n      }\n    })\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n  \n    \n      -->\n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./curve.component.scss\n                \n                .container-row {\n  height: 80%;\n  padding: 20px 100px 20px 100px;\n  width: 100%;\n}\n\n.col-4, .col-8 {\n  display: flex;\n  flex-flow: column;\n}\n\n.data-form-row, data-button-row, chart-form-row, chart-button-row {\n  height: fit-content;\n  flex: 0 1 auto;\n}\n\n.data-table-row, .chart-row {\n  flex: 1 1 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                          -->                                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CurveComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CurveData.html":{"url":"classes/CurveData.html","title":"class - CurveData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CurveData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/curve/curve.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyData\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                curveDataDict\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRow\n                            \n                            \n                                    Public\n                                getCurveData\n                            \n                            \n                                    Public\n                                getData\n                            \n                            \n                                    Public\n                                getDataArray\n                            \n                            \n                                    Static\n                                getDefaultData\n                            \n                            \n                                removeRow\n                            \n                            \n                                    Public\n                                setData\n                            \n                            \n                                    Private\n                                setDataByCell\n                            \n                            \n                                setDataByCellOnTableChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/curve/curve.service.util.ts:121\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        curveDataDict\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CurveDataDict[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.util.ts:121\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRow\n                        \n                    \n                \n            \n            \n                \naddRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:182\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCurveData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurveData(curveCount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    curveCount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CurveDataDict[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getDataArray\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDataArray()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getDefaultData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         CurveDataDict[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRow\n                        \n                    \n                \n            \n            \n                \nremoveRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:191\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setData\n                        \n                    \n                \n            \n            \n                \n                    \n                    setData(data: CurveDataDict[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:176\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CurveDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setDataByCell\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDataByCell(value: number | null, row: number, col: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:205\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            number | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    row\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    col\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDataByCellOnTableChange\n                        \n                    \n                \n            \n            \n                \nsetDataByCellOnTableChange(changes: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:199\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\n\nexport enum CurveParam {\n  X = 'x',\n  Y1 = 'y1',\n  Y2 = 'y2',\n  Y3 = 'y3',\n  Y4 = 'y4'\n}\n\nexport enum CurveCounts {\n  ONE = 1,\n  TWO = 2,\n  THREE = 3,\n  FOUR = 4\n}\n\nexport interface CurveDataDict {\n  x: number | null;\n  y1: number | null;\n  y2?: number | null;\n  y3?: number | null;\n  y4?: number | null;\n}\n\nexport interface CurveChartInfoStorageObject {\n  chartTitle: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n  dataLabels: string;\n}\n\nexport class CurveChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n  private dataLabels: string[];\n\n  constructor() {\n    this.chartTitle = \"Title\";\n    this.xAxisLabel = \"x\";\n    this.yAxisLabel = \"y\";\n    this.dataLabels = [\"y1\", \"y2\", \"y3\", \"y4\"];\n  }\n\n  static getDefaultStorageObject(): CurveChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n      dataLabels: \"y1, y2, y3, y4\"\n    };\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabels.join(\", \");\n  }\n\n  getTableLabels(): string[] {\n    return [\"x\"].concat(this.dataLabels);\n  }\n\n  getDataLabelByCurveCount(curveCount: number): string {\n    const result = this.dataLabels;\n    return result.slice(0, curveCount).join(\", \");\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(dataLabel: string): void {\n    const dataLabelArray = dataLabel.split(\",\").map((label) => label.trim());\n    for (let i = 0; i = CurveCounts.TWO) {\n        row.y2 = entry.y2;\n      }\n      if (curveCount >= CurveCounts.THREE) {\n        row.y3 = entry.y3;\n      }\n      if (curveCount >= CurveCounts.FOUR) {\n        row.y4 = entry.y4;\n      }\n      result.push(row);\n    }\n    return result;\n  }\n\n  public getDataArray(): any[] {\n    let result: any[] = [[], [], [], []];\n    for (const entry of this.curveDataDict) {\n      result[0].push([entry.x, entry.y1]);\n      result[1].push([entry.x, entry.y2]);\n      result[2].push([entry.x, entry.y3]);\n      result[3].push([entry.x, entry.y4]);\n    }\n    return result;\n  }\n\n  public setData(data: CurveDataDict[]): void {\n    this.curveDataDict = data;\n    // this.sortDataByX();\n  }\n\n\n  addRow(index: number, amount: number) {\n    if (index > 0) {\n      for (let i = 0; i  {\n      this.setDataByCell(newValue, row, col);\n    });\n  }\n\n  private setDataByCell(value: number | null, row: number, col: string): void {\n    switch (col) {\n      case CurveParam.X:\n        this.curveDataDict[row][CurveParam.X] = value;\n        break;\n      case CurveParam.Y1:\n        this.curveDataDict[row][CurveParam.Y1] = value;\n        break;\n      case CurveParam.Y2:\n        this.curveDataDict[row][CurveParam.Y2] = value;\n        break;\n      case CurveParam.Y3:\n        this.curveDataDict[row][CurveParam.Y3] = value;\n        break;\n      case CurveParam.Y4:\n        this.curveDataDict[row][CurveParam.Y4] = value;\n        break;\n    }\n    // this.sortDataByX();\n  }\n\n  // private sortDataByX(): void {\n  //   this.curveDataDict = this.curveDataDict.sort(\n  //     (a, b) => {\n  //       if (a['x'] === null)\n  //         return 1;\n  //       if (b['x'] === null)\n  //         return -1;\n  //       if (a['x']  b['x'])\n  //         return 1;\n  //       else\n  //         return 0;\n  //     }\n  //   );\n  // }\n}\n\n\nexport interface CurveInterface {\n  getCurveCount(): number;\n\n  setCurveCount(curveCount: number): void;\n\n  getIsMagnitudeOn(): boolean;\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void;\n}\n\n\nexport interface CurveInterfaceStorageObject {\n  curveCount: CurveCounts;\n  isMagnitudeOn: boolean;\n}\n\n\nexport class CurveImpl implements CurveInterface {\n  private curveCount: number = CurveCounts.ONE;\n  private isMagnitudeOn: boolean = false;\n\n  public static getDefaultStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: CurveCounts.ONE, isMagnitudeOn: false};\n  }\n\n  getCurveCount(): number {\n    return this.curveCount;\n  }\n\n  getIsMagnitudeOn(): boolean {\n    return this.isMagnitudeOn;\n  }\n\n  setCurveCount(curveCount: number): void {\n    if (curveCount in CurveCounts)\n      this.curveCount = curveCount;\n    else\n      throw new Error(\"Invalid curve count\");\n  }\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void {\n    this.isMagnitudeOn = isMagnitudeOn;\n  }\n\n  public getStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: this.curveCount, isMagnitudeOn: this.isMagnitudeOn};\n  }\n\n  public setStorageObject(curveInterfaceStorageObject: CurveInterfaceStorageObject): void {\n    this.curveCount = curveInterfaceStorageObject.curveCount;\n    this.isMagnitudeOn = curveInterfaceStorageObject.isMagnitudeOn;\n  }\n\n}\n\n\nexport class CurveStorage implements MyStorage {\n  private readonly dataKey: string = \"curve-data\";\n  private readonly interfaceKey: string = \"curve-interface\";\n  private readonly chartInfoKey: string = \"curve-chart-info\";\n  private readonly defaultData: CurveDataDict[]\n  private readonly defaultChartInfo!: CurveChartInfoStorageObject\n  private readonly defaultInterface!: CurveInterfaceStorageObject\n\n  constructor(defaultData: CurveDataDict[], defaultChartInfo: CurveChartInfoStorageObject, defaultInterface: CurveInterfaceStorageObject) {\n    this.defaultData = defaultData;\n    this.defaultChartInfo = defaultChartInfo;\n    this.defaultInterface = defaultInterface;\n  }\n\n  getChartInfo(): CurveChartInfoStorageObject {\n    if (localStorage.getItem(this.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(this.chartInfoKey)!);\n    } else\n      return this.defaultChartInfo;\n  }\n\n  getData(): CurveDataDict[] {\n    if (localStorage.getItem(this.dataKey)) {\n      return JSON.parse(localStorage.getItem(this.dataKey)!);\n    } else\n      return this.defaultData;\n  }\n\n  getInterface(): any {\n    if (localStorage.getItem(this.interfaceKey)) {\n      return JSON.parse(localStorage.getItem(this.interfaceKey)!);\n    } else\n      return this.defaultInterface;\n  }\n\n  saveChartInfo(chartInfoObject: CurveChartInfoStorageObject): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(chartInfoObject));\n  }\n\n  saveData(data: CurveDataDict[]): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: any): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(interfaceInfo));\n  }\n\n  resetChartInfo(): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(this.defaultChartInfo));\n  }\n\n  resetData(): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(this.defaultData));\n  }\n\n  resetInterface(): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(this.defaultInterface));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CurveDataDict.html":{"url":"interfaces/CurveDataDict.html","title":"interface - CurveDataDict","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CurveDataDict\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/curve/curve.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y1\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            y2\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            y3\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            y4\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y1\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y1:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y2\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y2:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y3\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y3:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y4\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y4:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\n\nexport enum CurveParam {\n  X = 'x',\n  Y1 = 'y1',\n  Y2 = 'y2',\n  Y3 = 'y3',\n  Y4 = 'y4'\n}\n\nexport enum CurveCounts {\n  ONE = 1,\n  TWO = 2,\n  THREE = 3,\n  FOUR = 4\n}\n\nexport interface CurveDataDict {\n  x: number | null;\n  y1: number | null;\n  y2?: number | null;\n  y3?: number | null;\n  y4?: number | null;\n}\n\nexport interface CurveChartInfoStorageObject {\n  chartTitle: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n  dataLabels: string;\n}\n\nexport class CurveChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n  private dataLabels: string[];\n\n  constructor() {\n    this.chartTitle = \"Title\";\n    this.xAxisLabel = \"x\";\n    this.yAxisLabel = \"y\";\n    this.dataLabels = [\"y1\", \"y2\", \"y3\", \"y4\"];\n  }\n\n  static getDefaultStorageObject(): CurveChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n      dataLabels: \"y1, y2, y3, y4\"\n    };\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabels.join(\", \");\n  }\n\n  getTableLabels(): string[] {\n    return [\"x\"].concat(this.dataLabels);\n  }\n\n  getDataLabelByCurveCount(curveCount: number): string {\n    const result = this.dataLabels;\n    return result.slice(0, curveCount).join(\", \");\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(dataLabel: string): void {\n    const dataLabelArray = dataLabel.split(\",\").map((label) => label.trim());\n    for (let i = 0; i = CurveCounts.TWO) {\n        row.y2 = entry.y2;\n      }\n      if (curveCount >= CurveCounts.THREE) {\n        row.y3 = entry.y3;\n      }\n      if (curveCount >= CurveCounts.FOUR) {\n        row.y4 = entry.y4;\n      }\n      result.push(row);\n    }\n    return result;\n  }\n\n  public getDataArray(): any[] {\n    let result: any[] = [[], [], [], []];\n    for (const entry of this.curveDataDict) {\n      result[0].push([entry.x, entry.y1]);\n      result[1].push([entry.x, entry.y2]);\n      result[2].push([entry.x, entry.y3]);\n      result[3].push([entry.x, entry.y4]);\n    }\n    return result;\n  }\n\n  public setData(data: CurveDataDict[]): void {\n    this.curveDataDict = data;\n    // this.sortDataByX();\n  }\n\n\n  addRow(index: number, amount: number) {\n    if (index > 0) {\n      for (let i = 0; i  {\n      this.setDataByCell(newValue, row, col);\n    });\n  }\n\n  private setDataByCell(value: number | null, row: number, col: string): void {\n    switch (col) {\n      case CurveParam.X:\n        this.curveDataDict[row][CurveParam.X] = value;\n        break;\n      case CurveParam.Y1:\n        this.curveDataDict[row][CurveParam.Y1] = value;\n        break;\n      case CurveParam.Y2:\n        this.curveDataDict[row][CurveParam.Y2] = value;\n        break;\n      case CurveParam.Y3:\n        this.curveDataDict[row][CurveParam.Y3] = value;\n        break;\n      case CurveParam.Y4:\n        this.curveDataDict[row][CurveParam.Y4] = value;\n        break;\n    }\n    // this.sortDataByX();\n  }\n\n  // private sortDataByX(): void {\n  //   this.curveDataDict = this.curveDataDict.sort(\n  //     (a, b) => {\n  //       if (a['x'] === null)\n  //         return 1;\n  //       if (b['x'] === null)\n  //         return -1;\n  //       if (a['x']  b['x'])\n  //         return 1;\n  //       else\n  //         return 0;\n  //     }\n  //   );\n  // }\n}\n\n\nexport interface CurveInterface {\n  getCurveCount(): number;\n\n  setCurveCount(curveCount: number): void;\n\n  getIsMagnitudeOn(): boolean;\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void;\n}\n\n\nexport interface CurveInterfaceStorageObject {\n  curveCount: CurveCounts;\n  isMagnitudeOn: boolean;\n}\n\n\nexport class CurveImpl implements CurveInterface {\n  private curveCount: number = CurveCounts.ONE;\n  private isMagnitudeOn: boolean = false;\n\n  public static getDefaultStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: CurveCounts.ONE, isMagnitudeOn: false};\n  }\n\n  getCurveCount(): number {\n    return this.curveCount;\n  }\n\n  getIsMagnitudeOn(): boolean {\n    return this.isMagnitudeOn;\n  }\n\n  setCurveCount(curveCount: number): void {\n    if (curveCount in CurveCounts)\n      this.curveCount = curveCount;\n    else\n      throw new Error(\"Invalid curve count\");\n  }\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void {\n    this.isMagnitudeOn = isMagnitudeOn;\n  }\n\n  public getStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: this.curveCount, isMagnitudeOn: this.isMagnitudeOn};\n  }\n\n  public setStorageObject(curveInterfaceStorageObject: CurveInterfaceStorageObject): void {\n    this.curveCount = curveInterfaceStorageObject.curveCount;\n    this.isMagnitudeOn = curveInterfaceStorageObject.isMagnitudeOn;\n  }\n\n}\n\n\nexport class CurveStorage implements MyStorage {\n  private readonly dataKey: string = \"curve-data\";\n  private readonly interfaceKey: string = \"curve-interface\";\n  private readonly chartInfoKey: string = \"curve-chart-info\";\n  private readonly defaultData: CurveDataDict[]\n  private readonly defaultChartInfo!: CurveChartInfoStorageObject\n  private readonly defaultInterface!: CurveInterfaceStorageObject\n\n  constructor(defaultData: CurveDataDict[], defaultChartInfo: CurveChartInfoStorageObject, defaultInterface: CurveInterfaceStorageObject) {\n    this.defaultData = defaultData;\n    this.defaultChartInfo = defaultChartInfo;\n    this.defaultInterface = defaultInterface;\n  }\n\n  getChartInfo(): CurveChartInfoStorageObject {\n    if (localStorage.getItem(this.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(this.chartInfoKey)!);\n    } else\n      return this.defaultChartInfo;\n  }\n\n  getData(): CurveDataDict[] {\n    if (localStorage.getItem(this.dataKey)) {\n      return JSON.parse(localStorage.getItem(this.dataKey)!);\n    } else\n      return this.defaultData;\n  }\n\n  getInterface(): any {\n    if (localStorage.getItem(this.interfaceKey)) {\n      return JSON.parse(localStorage.getItem(this.interfaceKey)!);\n    } else\n      return this.defaultInterface;\n  }\n\n  saveChartInfo(chartInfoObject: CurveChartInfoStorageObject): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(chartInfoObject));\n  }\n\n  saveData(data: CurveDataDict[]): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: any): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(interfaceInfo));\n  }\n\n  resetChartInfo(): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(this.defaultChartInfo));\n  }\n\n  resetData(): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(this.defaultData));\n  }\n\n  resetInterface(): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(this.defaultInterface));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CurveHighChartComponent.html":{"url":"components/CurveHighChartComponent.html","title":"component - CurveHighChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CurveHighChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/curve/curve-highchart/curve-high-chart.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-curve-highchart\n            \n\n\n\n            \n                styleUrls\n                ./curve-high-chart.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./curve-high-chart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chartConstructor\n                            \n                            \n                                chartObject\n                            \n                            \n                                chartOptions\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                Highcharts\n                            \n                            \n                                updateFlag\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                chartInitialized\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                processData\n                            \n                            \n                                    Private\n                                reverseYAxis\n                            \n                            \n                                    Private\n                                setChartSeries\n                            \n                            \n                                    Private\n                                setChartTitle\n                            \n                            \n                                    Private\n                                setChartXAxis\n                            \n                            \n                                    Private\n                                setChartYAxis\n                            \n                            \n                                    Private\n                                updateChart\n                            \n                            \n                                    Private\n                                updateChartSeries\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: CurveService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        CurveService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        chartInitialized\n                        \n                    \n                \n            \n            \n                \nchartInitialized($event: Highcharts.Chart)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                            Highcharts.Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        processData\n                        \n                    \n                \n            \n            \n                \n                    \n                    processData(data: number[][])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            number[][]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [][]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        reverseYAxis\n                        \n                    \n                \n            \n            \n                \n                    \n                    reverseYAxis()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setChartSeries\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChartSeries()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setChartTitle\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChartTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setChartXAxis\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChartXAxis()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setChartYAxis\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChartYAxis()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateChart\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateChartSeries\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateChartSeries()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chartConstructor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : \"chart\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartObject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Highcharts.Chart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Highcharts.Options\n\n                    \n                \n                \n                    \n                        Default value : {\n    chart: {\n      animation: false,\n      styledMode: true,\n    },\n    legend: {\n      align: 'center',\n    },\n    tooltip: {\n      enabled: true,\n      shared: true,\n    },\n    exporting: {\n      buttons: {\n        contextButton: {\n          enabled: false,\n        }\n      }\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Highcharts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Highcharts\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFlag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-highchart/curve-high-chart.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnDestroy} from '@angular/core';\nimport * as Highcharts from 'highcharts';\nimport {CurveService} from \"../curve.service\";\nimport {ChartInfo} from \"../../shared/charts/chart.interface\";\nimport {Subject, takeUntil} from 'rxjs';\n\n@Component({\n  selector: 'app-curve-highchart',\n  templateUrl: './curve-high-chart.component.html',\n  styleUrls: ['./curve-high-chart.component.scss']\n})\nexport class CurveHighChartComponent implements AfterViewInit, OnDestroy {\n  Highcharts: typeof Highcharts = Highcharts;\n  updateFlag: boolean = true;\n  chartConstructor: any = \"chart\";\n  chartObject!: Highcharts.Chart;\n  chartOptions: Highcharts.Options = {\n    chart: {\n      animation: false,\n      styledMode: true,\n    },\n    legend: {\n      align: 'center',\n    },\n    tooltip: {\n      enabled: true,\n      shared: true,\n    },\n    exporting: {\n      buttons: {\n        contextButton: {\n          enabled: false,\n        }\n      }\n    }\n  };\n  private destroy$: Subject = new Subject();\n\n  constructor(private service: CurveService) {\n    this.setChartTitle();\n    this.setChartXAxis();\n    this.setChartYAxis();\n  }\n\n  chartInitialized($event: Highcharts.Chart) {\n    this.chartObject = $event;\n\n  }\n\n  ngAfterViewInit(): void {\n    this.setChartSeries();\n    this.service.setHighChart(this.chartObject);\n    this.service.chartInfo$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe((info: ChartInfo) => {\n      this.setChartYAxis();\n      this.setChartXAxis();\n      this.setChartTitle();\n      this.updateChart();\n    });\n    this.service.data$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe((data) => {\n      this.updateChartSeries();\n      this.updateChart();\n    });\n    this.service.interface$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(() => {\n      this.reverseYAxis();\n      this.updateChart();\n    });\n    this.service.dataKeys$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(() => {\n      this.updateChartSeries();\n      this.updateChart();\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n  }\n\n  private updateChart(): void {\n    this.updateFlag = true;\n  }\n\n  private setChartTitle(): void {\n    this.chartOptions.title = {text: this.service.getChartTitle()};\n  }\n\n  private setChartSeries(): void {\n    for (let count = 0; count  {\n      // return true;\n      return (value[0] !== null);\n    }).sort((a: number[], b: number[]) => {\n      return a[0] - b[0];\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n\n\n    \n\n    \n                \n                    ./curve-high-chart.component.scss\n                \n                .chart-container {\n  width: 100%;\n  height: 100%;\n  padding: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CurveHighChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CurveImpl.html":{"url":"classes/CurveImpl.html","title":"class - CurveImpl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CurveImpl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/curve/curve.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            CurveInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                curveCount\n                            \n                            \n                                    Private\n                                isMagnitudeOn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurveCount\n                            \n                            \n                                    Static\n                                getDefaultStorageObject\n                            \n                            \n                                getIsMagnitudeOn\n                            \n                            \n                                    Public\n                                getStorageObject\n                            \n                            \n                                setCurveCount\n                            \n                            \n                                setIsMagnitudeOn\n                            \n                            \n                                    Public\n                                setStorageObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        curveCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : CurveCounts.ONE\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.util.ts:263\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isMagnitudeOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.util.ts:264\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurveCount\n                        \n                    \n                \n            \n            \n                \ngetCurveCount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:270\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getDefaultStorageObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:266\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         CurveInterfaceStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIsMagnitudeOn\n                        \n                    \n                \n            \n            \n                \ngetIsMagnitudeOn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:274\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getStorageObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:289\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         CurveInterfaceStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCurveCount\n                        \n                    \n                \n            \n            \n                \nsetCurveCount(curveCount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:278\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    curveCount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setIsMagnitudeOn\n                        \n                    \n                \n            \n            \n                \nsetIsMagnitudeOn(isMagnitudeOn: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:285\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isMagnitudeOn\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setStorageObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    setStorageObject(curveInterfaceStorageObject: CurveInterfaceStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:293\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    curveInterfaceStorageObject\n                                    \n                                                CurveInterfaceStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\n\nexport enum CurveParam {\n  X = 'x',\n  Y1 = 'y1',\n  Y2 = 'y2',\n  Y3 = 'y3',\n  Y4 = 'y4'\n}\n\nexport enum CurveCounts {\n  ONE = 1,\n  TWO = 2,\n  THREE = 3,\n  FOUR = 4\n}\n\nexport interface CurveDataDict {\n  x: number | null;\n  y1: number | null;\n  y2?: number | null;\n  y3?: number | null;\n  y4?: number | null;\n}\n\nexport interface CurveChartInfoStorageObject {\n  chartTitle: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n  dataLabels: string;\n}\n\nexport class CurveChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n  private dataLabels: string[];\n\n  constructor() {\n    this.chartTitle = \"Title\";\n    this.xAxisLabel = \"x\";\n    this.yAxisLabel = \"y\";\n    this.dataLabels = [\"y1\", \"y2\", \"y3\", \"y4\"];\n  }\n\n  static getDefaultStorageObject(): CurveChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n      dataLabels: \"y1, y2, y3, y4\"\n    };\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabels.join(\", \");\n  }\n\n  getTableLabels(): string[] {\n    return [\"x\"].concat(this.dataLabels);\n  }\n\n  getDataLabelByCurveCount(curveCount: number): string {\n    const result = this.dataLabels;\n    return result.slice(0, curveCount).join(\", \");\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(dataLabel: string): void {\n    const dataLabelArray = dataLabel.split(\",\").map((label) => label.trim());\n    for (let i = 0; i = CurveCounts.TWO) {\n        row.y2 = entry.y2;\n      }\n      if (curveCount >= CurveCounts.THREE) {\n        row.y3 = entry.y3;\n      }\n      if (curveCount >= CurveCounts.FOUR) {\n        row.y4 = entry.y4;\n      }\n      result.push(row);\n    }\n    return result;\n  }\n\n  public getDataArray(): any[] {\n    let result: any[] = [[], [], [], []];\n    for (const entry of this.curveDataDict) {\n      result[0].push([entry.x, entry.y1]);\n      result[1].push([entry.x, entry.y2]);\n      result[2].push([entry.x, entry.y3]);\n      result[3].push([entry.x, entry.y4]);\n    }\n    return result;\n  }\n\n  public setData(data: CurveDataDict[]): void {\n    this.curveDataDict = data;\n    // this.sortDataByX();\n  }\n\n\n  addRow(index: number, amount: number) {\n    if (index > 0) {\n      for (let i = 0; i  {\n      this.setDataByCell(newValue, row, col);\n    });\n  }\n\n  private setDataByCell(value: number | null, row: number, col: string): void {\n    switch (col) {\n      case CurveParam.X:\n        this.curveDataDict[row][CurveParam.X] = value;\n        break;\n      case CurveParam.Y1:\n        this.curveDataDict[row][CurveParam.Y1] = value;\n        break;\n      case CurveParam.Y2:\n        this.curveDataDict[row][CurveParam.Y2] = value;\n        break;\n      case CurveParam.Y3:\n        this.curveDataDict[row][CurveParam.Y3] = value;\n        break;\n      case CurveParam.Y4:\n        this.curveDataDict[row][CurveParam.Y4] = value;\n        break;\n    }\n    // this.sortDataByX();\n  }\n\n  // private sortDataByX(): void {\n  //   this.curveDataDict = this.curveDataDict.sort(\n  //     (a, b) => {\n  //       if (a['x'] === null)\n  //         return 1;\n  //       if (b['x'] === null)\n  //         return -1;\n  //       if (a['x']  b['x'])\n  //         return 1;\n  //       else\n  //         return 0;\n  //     }\n  //   );\n  // }\n}\n\n\nexport interface CurveInterface {\n  getCurveCount(): number;\n\n  setCurveCount(curveCount: number): void;\n\n  getIsMagnitudeOn(): boolean;\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void;\n}\n\n\nexport interface CurveInterfaceStorageObject {\n  curveCount: CurveCounts;\n  isMagnitudeOn: boolean;\n}\n\n\nexport class CurveImpl implements CurveInterface {\n  private curveCount: number = CurveCounts.ONE;\n  private isMagnitudeOn: boolean = false;\n\n  public static getDefaultStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: CurveCounts.ONE, isMagnitudeOn: false};\n  }\n\n  getCurveCount(): number {\n    return this.curveCount;\n  }\n\n  getIsMagnitudeOn(): boolean {\n    return this.isMagnitudeOn;\n  }\n\n  setCurveCount(curveCount: number): void {\n    if (curveCount in CurveCounts)\n      this.curveCount = curveCount;\n    else\n      throw new Error(\"Invalid curve count\");\n  }\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void {\n    this.isMagnitudeOn = isMagnitudeOn;\n  }\n\n  public getStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: this.curveCount, isMagnitudeOn: this.isMagnitudeOn};\n  }\n\n  public setStorageObject(curveInterfaceStorageObject: CurveInterfaceStorageObject): void {\n    this.curveCount = curveInterfaceStorageObject.curveCount;\n    this.isMagnitudeOn = curveInterfaceStorageObject.isMagnitudeOn;\n  }\n\n}\n\n\nexport class CurveStorage implements MyStorage {\n  private readonly dataKey: string = \"curve-data\";\n  private readonly interfaceKey: string = \"curve-interface\";\n  private readonly chartInfoKey: string = \"curve-chart-info\";\n  private readonly defaultData: CurveDataDict[]\n  private readonly defaultChartInfo!: CurveChartInfoStorageObject\n  private readonly defaultInterface!: CurveInterfaceStorageObject\n\n  constructor(defaultData: CurveDataDict[], defaultChartInfo: CurveChartInfoStorageObject, defaultInterface: CurveInterfaceStorageObject) {\n    this.defaultData = defaultData;\n    this.defaultChartInfo = defaultChartInfo;\n    this.defaultInterface = defaultInterface;\n  }\n\n  getChartInfo(): CurveChartInfoStorageObject {\n    if (localStorage.getItem(this.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(this.chartInfoKey)!);\n    } else\n      return this.defaultChartInfo;\n  }\n\n  getData(): CurveDataDict[] {\n    if (localStorage.getItem(this.dataKey)) {\n      return JSON.parse(localStorage.getItem(this.dataKey)!);\n    } else\n      return this.defaultData;\n  }\n\n  getInterface(): any {\n    if (localStorage.getItem(this.interfaceKey)) {\n      return JSON.parse(localStorage.getItem(this.interfaceKey)!);\n    } else\n      return this.defaultInterface;\n  }\n\n  saveChartInfo(chartInfoObject: CurveChartInfoStorageObject): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(chartInfoObject));\n  }\n\n  saveData(data: CurveDataDict[]): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: any): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(interfaceInfo));\n  }\n\n  resetChartInfo(): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(this.defaultChartInfo));\n  }\n\n  resetData(): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(this.defaultData));\n  }\n\n  resetInterface(): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(this.defaultInterface));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CurveInterface.html":{"url":"interfaces/CurveInterface.html","title":"interface - CurveInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CurveInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/curve/curve.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getCurveCount\n                                    \n                                \n                                \n                                    \n                                        getIsMagnitudeOn\n                                    \n                                \n                                \n                                    \n                                        setCurveCount\n                                    \n                                \n                                \n                                    \n                                        setIsMagnitudeOn\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurveCount\n                        \n                    \n                \n            \n            \n                \ngetCurveCount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:246\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIsMagnitudeOn\n                        \n                    \n                \n            \n            \n                \ngetIsMagnitudeOn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:250\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCurveCount\n                        \n                    \n                \n            \n            \n                \nsetCurveCount(curveCount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:248\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    curveCount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setIsMagnitudeOn\n                        \n                    \n                \n            \n            \n                \nsetIsMagnitudeOn(isMagnitudeOn: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:252\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isMagnitudeOn\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\n\nexport enum CurveParam {\n  X = 'x',\n  Y1 = 'y1',\n  Y2 = 'y2',\n  Y3 = 'y3',\n  Y4 = 'y4'\n}\n\nexport enum CurveCounts {\n  ONE = 1,\n  TWO = 2,\n  THREE = 3,\n  FOUR = 4\n}\n\nexport interface CurveDataDict {\n  x: number | null;\n  y1: number | null;\n  y2?: number | null;\n  y3?: number | null;\n  y4?: number | null;\n}\n\nexport interface CurveChartInfoStorageObject {\n  chartTitle: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n  dataLabels: string;\n}\n\nexport class CurveChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n  private dataLabels: string[];\n\n  constructor() {\n    this.chartTitle = \"Title\";\n    this.xAxisLabel = \"x\";\n    this.yAxisLabel = \"y\";\n    this.dataLabels = [\"y1\", \"y2\", \"y3\", \"y4\"];\n  }\n\n  static getDefaultStorageObject(): CurveChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n      dataLabels: \"y1, y2, y3, y4\"\n    };\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabels.join(\", \");\n  }\n\n  getTableLabels(): string[] {\n    return [\"x\"].concat(this.dataLabels);\n  }\n\n  getDataLabelByCurveCount(curveCount: number): string {\n    const result = this.dataLabels;\n    return result.slice(0, curveCount).join(\", \");\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(dataLabel: string): void {\n    const dataLabelArray = dataLabel.split(\",\").map((label) => label.trim());\n    for (let i = 0; i = CurveCounts.TWO) {\n        row.y2 = entry.y2;\n      }\n      if (curveCount >= CurveCounts.THREE) {\n        row.y3 = entry.y3;\n      }\n      if (curveCount >= CurveCounts.FOUR) {\n        row.y4 = entry.y4;\n      }\n      result.push(row);\n    }\n    return result;\n  }\n\n  public getDataArray(): any[] {\n    let result: any[] = [[], [], [], []];\n    for (const entry of this.curveDataDict) {\n      result[0].push([entry.x, entry.y1]);\n      result[1].push([entry.x, entry.y2]);\n      result[2].push([entry.x, entry.y3]);\n      result[3].push([entry.x, entry.y4]);\n    }\n    return result;\n  }\n\n  public setData(data: CurveDataDict[]): void {\n    this.curveDataDict = data;\n    // this.sortDataByX();\n  }\n\n\n  addRow(index: number, amount: number) {\n    if (index > 0) {\n      for (let i = 0; i  {\n      this.setDataByCell(newValue, row, col);\n    });\n  }\n\n  private setDataByCell(value: number | null, row: number, col: string): void {\n    switch (col) {\n      case CurveParam.X:\n        this.curveDataDict[row][CurveParam.X] = value;\n        break;\n      case CurveParam.Y1:\n        this.curveDataDict[row][CurveParam.Y1] = value;\n        break;\n      case CurveParam.Y2:\n        this.curveDataDict[row][CurveParam.Y2] = value;\n        break;\n      case CurveParam.Y3:\n        this.curveDataDict[row][CurveParam.Y3] = value;\n        break;\n      case CurveParam.Y4:\n        this.curveDataDict[row][CurveParam.Y4] = value;\n        break;\n    }\n    // this.sortDataByX();\n  }\n\n  // private sortDataByX(): void {\n  //   this.curveDataDict = this.curveDataDict.sort(\n  //     (a, b) => {\n  //       if (a['x'] === null)\n  //         return 1;\n  //       if (b['x'] === null)\n  //         return -1;\n  //       if (a['x']  b['x'])\n  //         return 1;\n  //       else\n  //         return 0;\n  //     }\n  //   );\n  // }\n}\n\n\nexport interface CurveInterface {\n  getCurveCount(): number;\n\n  setCurveCount(curveCount: number): void;\n\n  getIsMagnitudeOn(): boolean;\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void;\n}\n\n\nexport interface CurveInterfaceStorageObject {\n  curveCount: CurveCounts;\n  isMagnitudeOn: boolean;\n}\n\n\nexport class CurveImpl implements CurveInterface {\n  private curveCount: number = CurveCounts.ONE;\n  private isMagnitudeOn: boolean = false;\n\n  public static getDefaultStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: CurveCounts.ONE, isMagnitudeOn: false};\n  }\n\n  getCurveCount(): number {\n    return this.curveCount;\n  }\n\n  getIsMagnitudeOn(): boolean {\n    return this.isMagnitudeOn;\n  }\n\n  setCurveCount(curveCount: number): void {\n    if (curveCount in CurveCounts)\n      this.curveCount = curveCount;\n    else\n      throw new Error(\"Invalid curve count\");\n  }\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void {\n    this.isMagnitudeOn = isMagnitudeOn;\n  }\n\n  public getStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: this.curveCount, isMagnitudeOn: this.isMagnitudeOn};\n  }\n\n  public setStorageObject(curveInterfaceStorageObject: CurveInterfaceStorageObject): void {\n    this.curveCount = curveInterfaceStorageObject.curveCount;\n    this.isMagnitudeOn = curveInterfaceStorageObject.isMagnitudeOn;\n  }\n\n}\n\n\nexport class CurveStorage implements MyStorage {\n  private readonly dataKey: string = \"curve-data\";\n  private readonly interfaceKey: string = \"curve-interface\";\n  private readonly chartInfoKey: string = \"curve-chart-info\";\n  private readonly defaultData: CurveDataDict[]\n  private readonly defaultChartInfo!: CurveChartInfoStorageObject\n  private readonly defaultInterface!: CurveInterfaceStorageObject\n\n  constructor(defaultData: CurveDataDict[], defaultChartInfo: CurveChartInfoStorageObject, defaultInterface: CurveInterfaceStorageObject) {\n    this.defaultData = defaultData;\n    this.defaultChartInfo = defaultChartInfo;\n    this.defaultInterface = defaultInterface;\n  }\n\n  getChartInfo(): CurveChartInfoStorageObject {\n    if (localStorage.getItem(this.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(this.chartInfoKey)!);\n    } else\n      return this.defaultChartInfo;\n  }\n\n  getData(): CurveDataDict[] {\n    if (localStorage.getItem(this.dataKey)) {\n      return JSON.parse(localStorage.getItem(this.dataKey)!);\n    } else\n      return this.defaultData;\n  }\n\n  getInterface(): any {\n    if (localStorage.getItem(this.interfaceKey)) {\n      return JSON.parse(localStorage.getItem(this.interfaceKey)!);\n    } else\n      return this.defaultInterface;\n  }\n\n  saveChartInfo(chartInfoObject: CurveChartInfoStorageObject): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(chartInfoObject));\n  }\n\n  saveData(data: CurveDataDict[]): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: any): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(interfaceInfo));\n  }\n\n  resetChartInfo(): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(this.defaultChartInfo));\n  }\n\n  resetData(): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(this.defaultData));\n  }\n\n  resetInterface(): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(this.defaultInterface));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CurveInterfaceStorageObject.html":{"url":"interfaces/CurveInterfaceStorageObject.html","title":"interface - CurveInterfaceStorageObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CurveInterfaceStorageObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/curve/curve.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            curveCount\n                                        \n                                \n                                \n                                        \n                                            isMagnitudeOn\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        curveCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        curveCount:         CurveCounts\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CurveCounts\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isMagnitudeOn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isMagnitudeOn:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\n\nexport enum CurveParam {\n  X = 'x',\n  Y1 = 'y1',\n  Y2 = 'y2',\n  Y3 = 'y3',\n  Y4 = 'y4'\n}\n\nexport enum CurveCounts {\n  ONE = 1,\n  TWO = 2,\n  THREE = 3,\n  FOUR = 4\n}\n\nexport interface CurveDataDict {\n  x: number | null;\n  y1: number | null;\n  y2?: number | null;\n  y3?: number | null;\n  y4?: number | null;\n}\n\nexport interface CurveChartInfoStorageObject {\n  chartTitle: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n  dataLabels: string;\n}\n\nexport class CurveChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n  private dataLabels: string[];\n\n  constructor() {\n    this.chartTitle = \"Title\";\n    this.xAxisLabel = \"x\";\n    this.yAxisLabel = \"y\";\n    this.dataLabels = [\"y1\", \"y2\", \"y3\", \"y4\"];\n  }\n\n  static getDefaultStorageObject(): CurveChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n      dataLabels: \"y1, y2, y3, y4\"\n    };\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabels.join(\", \");\n  }\n\n  getTableLabels(): string[] {\n    return [\"x\"].concat(this.dataLabels);\n  }\n\n  getDataLabelByCurveCount(curveCount: number): string {\n    const result = this.dataLabels;\n    return result.slice(0, curveCount).join(\", \");\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(dataLabel: string): void {\n    const dataLabelArray = dataLabel.split(\",\").map((label) => label.trim());\n    for (let i = 0; i = CurveCounts.TWO) {\n        row.y2 = entry.y2;\n      }\n      if (curveCount >= CurveCounts.THREE) {\n        row.y3 = entry.y3;\n      }\n      if (curveCount >= CurveCounts.FOUR) {\n        row.y4 = entry.y4;\n      }\n      result.push(row);\n    }\n    return result;\n  }\n\n  public getDataArray(): any[] {\n    let result: any[] = [[], [], [], []];\n    for (const entry of this.curveDataDict) {\n      result[0].push([entry.x, entry.y1]);\n      result[1].push([entry.x, entry.y2]);\n      result[2].push([entry.x, entry.y3]);\n      result[3].push([entry.x, entry.y4]);\n    }\n    return result;\n  }\n\n  public setData(data: CurveDataDict[]): void {\n    this.curveDataDict = data;\n    // this.sortDataByX();\n  }\n\n\n  addRow(index: number, amount: number) {\n    if (index > 0) {\n      for (let i = 0; i  {\n      this.setDataByCell(newValue, row, col);\n    });\n  }\n\n  private setDataByCell(value: number | null, row: number, col: string): void {\n    switch (col) {\n      case CurveParam.X:\n        this.curveDataDict[row][CurveParam.X] = value;\n        break;\n      case CurveParam.Y1:\n        this.curveDataDict[row][CurveParam.Y1] = value;\n        break;\n      case CurveParam.Y2:\n        this.curveDataDict[row][CurveParam.Y2] = value;\n        break;\n      case CurveParam.Y3:\n        this.curveDataDict[row][CurveParam.Y3] = value;\n        break;\n      case CurveParam.Y4:\n        this.curveDataDict[row][CurveParam.Y4] = value;\n        break;\n    }\n    // this.sortDataByX();\n  }\n\n  // private sortDataByX(): void {\n  //   this.curveDataDict = this.curveDataDict.sort(\n  //     (a, b) => {\n  //       if (a['x'] === null)\n  //         return 1;\n  //       if (b['x'] === null)\n  //         return -1;\n  //       if (a['x']  b['x'])\n  //         return 1;\n  //       else\n  //         return 0;\n  //     }\n  //   );\n  // }\n}\n\n\nexport interface CurveInterface {\n  getCurveCount(): number;\n\n  setCurveCount(curveCount: number): void;\n\n  getIsMagnitudeOn(): boolean;\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void;\n}\n\n\nexport interface CurveInterfaceStorageObject {\n  curveCount: CurveCounts;\n  isMagnitudeOn: boolean;\n}\n\n\nexport class CurveImpl implements CurveInterface {\n  private curveCount: number = CurveCounts.ONE;\n  private isMagnitudeOn: boolean = false;\n\n  public static getDefaultStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: CurveCounts.ONE, isMagnitudeOn: false};\n  }\n\n  getCurveCount(): number {\n    return this.curveCount;\n  }\n\n  getIsMagnitudeOn(): boolean {\n    return this.isMagnitudeOn;\n  }\n\n  setCurveCount(curveCount: number): void {\n    if (curveCount in CurveCounts)\n      this.curveCount = curveCount;\n    else\n      throw new Error(\"Invalid curve count\");\n  }\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void {\n    this.isMagnitudeOn = isMagnitudeOn;\n  }\n\n  public getStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: this.curveCount, isMagnitudeOn: this.isMagnitudeOn};\n  }\n\n  public setStorageObject(curveInterfaceStorageObject: CurveInterfaceStorageObject): void {\n    this.curveCount = curveInterfaceStorageObject.curveCount;\n    this.isMagnitudeOn = curveInterfaceStorageObject.isMagnitudeOn;\n  }\n\n}\n\n\nexport class CurveStorage implements MyStorage {\n  private readonly dataKey: string = \"curve-data\";\n  private readonly interfaceKey: string = \"curve-interface\";\n  private readonly chartInfoKey: string = \"curve-chart-info\";\n  private readonly defaultData: CurveDataDict[]\n  private readonly defaultChartInfo!: CurveChartInfoStorageObject\n  private readonly defaultInterface!: CurveInterfaceStorageObject\n\n  constructor(defaultData: CurveDataDict[], defaultChartInfo: CurveChartInfoStorageObject, defaultInterface: CurveInterfaceStorageObject) {\n    this.defaultData = defaultData;\n    this.defaultChartInfo = defaultChartInfo;\n    this.defaultInterface = defaultInterface;\n  }\n\n  getChartInfo(): CurveChartInfoStorageObject {\n    if (localStorage.getItem(this.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(this.chartInfoKey)!);\n    } else\n      return this.defaultChartInfo;\n  }\n\n  getData(): CurveDataDict[] {\n    if (localStorage.getItem(this.dataKey)) {\n      return JSON.parse(localStorage.getItem(this.dataKey)!);\n    } else\n      return this.defaultData;\n  }\n\n  getInterface(): any {\n    if (localStorage.getItem(this.interfaceKey)) {\n      return JSON.parse(localStorage.getItem(this.interfaceKey)!);\n    } else\n      return this.defaultInterface;\n  }\n\n  saveChartInfo(chartInfoObject: CurveChartInfoStorageObject): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(chartInfoObject));\n  }\n\n  saveData(data: CurveDataDict[]): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: any): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(interfaceInfo));\n  }\n\n  resetChartInfo(): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(this.defaultChartInfo));\n  }\n\n  resetData(): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(this.defaultData));\n  }\n\n  resetInterface(): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(this.defaultInterface));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CurveModule.html":{"url":"modules/CurveModule.html","title":"module - CurveModule","body":"\n                   \n\n\n\n\n    Modules\n    CurveModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CurveModule\n\n\n\ncluster_CurveModule_declarations\n\n\n\ncluster_CurveModule_exports\n\n\n\ncluster_CurveModule_imports\n\n\n\ncluster_CurveModule_providers\n\n\n\n\nCurveChartComponent\n\nCurveChartComponent\n\n\n\nCurveModule\n\nCurveModule\n\nCurveModule -->\n\nCurveChartComponent->CurveModule\n\n\n\n\n\nCurveChartFormComponent\n\nCurveChartFormComponent\n\nCurveModule -->\n\nCurveChartFormComponent->CurveModule\n\n\n\n\n\nCurveComponent\n\nCurveComponent\n\nCurveModule -->\n\nCurveComponent->CurveModule\n\n\n\n\n\nCurveHighChartComponent\n\nCurveHighChartComponent\n\nCurveModule -->\n\nCurveHighChartComponent->CurveModule\n\n\n\n\n\nCurveTableComponent\n\nCurveTableComponent\n\nCurveModule -->\n\nCurveTableComponent->CurveModule\n\n\n\n\n\nLineFormComponent\n\nLineFormComponent\n\nCurveModule -->\n\nLineFormComponent->CurveModule\n\n\n\n\n\nCurveComponent \n\nCurveComponent \n\nCurveComponent  -->\n\nCurveModule->CurveComponent \n\n\n\n\n\nSimpleDataButtonModule\n\nSimpleDataButtonModule\n\nCurveModule -->\n\nSimpleDataButtonModule->CurveModule\n\n\n\n\n\nSimpleGraphButtonModule\n\nSimpleGraphButtonModule\n\nCurveModule -->\n\nSimpleGraphButtonModule->CurveModule\n\n\n\n\n\nCurveService\n\nCurveService\n\nCurveModule -->\n\nCurveService->CurveModule\n\n\n\n\n\nHonorCodePopupService\n\nHonorCodePopupService\n\nCurveModule -->\n\nHonorCodePopupService->CurveModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tools/curve/curve.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module encapsulating CurveComponent\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CurveChartComponent\n                        \n                        \n                            CurveChartFormComponent\n                        \n                        \n                            CurveComponent\n                        \n                        \n                            CurveHighChartComponent\n                        \n                        \n                            CurveTableComponent\n                        \n                        \n                            LineFormComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            CurveService\n                        \n                        \n                            HonorCodePopupService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SimpleDataButtonModule\n                        \n                        \n                            SimpleGraphButtonModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CurveComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from \"@angular/core\";\nimport {CurveComponent} from \"./curve.component\";\nimport {SimpleDataButtonModule} from \"../shared/simple-data-button/simple-data-button.component\";\nimport {SimpleGraphButtonModule} from \"../shared/simple-graph-button/simple-graph-button.component\";\nimport {LineFormComponent} from \"./line-form/line-form.component\";\nimport {MatButtonToggleModule} from \"@angular/material/button-toggle\";\nimport {MatLegacyInputModule as MatInputModule} from \"@angular/material/legacy-input\";\nimport {MatLegacySelectModule as MatSelectModule} from \"@angular/material/legacy-select\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {MatLegacyFormFieldModule as MatFormFieldModule} from \"@angular/material/legacy-form-field\";\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport {CurveTableComponent} from './curve-table/curve-table.component';\nimport {HotTableModule} from \"@handsontable/angular\";\nimport {CurveService} from \"./curve.service\";\nimport {CurveChartComponent} from \"./curve-chart/curve-chart.component\";\nimport {NgChartsModule} from \"ng2-charts\";\nimport {CurveChartFormComponent} from './curve-chart-form/curve-chart-form.component';\nimport {MatLegacyButtonModule as MatButtonModule} from \"@angular/material/legacy-button\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatLegacySlideToggleModule as MatSlideToggleModule} from \"@angular/material/legacy-slide-toggle\";\nimport {CurveHighChartComponent} from './curve-highchart/curve-high-chart.component';\nimport {HighchartsChartModule} from \"highcharts-angular\";\nimport {HonorCodePopupService} from \"../shared/honor-code-popup/honor-code-popup.service\";\n\n/**\n * Module encapsulating {@link CurveComponent}\n */\n@NgModule({\n  imports: [\n    NgChartsModule,\n    SimpleDataButtonModule,\n    SimpleGraphButtonModule,\n    MatButtonToggleModule,\n    MatInputModule,\n    MatSelectModule,\n    FormsModule,\n    MatFormFieldModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    HotTableModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSlideToggleModule,\n    HighchartsChartModule,\n  ],\n  declarations: [\n    CurveComponent,\n    LineFormComponent,\n    CurveTableComponent,\n    CurveChartComponent,\n    CurveChartFormComponent,\n    CurveHighChartComponent,\n  ],\n  exports: [CurveComponent],\n  providers: [CurveService, HonorCodePopupService],\n})\nexport class CurveModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CurveStorage.html":{"url":"classes/CurveStorage.html","title":"class - CurveStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CurveStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/curve/curve.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyStorage\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                chartInfoKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                dataKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                defaultChartInfo\n                            \n                            \n                                    Private\n                                    Readonly\n                                defaultData\n                            \n                            \n                                    Private\n                                    Readonly\n                                defaultInterface\n                            \n                            \n                                    Private\n                                    Readonly\n                                interfaceKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getChartInfo\n                            \n                            \n                                getData\n                            \n                            \n                                getInterface\n                            \n                            \n                                resetChartInfo\n                            \n                            \n                                resetData\n                            \n                            \n                                resetInterface\n                            \n                            \n                                saveChartInfo\n                            \n                            \n                                saveData\n                            \n                            \n                                saveInterface\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(defaultData: CurveDataDict[], defaultChartInfo: CurveChartInfoStorageObject, defaultInterface: CurveInterfaceStorageObject)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/curve/curve.service.util.ts:307\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        defaultData\n                                                  \n                                                        \n                                                                        CurveDataDict[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        defaultChartInfo\n                                                  \n                                                        \n                                                                        CurveChartInfoStorageObject\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        defaultInterface\n                                                  \n                                                        \n                                                                        CurveInterfaceStorageObject\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        chartInfoKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"curve-chart-info\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.util.ts:304\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dataKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"curve-data\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.util.ts:302\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        defaultChartInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CurveChartInfoStorageObject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.util.ts:306\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        defaultData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CurveDataDict[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.util.ts:305\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        defaultInterface\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CurveInterfaceStorageObject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.util.ts:307\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        interfaceKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"curve-interface\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve.service.util.ts:303\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getChartInfo\n                        \n                    \n                \n            \n            \n                \ngetChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:315\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         CurveChartInfoStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:322\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         CurveDataDict[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInterface\n                        \n                    \n                \n            \n            \n                \ngetInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:329\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetChartInfo\n                        \n                    \n                \n            \n            \n                \nresetChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:348\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetData\n                        \n                    \n                \n            \n            \n                \nresetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:352\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetInterface\n                        \n                    \n                \n            \n            \n                \nresetInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:356\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveChartInfo\n                        \n                    \n                \n            \n            \n                \nsaveChartInfo(chartInfoObject: CurveChartInfoStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:336\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartInfoObject\n                                    \n                                                CurveChartInfoStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveData\n                        \n                    \n                \n            \n            \n                \nsaveData(data: CurveDataDict[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:340\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CurveDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveInterface\n                        \n                    \n                \n            \n            \n                \nsaveInterface(interfaceInfo: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve.service.util.ts:344\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    interfaceInfo\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\n\nexport enum CurveParam {\n  X = 'x',\n  Y1 = 'y1',\n  Y2 = 'y2',\n  Y3 = 'y3',\n  Y4 = 'y4'\n}\n\nexport enum CurveCounts {\n  ONE = 1,\n  TWO = 2,\n  THREE = 3,\n  FOUR = 4\n}\n\nexport interface CurveDataDict {\n  x: number | null;\n  y1: number | null;\n  y2?: number | null;\n  y3?: number | null;\n  y4?: number | null;\n}\n\nexport interface CurveChartInfoStorageObject {\n  chartTitle: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n  dataLabels: string;\n}\n\nexport class CurveChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n  private dataLabels: string[];\n\n  constructor() {\n    this.chartTitle = \"Title\";\n    this.xAxisLabel = \"x\";\n    this.yAxisLabel = \"y\";\n    this.dataLabels = [\"y1\", \"y2\", \"y3\", \"y4\"];\n  }\n\n  static getDefaultStorageObject(): CurveChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n      dataLabels: \"y1, y2, y3, y4\"\n    };\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabels.join(\", \");\n  }\n\n  getTableLabels(): string[] {\n    return [\"x\"].concat(this.dataLabels);\n  }\n\n  getDataLabelByCurveCount(curveCount: number): string {\n    const result = this.dataLabels;\n    return result.slice(0, curveCount).join(\", \");\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(dataLabel: string): void {\n    const dataLabelArray = dataLabel.split(\",\").map((label) => label.trim());\n    for (let i = 0; i = CurveCounts.TWO) {\n        row.y2 = entry.y2;\n      }\n      if (curveCount >= CurveCounts.THREE) {\n        row.y3 = entry.y3;\n      }\n      if (curveCount >= CurveCounts.FOUR) {\n        row.y4 = entry.y4;\n      }\n      result.push(row);\n    }\n    return result;\n  }\n\n  public getDataArray(): any[] {\n    let result: any[] = [[], [], [], []];\n    for (const entry of this.curveDataDict) {\n      result[0].push([entry.x, entry.y1]);\n      result[1].push([entry.x, entry.y2]);\n      result[2].push([entry.x, entry.y3]);\n      result[3].push([entry.x, entry.y4]);\n    }\n    return result;\n  }\n\n  public setData(data: CurveDataDict[]): void {\n    this.curveDataDict = data;\n    // this.sortDataByX();\n  }\n\n\n  addRow(index: number, amount: number) {\n    if (index > 0) {\n      for (let i = 0; i  {\n      this.setDataByCell(newValue, row, col);\n    });\n  }\n\n  private setDataByCell(value: number | null, row: number, col: string): void {\n    switch (col) {\n      case CurveParam.X:\n        this.curveDataDict[row][CurveParam.X] = value;\n        break;\n      case CurveParam.Y1:\n        this.curveDataDict[row][CurveParam.Y1] = value;\n        break;\n      case CurveParam.Y2:\n        this.curveDataDict[row][CurveParam.Y2] = value;\n        break;\n      case CurveParam.Y3:\n        this.curveDataDict[row][CurveParam.Y3] = value;\n        break;\n      case CurveParam.Y4:\n        this.curveDataDict[row][CurveParam.Y4] = value;\n        break;\n    }\n    // this.sortDataByX();\n  }\n\n  // private sortDataByX(): void {\n  //   this.curveDataDict = this.curveDataDict.sort(\n  //     (a, b) => {\n  //       if (a['x'] === null)\n  //         return 1;\n  //       if (b['x'] === null)\n  //         return -1;\n  //       if (a['x']  b['x'])\n  //         return 1;\n  //       else\n  //         return 0;\n  //     }\n  //   );\n  // }\n}\n\n\nexport interface CurveInterface {\n  getCurveCount(): number;\n\n  setCurveCount(curveCount: number): void;\n\n  getIsMagnitudeOn(): boolean;\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void;\n}\n\n\nexport interface CurveInterfaceStorageObject {\n  curveCount: CurveCounts;\n  isMagnitudeOn: boolean;\n}\n\n\nexport class CurveImpl implements CurveInterface {\n  private curveCount: number = CurveCounts.ONE;\n  private isMagnitudeOn: boolean = false;\n\n  public static getDefaultStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: CurveCounts.ONE, isMagnitudeOn: false};\n  }\n\n  getCurveCount(): number {\n    return this.curveCount;\n  }\n\n  getIsMagnitudeOn(): boolean {\n    return this.isMagnitudeOn;\n  }\n\n  setCurveCount(curveCount: number): void {\n    if (curveCount in CurveCounts)\n      this.curveCount = curveCount;\n    else\n      throw new Error(\"Invalid curve count\");\n  }\n\n  setIsMagnitudeOn(isMagnitudeOn: boolean): void {\n    this.isMagnitudeOn = isMagnitudeOn;\n  }\n\n  public getStorageObject(): CurveInterfaceStorageObject {\n    return {curveCount: this.curveCount, isMagnitudeOn: this.isMagnitudeOn};\n  }\n\n  public setStorageObject(curveInterfaceStorageObject: CurveInterfaceStorageObject): void {\n    this.curveCount = curveInterfaceStorageObject.curveCount;\n    this.isMagnitudeOn = curveInterfaceStorageObject.isMagnitudeOn;\n  }\n\n}\n\n\nexport class CurveStorage implements MyStorage {\n  private readonly dataKey: string = \"curve-data\";\n  private readonly interfaceKey: string = \"curve-interface\";\n  private readonly chartInfoKey: string = \"curve-chart-info\";\n  private readonly defaultData: CurveDataDict[]\n  private readonly defaultChartInfo!: CurveChartInfoStorageObject\n  private readonly defaultInterface!: CurveInterfaceStorageObject\n\n  constructor(defaultData: CurveDataDict[], defaultChartInfo: CurveChartInfoStorageObject, defaultInterface: CurveInterfaceStorageObject) {\n    this.defaultData = defaultData;\n    this.defaultChartInfo = defaultChartInfo;\n    this.defaultInterface = defaultInterface;\n  }\n\n  getChartInfo(): CurveChartInfoStorageObject {\n    if (localStorage.getItem(this.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(this.chartInfoKey)!);\n    } else\n      return this.defaultChartInfo;\n  }\n\n  getData(): CurveDataDict[] {\n    if (localStorage.getItem(this.dataKey)) {\n      return JSON.parse(localStorage.getItem(this.dataKey)!);\n    } else\n      return this.defaultData;\n  }\n\n  getInterface(): any {\n    if (localStorage.getItem(this.interfaceKey)) {\n      return JSON.parse(localStorage.getItem(this.interfaceKey)!);\n    } else\n      return this.defaultInterface;\n  }\n\n  saveChartInfo(chartInfoObject: CurveChartInfoStorageObject): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(chartInfoObject));\n  }\n\n  saveData(data: CurveDataDict[]): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: any): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(interfaceInfo));\n  }\n\n  resetChartInfo(): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(this.defaultChartInfo));\n  }\n\n  resetData(): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(this.defaultData));\n  }\n\n  resetInterface(): void {\n    localStorage.setItem(this.interfaceKey, JSON.stringify(this.defaultInterface));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CurveTable.html":{"url":"classes/CurveTable.html","title":"class - CurveTable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CurveTable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/curve/curve-table/curve-table.component.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyTable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hotRegisterer\n                            \n                            \n                                    Private\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                            \n                                getTable\n                            \n                            \n                                renderTable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/curve/curve-table/curve-table.component.ts:70\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hotRegisterer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HotTableRegisterer()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-table/curve-table.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-table/curve-table.component.ts:69\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-table/curve-table.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTable\n                        \n                    \n                \n            \n            \n                \ngetTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-table/curve-table.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Handsontable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderTable\n                        \n                    \n                \n            \n            \n                \nrenderTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-table/curve-table.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {AfterViewInit, Component, OnDestroy} from '@angular/core';\nimport {CurveService} from \"../curve.service\";\n\nimport {CurveDataDict} from \"../curve.service.util\";\nimport {MyTable} from \"../../shared/tables/table-interface\";\nimport Handsontable from \"handsontable\";\nimport {HotTableRegisterer} from \"@handsontable/angular\";\nimport {Subject, takeUntil} from 'rxjs';\n\n@Component({\n  selector: 'app-curve-table',\n  templateUrl: './curve-table.component.html',\n  styleUrls: ['./curve-table.component.scss']\n})\nexport class CurveTableComponent implements AfterViewInit, OnDestroy {\n  colNames: any;\n  dataSet: any;\n  id: string = \"curve-table\";\n  table: CurveTable = new CurveTable(this.id);\n  private destroy$: Subject = new Subject();\n\n  constructor(private dataService: CurveService) {\n    this.colNames = this.dataService.getDataLabelArray();\n    this.dataSet = this.dataService.getData();\n  }\n\n  ngAfterViewInit(): void {\n    this.dataService.data$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      (data: CurveDataDict[]) => {\n        this.dataSet = this.dataService.getData();\n        this.table.renderTable();\n      });\n    this.dataService.dataKeys$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      (keys: string[]) => {\n        this.colNames = keys;\n        this.table.renderTable();\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n  }\n\n  public onChange = (changes: any, source: any) => {\n    if (changes) {\n      this.dataService.setData(this.table.getData());\n    }\n  }\n\n  public onRemove = (index: number, amount: number) => {\n    this.dataService.removeRow(index, amount);\n  }\n\n  public onInsert = (index: number, amount: number) => {\n    this.dataService.addRow(index, amount);\n  }\n\n\n}\n\n\nclass CurveTable implements MyTable {\n  private readonly id: string;\n  private hotRegisterer = new HotTableRegisterer();\n\n  constructor(id: string) {\n    this.id = id;\n  }\n\n  getTable(): Handsontable {\n    return this.hotRegisterer.getInstance(this.id);\n  }\n\n  renderTable(): void {\n    this.getTable().render();\n  }\n\n  getData(): any[] {\n    return this.getTable().getSourceData();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CurveTableComponent.html":{"url":"components/CurveTableComponent.html","title":"component - CurveTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CurveTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/curve/curve-table/curve-table.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-curve-table\n            \n\n\n\n            \n                styleUrls\n                ./curve-table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./curve-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                colNames\n                            \n                            \n                                dataSet\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                id\n                            \n                            \n                                    Public\n                                onChange\n                            \n                            \n                                    Public\n                                onInsert\n                            \n                            \n                                    Public\n                                onRemove\n                            \n                            \n                                table\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: CurveService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/curve/curve-table/curve-table.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        CurveService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-table/curve-table.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/curve-table/curve-table.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        colNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-table/curve-table.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-table/curve-table.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-table/curve-table.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"curve-table\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-table/curve-table.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-table/curve-table.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onInsert\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-table/curve-table.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onRemove\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-table/curve-table.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        table\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CurveTable\n\n                    \n                \n                \n                    \n                        Default value : new CurveTable(this.id)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/curve-table/curve-table.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnDestroy} from '@angular/core';\nimport {CurveService} from \"../curve.service\";\n\nimport {CurveDataDict} from \"../curve.service.util\";\nimport {MyTable} from \"../../shared/tables/table-interface\";\nimport Handsontable from \"handsontable\";\nimport {HotTableRegisterer} from \"@handsontable/angular\";\nimport {Subject, takeUntil} from 'rxjs';\n\n@Component({\n  selector: 'app-curve-table',\n  templateUrl: './curve-table.component.html',\n  styleUrls: ['./curve-table.component.scss']\n})\nexport class CurveTableComponent implements AfterViewInit, OnDestroy {\n  colNames: any;\n  dataSet: any;\n  id: string = \"curve-table\";\n  table: CurveTable = new CurveTable(this.id);\n  private destroy$: Subject = new Subject();\n\n  constructor(private dataService: CurveService) {\n    this.colNames = this.dataService.getDataLabelArray();\n    this.dataSet = this.dataService.getData();\n  }\n\n  ngAfterViewInit(): void {\n    this.dataService.data$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      (data: CurveDataDict[]) => {\n        this.dataSet = this.dataService.getData();\n        this.table.renderTable();\n      });\n    this.dataService.dataKeys$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      (keys: string[]) => {\n        this.colNames = keys;\n        this.table.renderTable();\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n  }\n\n  public onChange = (changes: any, source: any) => {\n    if (changes) {\n      this.dataService.setData(this.table.getData());\n    }\n  }\n\n  public onRemove = (index: number, amount: number) => {\n    this.dataService.removeRow(index, amount);\n  }\n\n  public onInsert = (index: number, amount: number) => {\n    this.dataService.addRow(index, amount);\n  }\n\n\n}\n\n\nclass CurveTable implements MyTable {\n  private readonly id: string;\n  private hotRegisterer = new HotTableRegisterer();\n\n  constructor(id: string) {\n    this.id = id;\n  }\n\n  getTable(): Handsontable {\n    return this.hotRegisterer.getInstance(this.id);\n  }\n\n  renderTable(): void {\n    this.getTable().render();\n  }\n\n  getData(): any[] {\n    return this.getTable().getSourceData();\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./curve-table.component.scss\n                \n                .container {\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CurveTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultAppearanceSettings.html":{"url":"classes/DefaultAppearanceSettings.html","title":"class - DefaultAppearanceSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultAppearanceSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/settings/appearance/service/appearance.utils.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                chartColorMode\n                            \n                            \n                                    Static\n                                fontFamily\n                            \n                            \n                                    Static\n                                fontSize\n                            \n                            \n                                    Static\n                                fontStyle\n                            \n                            \n                                    Static\n                                theme\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        chartColorMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChartColorMode\n\n                    \n                \n                \n                    \n                        Default value : ChartColorMode.LIGHT\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fontFamily\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FontFamily\n\n                    \n                \n                \n                    \n                        Default value : FontFamily.ROBOTO\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fontSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FontSizes\n\n                    \n                \n                \n                    \n                        Default value : FontSizes.DEFAULT\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fontStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FontStyles\n\n                    \n                \n                \n                    \n                        Default value : FontStyles.DEFAULT\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ColorThemes\n\n                    \n                \n                \n                    \n                        Default value : ColorThemes.LIGHT\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/settings/appearance/service/appearance.utils.ts:88\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface MyColorTheme {\n  key: string;\n  displayName: string;\n}\n\nexport enum ColorThemes {\n  LIGHT = 'LIGHT_THEME',\n  DARK = 'DARK_THEME',\n  // HIGH_CONTRAST = 'HC_THEME',\n  HIGH_CONTRAST_DARK = 'HC_DARK_THEME'\n}\n\nexport interface MyFontStyle {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontStyles {\n  DEFAULT = 'normal',\n  BOLD = 'bold',\n  EXTRA_BOLD = 'bolder',\n}\n\nexport interface MyFontSize {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontSizes {\n  SMALL = \"small\",\n  DEFAULT = \"default\",\n  LARGE = \"large\",\n  LARGER = \"larger\",\n}\n\nexport enum FontFamily {\n  ROBOTO = 'Roboto',\n  COMIC_NEUE = 'Comic-Neue',\n}\n\nexport interface MyFontFamily {\n  key: string;\n  displayName: string;\n}\n\nexport class ColorThemeSettings {\n  public static getThemeLists(): MyColorTheme[] {\n    return [\n      {key: ColorThemes.LIGHT, displayName: 'Light'},\n      {key: ColorThemes.DARK, displayName: 'Dark'},\n      // {key: ColorThemes.HIGH_CONTRAST, displayName: 'High Contrast'},\n      {key: ColorThemes.HIGH_CONTRAST_DARK, displayName: 'High Contrast Dark'}\n    ];\n  }\n\n  public static getFontStyleLists(): MyFontStyle[] {\n    return [\n      {key: FontStyles.DEFAULT, displayName: 'Default'},\n      {key: FontStyles.BOLD, displayName: 'Bold'},\n      {key: FontStyles.EXTRA_BOLD, displayName: 'Extra Bold'}\n    ]\n  }\n\n  public static getFontSizeLists(): MyFontSize[] {\n    return [\n      {key: FontSizes.SMALL, displayName: 'Small'},\n      {key: FontSizes.DEFAULT, displayName: 'Default'},\n      {key: FontSizes.LARGE, displayName: 'Large'},\n      {key: FontSizes.LARGER, displayName: 'Larger'}\n    ]\n  }\n\n  public static getFontFamilyLists(): MyFontFamily[] {\n    return [\n      {key: FontFamily.ROBOTO, displayName: 'Roboto'},\n      {key: FontFamily.COMIC_NEUE, displayName: 'Comic Neue'}\n    ]\n  }\n}\n\nexport enum ChartColorMode {\n  LIGHT = 'LIGHT',\n  DARK = 'DARK'\n}\n\n\nexport class DefaultAppearanceSettings {\n  public static theme: ColorThemes = ColorThemes.LIGHT;\n  public static fontStyle: FontStyles = FontStyles.DEFAULT;\n  public static fontSize: FontSizes = FontSizes.DEFAULT;\n  public static fontFamily: FontFamily = FontFamily.ROBOTO;\n  public static chartColorMode: ChartColorMode = ChartColorMode.LIGHT;\n}\n\n\nexport class ChartColor {\n  private static readonly lineColorLightArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n  private static readonly lineColorDarkArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n\n  public static getFontColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#2b4162' : '#f5f0f6';\n  }\n\n  public static getBackgroundColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#C3CFD4' : '#325769';\n  }\n\n  public static getLineColor(index: number): string {\n    if (index = this.lineColorLightArray.length)\n      return 'black';\n    else\n      // return mode === ChartColorMode.LIGHT ? this.lineColorLightArray[index] : this.lineColorDarkArray[index];\n      return this.lineColorLightArray[index];\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DualChartFormComponent.html":{"url":"components/DualChartFormComponent.html","title":"component - DualChartFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DualChartFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/dual/dual-chart-form/dual-chart-form.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dual-chart-form\n            \n\n\n\n            \n                styleUrls\n                ./dual-chart-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dual-chart-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Public\n                                formGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: DualService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/dual/dual-chart-form/dual-chart-form.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        DualService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual-chart-form/dual-chart-form.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual-chart-form/dual-chart-form.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual-chart-form/dual-chart-form.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {debounceTime, Subject, takeUntil} from \"rxjs\";\nimport {DualService} from \"../dual.service\";\n\n@Component({\n  selector: 'app-dual-chart-form',\n  templateUrl: './dual-chart-form.component.html',\n  styleUrls: ['./dual-chart-form.component.scss']\n})\nexport class DualChartFormComponent {\n  public formGroup!: FormGroup;\n  private destroy$: Subject = new Subject();\n\n  constructor(private service: DualService) {\n    this.service.chartInfo$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(info => {\n      this.formGroup = new FormGroup({\n        chartTitle: new FormControl(this.service.getChartTitle()),\n        dataLabel: new FormControl(this.service.getDataLabel()),\n        xAxisLabel: new FormControl(this.service.getXAxisLabel()),\n        yAxisLabel: new FormControl(this.service.getYAxisLabel()),\n      })\n      this.formGroup.controls['chartTitle'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(title => {\n        this.service.setChartTitle(title);\n      });\n      this.formGroup.controls['dataLabel'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(labels => {\n        this.service.setDataLabel(labels);\n      });\n      this.formGroup.controls['xAxisLabel'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(label => {\n        this.service.setXAxisLabel(label);\n      });\n      this.formGroup.controls['yAxisLabel'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(label => {\n        this.service.setYAxisLabel(label);\n      });\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        Title\n        \n      \n    \n    \n      \n        Data\n        \n      \n    \n  \n  \n    \n      \n        X Axis\n        \n      \n    \n    \n      \n        Y Axis\n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./dual-chart-form.component.scss\n                \n                mat-form-field {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Title                                    Data                                        X Axis                                    Y Axis                    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DualChartFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DualChartInfo.html":{"url":"classes/DualChartInfo.html","title":"class - DualChartInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DualChartInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/dual/dual.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ChartInfo\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chartTitle\n                            \n                            \n                                    Private\n                                dataLabel\n                            \n                            \n                                    Private\n                                xAxisLabel\n                            \n                            \n                                    Private\n                                yAxisLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getChartTitle\n                            \n                            \n                                getDataLabel\n                            \n                            \n                                getDataLabelArray\n                            \n                            \n                                    Static\n                                getDefaultChartInfo\n                            \n                            \n                                getStorageObject\n                            \n                            \n                                getXAxisLabel\n                            \n                            \n                                getYAxisLabel\n                            \n                            \n                                setChartTitle\n                            \n                            \n                                setDataLabel\n                            \n                            \n                                setStorageObject\n                            \n                            \n                                setXAxisLabel\n                            \n                            \n                                setYAxisLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/dual/dual.service.util.ts:95\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual.service.util.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual.service.util.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        xAxisLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual.service.util.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        yAxisLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual.service.util.ts:95\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getChartTitle\n                        \n                    \n                \n            \n            \n                \ngetChartTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataLabel\n                        \n                    \n                \n            \n            \n                \ngetDataLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataLabelArray\n                        \n                    \n                \n            \n            \n                \ngetDataLabelArray()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getDefaultChartInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         DualChartInfoStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStorageObject\n                        \n                    \n                \n            \n            \n                \ngetStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         DualChartInfoStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getXAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetXAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getYAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetYAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setChartTitle\n                        \n                    \n                \n            \n            \n                \nsetChartTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDataLabel\n                        \n                    \n                \n            \n            \n                \nsetDataLabel(data: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStorageObject\n                        \n                    \n                \n            \n            \n                \nsetStorageObject(storageObject: DualChartInfoStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storageObject\n                                    \n                                                DualChartInfoStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setXAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetXAxisLabel(xAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    xAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setYAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetYAxisLabel(yAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    yAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\n\nexport interface DualDataDict {\n  x1: number | null;\n  y1: number | null;\n  x2: number | null;\n  y2: number | null;\n}\n\nexport class DualData implements MyData {\n  private dataDict: DualDataDict[];\n\n  constructor() {\n    this.dataDict = DualData.getDefaultData();\n  }\n\n  public static getDefaultData(): DualDataDict[] {\n    return [\n      {x1:0, y1:25, x2: 1, y2:10},\n      {x1:1, y1:16, x2: 2, y2:14.1421356237309},\n      {x1:2, y1:9, x2: 3, y2:17.3205080756887},\n      {x1:3, y1:4, x2: 4, y2:20},\n      {x1:4, y1:1, x2: 5, y2:22.3606797749978},\n      {x1:5, y1:4, x2: 6, y2:24.4948974278317},\n      {x1:6, y1:9, x2: 7, y2:26.4575131106459},\n      {x1:7, y1:16, x2: 8, y2:28.2842712474619},\n      {x1:8, y1:25, x2: 9, y2:30},\n      {x1:9, y1:36, x2: 10, y2:31.6227766016837},\n      {x1:null, y1:null, x2: 11, y2:33.166247903554},\n      {x1:null, y1:null, x2: 12, y2:34.6410161513775},\n      {x1:null, y1:null, x2: 13, y2:36.0555127546398},\n      {x1:null, y1:null, x2: 14, y2:37.4165738677394},\n      {x1:null, y1:null, x2: 15, y2:38.7298334620741},\n      {x1:null, y1:null, x2: 16, y2:40},\n      {x1:null, y1:null, x2: 17, y2:41.2310562561766},\n    ];\n  }\n\n  addRow(index: number, amount: number): void {\n    if (index > 0) {\n      for (let i = 0; i  {\n        return entry.x1 !== null && entry.y1 !== null;\n      }).map(\n        (entry: DualDataDict) => {\n          return [entry.x1, entry.y1];\n        }) as number[][],\n      this.dataDict.filter((entry: DualDataDict) => {\n        return entry.x2 !== null && entry.y2 !== null;\n      }).map(\n        (entry: DualDataDict) => {\n          return [entry.x2, entry.y2];\n        }) as number[][]\n    ]\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: DualDataDict[]): void {\n    this.dataDict = data;\n  }\n\n}\n\n\nexport interface DualChartInfoStorageObject {\n  chartTitle: string;\n  dataLabel: string[];\n  xAxisLabel: string;\n  yAxisLabel: string;\n}\n\n\nexport class DualChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private dataLabel: string[];\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n\n  constructor() {\n    this.chartTitle = DualChartInfo.getDefaultChartInfo().chartTitle;\n    this.dataLabel = DualChartInfo.getDefaultChartInfo().dataLabel;\n    this.xAxisLabel = DualChartInfo.getDefaultChartInfo().xAxisLabel;\n    this.yAxisLabel = DualChartInfo.getDefaultChartInfo().yAxisLabel;\n  }\n\n  public static getDefaultChartInfo(): DualChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      dataLabel: [\"y1\", \"y2\"],\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\"\n    }\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    if (this.dataLabel[0] === \"\" && this.dataLabel[1] === \"\") {\n      return \"\";\n    } else {\n      return this.dataLabel.join(\", \");\n    }\n  }\n\n  getStorageObject(): DualChartInfoStorageObject {\n    return {\n      chartTitle: this.chartTitle,\n      dataLabel: this.dataLabel,\n      xAxisLabel: this.xAxisLabel,\n      yAxisLabel: this.yAxisLabel\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    if (data.trim() === \"\") {\n      this.dataLabel = [\"\", \"\"];\n      return;\n    }\n    const inputLabels = data.split(\",\").map((label: string) => {\n      return label.trim();\n    });\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DualChartInfoStorageObject.html":{"url":"interfaces/DualChartInfoStorageObject.html","title":"interface - DualChartInfoStorageObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DualChartInfoStorageObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/dual/dual.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            chartTitle\n                                        \n                                \n                                \n                                        \n                                            dataLabel\n                                        \n                                \n                                \n                                        \n                                            xAxisLabel\n                                        \n                                \n                                \n                                        \n                                            yAxisLabel\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chartTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chartTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dataLabel:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xAxisLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        xAxisLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yAxisLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        yAxisLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\n\nexport interface DualDataDict {\n  x1: number | null;\n  y1: number | null;\n  x2: number | null;\n  y2: number | null;\n}\n\nexport class DualData implements MyData {\n  private dataDict: DualDataDict[];\n\n  constructor() {\n    this.dataDict = DualData.getDefaultData();\n  }\n\n  public static getDefaultData(): DualDataDict[] {\n    return [\n      {x1:0, y1:25, x2: 1, y2:10},\n      {x1:1, y1:16, x2: 2, y2:14.1421356237309},\n      {x1:2, y1:9, x2: 3, y2:17.3205080756887},\n      {x1:3, y1:4, x2: 4, y2:20},\n      {x1:4, y1:1, x2: 5, y2:22.3606797749978},\n      {x1:5, y1:4, x2: 6, y2:24.4948974278317},\n      {x1:6, y1:9, x2: 7, y2:26.4575131106459},\n      {x1:7, y1:16, x2: 8, y2:28.2842712474619},\n      {x1:8, y1:25, x2: 9, y2:30},\n      {x1:9, y1:36, x2: 10, y2:31.6227766016837},\n      {x1:null, y1:null, x2: 11, y2:33.166247903554},\n      {x1:null, y1:null, x2: 12, y2:34.6410161513775},\n      {x1:null, y1:null, x2: 13, y2:36.0555127546398},\n      {x1:null, y1:null, x2: 14, y2:37.4165738677394},\n      {x1:null, y1:null, x2: 15, y2:38.7298334620741},\n      {x1:null, y1:null, x2: 16, y2:40},\n      {x1:null, y1:null, x2: 17, y2:41.2310562561766},\n    ];\n  }\n\n  addRow(index: number, amount: number): void {\n    if (index > 0) {\n      for (let i = 0; i  {\n        return entry.x1 !== null && entry.y1 !== null;\n      }).map(\n        (entry: DualDataDict) => {\n          return [entry.x1, entry.y1];\n        }) as number[][],\n      this.dataDict.filter((entry: DualDataDict) => {\n        return entry.x2 !== null && entry.y2 !== null;\n      }).map(\n        (entry: DualDataDict) => {\n          return [entry.x2, entry.y2];\n        }) as number[][]\n    ]\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: DualDataDict[]): void {\n    this.dataDict = data;\n  }\n\n}\n\n\nexport interface DualChartInfoStorageObject {\n  chartTitle: string;\n  dataLabel: string[];\n  xAxisLabel: string;\n  yAxisLabel: string;\n}\n\n\nexport class DualChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private dataLabel: string[];\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n\n  constructor() {\n    this.chartTitle = DualChartInfo.getDefaultChartInfo().chartTitle;\n    this.dataLabel = DualChartInfo.getDefaultChartInfo().dataLabel;\n    this.xAxisLabel = DualChartInfo.getDefaultChartInfo().xAxisLabel;\n    this.yAxisLabel = DualChartInfo.getDefaultChartInfo().yAxisLabel;\n  }\n\n  public static getDefaultChartInfo(): DualChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      dataLabel: [\"y1\", \"y2\"],\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\"\n    }\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    if (this.dataLabel[0] === \"\" && this.dataLabel[1] === \"\") {\n      return \"\";\n    } else {\n      return this.dataLabel.join(\", \");\n    }\n  }\n\n  getStorageObject(): DualChartInfoStorageObject {\n    return {\n      chartTitle: this.chartTitle,\n      dataLabel: this.dataLabel,\n      xAxisLabel: this.xAxisLabel,\n      yAxisLabel: this.yAxisLabel\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    if (data.trim() === \"\") {\n      this.dataLabel = [\"\", \"\"];\n      return;\n    }\n    const inputLabels = data.split(\",\").map((label: string) => {\n      return label.trim();\n    });\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DualComponent.html":{"url":"components/DualComponent.html","title":"component - DualComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DualComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/dual/dual/dual.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dual\n            \n\n\n\n            \n                styleUrls\n                ./dual.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dual.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                actionHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: DualService, honorCodeService: HonorCodePopupService, chartService: HonorCodeChartService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/dual/dual/dual.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        DualService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        honorCodeService\n                                                  \n                                                        \n                                                                        HonorCodePopupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chartService\n                                                  \n                                                        \n                                                                        HonorCodeChartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        actionHandler\n                        \n                    \n                \n            \n            \n                \nactionHandler(actions: ChartAction[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual/dual.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    actions\n                                    \n                                                ChartAction[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {ChartAction} from \"../../shared/types/actions\";\nimport {HonorCodePopupService} from \"../../shared/honor-code-popup/honor-code-popup.service\";\nimport {HonorCodeChartService} from \"../../shared/honor-code-popup/honor-code-chart.service\";\nimport {DualService} from \"../dual.service\";\n\n@Component({\n  selector: 'app-dual',\n  templateUrl: './dual.component.html',\n  styleUrls: ['./dual.component.scss']\n})\nexport class DualComponent {\n  constructor(private service: DualService,\n              private honorCodeService: HonorCodePopupService,\n              private chartService: HonorCodeChartService) {\n  }\n\n  actionHandler(actions: ChartAction[]) {\n    actions.forEach((action) => {\n      if (action.action === \"addRow\") {\n        this.service.addRow(-1, 1);\n      } else if (action.action === \"saveGraph\") {\n        this.honorCodeService.honored().subscribe((name: string) => {\n          this.chartService.saveImageHighChartOffline(this.service.getHighChart(), \"dual\", name);\n        })\n      } else if (action.action === \"resetData\") {\n        this.service.resetData();\n      } else if (action.action === \"resetChartInfo\") {\n        this.service.resetChartInfo();\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n      \n    \n  \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./dual.component.scss\n                \n                .container-row {\n  height: 80%;\n  padding: 20px 100px 20px 100px;\n  width: 100%;\n}\n\n.col-4, .col-8 {\n  display: flex;\n  flex-flow: column;\n}\n\n.data-form-row, data-button-row, chart-form-row, chart-button-row {\n  height: fit-content;\n  flex: 0 1 auto;\n}\n\n.data-table-row, .chart-row {\n  flex: 1 1 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DualComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DualData.html":{"url":"classes/DualData.html","title":"class - DualData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DualData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/dual/dual.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyData\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dataDict\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRow\n                            \n                            \n                                getData\n                            \n                            \n                                getDataArray\n                            \n                            \n                                    Static\n                                getDefaultData\n                            \n                            \n                                removeRow\n                            \n                            \n                                setData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/dual/dual.service.util.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataDict\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DualDataDict[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual.service.util.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRow\n                        \n                    \n                \n            \n            \n                \naddRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         DualDataDict[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataArray\n                        \n                    \n                \n            \n            \n                \ngetDataArray()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     [][]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getDefaultData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         DualDataDict[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRow\n                        \n                    \n                \n            \n            \n                \nremoveRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setData\n                        \n                    \n                \n            \n            \n                \nsetData(data: DualDataDict[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DualDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\n\nexport interface DualDataDict {\n  x1: number | null;\n  y1: number | null;\n  x2: number | null;\n  y2: number | null;\n}\n\nexport class DualData implements MyData {\n  private dataDict: DualDataDict[];\n\n  constructor() {\n    this.dataDict = DualData.getDefaultData();\n  }\n\n  public static getDefaultData(): DualDataDict[] {\n    return [\n      {x1:0, y1:25, x2: 1, y2:10},\n      {x1:1, y1:16, x2: 2, y2:14.1421356237309},\n      {x1:2, y1:9, x2: 3, y2:17.3205080756887},\n      {x1:3, y1:4, x2: 4, y2:20},\n      {x1:4, y1:1, x2: 5, y2:22.3606797749978},\n      {x1:5, y1:4, x2: 6, y2:24.4948974278317},\n      {x1:6, y1:9, x2: 7, y2:26.4575131106459},\n      {x1:7, y1:16, x2: 8, y2:28.2842712474619},\n      {x1:8, y1:25, x2: 9, y2:30},\n      {x1:9, y1:36, x2: 10, y2:31.6227766016837},\n      {x1:null, y1:null, x2: 11, y2:33.166247903554},\n      {x1:null, y1:null, x2: 12, y2:34.6410161513775},\n      {x1:null, y1:null, x2: 13, y2:36.0555127546398},\n      {x1:null, y1:null, x2: 14, y2:37.4165738677394},\n      {x1:null, y1:null, x2: 15, y2:38.7298334620741},\n      {x1:null, y1:null, x2: 16, y2:40},\n      {x1:null, y1:null, x2: 17, y2:41.2310562561766},\n    ];\n  }\n\n  addRow(index: number, amount: number): void {\n    if (index > 0) {\n      for (let i = 0; i  {\n        return entry.x1 !== null && entry.y1 !== null;\n      }).map(\n        (entry: DualDataDict) => {\n          return [entry.x1, entry.y1];\n        }) as number[][],\n      this.dataDict.filter((entry: DualDataDict) => {\n        return entry.x2 !== null && entry.y2 !== null;\n      }).map(\n        (entry: DualDataDict) => {\n          return [entry.x2, entry.y2];\n        }) as number[][]\n    ]\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: DualDataDict[]): void {\n    this.dataDict = data;\n  }\n\n}\n\n\nexport interface DualChartInfoStorageObject {\n  chartTitle: string;\n  dataLabel: string[];\n  xAxisLabel: string;\n  yAxisLabel: string;\n}\n\n\nexport class DualChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private dataLabel: string[];\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n\n  constructor() {\n    this.chartTitle = DualChartInfo.getDefaultChartInfo().chartTitle;\n    this.dataLabel = DualChartInfo.getDefaultChartInfo().dataLabel;\n    this.xAxisLabel = DualChartInfo.getDefaultChartInfo().xAxisLabel;\n    this.yAxisLabel = DualChartInfo.getDefaultChartInfo().yAxisLabel;\n  }\n\n  public static getDefaultChartInfo(): DualChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      dataLabel: [\"y1\", \"y2\"],\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\"\n    }\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    if (this.dataLabel[0] === \"\" && this.dataLabel[1] === \"\") {\n      return \"\";\n    } else {\n      return this.dataLabel.join(\", \");\n    }\n  }\n\n  getStorageObject(): DualChartInfoStorageObject {\n    return {\n      chartTitle: this.chartTitle,\n      dataLabel: this.dataLabel,\n      xAxisLabel: this.xAxisLabel,\n      yAxisLabel: this.yAxisLabel\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    if (data.trim() === \"\") {\n      this.dataLabel = [\"\", \"\"];\n      return;\n    }\n    const inputLabels = data.split(\",\").map((label: string) => {\n      return label.trim();\n    });\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DualDataDict.html":{"url":"interfaces/DualDataDict.html","title":"interface - DualDataDict","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DualDataDict\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/dual/dual.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x1\n                                        \n                                \n                                \n                                        \n                                            x2\n                                        \n                                \n                                \n                                        \n                                            y1\n                                        \n                                \n                                \n                                        \n                                            y2\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x1\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x1:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x2\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x2:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y1\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y1:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y2\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y2:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\n\nexport interface DualDataDict {\n  x1: number | null;\n  y1: number | null;\n  x2: number | null;\n  y2: number | null;\n}\n\nexport class DualData implements MyData {\n  private dataDict: DualDataDict[];\n\n  constructor() {\n    this.dataDict = DualData.getDefaultData();\n  }\n\n  public static getDefaultData(): DualDataDict[] {\n    return [\n      {x1:0, y1:25, x2: 1, y2:10},\n      {x1:1, y1:16, x2: 2, y2:14.1421356237309},\n      {x1:2, y1:9, x2: 3, y2:17.3205080756887},\n      {x1:3, y1:4, x2: 4, y2:20},\n      {x1:4, y1:1, x2: 5, y2:22.3606797749978},\n      {x1:5, y1:4, x2: 6, y2:24.4948974278317},\n      {x1:6, y1:9, x2: 7, y2:26.4575131106459},\n      {x1:7, y1:16, x2: 8, y2:28.2842712474619},\n      {x1:8, y1:25, x2: 9, y2:30},\n      {x1:9, y1:36, x2: 10, y2:31.6227766016837},\n      {x1:null, y1:null, x2: 11, y2:33.166247903554},\n      {x1:null, y1:null, x2: 12, y2:34.6410161513775},\n      {x1:null, y1:null, x2: 13, y2:36.0555127546398},\n      {x1:null, y1:null, x2: 14, y2:37.4165738677394},\n      {x1:null, y1:null, x2: 15, y2:38.7298334620741},\n      {x1:null, y1:null, x2: 16, y2:40},\n      {x1:null, y1:null, x2: 17, y2:41.2310562561766},\n    ];\n  }\n\n  addRow(index: number, amount: number): void {\n    if (index > 0) {\n      for (let i = 0; i  {\n        return entry.x1 !== null && entry.y1 !== null;\n      }).map(\n        (entry: DualDataDict) => {\n          return [entry.x1, entry.y1];\n        }) as number[][],\n      this.dataDict.filter((entry: DualDataDict) => {\n        return entry.x2 !== null && entry.y2 !== null;\n      }).map(\n        (entry: DualDataDict) => {\n          return [entry.x2, entry.y2];\n        }) as number[][]\n    ]\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: DualDataDict[]): void {\n    this.dataDict = data;\n  }\n\n}\n\n\nexport interface DualChartInfoStorageObject {\n  chartTitle: string;\n  dataLabel: string[];\n  xAxisLabel: string;\n  yAxisLabel: string;\n}\n\n\nexport class DualChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private dataLabel: string[];\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n\n  constructor() {\n    this.chartTitle = DualChartInfo.getDefaultChartInfo().chartTitle;\n    this.dataLabel = DualChartInfo.getDefaultChartInfo().dataLabel;\n    this.xAxisLabel = DualChartInfo.getDefaultChartInfo().xAxisLabel;\n    this.yAxisLabel = DualChartInfo.getDefaultChartInfo().yAxisLabel;\n  }\n\n  public static getDefaultChartInfo(): DualChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      dataLabel: [\"y1\", \"y2\"],\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\"\n    }\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    if (this.dataLabel[0] === \"\" && this.dataLabel[1] === \"\") {\n      return \"\";\n    } else {\n      return this.dataLabel.join(\", \");\n    }\n  }\n\n  getStorageObject(): DualChartInfoStorageObject {\n    return {\n      chartTitle: this.chartTitle,\n      dataLabel: this.dataLabel,\n      xAxisLabel: this.xAxisLabel,\n      yAxisLabel: this.yAxisLabel\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    if (data.trim() === \"\") {\n      this.dataLabel = [\"\", \"\"];\n      return;\n    }\n    const inputLabels = data.split(\",\").map((label: string) => {\n      return label.trim();\n    });\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DualHighchartComponent.html":{"url":"components/DualHighchartComponent.html","title":"component - DualHighchartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DualHighchartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/dual/dual-highchart/dual-highchart.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dual-highchart\n            \n\n\n\n            \n                styleUrls\n                ./dual-highchart.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dual-highchart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chartConstructor\n                            \n                            \n                                chartObject\n                            \n                            \n                                chartOptions\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                Highcharts\n                            \n                            \n                                updateFlag\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                chartInitialized\n                            \n                            \n                                initChartSeries\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                setChartTitle\n                            \n                            \n                                    Private\n                                setChartXAxis\n                            \n                            \n                                    Private\n                                setChartYAxis\n                            \n                            \n                                setData\n                            \n                            \n                                    Private\n                                updateChart\n                            \n                            \n                                updateData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: DualService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/dual/dual-highchart/dual-highchart.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        DualService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        chartInitialized\n                        \n                    \n                \n            \n            \n                \nchartInitialized($event: Highcharts.Chart)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual-highchart/dual-highchart.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                            Highcharts.Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initChartSeries\n                        \n                    \n                \n            \n            \n                \ninitChartSeries()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual-highchart/dual-highchart.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual-highchart/dual-highchart.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual-highchart/dual-highchart.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setChartTitle\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChartTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual-highchart/dual-highchart.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setChartXAxis\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChartXAxis()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual-highchart/dual-highchart.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setChartYAxis\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChartYAxis()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual-highchart/dual-highchart.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setData\n                        \n                    \n                \n            \n            \n                \nsetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual-highchart/dual-highchart.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateChart\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual-highchart/dual-highchart.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateData\n                        \n                    \n                \n            \n            \n                \nupdateData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual-highchart/dual-highchart.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chartConstructor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : \"chart\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual-highchart/dual-highchart.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartObject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Highcharts.Chart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual-highchart/dual-highchart.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Highcharts.Options\n\n                    \n                \n                \n                    \n                        Default value : {\n    chart: {\n      animation: false,\n      styledMode: true,\n    },\n    legend: {\n      align: 'center',\n    },\n    tooltip: {\n      enabled: true,\n      shared: false,\n    },\n    exporting: {\n      buttons: {\n        contextButton: {\n          enabled: false,\n        }\n      }\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual-highchart/dual-highchart.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual-highchart/dual-highchart.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Highcharts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Highcharts\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual-highchart/dual-highchart.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFlag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual-highchart/dual-highchart.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {Subject, takeUntil} from \"rxjs\";\nimport * as Highcharts from \"highcharts\";\nimport {DualService} from \"../dual.service\";\n\n@Component({\n  selector: 'app-dual-highchart',\n  templateUrl: './dual-highchart.component.html',\n  styleUrls: ['./dual-highchart.component.scss']\n})\nexport class DualHighchartComponent {\n  Highcharts: typeof Highcharts = Highcharts;\n  updateFlag: boolean = true;\n  chartConstructor: any = \"chart\";\n  chartObject!: Highcharts.Chart;\n  chartOptions: Highcharts.Options = {\n    chart: {\n      animation: false,\n      styledMode: true,\n    },\n    legend: {\n      align: 'center',\n    },\n    tooltip: {\n      enabled: true,\n      shared: false,\n    },\n    exporting: {\n      buttons: {\n        contextButton: {\n          enabled: false,\n        }\n      }\n    }\n  };\n  private destroy$: Subject = new Subject();\n\n  constructor(private service: DualService) {\n    this.setChartTitle();\n    this.setChartXAxis();\n    this.setChartYAxis();\n  }\n\n  chartInitialized($event: Highcharts.Chart) {\n    this.chartObject = $event;\n    this.service.setHighChart(this.chartObject);\n\n  }\n\n  ngAfterViewInit(): void {\n    this.initChartSeries();\n    this.service.data$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(() => {\n      this.updateData();\n      this.updateChart();\n    });\n    this.service.chartInfo$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(() => {\n      this.setChartTitle();\n      this.setChartXAxis();\n      this.setChartYAxis();\n      this.updateChart();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n  }\n\n  initChartSeries() {\n    this.setData();\n  }\n\n  setData() {\n    const labels: string[] = this.service.getDataLabelArray();\n    const data: number[][][] = this.service.getDataArray();\n    for (let i = 0; i \n    \n\n    \n        \n  \n\n\n\n\n    \n\n    \n                \n                    ./dual-highchart.component.scss\n                \n                .chart-container {\n  width: 100%;\n  height: 100%;\n  padding: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DualHighchartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DualModule.html":{"url":"modules/DualModule.html","title":"module - DualModule","body":"\n                   \n\n\n\n\n    Modules\n    DualModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DualModule\n\n\n\ncluster_DualModule_declarations\n\n\n\ncluster_DualModule_imports\n\n\n\ncluster_DualModule_providers\n\n\n\n\nDualChartFormComponent\n\nDualChartFormComponent\n\n\n\nDualModule\n\nDualModule\n\nDualModule -->\n\nDualChartFormComponent->DualModule\n\n\n\n\n\nDualComponent\n\nDualComponent\n\nDualModule -->\n\nDualComponent->DualModule\n\n\n\n\n\nDualHighchartComponent\n\nDualHighchartComponent\n\nDualModule -->\n\nDualHighchartComponent->DualModule\n\n\n\n\n\nDualTableComponent\n\nDualTableComponent\n\nDualModule -->\n\nDualTableComponent->DualModule\n\n\n\n\n\nSimpleDataButtonModule\n\nSimpleDataButtonModule\n\nDualModule -->\n\nSimpleDataButtonModule->DualModule\n\n\n\n\n\nSimpleGraphButtonModule\n\nSimpleGraphButtonModule\n\nDualModule -->\n\nSimpleGraphButtonModule->DualModule\n\n\n\n\n\nDualService\n\nDualService\n\nDualModule -->\n\nDualService->DualModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tools/dual/dual.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DualChartFormComponent\n                        \n                        \n                            DualComponent\n                        \n                        \n                            DualHighchartComponent\n                        \n                        \n                            DualTableComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            DualService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SimpleDataButtonModule\n                        \n                        \n                            SimpleGraphButtonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DualComponent} from './dual/dual.component';\nimport {SimpleDataButtonModule} from \"../shared/simple-data-button/simple-data-button.component\";\nimport {SimpleGraphButtonModule} from \"../shared/simple-graph-button/simple-graph-button.component\";\nimport {DualService} from \"./dual.service\";\nimport {DualTableComponent} from './dual-table/dual-table.component';\nimport {HotTableModule} from \"@handsontable/angular\";\nimport {DualChartFormComponent} from './dual-chart-form/dual-chart-form.component';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {MatLegacyFormFieldModule} from \"@angular/material/legacy-form-field\";\nimport {MatLegacyInputModule} from \"@angular/material/legacy-input\";\nimport {DualHighchartComponent} from './dual-highchart/dual-highchart.component';\nimport {HighchartsChartModule} from \"highcharts-angular\";\n\n\n@NgModule({\n  declarations: [\n    DualComponent,\n    DualTableComponent,\n    DualChartFormComponent,\n    DualHighchartComponent\n  ],\n  imports: [\n    CommonModule,\n    SimpleDataButtonModule,\n    SimpleGraphButtonModule,\n    HotTableModule,\n    FormsModule,\n    MatLegacyFormFieldModule,\n    MatLegacyInputModule,\n    ReactiveFormsModule,\n    HighchartsChartModule\n  ],\n  providers: [DualService]\n})\nexport class DualModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DualService.html":{"url":"injectables/DualService.html","title":"injectable - DualService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DualService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/dual/dual.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                chartInfo$\n                            \n                            \n                                    Private\n                                chartInfoSubject\n                            \n                            \n                                    Public\n                                data$\n                            \n                            \n                                    Private\n                                dataSubject\n                            \n                            \n                                    Private\n                                dualChartInfo\n                            \n                            \n                                    Private\n                                dualData\n                            \n                            \n                                    Private\n                                dualStorage\n                            \n                            \n                                    Private\n                                highChart\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRow\n                            \n                            \n                                getChartTitle\n                            \n                            \n                                getData\n                            \n                            \n                                getDataArray\n                            \n                            \n                                getDataLabel\n                            \n                            \n                                getDataLabelArray\n                            \n                            \n                                getHighChart\n                            \n                            \n                                getStorageObject\n                            \n                            \n                                getXAxisLabel\n                            \n                            \n                                getYAxisLabel\n                            \n                            \n                                removeRow\n                            \n                            \n                                resetChartInfo\n                            \n                            \n                                resetData\n                            \n                            \n                                setChartTitle\n                            \n                            \n                                setData\n                            \n                            \n                                setDataLabel\n                            \n                            \n                                setHighChart\n                            \n                            \n                                setStorageObject\n                            \n                            \n                                setXAxisLabel\n                            \n                            \n                                setYAxisLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/dual/dual.service.ts:21\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRow\n                        \n                    \n                \n            \n            \n                \naddRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.ts:94\n                \n            \n\n\n            \n                \n                    MyData interface implementation\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChartTitle\n                        \n                    \n                \n            \n            \n                \ngetChartTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.ts:30\n                \n            \n\n\n            \n                \n                    ChartInfo interface implementation\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         DualDataDict[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataArray\n                        \n                    \n                \n            \n            \n                \ngetDataArray()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     [][]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataLabel\n                        \n                    \n                \n            \n            \n                \ngetDataLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataLabelArray\n                        \n                    \n                \n            \n            \n                \ngetDataLabelArray()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHighChart\n                        \n                    \n                \n            \n            \n                \ngetHighChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Highcharts.Chart\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStorageObject\n                        \n                    \n                \n            \n            \n                \ngetStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         DualChartInfoStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getXAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetXAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getYAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetYAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRow\n                        \n                    \n                \n            \n            \n                \nremoveRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetChartInfo\n                        \n                    \n                \n            \n            \n                \nresetChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetData\n                        \n                    \n                \n            \n            \n                \nresetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setChartTitle\n                        \n                    \n                \n            \n            \n                \nsetChartTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setData\n                        \n                    \n                \n            \n            \n                \nsetData(data: DualDataDict[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DualDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDataLabel\n                        \n                    \n                \n            \n            \n                \nsetDataLabel(data: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setHighChart\n                        \n                    \n                \n            \n            \n                \nsetHighChart(highChart: Highcharts.Chart)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    highChart\n                                    \n                                            Highcharts.Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStorageObject\n                        \n                    \n                \n            \n            \n                \nsetStorageObject(storageObject: DualChartInfoStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storageObject\n                                    \n                                                DualChartInfoStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setXAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetXAxisLabel(xAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    xAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setYAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetYAxisLabel(yAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    yAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chartInfo$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.chartInfoSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartInfoSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(this.dualChartInfo)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.dataSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(this.dualData)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dualChartInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DualChartInfo\n\n                    \n                \n                \n                    \n                        Default value : new DualChartInfo()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dualData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DualData\n\n                    \n                \n                \n                    \n                        Default value : new DualData()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dualStorage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DualStorage\n\n                    \n                \n                \n                    \n                        Default value : new DualStorage()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        highChart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Highcharts.Chart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {DualChartInfo, DualChartInfoStorageObject, DualData, DualDataDict, DualStorage} from \"./dual.service.util\";\nimport {BehaviorSubject, Observable} from \"rxjs\";\nimport {MyData} from \"../shared/data/data.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\nimport * as Highcharts from \"highcharts\";\n\n@Injectable()\nexport class DualService implements MyData, ChartInfo {\n\n  private dualData: DualData = new DualData();\n  private dualChartInfo: DualChartInfo = new DualChartInfo();\n\n  private dualStorage: DualStorage = new DualStorage();\n\n  private dataSubject: BehaviorSubject = new BehaviorSubject(this.dualData);\n  public data$: Observable = this.dataSubject.asObservable();\n  private chartInfoSubject: BehaviorSubject = new BehaviorSubject(this.dualChartInfo);\n  public chartInfo$: Observable = this.chartInfoSubject.asObservable();\n\n  private highChart!: Highcharts.Chart;\n\n  constructor() {\n    this.dualData.setData(this.dualStorage.getData());\n    this.dualChartInfo.setStorageObject(this.dualStorage.getChartInfo());\n  }\n\n  /**ChartInfo interface implementation**/\n\n  getChartTitle(): string {\n    return this.dualChartInfo.getChartTitle();\n  }\n\n  getDataLabel(): string {\n    return this.dualChartInfo.getDataLabel();\n  }\n\n  getDataLabelArray(): string[] {\n    return this.dualChartInfo.getDataLabelArray();\n  }\n\n  getStorageObject(): DualChartInfoStorageObject {\n    return this.dualChartInfo.getStorageObject();\n  }\n\n  getXAxisLabel(): string {\n    return this.dualChartInfo.getXAxisLabel();\n  }\n\n  getYAxisLabel(): string {\n    return this.dualChartInfo.getYAxisLabel();\n  }\n\n  setChartTitle(title: string): void {\n    this.dualChartInfo.setChartTitle(title);\n    this.dualStorage.saveChartInfo(this.dualChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.dualChartInfo);\n  }\n\n  setDataLabel(data: string): void {\n    this.dualChartInfo.setDataLabel(data);\n    this.dualStorage.saveChartInfo(this.dualChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.dualChartInfo);\n    this.dataSubject.next(this.dualData);\n  }\n\n  setStorageObject(storageObject: DualChartInfoStorageObject): void {\n    this.dualChartInfo.setStorageObject(storageObject);\n    this.dualStorage.saveChartInfo(this.dualChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.dualChartInfo);\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.dualChartInfo.setXAxisLabel(xAxis);\n    this.dualStorage.saveChartInfo(this.dualChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.dualChartInfo);\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.dualChartInfo.setYAxisLabel(yAxis);\n    this.dualStorage.saveChartInfo(this.dualChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.dualChartInfo);\n  }\n\n  resetChartInfo() {\n    this.dualChartInfo.setStorageObject(DualChartInfo.getDefaultChartInfo());\n    this.dualStorage.saveChartInfo(this.dualChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.dualChartInfo);\n  }\n\n\n  /**MyData interface implementation**/\n\n  addRow(index: number, amount: number): void {\n    this.dualData.addRow(index, amount);\n    this.dualStorage.saveData(this.dualData.getData());\n    this.dataSubject.next(this.dualData);\n  }\n\n  getData(): DualDataDict[] {\n    return this.dualData.getData();\n  }\n\n  getDataArray(): number[][][] {\n    return this.dualData.getDataArray();\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dualData.removeRow(index, amount);\n    this.dualStorage.saveData(this.dualData.getData());\n    this.dataSubject.next(this.dualData);\n  }\n\n  setData(data: DualDataDict[]): void {\n    this.dualData.setData(data);\n    this.dualStorage.saveData(this.dualData.getData());\n    this.dataSubject.next(this.dualData);\n  }\n\n  resetData() {\n    this.dualData.setData(DualData.getDefaultData());\n    this.dualStorage.saveData(this.dualData.getData());\n    this.dataSubject.next(this.dualData);\n  }\n\n  setHighChart(highChart: Highcharts.Chart) {\n    this.highChart = highChart;\n  }\n\n  getHighChart(): Highcharts.Chart {\n    return this.highChart;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DualStorage.html":{"url":"classes/DualStorage.html","title":"class - DualStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DualStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/dual/dual.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyStorage\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chartInfoKey\n                            \n                            \n                                    Private\n                                dataKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getChartInfo\n                            \n                            \n                                getData\n                            \n                            \n                                getInterface\n                            \n                            \n                                resetChartInfo\n                            \n                            \n                                resetData\n                            \n                            \n                                resetInterface\n                            \n                            \n                                saveChartInfo\n                            \n                            \n                                saveData\n                            \n                            \n                                saveInterface\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartInfoKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'dualChartInfo'\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual.service.util.ts:182\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'dualData'\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual.service.util.ts:181\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getChartInfo\n                        \n                    \n                \n            \n            \n                \ngetChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:184\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         DualChartInfoStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         DualDataDict[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInterface\n                        \n                    \n                \n            \n            \n                \ngetInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:200\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetChartInfo\n                        \n                    \n                \n            \n            \n                \nresetChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:203\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetData\n                        \n                    \n                \n            \n            \n                \nresetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:207\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetInterface\n                        \n                    \n                \n            \n            \n                \nresetInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:211\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveChartInfo\n                        \n                    \n                \n            \n            \n                \nsaveChartInfo(chartInfo: DualChartInfoStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:214\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartInfo\n                                    \n                                                DualChartInfoStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveData\n                        \n                    \n                \n            \n            \n                \nsaveData(data: DualDataDict[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:218\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DualDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveInterface\n                        \n                    \n                \n            \n            \n                \nsaveInterface(interfaceInfo: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual.service.util.ts:222\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    interfaceInfo\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\n\nexport interface DualDataDict {\n  x1: number | null;\n  y1: number | null;\n  x2: number | null;\n  y2: number | null;\n}\n\nexport class DualData implements MyData {\n  private dataDict: DualDataDict[];\n\n  constructor() {\n    this.dataDict = DualData.getDefaultData();\n  }\n\n  public static getDefaultData(): DualDataDict[] {\n    return [\n      {x1:0, y1:25, x2: 1, y2:10},\n      {x1:1, y1:16, x2: 2, y2:14.1421356237309},\n      {x1:2, y1:9, x2: 3, y2:17.3205080756887},\n      {x1:3, y1:4, x2: 4, y2:20},\n      {x1:4, y1:1, x2: 5, y2:22.3606797749978},\n      {x1:5, y1:4, x2: 6, y2:24.4948974278317},\n      {x1:6, y1:9, x2: 7, y2:26.4575131106459},\n      {x1:7, y1:16, x2: 8, y2:28.2842712474619},\n      {x1:8, y1:25, x2: 9, y2:30},\n      {x1:9, y1:36, x2: 10, y2:31.6227766016837},\n      {x1:null, y1:null, x2: 11, y2:33.166247903554},\n      {x1:null, y1:null, x2: 12, y2:34.6410161513775},\n      {x1:null, y1:null, x2: 13, y2:36.0555127546398},\n      {x1:null, y1:null, x2: 14, y2:37.4165738677394},\n      {x1:null, y1:null, x2: 15, y2:38.7298334620741},\n      {x1:null, y1:null, x2: 16, y2:40},\n      {x1:null, y1:null, x2: 17, y2:41.2310562561766},\n    ];\n  }\n\n  addRow(index: number, amount: number): void {\n    if (index > 0) {\n      for (let i = 0; i  {\n        return entry.x1 !== null && entry.y1 !== null;\n      }).map(\n        (entry: DualDataDict) => {\n          return [entry.x1, entry.y1];\n        }) as number[][],\n      this.dataDict.filter((entry: DualDataDict) => {\n        return entry.x2 !== null && entry.y2 !== null;\n      }).map(\n        (entry: DualDataDict) => {\n          return [entry.x2, entry.y2];\n        }) as number[][]\n    ]\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: DualDataDict[]): void {\n    this.dataDict = data;\n  }\n\n}\n\n\nexport interface DualChartInfoStorageObject {\n  chartTitle: string;\n  dataLabel: string[];\n  xAxisLabel: string;\n  yAxisLabel: string;\n}\n\n\nexport class DualChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private dataLabel: string[];\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n\n  constructor() {\n    this.chartTitle = DualChartInfo.getDefaultChartInfo().chartTitle;\n    this.dataLabel = DualChartInfo.getDefaultChartInfo().dataLabel;\n    this.xAxisLabel = DualChartInfo.getDefaultChartInfo().xAxisLabel;\n    this.yAxisLabel = DualChartInfo.getDefaultChartInfo().yAxisLabel;\n  }\n\n  public static getDefaultChartInfo(): DualChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      dataLabel: [\"y1\", \"y2\"],\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\"\n    }\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    if (this.dataLabel[0] === \"\" && this.dataLabel[1] === \"\") {\n      return \"\";\n    } else {\n      return this.dataLabel.join(\", \");\n    }\n  }\n\n  getStorageObject(): DualChartInfoStorageObject {\n    return {\n      chartTitle: this.chartTitle,\n      dataLabel: this.dataLabel,\n      xAxisLabel: this.xAxisLabel,\n      yAxisLabel: this.yAxisLabel\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    if (data.trim() === \"\") {\n      this.dataLabel = [\"\", \"\"];\n      return;\n    }\n    const inputLabels = data.split(\",\").map((label: string) => {\n      return label.trim();\n    });\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DualTable.html":{"url":"classes/DualTable.html","title":"class - DualTable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DualTable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/dual/dual-table/dual-table.component.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyTable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hotRegisterer\n                            \n                            \n                                    Private\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                            \n                                getTable\n                            \n                            \n                                renderTable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/dual/dual-table/dual-table.component.ts:80\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hotRegisterer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HotTableRegisterer()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual-table/dual-table.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual-table/dual-table.component.ts:79\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual-table/dual-table.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTable\n                        \n                    \n                \n            \n            \n                \ngetTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual-table/dual-table.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Handsontable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderTable\n                        \n                    \n                \n            \n            \n                \nrenderTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual-table/dual-table.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Component} from '@angular/core';\nimport {Subject, takeUntil} from \"rxjs\";\nimport {DualDataDict} from \"../dual.service.util\";\nimport {DualService} from \"../dual.service\";\nimport {MyTable} from \"../../shared/tables/table-interface\";\nimport {HotTableRegisterer} from \"@handsontable/angular\";\nimport Handsontable from \"handsontable\";\n\n@Component({\n  selector: 'app-dual-table',\n  templateUrl: './dual-table.component.html',\n  styleUrls: ['./dual-table.component.scss']\n})\nexport class DualTableComponent {\n  id: string = \"moon-table\";\n  table: DualTable = new DualTable(this.id);\n  colNames: string[] = this.service.getDataLabelArray();\n  dataSet: DualDataDict[];\n  private destroy$: Subject = new Subject();\n\n  constructor(private service: DualService) {\n    this.dataSet = this.service.getData();\n  }\n\n  ngAfterViewInit(): void {\n    this.service.data$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      () => {\n        this.dataSet = this.limitPrecision(this.service.getData(), 2);\n        this.table.renderTable();\n      }\n    );\n    this.service.chartInfo$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      () => {\n        this.colNames = this.service.getDataLabelArray();\n        this.table.renderTable();\n      }\n    )\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  public onChange = (changes: any, source: any) => {\n    if (changes) {\n      this.service.setData(this.table.getData());\n    }\n  }\n\n  public onRemove = (index: number, amount: number) => {\n    this.service.removeRow(index, amount);\n  }\n\n  public onInsert = (index: number, amount: number) => {\n    this.service.addRow(index, amount);\n  }\n\n  private limitPrecision(data: DualDataDict[], precision: number): DualDataDict[] {\n    return data.map(\n      (row: DualDataDict) => {\n        return {\n          x1: row.x1 ? parseFloat(row.x1.toFixed(precision)) : row.x1,\n          y1: row.y1 ? parseFloat(row.y1.toFixed(precision)) : row.y1,\n          x2: row.x2 ? parseFloat(row.x2.toFixed(precision)) : row.x2,\n          y2: row.y2 ? parseFloat(row.y2.toFixed(precision)) : row.y2,\n\n        }\n      }\n    );\n  }\n}\n\nclass DualTable implements MyTable {\n  private readonly id: string;\n  private hotRegisterer = new HotTableRegisterer();\n\n  constructor(id: string) {\n    this.id = id;\n  }\n\n  getTable(): Handsontable {\n    return this.hotRegisterer.getInstance(this.id);\n  }\n\n  renderTable(): void {\n    this.getTable().render();\n  }\n\n  getData(): any[] {\n    return this.getTable().getSourceData();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DualTableComponent.html":{"url":"components/DualTableComponent.html","title":"component - DualTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DualTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/dual/dual-table/dual-table.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dual-table\n            \n\n\n\n            \n                styleUrls\n                ./dual-table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dual-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                colNames\n                            \n                            \n                                dataSet\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                id\n                            \n                            \n                                    Public\n                                onChange\n                            \n                            \n                                    Public\n                                onInsert\n                            \n                            \n                                    Public\n                                onRemove\n                            \n                            \n                                table\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                limitPrecision\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: DualService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/dual/dual-table/dual-table.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        DualService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        limitPrecision\n                        \n                    \n                \n            \n            \n                \n                    \n                    limitPrecision(data: DualDataDict[], precision: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual-table/dual-table.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DualDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    precision\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DualDataDict[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual-table/dual-table.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/dual/dual-table/dual-table.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        colNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : this.service.getDataLabelArray()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual-table/dual-table.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DualDataDict[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual-table/dual-table.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual-table/dual-table.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"moon-table\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual-table/dual-table.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual-table/dual-table.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onInsert\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual-table/dual-table.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onRemove\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual-table/dual-table.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        table\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DualTable\n\n                    \n                \n                \n                    \n                        Default value : new DualTable(this.id)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/dual/dual-table/dual-table.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {Subject, takeUntil} from \"rxjs\";\nimport {DualDataDict} from \"../dual.service.util\";\nimport {DualService} from \"../dual.service\";\nimport {MyTable} from \"../../shared/tables/table-interface\";\nimport {HotTableRegisterer} from \"@handsontable/angular\";\nimport Handsontable from \"handsontable\";\n\n@Component({\n  selector: 'app-dual-table',\n  templateUrl: './dual-table.component.html',\n  styleUrls: ['./dual-table.component.scss']\n})\nexport class DualTableComponent {\n  id: string = \"moon-table\";\n  table: DualTable = new DualTable(this.id);\n  colNames: string[] = this.service.getDataLabelArray();\n  dataSet: DualDataDict[];\n  private destroy$: Subject = new Subject();\n\n  constructor(private service: DualService) {\n    this.dataSet = this.service.getData();\n  }\n\n  ngAfterViewInit(): void {\n    this.service.data$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      () => {\n        this.dataSet = this.limitPrecision(this.service.getData(), 2);\n        this.table.renderTable();\n      }\n    );\n    this.service.chartInfo$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      () => {\n        this.colNames = this.service.getDataLabelArray();\n        this.table.renderTable();\n      }\n    )\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  public onChange = (changes: any, source: any) => {\n    if (changes) {\n      this.service.setData(this.table.getData());\n    }\n  }\n\n  public onRemove = (index: number, amount: number) => {\n    this.service.removeRow(index, amount);\n  }\n\n  public onInsert = (index: number, amount: number) => {\n    this.service.addRow(index, amount);\n  }\n\n  private limitPrecision(data: DualDataDict[], precision: number): DualDataDict[] {\n    return data.map(\n      (row: DualDataDict) => {\n        return {\n          x1: row.x1 ? parseFloat(row.x1.toFixed(precision)) : row.x1,\n          y1: row.y1 ? parseFloat(row.y1.toFixed(precision)) : row.y1,\n          x2: row.x2 ? parseFloat(row.x2.toFixed(precision)) : row.x2,\n          y2: row.y2 ? parseFloat(row.y2.toFixed(precision)) : row.y2,\n\n        }\n      }\n    );\n  }\n}\n\nclass DualTable implements MyTable {\n  private readonly id: string;\n  private hotRegisterer = new HotTableRegisterer();\n\n  constructor(id: string) {\n    this.id = id;\n  }\n\n  getTable(): Handsontable {\n    return this.hotRegisterer.getInstance(this.id);\n  }\n\n  renderTable(): void {\n    this.getTable().render();\n  }\n\n  getData(): any[] {\n    return this.getTable().getSourceData();\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n\n    \n\n    \n                \n                    ./dual-table.component.scss\n                \n                .container {\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DualTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/home/home.component.ts\n\n\n\n    \n        Description\n    \n    \n        Home page of the site\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component} from '@angular/core';\n\n/**\n * Home page of the site\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent {\n\n}\n\n    \n\n    \n        home works!\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'home works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HonorCodeChartService.html":{"url":"injectables/HonorCodeChartService.html","title":"injectable - HonorCodeChartService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HonorCodeChartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/shared/honor-code-popup/honor-code-chart.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Services for charts to perform\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateFileName\n                            \n                            \n                                    Private\n                                generateSignature\n                            \n                            \n                                saveImage\n                            \n                            \n                                    Public\n                                saveImageHighChart\n                            \n                            \n                                    Public\n                                saveImageHighChartOffline\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/shared/honor-code-popup/honor-code-chart.service.ts:15\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generateFileName\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateFileName(chartType: string, signature: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/honor-code-popup/honor-code-chart.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    signature\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generateSignature\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateSignature(signature: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/honor-code-popup/honor-code-chart.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signature\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveImage\n                        \n                    \n                \n            \n            \n                \nsaveImage(chart: Chart, signature: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/honor-code-popup/honor-code-chart.service.ts:27\n                \n            \n\n\n            \n                \n                    Save image to user's device as jpg.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    chart\n                                    \n                                            Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The chart.js that needs to be saved\n\n                                    \n                                \n                                \n                                    signature\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User's signature\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        saveImageHighChart\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveImageHighChart(chart: Highcharts.Chart, chartType: string, signature: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/honor-code-popup/honor-code-chart.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chart\n                                    \n                                            Highcharts.Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    chartType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    signature\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        saveImageHighChartOffline\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveImageHighChartOffline(chart: Highcharts.Chart, ChartType: string, signature: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/honor-code-popup/honor-code-chart.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chart\n                                    \n                                            Highcharts.Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ChartType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    signature\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Chart} from \"chart.js/dist/types\";\nimport {addEXIFToImage, dataURLtoBlob, formatTime, getDateString} from \"../charts/utils\";\nimport {saveAs} from 'file-saver';\nimport * as Highcharts from 'highcharts';\nimport HC_exporting from \"highcharts/modules/exporting\";\nimport HC_offline_exporting from \"highcharts/modules/offline-exporting\";\n\n/**\n * Services for charts to perform\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class HonorCodeChartService {\n\n  constructor() {\n    HC_exporting(Highcharts);\n    HC_offline_exporting(Highcharts);\n  }\n\n  /**\n   * Save image to user's device as jpg.\n   * @param chart The chart.js that needs to be saved\n   * @param signature User's signature\n   */\n  saveImage(chart: Chart, signature: string): void {\n    const destCanvas = document.createElement('canvas');\n    const canvas = chart.canvas;\n    destCanvas.width = canvas.width;\n    destCanvas.height = canvas.height;\n    const destCtx = destCanvas.getContext('2d');\n    if (!destCtx)\n      return;\n    destCtx.fillStyle = '#FFFFFF';\n    destCtx.fillRect(0, 0, destCanvas.width, destCanvas.height);\n    destCtx.drawImage(canvas, 0, 0);\n    const time = getDateString();\n    const exifImage = addEXIFToImage(destCanvas.toDataURL('image/jpeg', 1.0), signature, time);\n    //create image\n    saveAs(dataURLtoBlob(exifImage), 'chart-' + formatTime(time) + '.jpg');\n  }\n\n  public saveImageHighChart(chart: Highcharts.Chart, chartType: string, signature: string): void {\n    if (chartType && signature) {\n      chart.exportChart(\n        {\n          filename: this.generateFileName(chartType, signature),\n          type: 'image/jpeg',\n        },\n        {credits: {text: this.generateSignature(signature)}});\n    }\n  }\n\n  public saveImageHighChartOffline(chart: Highcharts.Chart, ChartType: string, signature: string): void {\n    if (ChartType && signature) {\n      chart.exportChartLocal(\n        {\n          filename: this.generateFileName(ChartType, signature),\n          type: 'image/jpeg',\n        },\n        {credits: {text: this.generateSignature(signature)}});\n    }\n  }\n\n  private generateFileName(chartType: string, signature: string): string {\n    return chartType + '-' + formatTime(getDateString()) + '-' + signature;\n  }\n\n  private generateSignature(signature: string): string {\n    return \"Created by \" + signature + \" at skynet.unc.edu\";\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HonorCodePopupComponent.html":{"url":"components/HonorCodePopupComponent.html","title":"component - HonorCodePopupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HonorCodePopupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/shared/honor-code-popup/honor-code-popup.component.ts\n\n\n\n    \n        Description\n    \n    \n        Popup window to collect signature before initiating graph downloading.\nDeclared in HonorCodePopupModule\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-honor-code-popup\n            \n\n\n\n            \n                styleUrls\n                ./honor-code-popup.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./honor-code-popup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dismiss\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matDialogRef: MatDialogRef, formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/shared/honor-code-popup/honor-code-popup.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matDialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        dismiss\n                        \n                    \n                \n            \n            \n                \n                    \n                    dismiss()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/honor-code-popup/honor-code-popup.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/honor-code-popup/honor-code-popup.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        submit\n                        \n                    \n                \n            \n            \n                \n                    \n                    submit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/honor-code-popup/honor-code-popup.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/shared/honor-code-popup/honor-code-popup.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {MatLegacyDialogRef as MatDialogRef} from \"@angular/material/legacy-dialog\";\n\n/**\n * Popup window to collect signature before initiating graph downloading.\n *\n * Declared in {@link HonorCodePopupModule}\n */\n@Component({\n  selector: 'app-honor-code-popup',\n  templateUrl: './honor-code-popup.component.html',\n  styleUrls: ['./honor-code-popup.component.scss']\n})\nexport class HonorCodePopupComponent implements OnInit {\n  form!: FormGroup;\n\n  constructor(private matDialogRef: MatDialogRef, private formBuilder: FormBuilder) {\n  }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      signature: ['', Validators.required]\n    });\n  }\n\n  public dismiss() {\n    this.matDialogRef.close();\n  }\n\n  public submit() {\n    if (this.form.valid) {\n      this.matDialogRef.close();\n    }\n  }\n\n}\n\n    \n\n    \n        \n  Honor Code Pledge\n  \n    close\n  \n\n\n  \n    REQUIRED FOR RECEIVING CREDIT\n    \n      Sign your name to attest to the fact that you made this graph yourself:\n      \n      Click to start typing\n    \n  \n  \n    Submit\n    \n  \n\n\n    \n\n    \n                \n                    ./honor-code-popup.component.scss\n                \n                h2 {\n  margin-bottom: 0;\n}\n\nmat-form-field {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Honor Code Pledge      close        REQUIRED FOR RECEIVING CREDIT          Sign your name to attest to the fact that you made this graph yourself:            Click to start typing            Submit      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HonorCodePopupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HonorCodePopupModule.html":{"url":"modules/HonorCodePopupModule.html","title":"module - HonorCodePopupModule","body":"\n                   \n\n\n\n\n    Modules\n    HonorCodePopupModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HonorCodePopupModule\n\n\n\ncluster_HonorCodePopupModule_declarations\n\n\n\n\nHonorCodePopupComponent\n\nHonorCodePopupComponent\n\n\n\nHonorCodePopupModule\n\nHonorCodePopupModule\n\nHonorCodePopupModule -->\n\nHonorCodePopupComponent->HonorCodePopupModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tools/shared/honor-code-popup/honor-code-popup.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module encapsulating HonorCodePopupComponent\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HonorCodePopupComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from \"@angular/core\";\nimport {HonorCodePopupComponent} from \"./honor-code-popup.component\";\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {MatLegacyButtonModule as MatButtonModule} from \"@angular/material/legacy-button\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatLegacyInputModule as MatInputModule} from \"@angular/material/legacy-input\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {MatLegacyDialogModule as MatDialogModule} from \"@angular/material/legacy-dialog\";\n\n/**\n * Module encapsulating {@link HonorCodePopupComponent}\n */\n@NgModule({\n  imports: [\n    NgbModule,\n    MatButtonModule,\n    MatIconModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatDialogModule,\n  ],\n  declarations: [HonorCodePopupComponent]\n})\nexport class HonorCodePopupModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HonorCodePopupService.html":{"url":"injectables/HonorCodePopupService.html","title":"injectable - HonorCodePopupService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HonorCodePopupService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/shared/honor-code-popup/honor-code-popup.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                saveGraphButton\n                            \n                            \n                                    Private\n                                saveGraphSpinner\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                disableSaveGraph\n                            \n                            \n                                    Public\n                                enableSaveGraph\n                            \n                            \n                                    Public\n                                honored\n                            \n                            \n                                    Public\n                                registerSaveGraphButton\n                            \n                            \n                                    Public\n                                registerSaveGraphSpinner\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/shared/honor-code-popup/honor-code-popup.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        disableSaveGraph\n                        \n                    \n                \n            \n            \n                \n                    \n                    disableSaveGraph()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/honor-code-popup/honor-code-popup.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        enableSaveGraph\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableSaveGraph()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/honor-code-popup/honor-code-popup.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        honored\n                        \n                    \n                \n            \n            \n                \n                    \n                    honored()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/honor-code-popup/honor-code-popup.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        registerSaveGraphButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerSaveGraphButton(button: MatButton)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/honor-code-popup/honor-code-popup.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    button\n                                    \n                                            MatButton\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        registerSaveGraphSpinner\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerSaveGraphSpinner(spinner: MatProgressSpinner)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/honor-code-popup/honor-code-popup.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    spinner\n                                    \n                                            MatProgressSpinner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        saveGraphButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatButton\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/shared/honor-code-popup/honor-code-popup.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        saveGraphSpinner\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatProgressSpinner\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/shared/honor-code-popup/honor-code-popup.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HonorCodePopupComponent} from \"./honor-code-popup.component\";\nimport {MatLegacyDialog as MatDialog} from \"@angular/material/legacy-dialog\";\nimport {Observable} from \"rxjs\";\nimport {MatButton} from \"@angular/material/button\";\nimport {MatProgressSpinner} from \"@angular/material/progress-spinner\";\n\n@Injectable()\nexport class HonorCodePopupService {\n  private saveGraphButton!: MatButton;\n  private saveGraphSpinner!: MatProgressSpinner;\n\n  constructor(private dialog: MatDialog) {\n  }\n\n  public registerSaveGraphButton(button: MatButton): void {\n    this.saveGraphButton = button;\n  }\n\n  public registerSaveGraphSpinner(spinner: MatProgressSpinner): void {\n    this.saveGraphSpinner = spinner;\n  }\n\n  public disableSaveGraph(): void {\n    this.saveGraphButton.disabled = true;\n  }\n\n  public enableSaveGraph(): void {\n    this.saveGraphButton.disabled = false;\n  }\n\n  public honored(): Observable {\n    const modalRef = this.dialog.open(HonorCodePopupComponent,\n      {width: '500px',});\n    return modalRef.afterClosed();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputSliderComponent.html":{"url":"components/InputSliderComponent.html","title":"component - InputSliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InputSliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/shared/interface/input-slider/input-slider.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                my-input-slider\n            \n\n\n\n            \n                styleUrls\n                ./input-slider.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./input-slider.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Protected\n                                formControl\n                            \n                            \n                                    \n                                inputChild\n                            \n                            \n                                    Private\n                                slider$\n                            \n                            \n                                    Protected\n                                sliderSubject\n                            \n                            \n                                    Protected\n                                    Readonly\n                                SliderUtil\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                defaultValue\n                            \n                            \n                                isLog\n                            \n                            \n                                label\n                            \n                            \n                                maxValue\n                            \n                            \n                                minValue\n                            \n                            \n                                name\n                            \n                            \n                                numOverride\n                            \n                            \n                                step\n                            \n                            \n                                stepValue\n                            \n                            \n                                value$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:31\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        defaultValue\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isLog\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxValue\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minValue\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        numOverride\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        step\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        stepValue\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.01\n                    \n                \n                        \n                            \n                                    Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value$\n                    \n                \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:23\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valueChange\n                        \n                    \n                \n            \n            \n                \nvalueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        formControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        inputChild\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatInput\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('input')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        slider$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.sliderSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        sliderSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        SliderUtil\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SliderUtil\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, EventEmitter, Input, OnDestroy, Output, ViewChild} from '@angular/core';\nimport {FormControl, Validators} from \"@angular/forms\";\nimport {debounceTime, Subject, takeUntil, throttleTime} from \"rxjs\";\nimport {MatInput} from \"@angular/material/input\";\n\n@Component({\n  selector: 'my-input-slider',\n  templateUrl: './input-slider.component.html',\n  styleUrls: ['./input-slider.component.scss'],\n})\nexport class InputSliderComponent implements OnDestroy, AfterViewInit {\n\n  @Input() minValue!: number;\n  @Input() maxValue!: number;\n  @Input() defaultValue!: number;\n  @Input() step!: number;\n  @Input() stepValue: number = 0.01;\n  @Input() isLog: boolean = false;\n  @Input() numOverride: boolean = false;\n  @Input() name!: string;\n  @Input() label!: string;\n  @Input() value$!: Subject;\n  @Output() value: EventEmitter = new EventEmitter();\n\n\n  @ViewChild(\"input\") inputChild!: MatInput;\n  protected sliderSubject: Subject = new Subject();\n  protected readonly SliderUtil = SliderUtil;\n  protected formControl!: FormControl;\n  private slider$ = this.sliderSubject.asObservable();\n  private destroy$ = new Subject();\n\n  constructor() {\n    this.formControl = new FormControl(\n      this.defaultValue,\n      [Validators.min(this.minValue), Validators.max(this.maxValue)],\n    );\n  }\n\n  ngAfterViewInit(): void {\n    this.formControl = new FormControl(\n      this.defaultValue,\n      [Validators.min(this.minValue), Validators.max(this.maxValue), Validators.required],\n    );\n    this.formControl.statusChanges.pipe(\n      takeUntil(this.destroy$),\n      debounceTime(2000)\n    ).subscribe(\n      (status) => {\n        if (status === \"INVALID\") {\n          if (this.formControl.hasError('min') && !this.numOverride) {\n            this.formControl.setValue(this.minValue);\n          } else if (this.formControl.hasError('max') && !this.numOverride) {\n            this.formControl.setValue(this.maxValue);\n          }\n        }\n      }\n    )\n    this.formControl.valueChanges.pipe(\n      takeUntil(this.destroy$),\n      throttleTime(25, undefined, {leading: false, trailing: true}),\n    ).subscribe(\n      (value) => {\n        this.valueChange(value);\n      });\n    this.slider$.pipe(\n      takeUntil(this.destroy$),\n      throttleTime(25, undefined, {leading: false, trailing: true}),\n    ).subscribe(\n      (value) => {\n        this.formControl.setValue(value);\n        this.valueChange(this.formControl.value);\n      });\n    this.value$?.pipe(\n      takeUntil(this.destroy$),\n    ).subscribe(\n      (value) => {\n        this.formControl.setValue(value);\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  valueChange(value: any) {\n    this.value.emit({key: this.name, value: value});\n  }\n}\n\nexport interface InputSliderValue {\n  key: string;\n  value: any;\n}\n\nclass SliderUtil {\n  public static inputToSlider(input: string | number, isLog: boolean) {\n    const value = typeof input === 'number' ? input : parseFloat(input);\n    if (isLog) {\n      return Math.log(value);\n    } else {\n      return value;\n    }\n  }\n\n  public static sliderToInput($event: Event, isLog: boolean) {\n    const slider = parseFloat(($event.target as HTMLInputElement).value);\n    if (isLog) {\n      return String(SliderUtil.myRound(Math.exp(slider), 2));\n    } else {\n      return String(SliderUtil.myRound(slider, 2));\n    }\n  }\n\n  public static getSliderMin(min: string | number, isLog: boolean) {\n    const minNum = typeof min === 'number' ? min : parseFloat(min);\n    return SliderUtil.inputToSlider(minNum, isLog);\n  }\n\n  public static getSliderMax(max: string | number, isLog: boolean) {\n    const maxNum = typeof max === 'number' ? max : parseFloat(max);\n    return SliderUtil.inputToSlider(maxNum, isLog);\n  }\n\n  public static getSliderStep(min: string | number, max: string | number, step: number | string, isLog: boolean): number {\n    const minNum = typeof min === 'number' ? min : parseFloat(min);\n    const maxNum = typeof max === 'number' ? max : parseFloat(max);\n    const stepNum = typeof step === 'number' ? step : parseFloat(step);\n    if (!isLog) {\n      return stepNum;\n    } else {\n      return ((Math.log(maxNum) - Math.log(minNum)) / ((maxNum - minNum) / stepNum))\n    }\n  }\n\n  private static myRound(value: number, precision: number) {\n    const multiplier = Math.pow(10, precision);\n    return Math.round(value * multiplier) / multiplier;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{label}}\n      \n      range: {{minValue}}-{{maxValue}}\n    \n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./input-slider.component.scss\n                \n                mat-form-field {\n  width: 100%;\n}\n\nmat-slider {\n  width: 90%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{label}}            range: {{minValue}}-{{maxValue}}                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InputSliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InputSliderValue.html":{"url":"interfaces/InputSliderValue.html","title":"interface - InputSliderValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InputSliderValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/shared/interface/input-slider/input-slider.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {AfterViewInit, Component, EventEmitter, Input, OnDestroy, Output, ViewChild} from '@angular/core';\nimport {FormControl, Validators} from \"@angular/forms\";\nimport {debounceTime, Subject, takeUntil, throttleTime} from \"rxjs\";\nimport {MatInput} from \"@angular/material/input\";\n\n@Component({\n  selector: 'my-input-slider',\n  templateUrl: './input-slider.component.html',\n  styleUrls: ['./input-slider.component.scss'],\n})\nexport class InputSliderComponent implements OnDestroy, AfterViewInit {\n\n  @Input() minValue!: number;\n  @Input() maxValue!: number;\n  @Input() defaultValue!: number;\n  @Input() step!: number;\n  @Input() stepValue: number = 0.01;\n  @Input() isLog: boolean = false;\n  @Input() numOverride: boolean = false;\n  @Input() name!: string;\n  @Input() label!: string;\n  @Input() value$!: Subject;\n  @Output() value: EventEmitter = new EventEmitter();\n\n\n  @ViewChild(\"input\") inputChild!: MatInput;\n  protected sliderSubject: Subject = new Subject();\n  protected readonly SliderUtil = SliderUtil;\n  protected formControl!: FormControl;\n  private slider$ = this.sliderSubject.asObservable();\n  private destroy$ = new Subject();\n\n  constructor() {\n    this.formControl = new FormControl(\n      this.defaultValue,\n      [Validators.min(this.minValue), Validators.max(this.maxValue)],\n    );\n  }\n\n  ngAfterViewInit(): void {\n    this.formControl = new FormControl(\n      this.defaultValue,\n      [Validators.min(this.minValue), Validators.max(this.maxValue), Validators.required],\n    );\n    this.formControl.statusChanges.pipe(\n      takeUntil(this.destroy$),\n      debounceTime(2000)\n    ).subscribe(\n      (status) => {\n        if (status === \"INVALID\") {\n          if (this.formControl.hasError('min') && !this.numOverride) {\n            this.formControl.setValue(this.minValue);\n          } else if (this.formControl.hasError('max') && !this.numOverride) {\n            this.formControl.setValue(this.maxValue);\n          }\n        }\n      }\n    )\n    this.formControl.valueChanges.pipe(\n      takeUntil(this.destroy$),\n      throttleTime(25, undefined, {leading: false, trailing: true}),\n    ).subscribe(\n      (value) => {\n        this.valueChange(value);\n      });\n    this.slider$.pipe(\n      takeUntil(this.destroy$),\n      throttleTime(25, undefined, {leading: false, trailing: true}),\n    ).subscribe(\n      (value) => {\n        this.formControl.setValue(value);\n        this.valueChange(this.formControl.value);\n      });\n    this.value$?.pipe(\n      takeUntil(this.destroy$),\n    ).subscribe(\n      (value) => {\n        this.formControl.setValue(value);\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  valueChange(value: any) {\n    this.value.emit({key: this.name, value: value});\n  }\n}\n\nexport interface InputSliderValue {\n  key: string;\n  value: any;\n}\n\nclass SliderUtil {\n  public static inputToSlider(input: string | number, isLog: boolean) {\n    const value = typeof input === 'number' ? input : parseFloat(input);\n    if (isLog) {\n      return Math.log(value);\n    } else {\n      return value;\n    }\n  }\n\n  public static sliderToInput($event: Event, isLog: boolean) {\n    const slider = parseFloat(($event.target as HTMLInputElement).value);\n    if (isLog) {\n      return String(SliderUtil.myRound(Math.exp(slider), 2));\n    } else {\n      return String(SliderUtil.myRound(slider, 2));\n    }\n  }\n\n  public static getSliderMin(min: string | number, isLog: boolean) {\n    const minNum = typeof min === 'number' ? min : parseFloat(min);\n    return SliderUtil.inputToSlider(minNum, isLog);\n  }\n\n  public static getSliderMax(max: string | number, isLog: boolean) {\n    const maxNum = typeof max === 'number' ? max : parseFloat(max);\n    return SliderUtil.inputToSlider(maxNum, isLog);\n  }\n\n  public static getSliderStep(min: string | number, max: string | number, step: number | string, isLog: boolean): number {\n    const minNum = typeof min === 'number' ? min : parseFloat(min);\n    const maxNum = typeof max === 'number' ? max : parseFloat(max);\n    const stepNum = typeof step === 'number' ? step : parseFloat(step);\n    if (!isLog) {\n      return stepNum;\n    } else {\n      return ((Math.log(maxNum) - Math.log(minNum)) / ((maxNum - minNum) / stepNum))\n    }\n  }\n\n  private static myRound(value: number, precision: number) {\n    const multiplier = Math.pow(10, precision);\n    return Math.round(value * multiplier) / multiplier;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InterfaceUtilModule.html":{"url":"modules/InterfaceUtilModule.html","title":"module - InterfaceUtilModule","body":"\n                   \n\n\n\n\n    Modules\n    InterfaceUtilModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_InterfaceUtilModule\n\n\n\ncluster_InterfaceUtilModule_declarations\n\n\n\ncluster_InterfaceUtilModule_exports\n\n\n\n\nInputSliderComponent\n\nInputSliderComponent\n\n\n\nInterfaceUtilModule\n\nInterfaceUtilModule\n\nInterfaceUtilModule -->\n\nInputSliderComponent->InterfaceUtilModule\n\n\n\n\n\nInputSliderComponent \n\nInputSliderComponent \n\nInputSliderComponent  -->\n\nInterfaceUtilModule->InputSliderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tools/shared/interface/util.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            InputSliderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            InputSliderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from \"@angular/core\";\nimport {InputSliderComponent} from \"./input-slider/input-slider.component\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatSliderModule} from \"@angular/material/slider\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\n\n@NgModule({\n  imports: [\n    MatInputModule,\n    MatSliderModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  exports: [\n    InputSliderComponent\n  ],\n  declarations: [InputSliderComponent]\n})\nexport class InterfaceUtilModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LineFormComponent.html":{"url":"components/LineFormComponent.html","title":"component - LineFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LineFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/curve/line-form/line-form.component.ts\n\n\n\n    \n        Description\n    \n    \n        Data form for the CurveComponent\nContains one selector for number of curves; and a toggle button for magnitude to flip Y axis.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-line-form\n            \n\n\n\n            \n                styleUrls\n                ./line-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./line-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                curveCounts\n                            \n                            \n                                curveCountsKeys\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                form\n                            \n                            \n                                magnitude\n                            \n                            \n                                    \n                                magSlider\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onCurveNumChange\n                            \n                            \n                                onMagnitude\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: CurveService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/curve/line-form/line-form.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        CurveService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/line-form/line-form.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/line-form/line-form.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCurveNumChange\n                        \n                    \n                \n            \n            \n                \nonCurveNumChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/line-form/line-form.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMagnitude\n                        \n                    \n                \n            \n            \n                \nonMagnitude(value: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/curve/line-form/line-form.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        curveCounts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    [CurveCounts.ONE]: CurveCounts.ONE,\n    [CurveCounts.TWO]: CurveCounts.TWO,\n    [CurveCounts.THREE]: CurveCounts.THREE,\n    [CurveCounts.FOUR]: CurveCounts.FOUR,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/line-form/line-form.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        curveCountsKeys\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(this.curveCounts)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/line-form/line-form.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/line-form/line-form.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(CurveCounts.ONE)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/line-form/line-form.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        magnitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : this.service.getIsMagnitudeOn()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/line-form/line-form.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        magSlider\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSlideToggle\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('magSlider')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/tools/curve/line-form/line-form.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnDestroy, ViewChild} from '@angular/core';\nimport {FormControl} from \"@angular/forms\";\nimport {CurveService} from \"../curve.service\";\nimport {CurveCounts} from \"../curve.service.util\";\nimport {MatLegacySlideToggle as MatSlideToggle} from \"@angular/material/legacy-slide-toggle\";\nimport {Subject, takeUntil} from 'rxjs';\n\n/**\n * Type for passing/parsing number of curve to be plotted to the @LineFormComponent\n */\n\n/**\n * Data form for the {@link CurveComponent}\n *\n * Contains one selector for number of curves; and a toggle button for magnitude to flip Y axis.\n */\n@Component({\n  selector: 'app-line-form',\n  templateUrl: './line-form.component.html',\n  styleUrls: ['./line-form.component.scss'],\n})\nexport class LineFormComponent implements AfterViewInit, OnDestroy {\n  curveCounts = {\n    [CurveCounts.ONE]: CurveCounts.ONE,\n    [CurveCounts.TWO]: CurveCounts.TWO,\n    [CurveCounts.THREE]: CurveCounts.THREE,\n    [CurveCounts.FOUR]: CurveCounts.FOUR,\n  };\n  curveCountsKeys = Object.values(this.curveCounts);\n  form = new FormControl(CurveCounts.ONE);\n  @ViewChild(\"magSlider\") magSlider!: MatSlideToggle;\n  magnitude: boolean = this.service.getIsMagnitudeOn();\n  private destroy$: Subject = new Subject();\n\n  constructor(private service: CurveService) {\n    this.form.setValue(this.service.getCurveCount());\n    this.magnitude = this.service.getIsMagnitudeOn();\n  }\n\n  onCurveNumChange() {\n    // @ts-ignore\n    this.service.setCurveCount(this.form.value);\n  };\n\n  onMagnitude(value: boolean) {\n    this.service.setIsMagnitudeOn(value);\n  }\n\n  ngAfterViewInit(): void {\n    this.service.interface$.pipe(takeUntil(this.destroy$)\n    ).subscribe((curveInterface) => {\n      this.form.setValue(curveInterface.getCurveCount());\n      this.magSlider.checked = curveInterface.getIsMagnitudeOn();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n  }\n\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          Number of Curves\n          \n            \n              {{count}}\n            \n          \n        \n      \n    \n    \n      \n        Magnitude\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./line-form.component.scss\n                \n                mat-form-field {\n  width: 100%;\n}\n\nmat-slide-toggle {\n  margin-left: 10px;\n  margin-top: 15px;\n  font-size: large;\n}\n\np {\n  margin-top: 15px;\n  //font-size: medium;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              Number of Curves                                    {{count}}                                                          Magnitude            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LineFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenubarComponent.html":{"url":"components/MenubarComponent.html","title":"component - MenubarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MenubarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/menubar/menubar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Menu bar for the entire app\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-menubar\n            \n\n\n\n            \n                styleUrls\n                ./menubar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menubar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openToolNavbar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                navbar\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        navbar\n                    \n                \n                \n                    \n                        Type :         ToolsNavbarComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/menubar/menubar.component.ts:20\n                            \n                        \n                \n                    \n                        Toolsbar component to select different interface\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        openToolNavbar\n                        \n                    \n                \n            \n            \n                \nopenToolNavbar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/menubar/menubar.component.ts:25\n                \n            \n\n\n            \n                \n                    function for opening the tool navigation bar\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, NgModule} from '@angular/core';\nimport {ToolsNavbarComponent} from \"../tools-navbar/tools-navbar.component\";\nimport {AppRoutingModule} from \"../../app-routing.module\";\nimport {MatLegacyButtonModule as MatButtonModule} from \"@angular/material/legacy-button\";\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\nimport {MatIconModule} from \"@angular/material/icon\";\n\n/**\n * Menu bar for the entire app\n */\n@Component({\n  selector: 'app-menubar',\n  templateUrl: './menubar.component.html',\n  styleUrls: ['./menubar.component.scss']\n})\nexport class MenubarComponent {\n  /**\n   * Toolsbar component to select different interface\n   */\n  @Input() navbar!: ToolsNavbarComponent\n\n  /**\n   * function for opening the tool navigation bar\n   */\n  openToolNavbar() {\n    this.navbar.open();\n  }\n\n}\n\n/**\n * Encapsution for {@link MenubarComponent}\n */\n@NgModule({\n  imports: [\n    AppRoutingModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n  ],\n  declarations: [\n    MenubarComponent\n  ],\n  exports: [MenubarComponent],\n})\nexport class MenubarModule {\n}\n\n\n    \n\n    \n        \n  \n    menu\n  \n  \n    Skynet Graphing Tool neo\n  \n  \n    settings\n  \n  \n    info\n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./menubar.component.scss\n                \n                .cursive {\n  font-family: \"Brush Script MT\", serif;\n}\n\n.mat-flat-button {\n  font-size: large;\n}\n\n.toolbar-spacer {\n  flex: 1 1 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      menu        Skynet Graphing Tool neo        settings        info                    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MenubarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MenubarModule.html":{"url":"modules/MenubarModule.html","title":"module - MenubarModule","body":"\n                   \n\n\n\n\n    Modules\n    MenubarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MenubarModule\n\n\n\ncluster_MenubarModule_exports\n\n\n\ncluster_MenubarModule_imports\n\n\n\ncluster_MenubarModule_declarations\n\n\n\n\nMenubarComponent\n\nMenubarComponent\n\n\n\nMenubarModule\n\nMenubarModule\n\nMenubarModule -->\n\nMenubarComponent->MenubarModule\n\n\n\n\n\nMenubarComponent \n\nMenubarComponent \n\nMenubarComponent  -->\n\nMenubarModule->MenubarComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nMenubarModule -->\n\nAppRoutingModule->MenubarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/menubar/menubar.component.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Encapsution for MenubarComponent\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MenubarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MenubarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {Component, Input, NgModule} from '@angular/core';\nimport {ToolsNavbarComponent} from \"../tools-navbar/tools-navbar.component\";\nimport {AppRoutingModule} from \"../../app-routing.module\";\nimport {MatLegacyButtonModule as MatButtonModule} from \"@angular/material/legacy-button\";\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\nimport {MatIconModule} from \"@angular/material/icon\";\n\n/**\n * Menu bar for the entire app\n */\n@Component({\n  selector: 'app-menubar',\n  templateUrl: './menubar.component.html',\n  styleUrls: ['./menubar.component.scss']\n})\nexport class MenubarComponent {\n  /**\n   * Toolsbar component to select different interface\n   */\n  @Input() navbar!: ToolsNavbarComponent\n\n  /**\n   * function for opening the tool navigation bar\n   */\n  openToolNavbar() {\n    this.navbar.open();\n  }\n\n}\n\n/**\n * Encapsution for {@link MenubarComponent}\n */\n@NgModule({\n  imports: [\n    AppRoutingModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n  ],\n  declarations: [\n    MenubarComponent\n  ],\n  exports: [MenubarComponent],\n})\nexport class MenubarModule {\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MoonChartFormComponent.html":{"url":"components/MoonChartFormComponent.html","title":"component - MoonChartFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MoonChartFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/moon/moon-chart-form/moon-chart-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-moon-chart-form\n            \n\n\n\n            \n                styleUrls\n                ./moon-chart-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./moon-chart-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                formGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: MoonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/moon/moon-chart-form/moon-chart-form.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        MoonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-chart-form/moon-chart-form.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-chart-form/moon-chart-form.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-chart-form/moon-chart-form.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnDestroy} from '@angular/core';\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {MoonService} from \"../moon.service\";\nimport {debounceTime, Subject, takeUntil} from \"rxjs\";\n\n@Component({\n  selector: 'app-moon-chart-form',\n  templateUrl: './moon-chart-form.component.html',\n  styleUrls: ['./moon-chart-form.component.scss']\n})\nexport class MoonChartFormComponent implements OnDestroy {\n  formGroup!: FormGroup;\n  private destroy$: Subject = new Subject();\n\n  constructor(private service: MoonService) {\n    this.service.chartInfo$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(info => {\n      this.formGroup = new FormGroup({\n        chartTitle: new FormControl(this.service.getChartTitle()),\n        dataLabel: new FormControl(this.service.getDataLabel()),\n        xAxisLabel: new FormControl(this.service.getXAxisLabel()),\n        yAxisLabel: new FormControl(this.service.getYAxisLabel()),\n      })\n      this.formGroup.controls['chartTitle'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(title => {\n        this.service.setChartTitle(title);\n      });\n      this.formGroup.controls['dataLabel'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(labels => {\n        this.service.setDataLabel(labels);\n      });\n      this.formGroup.controls['xAxisLabel'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(label => {\n        this.service.setXAxisLabel(label);\n      });\n      this.formGroup.controls['yAxisLabel'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(label => {\n        this.service.setYAxisLabel(label);\n      });\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        Title\n        \n      \n    \n    \n      \n        Data\n        \n      \n    \n  \n  \n    \n      \n        X Axis\n        \n      \n    \n    \n      \n        Y Axis\n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./moon-chart-form.component.scss\n                \n                mat-form-field {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Title                                    Data                                        X Axis                                    Y Axis                    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MoonChartFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MoonChartInfo.html":{"url":"classes/MoonChartInfo.html","title":"class - MoonChartInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MoonChartInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/moon/moon.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ChartInfo\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chartTitle\n                            \n                            \n                                    Private\n                                dataLabel\n                            \n                            \n                                    Private\n                                xAxisLabel\n                            \n                            \n                                    Private\n                                yAxisLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getChartTitle\n                            \n                            \n                                getDataLabel\n                            \n                            \n                                    Static\n                                getDefaultChartInfo\n                            \n                            \n                                getStorageObject\n                            \n                            \n                                getXAxisLabel\n                            \n                            \n                                getYAxisLabel\n                            \n                            \n                                setChartTitle\n                            \n                            \n                                setDataLabel\n                            \n                            \n                                setStorageObject\n                            \n                            \n                                setXAxisLabel\n                            \n                            \n                                setYAxisLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/moon/moon.service.util.ts:95\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.util.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.util.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        xAxisLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.util.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        yAxisLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.util.ts:95\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getChartTitle\n                        \n                    \n                \n            \n            \n                \ngetChartTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataLabel\n                        \n                    \n                \n            \n            \n                \ngetDataLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getDefaultChartInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MoonChartInfoStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStorageObject\n                        \n                    \n                \n            \n            \n                \ngetStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MoonChartInfoStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getXAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetXAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getYAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetYAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setChartTitle\n                        \n                    \n                \n            \n            \n                \nsetChartTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDataLabel\n                        \n                    \n                \n            \n            \n                \nsetDataLabel(data: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStorageObject\n                        \n                    \n                \n            \n            \n                \nsetStorageObject(storageObject: MoonChartInfoStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storageObject\n                                    \n                                                MoonChartInfoStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setXAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetXAxisLabel(xAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    xAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setYAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetYAxisLabel(yAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    yAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {rad} from \"../shared/data/utils\";\n\nexport interface MoonDataDict {\n  julianDate: number | null;\n  angularSeparation: number | null;\n}\n\nexport class MoonData implements MyData {\n  private moonDataDict!: MoonDataDict[];\n\n  constructor() {\n    this.setData(MoonData.getDefaultData());\n  }\n\n  /**\n   *  This function returns an array of data points that represent a moon's orbit with randomly\n   *  generated parameters. This function also introduce a 5% noise to all data points.\n   *  @returns    {Array}\n   */\n  public static getDefaultData(): MoonDataDict[] {\n    /**\n     *  ln(750) = 6.62\n     *  ln(1) = 0\n     */\n    const a = Math.exp(Math.random() * 4 + 1.62);\n    const p = Math.random() * 10 + 5;\n    const phase = Math.random() * 360;\n    const tilt = Math.random() * 45;\n\n    const returnData: MoonDataDict[] = [];\n\n    for (let i = 0; i  0) {\n      for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MoonChartInfoStorageObject.html":{"url":"interfaces/MoonChartInfoStorageObject.html","title":"interface - MoonChartInfoStorageObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MoonChartInfoStorageObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/moon/moon.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            chartTitle\n                                        \n                                \n                                \n                                        \n                                            dataLabel\n                                        \n                                \n                                \n                                        \n                                            xAxisLabel\n                                        \n                                \n                                \n                                        \n                                            yAxisLabel\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chartTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chartTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dataLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xAxisLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        xAxisLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yAxisLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        yAxisLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {rad} from \"../shared/data/utils\";\n\nexport interface MoonDataDict {\n  julianDate: number | null;\n  angularSeparation: number | null;\n}\n\nexport class MoonData implements MyData {\n  private moonDataDict!: MoonDataDict[];\n\n  constructor() {\n    this.setData(MoonData.getDefaultData());\n  }\n\n  /**\n   *  This function returns an array of data points that represent a moon's orbit with randomly\n   *  generated parameters. This function also introduce a 5% noise to all data points.\n   *  @returns    {Array}\n   */\n  public static getDefaultData(): MoonDataDict[] {\n    /**\n     *  ln(750) = 6.62\n     *  ln(1) = 0\n     */\n    const a = Math.exp(Math.random() * 4 + 1.62);\n    const p = Math.random() * 10 + 5;\n    const phase = Math.random() * 360;\n    const tilt = Math.random() * 45;\n\n    const returnData: MoonDataDict[] = [];\n\n    for (let i = 0; i  0) {\n      for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MoonComponent.html":{"url":"components/MoonComponent.html","title":"component - MoonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MoonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/moon/moon/moon.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-moon\n            \n\n\n\n            \n                styleUrls\n                ./moon.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./moon.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                actionHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: MoonService, honorCodeService: HonorCodePopupService, chartService: HonorCodeChartService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/moon/moon/moon.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        MoonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        honorCodeService\n                                                  \n                                                        \n                                                                        HonorCodePopupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chartService\n                                                  \n                                                        \n                                                                        HonorCodeChartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        actionHandler\n                        \n                    \n                \n            \n            \n                \nactionHandler(actions: ChartAction[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon/moon.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    actions\n                                    \n                                                ChartAction[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {ChartAction} from \"../../shared/types/actions\";\nimport {MoonService} from \"../moon.service\";\nimport {HonorCodePopupService} from \"../../shared/honor-code-popup/honor-code-popup.service\";\nimport {HonorCodeChartService} from \"../../shared/honor-code-popup/honor-code-chart.service\";\n\n@Component({\n  selector: 'app-moon',\n  templateUrl: './moon.component.html',\n  styleUrls: ['./moon.component.scss'],\n})\nexport class MoonComponent {\n  constructor(private service: MoonService,\n              private honorCodeService: HonorCodePopupService,\n              private chartService: HonorCodeChartService) {\n  }\n\n  actionHandler(actions: ChartAction[]) {\n    actions.forEach((action) => {\n      if (action.action === \"addRow\") {\n        this.service.addRow(-1, 1);\n      } else if (action.action === \"saveGraph\") {\n        this.honorCodeService.honored().subscribe((name: string) => {\n          this.chartService.saveImageHighChartOffline(this.service.getHighChart(), \"moon\", name);\n        })\n      } else if (action.action === \"resetData\") {\n        this.service.resetData();\n      } else if (action.action === \"resetChartInfo\") {\n        this.service.resetChartInfo();\n      } else if (action.action === \"resetModel\") {\n        this.service.resetInterface();\n      }\n    })\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n      \n      \n    \n  \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./moon.component.scss\n                \n                .container-row {\n  height: 80%;\n  padding: 20px 100px 20px 100px;\n  width: 100%;\n}\n\n.col-4, .col-8 {\n  display: flex;\n  flex-flow: column;\n}\n\n.data-form-row, data-button-row, chart-form-row, chart-button-row {\n  height: fit-content;\n  flex: 0 1 auto;\n}\n\n.data-table-row, .chart-row {\n  flex: 1 1 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MoonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MoonData.html":{"url":"classes/MoonData.html","title":"class - MoonData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MoonData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/moon/moon.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyData\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                moonDataDict\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRow\n                            \n                            \n                                getData\n                            \n                            \n                                getDataArray\n                            \n                            \n                                    Static\n                                getDefaultData\n                            \n                            \n                                removeRow\n                            \n                            \n                                setData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/moon/moon.service.util.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        moonDataDict\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MoonDataDict[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.util.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRow\n                        \n                    \n                \n            \n            \n                \naddRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MoonDataDict[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataArray\n                        \n                    \n                \n            \n            \n                \ngetDataArray()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getDefaultData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:23\n                \n            \n\n\n            \n                \n                     This function returns an array of data points that represent a moon's orbit with randomly\n generated parameters. This function also introduce a 5% noise to all data points.\n @returns    {Array}\n\n\n                    \n                    \n                    \n                        Returns :         MoonDataDict[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRow\n                        \n                    \n                \n            \n            \n                \nremoveRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setData\n                        \n                    \n                \n            \n            \n                \nsetData(data: MoonDataDict[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                MoonDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {rad} from \"../shared/data/utils\";\n\nexport interface MoonDataDict {\n  julianDate: number | null;\n  angularSeparation: number | null;\n}\n\nexport class MoonData implements MyData {\n  private moonDataDict!: MoonDataDict[];\n\n  constructor() {\n    this.setData(MoonData.getDefaultData());\n  }\n\n  /**\n   *  This function returns an array of data points that represent a moon's orbit with randomly\n   *  generated parameters. This function also introduce a 5% noise to all data points.\n   *  @returns    {Array}\n   */\n  public static getDefaultData(): MoonDataDict[] {\n    /**\n     *  ln(750) = 6.62\n     *  ln(1) = 0\n     */\n    const a = Math.exp(Math.random() * 4 + 1.62);\n    const p = Math.random() * 10 + 5;\n    const phase = Math.random() * 360;\n    const tilt = Math.random() * 45;\n\n    const returnData: MoonDataDict[] = [];\n\n    for (let i = 0; i  0) {\n      for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MoonDataDict.html":{"url":"interfaces/MoonDataDict.html","title":"interface - MoonDataDict","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MoonDataDict\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/moon/moon.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            angularSeparation\n                                        \n                                \n                                \n                                        \n                                            julianDate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        angularSeparation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        angularSeparation:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        julianDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        julianDate:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {rad} from \"../shared/data/utils\";\n\nexport interface MoonDataDict {\n  julianDate: number | null;\n  angularSeparation: number | null;\n}\n\nexport class MoonData implements MyData {\n  private moonDataDict!: MoonDataDict[];\n\n  constructor() {\n    this.setData(MoonData.getDefaultData());\n  }\n\n  /**\n   *  This function returns an array of data points that represent a moon's orbit with randomly\n   *  generated parameters. This function also introduce a 5% noise to all data points.\n   *  @returns    {Array}\n   */\n  public static getDefaultData(): MoonDataDict[] {\n    /**\n     *  ln(750) = 6.62\n     *  ln(1) = 0\n     */\n    const a = Math.exp(Math.random() * 4 + 1.62);\n    const p = Math.random() * 10 + 5;\n    const phase = Math.random() * 360;\n    const tilt = Math.random() * 45;\n\n    const returnData: MoonDataDict[] = [];\n\n    for (let i = 0; i  0) {\n      for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MoonFormComponent.html":{"url":"components/MoonFormComponent.html","title":"component - MoonFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MoonFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/moon/moon-form/moon-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-moon-form\n            \n\n\n\n            \n                styleUrls\n                ./moon-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./moon-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                amplitudeSubject\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                formGroup\n                            \n                            \n                                    Protected\n                                periodSubject\n                            \n                            \n                                    Protected\n                                phaseSubject\n                            \n                            \n                                    Protected\n                                tiltSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: MoonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/moon/moon-form/moon-form.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        MoonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-form/moon-form.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-form/moon-form.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n            \n                \nonChange($event: InputSliderValue)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-form/moon-form.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                InputSliderValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        amplitudeSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-form/moon-form.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-form/moon-form.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    amplitude: new FormControl(30,\n      [Validators.required, Validators.min(1), Validators.max(750)],\n    ),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-form/moon-form.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        periodSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-form/moon-form.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        phaseSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-form/moon-form.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        tiltSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-form/moon-form.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnDestroy} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {Subject, takeUntil} from \"rxjs\";\nimport {MoonService} from \"../moon.service\";\nimport {InputSliderValue} from \"../../shared/interface/input-slider/input-slider.component\";\nimport {UpdateSource} from \"../moon.service.util\";\n\n@Component({\n  selector: 'app-moon-form',\n  templateUrl: './moon-form.component.html',\n  styleUrls: ['./moon-form.component.scss'],\n})\nexport class MoonFormComponent implements AfterViewInit, OnDestroy {\n  formGroup = new FormGroup({\n    amplitude: new FormControl(30,\n      [Validators.required, Validators.min(1), Validators.max(750)],\n    ),\n  })\n  protected amplitudeSubject: Subject = new Subject();\n  protected periodSubject: Subject = new Subject();\n  protected phaseSubject: Subject = new Subject();\n  protected tiltSubject: Subject = new Subject();\n  private destroy$ = new Subject();\n\n  constructor(private service: MoonService) {\n  }\n\n  onChange($event: InputSliderValue) {\n    if ($event.key === MoonModelParameters.AMPLITUDE) {\n      this.service.setAmplitude($event.value);\n    } else if ($event.key === MoonModelParameters.PERIOD) {\n      this.service.setPeriod($event.value);\n    } else if ($event.key === MoonModelParameters.PHASE) {\n      this.service.setPhase($event.value);\n    } else if ($event.key === MoonModelParameters.TILT) {\n      this.service.setTilt($event.value);\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.amplitudeSubject.next(this.service.getAmplitude());\n    this.periodSubject.next(this.service.getPeriod());\n    this.phaseSubject.next(this.service.getPhase());\n    this.tiltSubject.next(this.service.getTilt());\n\n    this.service.interface$.pipe(\n      takeUntil(this.destroy$),\n    ).subscribe(\n      (source: UpdateSource) => {\n        if (source !== UpdateSource.INTERFACE) {\n          this.amplitudeSubject.next(this.service.getAmplitude());\n          this.periodSubject.next(this.service.getPeriod());\n          this.phaseSubject.next(this.service.getPhase());\n          this.tiltSubject.next(this.service.getTilt());\n        }\n      }\n    )\n  }\n\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n\n\nenum MoonModelParameters {\n  AMPLITUDE = 'amplitude',\n  PERIOD = 'period',\n  PHASE = 'phase',\n  TILT = 'tilt',\n}\n\n\n    \n\n    \n        \n  \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./moon-form.component.scss\n                \n                mat-form-field {\n  width: 100%;\n}\n\nmat-slider {\n  width: 90%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MoonFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MoonHighchartComponent.html":{"url":"components/MoonHighchartComponent.html","title":"component - MoonHighchartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MoonHighchartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/moon/moon-highchart/moon-highchart.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-moon-highchart\n            \n\n\n\n            \n                styleUrls\n                ./moon-highchart.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./moon-highchart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chartConstructor\n                            \n                            \n                                chartObject\n                            \n                            \n                                chartOptions\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                Highcharts\n                            \n                            \n                                updateFlag\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                chartInitialized\n                            \n                            \n                                initChartSeries\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                setChartTitle\n                            \n                            \n                                    Private\n                                setChartXAxis\n                            \n                            \n                                    Private\n                                setChartYAxis\n                            \n                            \n                                setData\n                            \n                            \n                                setModel\n                            \n                            \n                                    Private\n                                updateChart\n                            \n                            \n                                updateData\n                            \n                            \n                                updateModel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: MoonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/moon/moon-highchart/moon-highchart.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        MoonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        chartInitialized\n                        \n                    \n                \n            \n            \n                \nchartInitialized($event: Highcharts.Chart)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-highchart/moon-highchart.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                            Highcharts.Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initChartSeries\n                        \n                    \n                \n            \n            \n                \ninitChartSeries()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-highchart/moon-highchart.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-highchart/moon-highchart.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-highchart/moon-highchart.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setChartTitle\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChartTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-highchart/moon-highchart.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setChartXAxis\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChartXAxis()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-highchart/moon-highchart.component.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setChartYAxis\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChartYAxis()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-highchart/moon-highchart.component.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setData\n                        \n                    \n                \n            \n            \n                \nsetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-highchart/moon-highchart.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setModel\n                        \n                    \n                \n            \n            \n                \nsetModel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-highchart/moon-highchart.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateChart\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-highchart/moon-highchart.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateData\n                        \n                    \n                \n            \n            \n                \nupdateData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-highchart/moon-highchart.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateModel\n                        \n                    \n                \n            \n            \n                \nupdateModel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-highchart/moon-highchart.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chartConstructor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : \"chart\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-highchart/moon-highchart.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartObject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Highcharts.Chart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-highchart/moon-highchart.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Highcharts.Options\n\n                    \n                \n                \n                    \n                        Default value : {\n    chart: {\n      animation: false,\n      styledMode: true,\n    },\n    legend: {\n      align: 'center',\n    },\n    tooltip: {\n      enabled: true,\n      shared: false,\n    },\n    exporting: {\n      buttons: {\n        contextButton: {\n          enabled: false,\n        }\n      }\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-highchart/moon-highchart.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-highchart/moon-highchart.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Highcharts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Highcharts\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-highchart/moon-highchart.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFlag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-highchart/moon-highchart.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnDestroy} from '@angular/core';\nimport * as Highcharts from \"highcharts\";\nimport {MoonService} from \"../moon.service\";\nimport {Subject, takeUntil} from \"rxjs\";\n\n@Component({\n  selector: 'app-moon-highchart',\n  templateUrl: './moon-highchart.component.html',\n  styleUrls: ['./moon-highchart.component.scss']\n})\nexport class MoonHighchartComponent implements AfterViewInit, OnDestroy {\n  Highcharts: typeof Highcharts = Highcharts;\n  updateFlag: boolean = true;\n  chartConstructor: any = \"chart\";\n  chartObject!: Highcharts.Chart;\n  chartOptions: Highcharts.Options = {\n    chart: {\n      animation: false,\n      styledMode: true,\n    },\n    legend: {\n      align: 'center',\n    },\n    tooltip: {\n      enabled: true,\n      shared: false,\n    },\n    exporting: {\n      buttons: {\n        contextButton: {\n          enabled: false,\n        }\n      }\n    }\n  };\n  private destroy$: Subject = new Subject();\n\n  constructor(private service: MoonService) {\n    this.setChartTitle();\n    this.setChartXAxis();\n    this.setChartYAxis();\n  }\n\n  chartInitialized($event: Highcharts.Chart) {\n    this.chartObject = $event;\n    this.service.setHighChart(this.chartObject);\n\n  }\n\n  ngAfterViewInit(): void {\n    this.initChartSeries();\n    this.service.data$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(() => {\n      this.updateData();\n    });\n    this.service.chartInfo$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(() => {\n      this.setChartTitle();\n      this.setChartXAxis();\n      this.setChartYAxis();\n      this.updateChart();\n    });\n    this.service.interface$.pipe(\n      takeUntil(this.destroy$),\n    ).subscribe(\n      () => {\n        this.updateModel();\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n  }\n\n  initChartSeries() {\n    this.setData();\n    this.setModel();\n  }\n\n  setData() {\n    this.chartObject.addSeries({\n      name: this.service.getDataLabel(),\n      data: this.service.getDataArray(),\n      type: 'scatter',\n    })\n  }\n\n  updateData() {\n    this.chartObject.series[0].update({\n      name: this.service.getDataLabel(),\n      data: this.service.getDataArray(),\n      type: 'scatter',\n    });\n  }\n\n  setModel() {\n    this.chartObject.addSeries({\n      name: \"Model\",\n      data: this.service.getMoonModelData(),\n      type: 'line',\n    })\n  }\n\n  updateModel() {\n    this.chartObject.series[1].update({\n      name: \"Model\",\n      data: this.service.getMoonModelData(),\n      type: 'line',\n    });\n  }\n\n\n  private updateChart(): void {\n    this.updateFlag = true;\n  }\n\n  private setChartTitle(): void {\n    this.chartOptions.title = {text: this.service.getChartTitle()};\n  }\n\n  private setChartXAxis(): void {\n    this.chartOptions.xAxis = {\n      title: {text: this.service.getXAxisLabel()}\n    };\n  }\n\n  private setChartYAxis(): void {\n    this.chartOptions.yAxis = {\n      title: {text: this.service.getYAxisLabel()}\n    };\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./moon-highchart.component.scss\n                \n                .chart-container {\n  width: 100%;\n  height: 100%;\n  padding: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MoonHighchartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MoonInterface.html":{"url":"interfaces/MoonInterface.html","title":"interface - MoonInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MoonInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/moon/moon.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getAmplitude\n                                    \n                                \n                                \n                                    \n                                        getPeriod\n                                    \n                                \n                                \n                                    \n                                        getPhase\n                                    \n                                \n                                \n                                    \n                                        getStorageObject\n                                    \n                                \n                                \n                                    \n                                        getTilt\n                                    \n                                \n                                \n                                    \n                                        resetInterface\n                                    \n                                \n                                \n                                    \n                                        setAmplitude\n                                    \n                                \n                                \n                                    \n                                        setPeriod\n                                    \n                                \n                                \n                                    \n                                        setPhase\n                                    \n                                \n                                \n                                    \n                                        setStorageObject\n                                    \n                                \n                                \n                                    \n                                        setTilt\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAmplitude\n                        \n                    \n                \n            \n            \n                \ngetAmplitude()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPeriod\n                        \n                    \n                \n            \n            \n                \ngetPeriod()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPhase\n                        \n                    \n                \n            \n            \n                \ngetPhase()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStorageObject\n                        \n                    \n                \n            \n            \n                \ngetStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MoonInterfaceStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTilt\n                        \n                    \n                \n            \n            \n                \ngetTilt()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetInterface\n                        \n                    \n                \n            \n            \n                \nresetInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAmplitude\n                        \n                    \n                \n            \n            \n                \nsetAmplitude(amplitude: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    amplitude\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPeriod\n                        \n                    \n                \n            \n            \n                \nsetPeriod(period: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    period\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPhase\n                        \n                    \n                \n            \n            \n                \nsetPhase(phase: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phase\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStorageObject\n                        \n                    \n                \n            \n            \n                \nsetStorageObject(storageObject: MoonInterfaceStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storageObject\n                                    \n                                                MoonInterfaceStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTilt\n                        \n                    \n                \n            \n            \n                \nsetTilt(tilt: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tilt\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {rad} from \"../shared/data/utils\";\n\nexport interface MoonDataDict {\n  julianDate: number | null;\n  angularSeparation: number | null;\n}\n\nexport class MoonData implements MyData {\n  private moonDataDict!: MoonDataDict[];\n\n  constructor() {\n    this.setData(MoonData.getDefaultData());\n  }\n\n  /**\n   *  This function returns an array of data points that represent a moon's orbit with randomly\n   *  generated parameters. This function also introduce a 5% noise to all data points.\n   *  @returns    {Array}\n   */\n  public static getDefaultData(): MoonDataDict[] {\n    /**\n     *  ln(750) = 6.62\n     *  ln(1) = 0\n     */\n    const a = Math.exp(Math.random() * 4 + 1.62);\n    const p = Math.random() * 10 + 5;\n    const phase = Math.random() * 360;\n    const tilt = Math.random() * 45;\n\n    const returnData: MoonDataDict[] = [];\n\n    for (let i = 0; i  0) {\n      for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MoonInterfaceImpl.html":{"url":"classes/MoonInterfaceImpl.html","title":"class - MoonInterfaceImpl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MoonInterfaceImpl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/moon/moon.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MoonInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                amplitude\n                            \n                            \n                                    Private\n                                period\n                            \n                            \n                                    Private\n                                phase\n                            \n                            \n                                    Private\n                                tilt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAmplitude\n                            \n                            \n                                getDefaultStorageObject\n                            \n                            \n                                getPeriod\n                            \n                            \n                                getPhase\n                            \n                            \n                                getStorageObject\n                            \n                            \n                                getTilt\n                            \n                            \n                                resetInterface\n                            \n                            \n                                setAmplitude\n                            \n                            \n                                setPeriod\n                            \n                            \n                                setPhase\n                            \n                            \n                                setStorageObject\n                            \n                            \n                                setTilt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        amplitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.util.ts:198\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        period\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.util.ts:199\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        phase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.util.ts:200\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tilt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.util.ts:201\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAmplitude\n                        \n                    \n                \n            \n            \n                \ngetAmplitude()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:203\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDefaultStorageObject\n                        \n                    \n                \n            \n            \n                \ngetDefaultStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:255\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MoonInterfaceStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPeriod\n                        \n                    \n                \n            \n            \n                \ngetPeriod()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:207\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPhase\n                        \n                    \n                \n            \n            \n                \ngetPhase()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:211\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStorageObject\n                        \n                    \n                \n            \n            \n                \ngetStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:239\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MoonInterfaceStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTilt\n                        \n                    \n                \n            \n            \n                \ngetTilt()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:215\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetInterface\n                        \n                    \n                \n            \n            \n                \nresetInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:219\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAmplitude\n                        \n                    \n                \n            \n            \n                \nsetAmplitude(amplitude: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:223\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    amplitude\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPeriod\n                        \n                    \n                \n            \n            \n                \nsetPeriod(period: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:227\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    period\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPhase\n                        \n                    \n                \n            \n            \n                \nsetPhase(phase: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:231\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phase\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStorageObject\n                        \n                    \n                \n            \n            \n                \nsetStorageObject(storageObject: MoonInterfaceStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:248\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storageObject\n                                    \n                                                MoonInterfaceStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTilt\n                        \n                    \n                \n            \n            \n                \nsetTilt(tilt: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:235\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tilt\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {rad} from \"../shared/data/utils\";\n\nexport interface MoonDataDict {\n  julianDate: number | null;\n  angularSeparation: number | null;\n}\n\nexport class MoonData implements MyData {\n  private moonDataDict!: MoonDataDict[];\n\n  constructor() {\n    this.setData(MoonData.getDefaultData());\n  }\n\n  /**\n   *  This function returns an array of data points that represent a moon's orbit with randomly\n   *  generated parameters. This function also introduce a 5% noise to all data points.\n   *  @returns    {Array}\n   */\n  public static getDefaultData(): MoonDataDict[] {\n    /**\n     *  ln(750) = 6.62\n     *  ln(1) = 0\n     */\n    const a = Math.exp(Math.random() * 4 + 1.62);\n    const p = Math.random() * 10 + 5;\n    const phase = Math.random() * 360;\n    const tilt = Math.random() * 45;\n\n    const returnData: MoonDataDict[] = [];\n\n    for (let i = 0; i  0) {\n      for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MoonInterfaceStorageObject.html":{"url":"interfaces/MoonInterfaceStorageObject.html","title":"interface - MoonInterfaceStorageObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MoonInterfaceStorageObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/moon/moon.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amplitude\n                                        \n                                \n                                \n                                        \n                                            period\n                                        \n                                \n                                \n                                        \n                                            phase\n                                        \n                                \n                                \n                                        \n                                            tilt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amplitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amplitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        period\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        period:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phase\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phase:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tilt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tilt:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {rad} from \"../shared/data/utils\";\n\nexport interface MoonDataDict {\n  julianDate: number | null;\n  angularSeparation: number | null;\n}\n\nexport class MoonData implements MyData {\n  private moonDataDict!: MoonDataDict[];\n\n  constructor() {\n    this.setData(MoonData.getDefaultData());\n  }\n\n  /**\n   *  This function returns an array of data points that represent a moon's orbit with randomly\n   *  generated parameters. This function also introduce a 5% noise to all data points.\n   *  @returns    {Array}\n   */\n  public static getDefaultData(): MoonDataDict[] {\n    /**\n     *  ln(750) = 6.62\n     *  ln(1) = 0\n     */\n    const a = Math.exp(Math.random() * 4 + 1.62);\n    const p = Math.random() * 10 + 5;\n    const phase = Math.random() * 360;\n    const tilt = Math.random() * 45;\n\n    const returnData: MoonDataDict[] = [];\n\n    for (let i = 0; i  0) {\n      for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MoonModel.html":{"url":"interfaces/MoonModel.html","title":"interface - MoonModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MoonModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/moon/moon.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getMoonModelData\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMoonModelData\n                        \n                    \n                \n            \n            \n                \ngetMoonModelData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:324\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     [][]\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {rad} from \"../shared/data/utils\";\n\nexport interface MoonDataDict {\n  julianDate: number | null;\n  angularSeparation: number | null;\n}\n\nexport class MoonData implements MyData {\n  private moonDataDict!: MoonDataDict[];\n\n  constructor() {\n    this.setData(MoonData.getDefaultData());\n  }\n\n  /**\n   *  This function returns an array of data points that represent a moon's orbit with randomly\n   *  generated parameters. This function also introduce a 5% noise to all data points.\n   *  @returns    {Array}\n   */\n  public static getDefaultData(): MoonDataDict[] {\n    /**\n     *  ln(750) = 6.62\n     *  ln(1) = 0\n     */\n    const a = Math.exp(Math.random() * 4 + 1.62);\n    const p = Math.random() * 10 + 5;\n    const phase = Math.random() * 360;\n    const tilt = Math.random() * 45;\n\n    const returnData: MoonDataDict[] = [];\n\n    for (let i = 0; i  0) {\n      for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MoonModule.html":{"url":"modules/MoonModule.html","title":"module - MoonModule","body":"\n                   \n\n\n\n\n    Modules\n    MoonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MoonModule\n\n\n\ncluster_MoonModule_declarations\n\n\n\ncluster_MoonModule_providers\n\n\n\ncluster_MoonModule_imports\n\n\n\n\nMoonChartFormComponent\n\nMoonChartFormComponent\n\n\n\nMoonModule\n\nMoonModule\n\nMoonModule -->\n\nMoonChartFormComponent->MoonModule\n\n\n\n\n\nMoonComponent\n\nMoonComponent\n\nMoonModule -->\n\nMoonComponent->MoonModule\n\n\n\n\n\nMoonFormComponent\n\nMoonFormComponent\n\nMoonModule -->\n\nMoonFormComponent->MoonModule\n\n\n\n\n\nMoonHighchartComponent\n\nMoonHighchartComponent\n\nMoonModule -->\n\nMoonHighchartComponent->MoonModule\n\n\n\n\n\nMoonTableComponent\n\nMoonTableComponent\n\nMoonModule -->\n\nMoonTableComponent->MoonModule\n\n\n\n\n\nInterfaceUtilModule\n\nInterfaceUtilModule\n\nMoonModule -->\n\nInterfaceUtilModule->MoonModule\n\n\n\n\n\nNgIf\n\nNgIf\n\nMoonModule -->\n\nNgIf->MoonModule\n\n\n\n\n\nSimpleDataButtonModule\n\nSimpleDataButtonModule\n\nMoonModule -->\n\nSimpleDataButtonModule->MoonModule\n\n\n\n\n\nSimpleGraphButtonModule\n\nSimpleGraphButtonModule\n\nMoonModule -->\n\nSimpleGraphButtonModule->MoonModule\n\n\n\n\n\nHonorCodePopupService\n\nHonorCodePopupService\n\nMoonModule -->\n\nHonorCodePopupService->MoonModule\n\n\n\n\n\nMoonService\n\nMoonService\n\nMoonModule -->\n\nMoonService->MoonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tools/moon/moon.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MoonChartFormComponent\n                        \n                        \n                            MoonComponent\n                        \n                        \n                            MoonFormComponent\n                        \n                        \n                            MoonHighchartComponent\n                        \n                        \n                            MoonTableComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            HonorCodePopupService\n                        \n                        \n                            MoonService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InterfaceUtilModule\n                        \n                        \n                            NgIf\n                        \n                        \n                            SimpleDataButtonModule\n                        \n                        \n                            SimpleGraphButtonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from \"@angular/core\";\nimport {MoonComponent} from \"./moon/moon.component\";\nimport {SimpleDataButtonModule} from \"../shared/simple-data-button/simple-data-button.component\";\nimport {SimpleGraphButtonModule} from \"../shared/simple-graph-button/simple-graph-button.component\";\nimport {MoonTableComponent} from \"./moon-table/moon-table.component\";\nimport {HotTableModule} from \"@handsontable/angular\";\nimport {MoonService} from \"./moon.service\";\nimport {MoonHighchartComponent} from \"./moon-highchart/moon-highchart.component\";\nimport {HighchartsChartModule} from \"highcharts-angular\";\nimport {MoonChartFormComponent} from './moon-chart-form/moon-chart-form.component';\nimport {MatLegacyFormFieldModule} from \"@angular/material/legacy-form-field\";\nimport {MatLegacyInputModule} from \"@angular/material/legacy-input\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {MoonFormComponent} from './moon-form/moon-form.component';\nimport {MatSliderModule} from \"@angular/material/slider\";\nimport {NgIf} from \"@angular/common\";\nimport {HonorCodePopupService} from \"../shared/honor-code-popup/honor-code-popup.service\";\nimport {InterfaceUtilModule} from \"../shared/interface/util\";\n\n@NgModule({\n  declarations: [\n    MoonComponent,\n    MoonTableComponent,\n    MoonHighchartComponent,\n    MoonChartFormComponent,\n    MoonFormComponent,\n  ],\n  imports: [\n    SimpleDataButtonModule,\n    SimpleGraphButtonModule,\n    InterfaceUtilModule,\n    HotTableModule,\n    HighchartsChartModule,\n    MatLegacyFormFieldModule,\n    MatLegacyInputModule,\n    ReactiveFormsModule,\n    MatSliderModule,\n    FormsModule,\n    NgIf,\n  ],\n  providers: [MoonService, HonorCodePopupService],\n})\nexport class MoonModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MoonService.html":{"url":"injectables/MoonService.html","title":"injectable - MoonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MoonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/moon/moon.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                chartInfo$\n                            \n                            \n                                    Private\n                                chartInfoSubject\n                            \n                            \n                                    Private\n                                    Static\n                                CHARTPRECISION\n                            \n                            \n                                    Public\n                                data$\n                            \n                            \n                                    Private\n                                dataSubject\n                            \n                            \n                                    Private\n                                highChart\n                            \n                            \n                                    Public\n                                interface$\n                            \n                            \n                                    Private\n                                interfaceSubject\n                            \n                            \n                                    Private\n                                moonChartInfo\n                            \n                            \n                                    Private\n                                moonData\n                            \n                            \n                                    Private\n                                moonInterface\n                            \n                            \n                                    Private\n                                moonStorage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRow\n                            \n                            \n                                getAmplitude\n                            \n                            \n                                getChartTitle\n                            \n                            \n                                getData\n                            \n                            \n                                getDataArray\n                            \n                            \n                                getDataLabel\n                            \n                            \n                                getHighChart\n                            \n                            \n                                getMoonModelData\n                            \n                            \n                                getPeriod\n                            \n                            \n                                getPhase\n                            \n                            \n                                getStorageObject\n                            \n                            \n                                getTilt\n                            \n                            \n                                getXAxisLabel\n                            \n                            \n                                getYAxisLabel\n                            \n                            \n                                    Private\n                                limitPrecision\n                            \n                            \n                                removeRow\n                            \n                            \n                                    Public\n                                resetChartInfo\n                            \n                            \n                                resetData\n                            \n                            \n                                resetInterface\n                            \n                            \n                                setAmplitude\n                            \n                            \n                                setChartTitle\n                            \n                            \n                                setData\n                            \n                            \n                                setDataLabel\n                            \n                            \n                                    Public\n                                setHighChart\n                            \n                            \n                                setPeriod\n                            \n                            \n                                setPhase\n                            \n                            \n                                setStorageObject\n                            \n                            \n                                setTilt\n                            \n                            \n                                setXAxisLabel\n                            \n                            \n                                setYAxisLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/moon/moon.service.ts:33\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRow\n                        \n                    \n                \n            \n            \n                \naddRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:177\n                \n            \n\n\n            \n                \n                    MyData Methods\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAmplitude\n                        \n                    \n                \n            \n            \n                \ngetAmplitude()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:73\n                \n            \n\n\n            \n                \n                    MoonInterface Methods\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChartTitle\n                        \n                    \n                \n            \n            \n                \ngetChartTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:120\n                \n            \n\n\n            \n                \n                    ChartInfo Methods\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MoonDataDict[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataArray\n                        \n                    \n                \n            \n            \n                \ngetDataArray()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataLabel\n                        \n                    \n                \n            \n            \n                \ngetDataLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHighChart\n                        \n                    \n                \n            \n            \n                \ngetHighChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:213\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Highcharts.Chart\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMoonModelData\n                        \n                    \n                \n            \n            \n                \ngetMoonModelData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:42\n                \n            \n\n\n            \n                \n                    MoonModel Methods\n\n\n                    \n                        Returns :     [][]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPeriod\n                        \n                    \n                \n            \n            \n                \ngetPeriod()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPhase\n                        \n                    \n                \n            \n            \n                \ngetPhase()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStorageObject\n                        \n                    \n                \n            \n            \n                \ngetStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTilt\n                        \n                    \n                \n            \n            \n                \ngetTilt()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getXAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetXAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getYAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetYAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        limitPrecision\n                        \n                    \n                \n            \n            \n                \n                    \n                    limitPrecision(dataArray: number[][], precision: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:217\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dataArray\n                                    \n                                            number[][]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    precision\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [][]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRow\n                        \n                    \n                \n            \n            \n                \nremoveRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:191\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        resetChartInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetData\n                        \n                    \n                \n            \n            \n                \nresetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:203\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetInterface\n                        \n                    \n                \n            \n            \n                \nresetInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAmplitude\n                        \n                    \n                \n            \n            \n                \nsetAmplitude(amplitude: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    amplitude\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setChartTitle\n                        \n                    \n                \n            \n            \n                \nsetChartTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setData\n                        \n                    \n                \n            \n            \n                \nsetData(data: MoonDataDict[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                MoonDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDataLabel\n                        \n                    \n                \n            \n            \n                \nsetDataLabel(data: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setHighChart\n                        \n                    \n                \n            \n            \n                \n                    \n                    setHighChart(highChart: Highcharts.Chart)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:209\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    highChart\n                                    \n                                            Highcharts.Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPeriod\n                        \n                    \n                \n            \n            \n                \nsetPeriod(period: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    period\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPhase\n                        \n                    \n                \n            \n            \n                \nsetPhase(phase: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phase\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStorageObject\n                        \n                    \n                \n            \n            \n                \nsetStorageObject(storageObject: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storageObject\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTilt\n                        \n                    \n                \n            \n            \n                \nsetTilt(tilt: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tilt\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setXAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetXAxisLabel(xAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    xAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setYAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetYAxisLabel(yAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    yAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chartInfo$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.chartInfoSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartInfoSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(this.moonChartInfo)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        CHARTPRECISION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.dataSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(this.getData())\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        highChart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Highcharts.Chart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        interface$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.interfaceSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        interfaceSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(UpdateSource.INIT)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        moonChartInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChartInfo\n\n                    \n                \n                \n                    \n                        Default value : new MoonChartInfo()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        moonData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MyData\n\n                    \n                \n                \n                    \n                        Default value : new MoonData()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        moonInterface\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MoonInterface\n\n                    \n                \n                \n                    \n                        Default value : new MoonInterfaceImpl()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        moonStorage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MoonStorage\n\n                    \n                \n                \n                    \n                        Default value : new MoonStorage()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {MyData} from \"../shared/data/data.interface\";\nimport {\n  MoonChartInfo,\n  MoonData,\n  MoonDataDict,\n  MoonInterface,\n  MoonInterfaceImpl,\n  MoonModel,\n  MoonStorage,\n  UpdateSource\n} from \"./moon.service.util\";\nimport {BehaviorSubject} from \"rxjs\";\nimport * as Highcharts from 'highcharts';\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {rad} from \"../shared/data/utils\";\n\n@Injectable()\nexport class MoonService implements MyData, ChartInfo, MoonInterface, MoonModel {\n  private moonInterface: MoonInterface = new MoonInterfaceImpl();\n  private moonChartInfo: ChartInfo = new MoonChartInfo();\n  private moonData: MyData = new MoonData();\n  private moonStorage: MoonStorage = new MoonStorage();\n  private highChart!: Highcharts.Chart;\n\n  private static CHARTPRECISION: number = 3;\n\n  private interfaceSubject = new BehaviorSubject(UpdateSource.INIT);\n  public interface$ = this.interfaceSubject.asObservable();\n  private chartInfoSubject = new BehaviorSubject(this.moonChartInfo);\n  public chartInfo$ = this.chartInfoSubject.asObservable();\n  private dataSubject = new BehaviorSubject(this.getData());\n  public data$ = this.dataSubject.asObservable();\n\n  constructor() {\n    this.moonInterface.setStorageObject(this.moonStorage.getInterface());\n    this.moonChartInfo.setStorageObject(this.moonStorage.getChartInfo());\n    this.moonData.setData(this.moonStorage.getData());\n  }\n\n  /** MoonModel Methods **/\n  getMoonModelData(): number[][] {\n    const dataSorted: number[][] = this.moonData.getDataArray().filter((entry: number[]) => {\n      return !(isNaN(entry[0]) || isNaN(entry[1]) || entry[0] === null || entry[1] === null)\n    }).sort((a: number[], b: number[]) => {\n      return a[0] - b[0]\n    });\n    if (dataSorted.length  {\n        return row.map((value: number) => {\n          return value ? parseFloat(value.toFixed(precision)) : value;\n        });\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MoonStorage.html":{"url":"classes/MoonStorage.html","title":"class - MoonStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MoonStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/moon/moon.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyStorage\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                chartInfoKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                dataKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                interfaceKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getChartInfo\n                            \n                            \n                                getData\n                            \n                            \n                                getInterface\n                            \n                            \n                                resetChartInfo\n                            \n                            \n                                resetData\n                            \n                            \n                                resetInterface\n                            \n                            \n                                saveChartInfo\n                            \n                            \n                                saveData\n                            \n                            \n                                saveInterface\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        chartInfoKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'moonChartInfo'\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.util.ts:268\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dataKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'moonData'\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.util.ts:269\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        interfaceKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'moonInterface'\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon.service.util.ts:270\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getChartInfo\n                        \n                    \n                \n            \n            \n                \ngetChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:272\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MoonChartInfoStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:280\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MoonDataDict[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInterface\n                        \n                    \n                \n            \n            \n                \ngetInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:288\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MoonInterfaceStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetChartInfo\n                        \n                    \n                \n            \n            \n                \nresetChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:296\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetData\n                        \n                    \n                \n            \n            \n                \nresetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:300\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetInterface\n                        \n                    \n                \n            \n            \n                \nresetInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:304\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveChartInfo\n                        \n                    \n                \n            \n            \n                \nsaveChartInfo(chartInfo: MoonChartInfoStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:308\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartInfo\n                                    \n                                                MoonChartInfoStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveData\n                        \n                    \n                \n            \n            \n                \nsaveData(data: MoonDataDict[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:312\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                MoonDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveInterface\n                        \n                    \n                \n            \n            \n                \nsaveInterface(interfaceInfo: MoonInterfaceStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon.service.util.ts:316\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    interfaceInfo\n                                    \n                                                MoonInterfaceStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {rad} from \"../shared/data/utils\";\n\nexport interface MoonDataDict {\n  julianDate: number | null;\n  angularSeparation: number | null;\n}\n\nexport class MoonData implements MyData {\n  private moonDataDict!: MoonDataDict[];\n\n  constructor() {\n    this.setData(MoonData.getDefaultData());\n  }\n\n  /**\n   *  This function returns an array of data points that represent a moon's orbit with randomly\n   *  generated parameters. This function also introduce a 5% noise to all data points.\n   *  @returns    {Array}\n   */\n  public static getDefaultData(): MoonDataDict[] {\n    /**\n     *  ln(750) = 6.62\n     *  ln(1) = 0\n     */\n    const a = Math.exp(Math.random() * 4 + 1.62);\n    const p = Math.random() * 10 + 5;\n    const phase = Math.random() * 360;\n    const tilt = Math.random() * 45;\n\n    const returnData: MoonDataDict[] = [];\n\n    for (let i = 0; i  0) {\n      for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MoonTable.html":{"url":"classes/MoonTable.html","title":"class - MoonTable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MoonTable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/moon/moon-table/moon-table.component.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyTable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hotRegisterer\n                            \n                            \n                                    Private\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                            \n                                getTable\n                            \n                            \n                                renderTable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/moon/moon-table/moon-table.component.ts:70\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hotRegisterer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HotTableRegisterer()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-table/moon-table.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-table/moon-table.component.ts:69\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-table/moon-table.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTable\n                        \n                    \n                \n            \n            \n                \ngetTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-table/moon-table.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Handsontable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderTable\n                        \n                    \n                \n            \n            \n                \nrenderTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-table/moon-table.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {AfterViewInit, Component, OnDestroy} from '@angular/core';\nimport {MoonService} from \"../moon.service\";\nimport {MoonDataDict} from \"../moon.service.util\";\nimport {MyTable} from \"../../shared/tables/table-interface\";\nimport {HotTableRegisterer} from \"@handsontable/angular\";\nimport Handsontable from \"handsontable\";\nimport {Subject, takeUntil} from \"rxjs\";\n\n@Component({\n  selector: 'app-moon-table',\n  templateUrl: './moon-table.component.html',\n  styleUrls: ['./moon-table.component.scss']\n})\nexport class MoonTableComponent implements AfterViewInit, OnDestroy {\n  static FLOAT_PRECISION: number = 2;\n  id: string = \"moon-table\";\n  table: MoonTable = new MoonTable(this.id);\n  colNames: string[] = [\"Julian Date\", \"Angular Separation\"];\n  dataSet: any;\n  private destroy$: Subject = new Subject();\n\n  constructor(private service: MoonService) {\n    this.dataSet = this.limitPrecision(this.service.getData(), MoonTableComponent.FLOAT_PRECISION);\n\n  }\n\n  ngAfterViewInit(): void {\n    this.service.data$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe((data: MoonDataDict[]) => {\n      this.dataSet = this.limitPrecision(this.service.getData(), MoonTableComponent.FLOAT_PRECISION);\n      this.table.renderTable();\n    })\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n  }\n\n  public onChange = (changes: any, source: any) => {\n    if (changes) {\n      this.service.setData(this.table.getData());\n    }\n  }\n\n  public onRemove = (index: number, amount: number) => {\n    this.service.removeRow(index, amount);\n  }\n\n  public onInsert = (index: number, amount: number) => {\n    this.service.addRow(index, amount);\n  }\n\n  private limitPrecision(data: MoonDataDict[], precision: number): MoonDataDict[] {\n    return data.map(\n      (row: MoonDataDict) => {\n        return {\n          julianDate: row.julianDate ? parseFloat(row.julianDate.toFixed(precision)) : row.julianDate,\n          angularSeparation: row.angularSeparation ? parseFloat(row.angularSeparation.toFixed(precision)) : row.angularSeparation\n        }\n      }\n    );\n  }\n\n}\n\nclass MoonTable implements MyTable {\n  private readonly id: string;\n  private hotRegisterer = new HotTableRegisterer();\n\n  constructor(id: string) {\n    this.id = id;\n  }\n\n  getTable(): Handsontable {\n    return this.hotRegisterer.getInstance(this.id);\n  }\n\n  renderTable(): void {\n    this.getTable().render();\n  }\n\n  getData(): any[] {\n    return this.getTable().getSourceData();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MoonTableComponent.html":{"url":"components/MoonTableComponent.html","title":"component - MoonTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MoonTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/moon/moon-table/moon-table.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-moon-table\n            \n\n\n\n            \n                styleUrls\n                ./moon-table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./moon-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                colNames\n                            \n                            \n                                dataSet\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Static\n                                FLOAT_PRECISION\n                            \n                            \n                                id\n                            \n                            \n                                    Public\n                                onChange\n                            \n                            \n                                    Public\n                                onInsert\n                            \n                            \n                                    Public\n                                onRemove\n                            \n                            \n                                table\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                limitPrecision\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: MoonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/moon/moon-table/moon-table.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        MoonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        limitPrecision\n                        \n                    \n                \n            \n            \n                \n                    \n                    limitPrecision(data: MoonDataDict[], precision: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-table/moon-table.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                MoonDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    precision\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MoonDataDict[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-table/moon-table.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/moon/moon-table/moon-table.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        colNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\"Julian Date\", \"Angular Separation\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-table/moon-table.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-table/moon-table.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-table/moon-table.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        FLOAT_PRECISION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-table/moon-table.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"moon-table\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-table/moon-table.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-table/moon-table.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onInsert\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-table/moon-table.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onRemove\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-table/moon-table.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        table\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MoonTable\n\n                    \n                \n                \n                    \n                        Default value : new MoonTable(this.id)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/moon/moon-table/moon-table.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnDestroy} from '@angular/core';\nimport {MoonService} from \"../moon.service\";\nimport {MoonDataDict} from \"../moon.service.util\";\nimport {MyTable} from \"../../shared/tables/table-interface\";\nimport {HotTableRegisterer} from \"@handsontable/angular\";\nimport Handsontable from \"handsontable\";\nimport {Subject, takeUntil} from \"rxjs\";\n\n@Component({\n  selector: 'app-moon-table',\n  templateUrl: './moon-table.component.html',\n  styleUrls: ['./moon-table.component.scss']\n})\nexport class MoonTableComponent implements AfterViewInit, OnDestroy {\n  static FLOAT_PRECISION: number = 2;\n  id: string = \"moon-table\";\n  table: MoonTable = new MoonTable(this.id);\n  colNames: string[] = [\"Julian Date\", \"Angular Separation\"];\n  dataSet: any;\n  private destroy$: Subject = new Subject();\n\n  constructor(private service: MoonService) {\n    this.dataSet = this.limitPrecision(this.service.getData(), MoonTableComponent.FLOAT_PRECISION);\n\n  }\n\n  ngAfterViewInit(): void {\n    this.service.data$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe((data: MoonDataDict[]) => {\n      this.dataSet = this.limitPrecision(this.service.getData(), MoonTableComponent.FLOAT_PRECISION);\n      this.table.renderTable();\n    })\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n  }\n\n  public onChange = (changes: any, source: any) => {\n    if (changes) {\n      this.service.setData(this.table.getData());\n    }\n  }\n\n  public onRemove = (index: number, amount: number) => {\n    this.service.removeRow(index, amount);\n  }\n\n  public onInsert = (index: number, amount: number) => {\n    this.service.addRow(index, amount);\n  }\n\n  private limitPrecision(data: MoonDataDict[], precision: number): MoonDataDict[] {\n    return data.map(\n      (row: MoonDataDict) => {\n        return {\n          julianDate: row.julianDate ? parseFloat(row.julianDate.toFixed(precision)) : row.julianDate,\n          angularSeparation: row.angularSeparation ? parseFloat(row.angularSeparation.toFixed(precision)) : row.angularSeparation\n        }\n      }\n    );\n  }\n\n}\n\nclass MoonTable implements MyTable {\n  private readonly id: string;\n  private hotRegisterer = new HotTableRegisterer();\n\n  constructor(id: string) {\n    this.id = id;\n  }\n\n  getTable(): Handsontable {\n    return this.hotRegisterer.getInstance(this.id);\n  }\n\n  renderTable(): void {\n    this.getTable().render();\n  }\n\n  getData(): any[] {\n    return this.getTable().getSourceData();\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./moon-table.component.scss\n                \n                .container {\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MoonTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MyChart.html":{"url":"interfaces/MyChart.html","title":"interface - MyChart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MyChart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/shared/charts/chart.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        generateChartConfig\n                                    \n                                \n                                \n                                    \n                                        generateChartOptions\n                                    \n                                \n                                \n                                    \n                                        renderChart\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateChartConfig\n                        \n                    \n                \n            \n            \n                \ngenerateChartConfig(data: MyData, chartInfo: ChartInfo, toolInterface: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/charts/chart.interface.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                MyData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    chartInfo\n                                    \n                                                ChartInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    toolInterface\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateChartOptions\n                        \n                    \n                \n            \n            \n                \ngenerateChartOptions(chartInfo: ChartInfo, toolInterface: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/charts/chart.interface.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartInfo\n                                    \n                                                ChartInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    toolInterface\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ChartOptions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderChart\n                        \n                    \n                \n            \n            \n                \nrenderChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/charts/chart.interface.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {ChartConfiguration, ChartOptions} from \"chart.js\";\nimport {MyData} from \"../data/data.interface\";\n\nexport interface ChartInfo {\n  getChartTitle(): string;\n\n  getXAxisLabel(): string;\n\n  getYAxisLabel(): string;\n\n  getDataLabel(): string;\n\n  getStorageObject(): any;\n\n  setChartTitle(title: string): void;\n\n  setXAxisLabel(xAxis: string): void;\n\n  setYAxisLabel(yAxis: string): void;\n\n  setDataLabel(data: string): void;\n\n  setStorageObject(storageObject: any): void;\n\n}\n\nexport interface MyChart {\n  generateChartConfig(data: MyData, chartInfo: ChartInfo, toolInterface: any): ChartConfiguration['data'];\n\n  generateChartOptions(chartInfo: ChartInfo, toolInterface: any): ChartOptions;\n\n  renderChart(): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MyColorTheme.html":{"url":"interfaces/MyColorTheme.html","title":"interface - MyColorTheme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MyColorTheme\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/settings/appearance/service/appearance.utils.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            displayName\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MyColorTheme {\n  key: string;\n  displayName: string;\n}\n\nexport enum ColorThemes {\n  LIGHT = 'LIGHT_THEME',\n  DARK = 'DARK_THEME',\n  // HIGH_CONTRAST = 'HC_THEME',\n  HIGH_CONTRAST_DARK = 'HC_DARK_THEME'\n}\n\nexport interface MyFontStyle {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontStyles {\n  DEFAULT = 'normal',\n  BOLD = 'bold',\n  EXTRA_BOLD = 'bolder',\n}\n\nexport interface MyFontSize {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontSizes {\n  SMALL = \"small\",\n  DEFAULT = \"default\",\n  LARGE = \"large\",\n  LARGER = \"larger\",\n}\n\nexport enum FontFamily {\n  ROBOTO = 'Roboto',\n  COMIC_NEUE = 'Comic-Neue',\n}\n\nexport interface MyFontFamily {\n  key: string;\n  displayName: string;\n}\n\nexport class ColorThemeSettings {\n  public static getThemeLists(): MyColorTheme[] {\n    return [\n      {key: ColorThemes.LIGHT, displayName: 'Light'},\n      {key: ColorThemes.DARK, displayName: 'Dark'},\n      // {key: ColorThemes.HIGH_CONTRAST, displayName: 'High Contrast'},\n      {key: ColorThemes.HIGH_CONTRAST_DARK, displayName: 'High Contrast Dark'}\n    ];\n  }\n\n  public static getFontStyleLists(): MyFontStyle[] {\n    return [\n      {key: FontStyles.DEFAULT, displayName: 'Default'},\n      {key: FontStyles.BOLD, displayName: 'Bold'},\n      {key: FontStyles.EXTRA_BOLD, displayName: 'Extra Bold'}\n    ]\n  }\n\n  public static getFontSizeLists(): MyFontSize[] {\n    return [\n      {key: FontSizes.SMALL, displayName: 'Small'},\n      {key: FontSizes.DEFAULT, displayName: 'Default'},\n      {key: FontSizes.LARGE, displayName: 'Large'},\n      {key: FontSizes.LARGER, displayName: 'Larger'}\n    ]\n  }\n\n  public static getFontFamilyLists(): MyFontFamily[] {\n    return [\n      {key: FontFamily.ROBOTO, displayName: 'Roboto'},\n      {key: FontFamily.COMIC_NEUE, displayName: 'Comic Neue'}\n    ]\n  }\n}\n\nexport enum ChartColorMode {\n  LIGHT = 'LIGHT',\n  DARK = 'DARK'\n}\n\n\nexport class DefaultAppearanceSettings {\n  public static theme: ColorThemes = ColorThemes.LIGHT;\n  public static fontStyle: FontStyles = FontStyles.DEFAULT;\n  public static fontSize: FontSizes = FontSizes.DEFAULT;\n  public static fontFamily: FontFamily = FontFamily.ROBOTO;\n  public static chartColorMode: ChartColorMode = ChartColorMode.LIGHT;\n}\n\n\nexport class ChartColor {\n  private static readonly lineColorLightArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n  private static readonly lineColorDarkArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n\n  public static getFontColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#2b4162' : '#f5f0f6';\n  }\n\n  public static getBackgroundColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#C3CFD4' : '#325769';\n  }\n\n  public static getLineColor(index: number): string {\n    if (index = this.lineColorLightArray.length)\n      return 'black';\n    else\n      // return mode === ChartColorMode.LIGHT ? this.lineColorLightArray[index] : this.lineColorDarkArray[index];\n      return this.lineColorLightArray[index];\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MyData.html":{"url":"interfaces/MyData.html","title":"interface - MyData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MyData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/shared/data/data.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        addRow\n                                    \n                                \n                                \n                                    \n                                        getData\n                                    \n                                \n                                \n                                    \n                                        getDataArray\n                                    \n                                \n                                \n                                    \n                                        removeRow\n                                    \n                                \n                                \n                                    \n                                        setData\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRow\n                        \n                    \n                \n            \n            \n                \naddRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/data/data.interface.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/data/data.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataArray\n                        \n                    \n                \n            \n            \n                \ngetDataArray()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/data/data.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRow\n                        \n                    \n                \n            \n            \n                \nremoveRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/data/data.interface.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setData\n                        \n                    \n                \n            \n            \n                \nsetData(data: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/data/data.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface MyData {\n  getData(): any[];\n\n  getDataArray(): any[];\n\n  setData(data: any[]): void;\n\n  addRow(index: number, amount: number): void;\n\n  removeRow(index: number, amount: number): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MyFontFamily.html":{"url":"interfaces/MyFontFamily.html","title":"interface - MyFontFamily","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MyFontFamily\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/settings/appearance/service/appearance.utils.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            displayName\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MyColorTheme {\n  key: string;\n  displayName: string;\n}\n\nexport enum ColorThemes {\n  LIGHT = 'LIGHT_THEME',\n  DARK = 'DARK_THEME',\n  // HIGH_CONTRAST = 'HC_THEME',\n  HIGH_CONTRAST_DARK = 'HC_DARK_THEME'\n}\n\nexport interface MyFontStyle {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontStyles {\n  DEFAULT = 'normal',\n  BOLD = 'bold',\n  EXTRA_BOLD = 'bolder',\n}\n\nexport interface MyFontSize {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontSizes {\n  SMALL = \"small\",\n  DEFAULT = \"default\",\n  LARGE = \"large\",\n  LARGER = \"larger\",\n}\n\nexport enum FontFamily {\n  ROBOTO = 'Roboto',\n  COMIC_NEUE = 'Comic-Neue',\n}\n\nexport interface MyFontFamily {\n  key: string;\n  displayName: string;\n}\n\nexport class ColorThemeSettings {\n  public static getThemeLists(): MyColorTheme[] {\n    return [\n      {key: ColorThemes.LIGHT, displayName: 'Light'},\n      {key: ColorThemes.DARK, displayName: 'Dark'},\n      // {key: ColorThemes.HIGH_CONTRAST, displayName: 'High Contrast'},\n      {key: ColorThemes.HIGH_CONTRAST_DARK, displayName: 'High Contrast Dark'}\n    ];\n  }\n\n  public static getFontStyleLists(): MyFontStyle[] {\n    return [\n      {key: FontStyles.DEFAULT, displayName: 'Default'},\n      {key: FontStyles.BOLD, displayName: 'Bold'},\n      {key: FontStyles.EXTRA_BOLD, displayName: 'Extra Bold'}\n    ]\n  }\n\n  public static getFontSizeLists(): MyFontSize[] {\n    return [\n      {key: FontSizes.SMALL, displayName: 'Small'},\n      {key: FontSizes.DEFAULT, displayName: 'Default'},\n      {key: FontSizes.LARGE, displayName: 'Large'},\n      {key: FontSizes.LARGER, displayName: 'Larger'}\n    ]\n  }\n\n  public static getFontFamilyLists(): MyFontFamily[] {\n    return [\n      {key: FontFamily.ROBOTO, displayName: 'Roboto'},\n      {key: FontFamily.COMIC_NEUE, displayName: 'Comic Neue'}\n    ]\n  }\n}\n\nexport enum ChartColorMode {\n  LIGHT = 'LIGHT',\n  DARK = 'DARK'\n}\n\n\nexport class DefaultAppearanceSettings {\n  public static theme: ColorThemes = ColorThemes.LIGHT;\n  public static fontStyle: FontStyles = FontStyles.DEFAULT;\n  public static fontSize: FontSizes = FontSizes.DEFAULT;\n  public static fontFamily: FontFamily = FontFamily.ROBOTO;\n  public static chartColorMode: ChartColorMode = ChartColorMode.LIGHT;\n}\n\n\nexport class ChartColor {\n  private static readonly lineColorLightArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n  private static readonly lineColorDarkArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n\n  public static getFontColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#2b4162' : '#f5f0f6';\n  }\n\n  public static getBackgroundColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#C3CFD4' : '#325769';\n  }\n\n  public static getLineColor(index: number): string {\n    if (index = this.lineColorLightArray.length)\n      return 'black';\n    else\n      // return mode === ChartColorMode.LIGHT ? this.lineColorLightArray[index] : this.lineColorDarkArray[index];\n      return this.lineColorLightArray[index];\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MyFontSize.html":{"url":"interfaces/MyFontSize.html","title":"interface - MyFontSize","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MyFontSize\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/settings/appearance/service/appearance.utils.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            displayName\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MyColorTheme {\n  key: string;\n  displayName: string;\n}\n\nexport enum ColorThemes {\n  LIGHT = 'LIGHT_THEME',\n  DARK = 'DARK_THEME',\n  // HIGH_CONTRAST = 'HC_THEME',\n  HIGH_CONTRAST_DARK = 'HC_DARK_THEME'\n}\n\nexport interface MyFontStyle {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontStyles {\n  DEFAULT = 'normal',\n  BOLD = 'bold',\n  EXTRA_BOLD = 'bolder',\n}\n\nexport interface MyFontSize {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontSizes {\n  SMALL = \"small\",\n  DEFAULT = \"default\",\n  LARGE = \"large\",\n  LARGER = \"larger\",\n}\n\nexport enum FontFamily {\n  ROBOTO = 'Roboto',\n  COMIC_NEUE = 'Comic-Neue',\n}\n\nexport interface MyFontFamily {\n  key: string;\n  displayName: string;\n}\n\nexport class ColorThemeSettings {\n  public static getThemeLists(): MyColorTheme[] {\n    return [\n      {key: ColorThemes.LIGHT, displayName: 'Light'},\n      {key: ColorThemes.DARK, displayName: 'Dark'},\n      // {key: ColorThemes.HIGH_CONTRAST, displayName: 'High Contrast'},\n      {key: ColorThemes.HIGH_CONTRAST_DARK, displayName: 'High Contrast Dark'}\n    ];\n  }\n\n  public static getFontStyleLists(): MyFontStyle[] {\n    return [\n      {key: FontStyles.DEFAULT, displayName: 'Default'},\n      {key: FontStyles.BOLD, displayName: 'Bold'},\n      {key: FontStyles.EXTRA_BOLD, displayName: 'Extra Bold'}\n    ]\n  }\n\n  public static getFontSizeLists(): MyFontSize[] {\n    return [\n      {key: FontSizes.SMALL, displayName: 'Small'},\n      {key: FontSizes.DEFAULT, displayName: 'Default'},\n      {key: FontSizes.LARGE, displayName: 'Large'},\n      {key: FontSizes.LARGER, displayName: 'Larger'}\n    ]\n  }\n\n  public static getFontFamilyLists(): MyFontFamily[] {\n    return [\n      {key: FontFamily.ROBOTO, displayName: 'Roboto'},\n      {key: FontFamily.COMIC_NEUE, displayName: 'Comic Neue'}\n    ]\n  }\n}\n\nexport enum ChartColorMode {\n  LIGHT = 'LIGHT',\n  DARK = 'DARK'\n}\n\n\nexport class DefaultAppearanceSettings {\n  public static theme: ColorThemes = ColorThemes.LIGHT;\n  public static fontStyle: FontStyles = FontStyles.DEFAULT;\n  public static fontSize: FontSizes = FontSizes.DEFAULT;\n  public static fontFamily: FontFamily = FontFamily.ROBOTO;\n  public static chartColorMode: ChartColorMode = ChartColorMode.LIGHT;\n}\n\n\nexport class ChartColor {\n  private static readonly lineColorLightArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n  private static readonly lineColorDarkArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n\n  public static getFontColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#2b4162' : '#f5f0f6';\n  }\n\n  public static getBackgroundColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#C3CFD4' : '#325769';\n  }\n\n  public static getLineColor(index: number): string {\n    if (index = this.lineColorLightArray.length)\n      return 'black';\n    else\n      // return mode === ChartColorMode.LIGHT ? this.lineColorLightArray[index] : this.lineColorDarkArray[index];\n      return this.lineColorLightArray[index];\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MyFontStyle.html":{"url":"interfaces/MyFontStyle.html","title":"interface - MyFontStyle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MyFontStyle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/settings/appearance/service/appearance.utils.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            displayName\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MyColorTheme {\n  key: string;\n  displayName: string;\n}\n\nexport enum ColorThemes {\n  LIGHT = 'LIGHT_THEME',\n  DARK = 'DARK_THEME',\n  // HIGH_CONTRAST = 'HC_THEME',\n  HIGH_CONTRAST_DARK = 'HC_DARK_THEME'\n}\n\nexport interface MyFontStyle {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontStyles {\n  DEFAULT = 'normal',\n  BOLD = 'bold',\n  EXTRA_BOLD = 'bolder',\n}\n\nexport interface MyFontSize {\n  key: string;\n  displayName: string;\n}\n\nexport enum FontSizes {\n  SMALL = \"small\",\n  DEFAULT = \"default\",\n  LARGE = \"large\",\n  LARGER = \"larger\",\n}\n\nexport enum FontFamily {\n  ROBOTO = 'Roboto',\n  COMIC_NEUE = 'Comic-Neue',\n}\n\nexport interface MyFontFamily {\n  key: string;\n  displayName: string;\n}\n\nexport class ColorThemeSettings {\n  public static getThemeLists(): MyColorTheme[] {\n    return [\n      {key: ColorThemes.LIGHT, displayName: 'Light'},\n      {key: ColorThemes.DARK, displayName: 'Dark'},\n      // {key: ColorThemes.HIGH_CONTRAST, displayName: 'High Contrast'},\n      {key: ColorThemes.HIGH_CONTRAST_DARK, displayName: 'High Contrast Dark'}\n    ];\n  }\n\n  public static getFontStyleLists(): MyFontStyle[] {\n    return [\n      {key: FontStyles.DEFAULT, displayName: 'Default'},\n      {key: FontStyles.BOLD, displayName: 'Bold'},\n      {key: FontStyles.EXTRA_BOLD, displayName: 'Extra Bold'}\n    ]\n  }\n\n  public static getFontSizeLists(): MyFontSize[] {\n    return [\n      {key: FontSizes.SMALL, displayName: 'Small'},\n      {key: FontSizes.DEFAULT, displayName: 'Default'},\n      {key: FontSizes.LARGE, displayName: 'Large'},\n      {key: FontSizes.LARGER, displayName: 'Larger'}\n    ]\n  }\n\n  public static getFontFamilyLists(): MyFontFamily[] {\n    return [\n      {key: FontFamily.ROBOTO, displayName: 'Roboto'},\n      {key: FontFamily.COMIC_NEUE, displayName: 'Comic Neue'}\n    ]\n  }\n}\n\nexport enum ChartColorMode {\n  LIGHT = 'LIGHT',\n  DARK = 'DARK'\n}\n\n\nexport class DefaultAppearanceSettings {\n  public static theme: ColorThemes = ColorThemes.LIGHT;\n  public static fontStyle: FontStyles = FontStyles.DEFAULT;\n  public static fontSize: FontSizes = FontSizes.DEFAULT;\n  public static fontFamily: FontFamily = FontFamily.ROBOTO;\n  public static chartColorMode: ChartColorMode = ChartColorMode.LIGHT;\n}\n\n\nexport class ChartColor {\n  private static readonly lineColorLightArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n  private static readonly lineColorDarkArray: string[] = [\"red\", \"orange\", \"green\", \"blue\"];\n\n  public static getFontColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#2b4162' : '#f5f0f6';\n  }\n\n  public static getBackgroundColor(mode: ChartColorMode): string {\n    return mode === ChartColorMode.LIGHT ? '#C3CFD4' : '#325769';\n  }\n\n  public static getLineColor(index: number): string {\n    if (index = this.lineColorLightArray.length)\n      return 'black';\n    else\n      // return mode === ChartColorMode.LIGHT ? this.lineColorLightArray[index] : this.lineColorDarkArray[index];\n      return this.lineColorLightArray[index];\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MyStorage.html":{"url":"interfaces/MyStorage.html","title":"interface - MyStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MyStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/shared/storage/storage.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getChartInfo\n                                    \n                                \n                                \n                                    \n                                        getData\n                                    \n                                \n                                \n                                    \n                                        getInterface\n                                    \n                                \n                                \n                                    \n                                        resetChartInfo\n                                    \n                                \n                                \n                                    \n                                        resetData\n                                    \n                                \n                                \n                                    \n                                        resetInterface\n                                    \n                                \n                                \n                                    \n                                        saveChartInfo\n                                    \n                                \n                                \n                                    \n                                        saveData\n                                    \n                                \n                                \n                                    \n                                        saveInterface\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getChartInfo\n                        \n                    \n                \n            \n            \n                \ngetChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/storage/storage.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/storage/storage.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInterface\n                        \n                    \n                \n            \n            \n                \ngetInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/storage/storage.interface.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetChartInfo\n                        \n                    \n                \n            \n            \n                \nresetChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/storage/storage.interface.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetData\n                        \n                    \n                \n            \n            \n                \nresetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/storage/storage.interface.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetInterface\n                        \n                    \n                \n            \n            \n                \nresetInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/storage/storage.interface.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveChartInfo\n                        \n                    \n                \n            \n            \n                \nsaveChartInfo(chartInfo: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/storage/storage.interface.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartInfo\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveData\n                        \n                    \n                \n            \n            \n                \nsaveData(data: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/storage/storage.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveInterface\n                        \n                    \n                \n            \n            \n                \nsaveInterface(interfaceInfo: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/storage/storage.interface.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    interfaceInfo\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface MyStorage {\n  getData(): any[];\n\n  saveData(data: any[]): void;\n\n  getChartInfo(): any;\n\n  saveChartInfo(chartInfo: any): void;\n\n  getInterface(): any;\n\n  saveInterface(interfaceInfo: any): void;\n\n  resetData(): void;\n\n  resetInterface(): void;\n\n  resetChartInfo(): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MyTable.html":{"url":"interfaces/MyTable.html","title":"interface - MyTable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MyTable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/shared/tables/table-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getData\n                                    \n                                \n                                \n                                    \n                                        getTable\n                                    \n                                \n                                \n                                    \n                                        renderTable\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/tables/table-interface.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTable\n                        \n                    \n                \n            \n            \n                \ngetTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/tables/table-interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Handsontable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderTable\n                        \n                    \n                \n            \n            \n                \nrenderTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/tables/table-interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import Handsontable from \"handsontable\";\n\nexport interface MyTable {\n  getTable(): Handsontable;\n\n  renderTable(): void;\n\n  getData(): any[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/page-not-found/page-not-found.component.ts\n\n\n\n    \n        Description\n    \n    \n        Page not found\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n\n\n            \n                styleUrls\n                ./page-not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component} from '@angular/core';\n\n/**\n * Page not found\n */\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent {\n\n}\n\n    \n\n    \n        page-not-found works!\n\n    \n\n    \n                \n                    ./page-not-found.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'page-not-found works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScatterChartFormComponent.html":{"url":"components/ScatterChartFormComponent.html","title":"component - ScatterChartFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ScatterChartFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/scatter/scatter-chart-form/scatter-chart-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-scatter-chart-form\n            \n\n\n\n            \n                styleUrls\n                ./scatter-chart-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./scatter-chart-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                formGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: ScatterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/scatter/scatter-chart-form/scatter-chart-form.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ScatterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-chart-form/scatter-chart-form.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-chart-form/scatter-chart-form.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-chart-form/scatter-chart-form.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnDestroy} from '@angular/core';\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {debounceTime, Subject, takeUntil} from \"rxjs\";\nimport {ScatterService} from \"../scatter.service\";\n\n@Component({\n  selector: 'app-scatter-chart-form',\n  templateUrl: './scatter-chart-form.component.html',\n  styleUrls: ['./scatter-chart-form.component.scss']\n})\nexport class ScatterChartFormComponent implements OnDestroy {\n  formGroup!: FormGroup;\n  private destroy$: Subject = new Subject();\n\n  constructor(private service: ScatterService) {\n    this.service.chartInfo$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(info => {\n      this.formGroup = new FormGroup({\n        chartTitle: new FormControl(this.service.getChartTitle()),\n        dataLabel: new FormControl(this.service.getDataLabel()),\n        xAxisLabel: new FormControl(this.service.getXAxisLabel()),\n        yAxisLabel: new FormControl(this.service.getYAxisLabel()),\n      })\n      this.formGroup.controls['chartTitle'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(title => {\n        this.service.setChartTitle(title);\n      });\n      this.formGroup.controls['dataLabel'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(labels => {\n        this.service.setDataLabel(labels);\n      });\n      this.formGroup.controls['xAxisLabel'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(label => {\n        this.service.setXAxisLabel(label);\n      });\n      this.formGroup.controls['yAxisLabel'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(label => {\n        this.service.setYAxisLabel(label);\n      });\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        Title\n        \n      \n    \n    \n      \n        Data\n        \n      \n    \n  \n  \n    \n      \n        X Axis\n        \n      \n    \n    \n      \n        Y Axis\n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./scatter-chart-form.component.scss\n                \n                mat-form-field {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Title                                    Data                                        X Axis                                    Y Axis                    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ScatterChartFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ScatterChartInfo.html":{"url":"classes/ScatterChartInfo.html","title":"class - ScatterChartInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ScatterChartInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/scatter/scatter.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ChartInfo\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chartTitle\n                            \n                            \n                                    Private\n                                dataLabel\n                            \n                            \n                                    Private\n                                xAxisLabel\n                            \n                            \n                                    Private\n                                yAxisLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getChartTitle\n                            \n                            \n                                getDataLabel\n                            \n                            \n                                    Static\n                                getDefaultStorageObject\n                            \n                            \n                                getStorageObject\n                            \n                            \n                                getXAxisLabel\n                            \n                            \n                                getYAxisLabel\n                            \n                            \n                                setChartTitle\n                            \n                            \n                                setDataLabel\n                            \n                            \n                                setStorageObject\n                            \n                            \n                                setXAxisLabel\n                            \n                            \n                                setYAxisLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/scatter/scatter.service.util.ts:88\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.util.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.util.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        xAxisLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.util.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        yAxisLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.util.ts:88\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getChartTitle\n                        \n                    \n                \n            \n            \n                \ngetChartTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataLabel\n                        \n                    \n                \n            \n            \n                \ngetDataLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getDefaultStorageObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ScatterChartInfoStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStorageObject\n                        \n                    \n                \n            \n            \n                \ngetStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ScatterChartInfoStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getXAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetXAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getYAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetYAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setChartTitle\n                        \n                    \n                \n            \n            \n                \nsetChartTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDataLabel\n                        \n                    \n                \n            \n            \n                \nsetDataLabel(data: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStorageObject\n                        \n                    \n                \n            \n            \n                \nsetStorageObject(storageObject: ScatterChartInfoStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storageObject\n                                    \n                                                ScatterChartInfoStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setXAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetXAxisLabel(xAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    xAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setYAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetYAxisLabel(yAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    yAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\n\nexport interface ScatterDataDict {\n  longitude: number | null;\n  latitude: number | null;\n  distance: number | null;\n}\n\nexport class ScatterData implements MyData {\n  private dataDict: ScatterDataDict[];\n  private static readonly FLOAT_PRECISION = 3;\n\n  constructor() {\n    this.dataDict = ScatterData.getDefaultDataDict();\n  }\n\n  public static getDefaultDataDict(): ScatterDataDict[] {\n    const result: ScatterDataDict[] = [];\n    for (let i = 0; i  0) {\n      for (let i = 0; i  {\n        return scatterDataDict.longitude !== null\n          && scatterDataDict.latitude !== null\n          && scatterDataDict.distance !== null;\n      }\n    ).map(\n      (entry: ScatterDataDict) => {\n        return [\n          parseFloat((Math.cos(entry.latitude! / 180 * Math.PI) * entry.distance! * Math.cos(entry.longitude! / 180 * Math.PI)).toFixed(ScatterData.FLOAT_PRECISION)),\n          parseFloat((Math.cos(entry.latitude! / 180 * Math.PI) * entry.distance! * Math.sin(entry.longitude! / 180 * Math.PI)).toFixed(ScatterData.FLOAT_PRECISION)),\n        ];\n      }\n    );\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: ScatterDataDict[]): void {\n    this.dataDict = data;\n  }\n\n}\n\n\nexport interface ScatterChartInfoStorageObject {\n  chartTitle: string;\n  dataLabel: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n}\n\nexport class ScatterChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private dataLabel: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n\n  constructor() {\n    this.chartTitle = ScatterChartInfo.getDefaultStorageObject().chartTitle;\n    this.dataLabel = ScatterChartInfo.getDefaultStorageObject().dataLabel;\n    this.xAxisLabel = ScatterChartInfo.getDefaultStorageObject().xAxisLabel;\n    this.yAxisLabel = ScatterChartInfo.getDefaultStorageObject().yAxisLabel;\n  }\n\n\n  public static getDefaultStorageObject(): ScatterChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      dataLabel: \"Data\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n    }\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabel;\n  }\n\n  getStorageObject(): ScatterChartInfoStorageObject {\n    return {\n      chartTitle: this.chartTitle,\n      dataLabel: this.dataLabel,\n      xAxisLabel: this.xAxisLabel,\n      yAxisLabel: this.yAxisLabel,\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    this.dataLabel = data;\n  }\n\n  setStorageObject(storageObject: ScatterChartInfoStorageObject): void {\n    this.chartTitle = storageObject.chartTitle;\n    this.dataLabel = storageObject.dataLabel;\n    this.xAxisLabel = storageObject.xAxisLabel;\n    this.yAxisLabel = storageObject.yAxisLabel;\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.xAxisLabel = xAxis;\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.yAxisLabel = yAxis;\n  }\n\n}\n\n\nexport interface ScatterInterfaceStorageObject {\n  distance: number;\n  diameter: number;\n}\n\n\nexport interface ScatterModel {\n  getDistance(): number;\n\n  getDiameter(): number;\n\n  setDistance(distance: number): void;\n\n  setDiameter(diameter: number): void;\n\n  getModelStorageObject(): ScatterInterfaceStorageObject;\n\n  setModelStorageObject(storageObject: ScatterInterfaceStorageObject): void;\n\n  getModel(): number[][];\n}\n\n\nexport class ScatterModelInterface implements ScatterModel {\n  private distance: number;\n  private diameter: number;\n\n  constructor() {\n    this.distance = ScatterModelInterface.getDefaultStorageObject().distance;\n    this.diameter = ScatterModelInterface.getDefaultStorageObject().diameter;\n  }\n\n  public static getDefaultStorageObject(): ScatterInterfaceStorageObject {\n    return {\n      distance: 0,\n      diameter: 10,\n    }\n  }\n\n  getDiameter(): number {\n    return this.diameter\n  }\n\n  getDistance(): number {\n    return this.distance;\n  }\n\n  /**\n   * A circle with x of this.distance, y of 0, and diameter of this.diameter\n   */\n  getModel(): number[][] {\n    let modelData: number[][] = [];\n    const x = this.getDistance();\n    const y = 0;\n    const diameter = this.getDiameter();\n    const steps = 500;\n\n    let step = 2 * Math.PI / steps;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ScatterChartInfoStorageObject.html":{"url":"interfaces/ScatterChartInfoStorageObject.html","title":"interface - ScatterChartInfoStorageObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ScatterChartInfoStorageObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/scatter/scatter.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            chartTitle\n                                        \n                                \n                                \n                                        \n                                            dataLabel\n                                        \n                                \n                                \n                                        \n                                            xAxisLabel\n                                        \n                                \n                                \n                                        \n                                            yAxisLabel\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chartTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chartTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dataLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xAxisLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        xAxisLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yAxisLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        yAxisLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\n\nexport interface ScatterDataDict {\n  longitude: number | null;\n  latitude: number | null;\n  distance: number | null;\n}\n\nexport class ScatterData implements MyData {\n  private dataDict: ScatterDataDict[];\n  private static readonly FLOAT_PRECISION = 3;\n\n  constructor() {\n    this.dataDict = ScatterData.getDefaultDataDict();\n  }\n\n  public static getDefaultDataDict(): ScatterDataDict[] {\n    const result: ScatterDataDict[] = [];\n    for (let i = 0; i  0) {\n      for (let i = 0; i  {\n        return scatterDataDict.longitude !== null\n          && scatterDataDict.latitude !== null\n          && scatterDataDict.distance !== null;\n      }\n    ).map(\n      (entry: ScatterDataDict) => {\n        return [\n          parseFloat((Math.cos(entry.latitude! / 180 * Math.PI) * entry.distance! * Math.cos(entry.longitude! / 180 * Math.PI)).toFixed(ScatterData.FLOAT_PRECISION)),\n          parseFloat((Math.cos(entry.latitude! / 180 * Math.PI) * entry.distance! * Math.sin(entry.longitude! / 180 * Math.PI)).toFixed(ScatterData.FLOAT_PRECISION)),\n        ];\n      }\n    );\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: ScatterDataDict[]): void {\n    this.dataDict = data;\n  }\n\n}\n\n\nexport interface ScatterChartInfoStorageObject {\n  chartTitle: string;\n  dataLabel: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n}\n\nexport class ScatterChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private dataLabel: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n\n  constructor() {\n    this.chartTitle = ScatterChartInfo.getDefaultStorageObject().chartTitle;\n    this.dataLabel = ScatterChartInfo.getDefaultStorageObject().dataLabel;\n    this.xAxisLabel = ScatterChartInfo.getDefaultStorageObject().xAxisLabel;\n    this.yAxisLabel = ScatterChartInfo.getDefaultStorageObject().yAxisLabel;\n  }\n\n\n  public static getDefaultStorageObject(): ScatterChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      dataLabel: \"Data\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n    }\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabel;\n  }\n\n  getStorageObject(): ScatterChartInfoStorageObject {\n    return {\n      chartTitle: this.chartTitle,\n      dataLabel: this.dataLabel,\n      xAxisLabel: this.xAxisLabel,\n      yAxisLabel: this.yAxisLabel,\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    this.dataLabel = data;\n  }\n\n  setStorageObject(storageObject: ScatterChartInfoStorageObject): void {\n    this.chartTitle = storageObject.chartTitle;\n    this.dataLabel = storageObject.dataLabel;\n    this.xAxisLabel = storageObject.xAxisLabel;\n    this.yAxisLabel = storageObject.yAxisLabel;\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.xAxisLabel = xAxis;\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.yAxisLabel = yAxis;\n  }\n\n}\n\n\nexport interface ScatterInterfaceStorageObject {\n  distance: number;\n  diameter: number;\n}\n\n\nexport interface ScatterModel {\n  getDistance(): number;\n\n  getDiameter(): number;\n\n  setDistance(distance: number): void;\n\n  setDiameter(diameter: number): void;\n\n  getModelStorageObject(): ScatterInterfaceStorageObject;\n\n  setModelStorageObject(storageObject: ScatterInterfaceStorageObject): void;\n\n  getModel(): number[][];\n}\n\n\nexport class ScatterModelInterface implements ScatterModel {\n  private distance: number;\n  private diameter: number;\n\n  constructor() {\n    this.distance = ScatterModelInterface.getDefaultStorageObject().distance;\n    this.diameter = ScatterModelInterface.getDefaultStorageObject().diameter;\n  }\n\n  public static getDefaultStorageObject(): ScatterInterfaceStorageObject {\n    return {\n      distance: 0,\n      diameter: 10,\n    }\n  }\n\n  getDiameter(): number {\n    return this.diameter\n  }\n\n  getDistance(): number {\n    return this.distance;\n  }\n\n  /**\n   * A circle with x of this.distance, y of 0, and diameter of this.diameter\n   */\n  getModel(): number[][] {\n    let modelData: number[][] = [];\n    const x = this.getDistance();\n    const y = 0;\n    const diameter = this.getDiameter();\n    const steps = 500;\n\n    let step = 2 * Math.PI / steps;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScatterComponent.html":{"url":"components/ScatterComponent.html","title":"component - ScatterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ScatterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/scatter/scatter/scatter.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-scatter\n            \n\n\n\n            \n                styleUrls\n                ./scatter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./scatter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                actionHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: ScatterService, honorCodeService: HonorCodePopupService, chartService: HonorCodeChartService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/scatter/scatter/scatter.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ScatterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        honorCodeService\n                                                  \n                                                        \n                                                                        HonorCodePopupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chartService\n                                                  \n                                                        \n                                                                        HonorCodeChartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        actionHandler\n                        \n                    \n                \n            \n            \n                \nactionHandler(actions: ChartAction[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter/scatter.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    actions\n                                    \n                                                ChartAction[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {ChartAction} from \"../../shared/types/actions\";\nimport {ScatterService} from \"../scatter.service\";\nimport {HonorCodePopupService} from \"../../shared/honor-code-popup/honor-code-popup.service\";\nimport {HonorCodeChartService} from \"../../shared/honor-code-popup/honor-code-chart.service\";\n\n@Component({\n  selector: 'app-scatter',\n  templateUrl: './scatter.component.html',\n  styleUrls: ['./scatter.component.scss']\n})\nexport class ScatterComponent {\n  constructor(private service: ScatterService,\n              private honorCodeService: HonorCodePopupService,\n              private chartService: HonorCodeChartService) {\n  }\n\n  actionHandler(actions: ChartAction[]) {\n    actions.forEach((action) => {\n      if (action.action === \"addRow\") {\n        this.service.addRow(-1, 1);\n      } else if (action.action === \"saveGraph\") {\n        this.honorCodeService.honored().subscribe((name: string) => {\n          this.chartService.saveImageHighChartOffline(this.service.getHighChart(), \"scatter\", name);\n        })\n      } else if (action.action === \"resetData\") {\n        this.service.resetData();\n      } else if (action.action === \"resetChartInfo\") {\n        this.service.resetChartInfo();\n      } else if (action.action === \"resetModel\") {\n        this.service.resetModel();\n      }\n    })\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n      \n      \n    \n  \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./scatter.component.scss\n                \n                .container-row {\n  height: 80%;\n  padding: 20px 100px 20px 100px;\n  width: 100%;\n}\n\n.col-4, .col-8 {\n  display: flex;\n  flex-flow: column;\n}\n\n.data-form-row, data-button-row, chart-form-row, chart-button-row {\n  height: fit-content;\n  flex: 0 1 auto;\n}\n\n.data-table-row, .chart-row {\n  flex: 1 1 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ScatterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ScatterData.html":{"url":"classes/ScatterData.html","title":"class - ScatterData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ScatterData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/scatter/scatter.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyData\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dataDict\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                FLOAT_PRECISION\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRow\n                            \n                            \n                                getData\n                            \n                            \n                                getDataArray\n                            \n                            \n                                    Static\n                                getDefaultDataDict\n                            \n                            \n                                removeRow\n                            \n                            \n                                setData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/scatter/scatter.service.util.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataDict\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScatterDataDict[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.util.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        FLOAT_PRECISION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.util.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRow\n                        \n                    \n                \n            \n            \n                \naddRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataArray\n                        \n                    \n                \n            \n            \n                \ngetDataArray()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:49\n                \n            \n\n\n            \n                \n                    Transforms longitude, latitude and distance to x and y\n coordinates to be rendered in the chart\n\n\n                    \n                        Returns :     [][]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getDefaultDataDict\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultDataDict()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ScatterDataDict[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRow\n                        \n                    \n                \n            \n            \n                \nremoveRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setData\n                        \n                    \n                \n            \n            \n                \nsetData(data: ScatterDataDict[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ScatterDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\n\nexport interface ScatterDataDict {\n  longitude: number | null;\n  latitude: number | null;\n  distance: number | null;\n}\n\nexport class ScatterData implements MyData {\n  private dataDict: ScatterDataDict[];\n  private static readonly FLOAT_PRECISION = 3;\n\n  constructor() {\n    this.dataDict = ScatterData.getDefaultDataDict();\n  }\n\n  public static getDefaultDataDict(): ScatterDataDict[] {\n    const result: ScatterDataDict[] = [];\n    for (let i = 0; i  0) {\n      for (let i = 0; i  {\n        return scatterDataDict.longitude !== null\n          && scatterDataDict.latitude !== null\n          && scatterDataDict.distance !== null;\n      }\n    ).map(\n      (entry: ScatterDataDict) => {\n        return [\n          parseFloat((Math.cos(entry.latitude! / 180 * Math.PI) * entry.distance! * Math.cos(entry.longitude! / 180 * Math.PI)).toFixed(ScatterData.FLOAT_PRECISION)),\n          parseFloat((Math.cos(entry.latitude! / 180 * Math.PI) * entry.distance! * Math.sin(entry.longitude! / 180 * Math.PI)).toFixed(ScatterData.FLOAT_PRECISION)),\n        ];\n      }\n    );\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: ScatterDataDict[]): void {\n    this.dataDict = data;\n  }\n\n}\n\n\nexport interface ScatterChartInfoStorageObject {\n  chartTitle: string;\n  dataLabel: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n}\n\nexport class ScatterChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private dataLabel: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n\n  constructor() {\n    this.chartTitle = ScatterChartInfo.getDefaultStorageObject().chartTitle;\n    this.dataLabel = ScatterChartInfo.getDefaultStorageObject().dataLabel;\n    this.xAxisLabel = ScatterChartInfo.getDefaultStorageObject().xAxisLabel;\n    this.yAxisLabel = ScatterChartInfo.getDefaultStorageObject().yAxisLabel;\n  }\n\n\n  public static getDefaultStorageObject(): ScatterChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      dataLabel: \"Data\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n    }\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabel;\n  }\n\n  getStorageObject(): ScatterChartInfoStorageObject {\n    return {\n      chartTitle: this.chartTitle,\n      dataLabel: this.dataLabel,\n      xAxisLabel: this.xAxisLabel,\n      yAxisLabel: this.yAxisLabel,\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    this.dataLabel = data;\n  }\n\n  setStorageObject(storageObject: ScatterChartInfoStorageObject): void {\n    this.chartTitle = storageObject.chartTitle;\n    this.dataLabel = storageObject.dataLabel;\n    this.xAxisLabel = storageObject.xAxisLabel;\n    this.yAxisLabel = storageObject.yAxisLabel;\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.xAxisLabel = xAxis;\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.yAxisLabel = yAxis;\n  }\n\n}\n\n\nexport interface ScatterInterfaceStorageObject {\n  distance: number;\n  diameter: number;\n}\n\n\nexport interface ScatterModel {\n  getDistance(): number;\n\n  getDiameter(): number;\n\n  setDistance(distance: number): void;\n\n  setDiameter(diameter: number): void;\n\n  getModelStorageObject(): ScatterInterfaceStorageObject;\n\n  setModelStorageObject(storageObject: ScatterInterfaceStorageObject): void;\n\n  getModel(): number[][];\n}\n\n\nexport class ScatterModelInterface implements ScatterModel {\n  private distance: number;\n  private diameter: number;\n\n  constructor() {\n    this.distance = ScatterModelInterface.getDefaultStorageObject().distance;\n    this.diameter = ScatterModelInterface.getDefaultStorageObject().diameter;\n  }\n\n  public static getDefaultStorageObject(): ScatterInterfaceStorageObject {\n    return {\n      distance: 0,\n      diameter: 10,\n    }\n  }\n\n  getDiameter(): number {\n    return this.diameter\n  }\n\n  getDistance(): number {\n    return this.distance;\n  }\n\n  /**\n   * A circle with x of this.distance, y of 0, and diameter of this.diameter\n   */\n  getModel(): number[][] {\n    let modelData: number[][] = [];\n    const x = this.getDistance();\n    const y = 0;\n    const diameter = this.getDiameter();\n    const steps = 500;\n\n    let step = 2 * Math.PI / steps;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ScatterDataDict.html":{"url":"interfaces/ScatterDataDict.html","title":"interface - ScatterDataDict","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ScatterDataDict\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/scatter/scatter.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            distance\n                                        \n                                \n                                \n                                        \n                                            latitude\n                                        \n                                \n                                \n                                        \n                                            longitude\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        distance:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        latitude:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        longitude:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\n\nexport interface ScatterDataDict {\n  longitude: number | null;\n  latitude: number | null;\n  distance: number | null;\n}\n\nexport class ScatterData implements MyData {\n  private dataDict: ScatterDataDict[];\n  private static readonly FLOAT_PRECISION = 3;\n\n  constructor() {\n    this.dataDict = ScatterData.getDefaultDataDict();\n  }\n\n  public static getDefaultDataDict(): ScatterDataDict[] {\n    const result: ScatterDataDict[] = [];\n    for (let i = 0; i  0) {\n      for (let i = 0; i  {\n        return scatterDataDict.longitude !== null\n          && scatterDataDict.latitude !== null\n          && scatterDataDict.distance !== null;\n      }\n    ).map(\n      (entry: ScatterDataDict) => {\n        return [\n          parseFloat((Math.cos(entry.latitude! / 180 * Math.PI) * entry.distance! * Math.cos(entry.longitude! / 180 * Math.PI)).toFixed(ScatterData.FLOAT_PRECISION)),\n          parseFloat((Math.cos(entry.latitude! / 180 * Math.PI) * entry.distance! * Math.sin(entry.longitude! / 180 * Math.PI)).toFixed(ScatterData.FLOAT_PRECISION)),\n        ];\n      }\n    );\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: ScatterDataDict[]): void {\n    this.dataDict = data;\n  }\n\n}\n\n\nexport interface ScatterChartInfoStorageObject {\n  chartTitle: string;\n  dataLabel: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n}\n\nexport class ScatterChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private dataLabel: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n\n  constructor() {\n    this.chartTitle = ScatterChartInfo.getDefaultStorageObject().chartTitle;\n    this.dataLabel = ScatterChartInfo.getDefaultStorageObject().dataLabel;\n    this.xAxisLabel = ScatterChartInfo.getDefaultStorageObject().xAxisLabel;\n    this.yAxisLabel = ScatterChartInfo.getDefaultStorageObject().yAxisLabel;\n  }\n\n\n  public static getDefaultStorageObject(): ScatterChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      dataLabel: \"Data\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n    }\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabel;\n  }\n\n  getStorageObject(): ScatterChartInfoStorageObject {\n    return {\n      chartTitle: this.chartTitle,\n      dataLabel: this.dataLabel,\n      xAxisLabel: this.xAxisLabel,\n      yAxisLabel: this.yAxisLabel,\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    this.dataLabel = data;\n  }\n\n  setStorageObject(storageObject: ScatterChartInfoStorageObject): void {\n    this.chartTitle = storageObject.chartTitle;\n    this.dataLabel = storageObject.dataLabel;\n    this.xAxisLabel = storageObject.xAxisLabel;\n    this.yAxisLabel = storageObject.yAxisLabel;\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.xAxisLabel = xAxis;\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.yAxisLabel = yAxis;\n  }\n\n}\n\n\nexport interface ScatterInterfaceStorageObject {\n  distance: number;\n  diameter: number;\n}\n\n\nexport interface ScatterModel {\n  getDistance(): number;\n\n  getDiameter(): number;\n\n  setDistance(distance: number): void;\n\n  setDiameter(diameter: number): void;\n\n  getModelStorageObject(): ScatterInterfaceStorageObject;\n\n  setModelStorageObject(storageObject: ScatterInterfaceStorageObject): void;\n\n  getModel(): number[][];\n}\n\n\nexport class ScatterModelInterface implements ScatterModel {\n  private distance: number;\n  private diameter: number;\n\n  constructor() {\n    this.distance = ScatterModelInterface.getDefaultStorageObject().distance;\n    this.diameter = ScatterModelInterface.getDefaultStorageObject().diameter;\n  }\n\n  public static getDefaultStorageObject(): ScatterInterfaceStorageObject {\n    return {\n      distance: 0,\n      diameter: 10,\n    }\n  }\n\n  getDiameter(): number {\n    return this.diameter\n  }\n\n  getDistance(): number {\n    return this.distance;\n  }\n\n  /**\n   * A circle with x of this.distance, y of 0, and diameter of this.diameter\n   */\n  getModel(): number[][] {\n    let modelData: number[][] = [];\n    const x = this.getDistance();\n    const y = 0;\n    const diameter = this.getDiameter();\n    const steps = 500;\n\n    let step = 2 * Math.PI / steps;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScatterFormComponent.html":{"url":"components/ScatterFormComponent.html","title":"component - ScatterFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ScatterFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/scatter/scatter-form/scatter-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-scatter-form\n            \n\n\n\n            \n                styleUrls\n                ./scatter-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./scatter-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Protected\n                                diameterSubject\n                            \n                            \n                                    Protected\n                                distanceSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Protected\n                                onChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: ScatterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/scatter/scatter-form/scatter-form.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ScatterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-form/scatter-form.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-form/scatter-form.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        onChange\n                        \n                    \n                \n            \n            \n                \n                    \n                    onChange($event: InputSliderValue)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-form/scatter-form.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                InputSliderValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-form/scatter-form.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        diameterSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-form/scatter-form.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        distanceSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-form/scatter-form.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnDestroy} from '@angular/core';\nimport {Subject, takeUntil} from \"rxjs\";\nimport {InputSliderValue} from \"../../shared/interface/input-slider/input-slider.component\";\nimport {ScatterService} from \"../scatter.service\";\nimport {UpdateSource} from \"../../moon/moon.service.util\";\n\n@Component({\n  selector: 'app-scatter-form',\n  templateUrl: './scatter-form.component.html',\n  styleUrls: ['./scatter-form.component.scss']\n})\nexport class ScatterFormComponent implements AfterViewInit, OnDestroy{\n  private destroy$ = new Subject();\n\n  protected distanceSubject: Subject = new Subject();\n  protected diameterSubject: Subject = new Subject();\n\n  constructor(private service: ScatterService) {\n  }\n\n  ngAfterViewInit() {\n    this.distanceSubject.next(this.service.getDistance());\n    this.diameterSubject.next(this.service.getDiameter());\n\n    this.service.interface$.pipe(\n      takeUntil(this.destroy$),\n    ).subscribe(\n      (source: UpdateSource) => {\n        if (source !== UpdateSource.INTERFACE) {\n          this.distanceSubject.next(this.service.getDistance());\n          this.diameterSubject.next(this.service.getDiameter());\n        }\n      }\n    )\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  protected onChange($event: InputSliderValue) {\n    if ($event.key === ScatterModelParameters.DISTANCE) {\n      this.service.setDistance(parseFloat($event.value));\n    } else if ($event.key === ScatterModelParameters.DIAMETER) {\n      this.service.setDiameter(parseFloat($event.value));\n    }\n  }\n}\n\nenum ScatterModelParameters {\n  DISTANCE = \"distance\",\n  DIAMETER = \"diameter\",\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./scatter-form.component.scss\n                \n                mat-form-field {\n  width: 100%;\n}\n\nmat-slider {\n  width: 90%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ScatterFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScatterHighchartComponent.html":{"url":"components/ScatterHighchartComponent.html","title":"component - ScatterHighchartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ScatterHighchartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-scatter-highchart\n            \n\n\n\n            \n                styleUrls\n                ./scatter-highchart.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./scatter-highchart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chartConstructor\n                            \n                            \n                                chartObject\n                            \n                            \n                                chartOptions\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                Highcharts\n                            \n                            \n                                updateFlag\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                adjustScale\n                            \n                            \n                                chartInitialized\n                            \n                            \n                                    Private\n                                initChartSeries\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                setChartTitle\n                            \n                            \n                                    Private\n                                setChartXAxis\n                            \n                            \n                                    Private\n                                setChartYAxis\n                            \n                            \n                                    Private\n                                setCross\n                            \n                            \n                                    Private\n                                setData\n                            \n                            \n                                    Private\n                                setModel\n                            \n                            \n                                    Private\n                                setSun\n                            \n                            \n                                    Private\n                                updateChart\n                            \n                            \n                                    Private\n                                updateCross\n                            \n                            \n                                    Private\n                                updateData\n                            \n                            \n                                    Private\n                                updateModel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: ScatterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ScatterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        adjustScale\n                        \n                    \n                \n            \n            \n                \n                    \n                    adjustScale()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartInitialized\n                        \n                    \n                \n            \n            \n                \nchartInitialized($event: Highcharts.Chart)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                            Highcharts.Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initChartSeries\n                        \n                    \n                \n            \n            \n                \n                    \n                    initChartSeries()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setChartTitle\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChartTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setChartXAxis\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChartXAxis()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setChartYAxis\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChartYAxis()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setCross\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCross()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setData\n                        \n                    \n                \n            \n            \n                \n                    \n                    setData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    setModel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setSun\n                        \n                    \n                \n            \n            \n                \n                    \n                    setSun()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateChart\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateCross\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCross()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateData\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateModel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chartConstructor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : \"chart\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartObject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Highcharts.Chart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Highcharts.Options\n\n                    \n                \n                \n                    \n                        Default value : {\n    chart: {\n      animation: false,\n      styledMode: true,\n    },\n    legend: {\n      align: 'center',\n    },\n    tooltip: {\n      enabled: true,\n      shared: false,\n    },\n    exporting: {\n      buttons: {\n        contextButton: {\n          enabled: false,\n        }\n      }\n    },\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Highcharts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Highcharts\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFlag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnDestroy} from '@angular/core';\nimport * as Highcharts from \"highcharts\";\nimport {Subject, takeUntil} from \"rxjs\";\nimport {ScatterService} from \"../scatter.service\";\n\n@Component({\n  selector: 'app-scatter-highchart',\n  templateUrl: './scatter-highchart.component.html',\n  styleUrls: ['./scatter-highchart.component.scss']\n})\nexport class ScatterHighchartComponent implements AfterViewInit, OnDestroy {\n  Highcharts: typeof Highcharts = Highcharts;\n  updateFlag: boolean = true;\n  chartConstructor: any = \"chart\";\n  chartObject!: Highcharts.Chart;\n  chartOptions: Highcharts.Options = {\n    chart: {\n      animation: false,\n      styledMode: true,\n    },\n    legend: {\n      align: 'center',\n    },\n    tooltip: {\n      enabled: true,\n      shared: false,\n    },\n    exporting: {\n      buttons: {\n        contextButton: {\n          enabled: false,\n        }\n      }\n    },\n  };\n  private destroy$: Subject = new Subject();\n\n  constructor(private service: ScatterService) {\n    this.setChartTitle();\n    this.setChartXAxis();\n    this.setChartYAxis();\n  }\n\n  chartInitialized($event: Highcharts.Chart) {\n    this.chartObject = $event;\n    // this.service.setHighChart(this.chartObject);\n  }\n\n  ngAfterViewInit(): void {\n    this.initChartSeries();\n    this.service.setHighChart(this.chartObject);\n    this.service.data$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(() => {\n      this.updateData();\n      this.adjustScale();\n    });\n    this.service.chartInfo$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(() => {\n      this.setChartTitle();\n      this.setChartXAxis();\n      this.setChartYAxis();\n      this.updateChart();\n    });\n    this.service.interface$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(() => {\n      this.updateModel();\n      this.updateCross();\n      this.adjustScale();\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private initChartSeries() {\n    this.setSun();\n    this.setData();\n    this.setModel();\n    this.setCross();\n  }\n\n  private setSun() {\n    this.chartObject.addSeries({\n      name: \"Sun\",\n      data: [[0, 0]],\n      type: 'scatter',\n      marker: {\n        radius: 10,\n      }\n    })\n  }\n\n  private setData() {\n    this.chartObject.addSeries({\n      name: this.service.getDataLabel(),\n      data: this.service.getDataArray(),\n      type: 'scatter',\n      marker: {\n        symbol: 'circle',\n      }\n    })\n  }\n\n  private updateData() {\n    this.chartObject.series[1].update({\n      name: this.service.getDataLabel(),\n      data: this.service.getDataArray(),\n      type: 'scatter',\n      marker: {\n        symbol: 'circle',\n      }\n    });\n  }\n\n  private setModel(): void {\n    this.chartObject.addSeries({\n      name: \"Model\",\n      data: this.service.getModel(),\n      type: 'scatter',\n      marker: {\n        symbol: 'circle',\n        radius: 0.7,\n      }\n    })\n  }\n\n  private updateModel(): void {\n    this.chartObject.series[2].setData(this.service.getModel());\n  }\n\n  private setCross(): void {\n    this.chartObject.addSeries({\n      name: \"Cross\",\n      data: ([[this.service.getDistance(), 0]] as any),\n      type: \"scatter\",\n      marker: {\n        symbol: 'diamond',\n        radius: 5,\n      },\n      enableMouseTracking: false,\n      showInLegend: false,\n    })\n  }\n\n  private updateCross(): void {\n    this.chartObject.series[3].setData([[this.service.getDistance(), 0]] as any);\n  }\n\n  private updateChart(): void {\n    this.updateFlag = true;\n  }\n\n  private setChartTitle(): void {\n    this.chartOptions.title = {text: this.service.getChartTitle()};\n  }\n\n  private setChartXAxis(): void {\n    this.chartOptions.xAxis = {\n      title: {text: this.service.getXAxisLabel()}\n    };\n  }\n\n  private setChartYAxis(): void {\n    this.chartOptions.yAxis = {\n      title: {text: this.service.getYAxisLabel()}\n    };\n  }\n\n  private adjustScale(): void {\n    const data: (number | null)[][] = this.service.getDataArray().filter(d => d[0] !== null && d[1] !== null);\n    let minX: number = Math.min(...data.map(d => d[0]!));\n    let maxX: number = Math.max(...data.map(d => d[0]!));\n    let minY: number = Math.min(...data.map(d => d[1]!));\n    let maxY: number = Math.max(...data.map(d => d[1]!));\n\n    // Adjusting the min/max values to avoid having data points on the very edge\n    minX -= 3;\n    maxX += 3;\n    minY -= 3;\n    maxY += 3;\n\n    // This is the ratio of the length of X axis over the length of Y axis\n    const screenRatio = this.chartObject.plotWidth / this.chartObject.plotHeight;\n    let dataRatio = (maxX - minX) / (maxY - minY);\n\n    if (dataRatio \n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./scatter-highchart.component.scss\n                \n                .chart-container {\n  width: 100%;\n  height: 100%;\n  padding: 10px;\n}\n\n.LIGHT_THEME {\n  :host ::ng-deep .highcharts-color-0 {\n    stroke: orange;\n    fill: orange;\n  }\n\n  :host ::ng-deep .highcharts-color-2 {\n    stroke: black;\n    fill: black;\n  }\n\n  :host ::ng-deep .highcharts-color-3 {\n    stroke: grey;\n    fill: grey;\n  }\n}\n\n.DARK_THEME {\n  :host ::ng-deep .highcharts-color-0 {\n    stroke: yellow;\n    fill: yellow;\n  }\n\n  :host ::ng-deep .highcharts-color-2 {\n    stroke: white;\n    fill: white;\n  }\n\n  :host ::ng-deep .highcharts-color-3 {\n    stroke: lightgray;\n    fill: lightgray;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ScatterHighchartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ScatterInterfaceStorageObject.html":{"url":"interfaces/ScatterInterfaceStorageObject.html","title":"interface - ScatterInterfaceStorageObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ScatterInterfaceStorageObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/scatter/scatter.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            diameter\n                                        \n                                \n                                \n                                        \n                                            distance\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        diameter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        diameter:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\n\nexport interface ScatterDataDict {\n  longitude: number | null;\n  latitude: number | null;\n  distance: number | null;\n}\n\nexport class ScatterData implements MyData {\n  private dataDict: ScatterDataDict[];\n  private static readonly FLOAT_PRECISION = 3;\n\n  constructor() {\n    this.dataDict = ScatterData.getDefaultDataDict();\n  }\n\n  public static getDefaultDataDict(): ScatterDataDict[] {\n    const result: ScatterDataDict[] = [];\n    for (let i = 0; i  0) {\n      for (let i = 0; i  {\n        return scatterDataDict.longitude !== null\n          && scatterDataDict.latitude !== null\n          && scatterDataDict.distance !== null;\n      }\n    ).map(\n      (entry: ScatterDataDict) => {\n        return [\n          parseFloat((Math.cos(entry.latitude! / 180 * Math.PI) * entry.distance! * Math.cos(entry.longitude! / 180 * Math.PI)).toFixed(ScatterData.FLOAT_PRECISION)),\n          parseFloat((Math.cos(entry.latitude! / 180 * Math.PI) * entry.distance! * Math.sin(entry.longitude! / 180 * Math.PI)).toFixed(ScatterData.FLOAT_PRECISION)),\n        ];\n      }\n    );\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: ScatterDataDict[]): void {\n    this.dataDict = data;\n  }\n\n}\n\n\nexport interface ScatterChartInfoStorageObject {\n  chartTitle: string;\n  dataLabel: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n}\n\nexport class ScatterChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private dataLabel: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n\n  constructor() {\n    this.chartTitle = ScatterChartInfo.getDefaultStorageObject().chartTitle;\n    this.dataLabel = ScatterChartInfo.getDefaultStorageObject().dataLabel;\n    this.xAxisLabel = ScatterChartInfo.getDefaultStorageObject().xAxisLabel;\n    this.yAxisLabel = ScatterChartInfo.getDefaultStorageObject().yAxisLabel;\n  }\n\n\n  public static getDefaultStorageObject(): ScatterChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      dataLabel: \"Data\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n    }\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabel;\n  }\n\n  getStorageObject(): ScatterChartInfoStorageObject {\n    return {\n      chartTitle: this.chartTitle,\n      dataLabel: this.dataLabel,\n      xAxisLabel: this.xAxisLabel,\n      yAxisLabel: this.yAxisLabel,\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    this.dataLabel = data;\n  }\n\n  setStorageObject(storageObject: ScatterChartInfoStorageObject): void {\n    this.chartTitle = storageObject.chartTitle;\n    this.dataLabel = storageObject.dataLabel;\n    this.xAxisLabel = storageObject.xAxisLabel;\n    this.yAxisLabel = storageObject.yAxisLabel;\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.xAxisLabel = xAxis;\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.yAxisLabel = yAxis;\n  }\n\n}\n\n\nexport interface ScatterInterfaceStorageObject {\n  distance: number;\n  diameter: number;\n}\n\n\nexport interface ScatterModel {\n  getDistance(): number;\n\n  getDiameter(): number;\n\n  setDistance(distance: number): void;\n\n  setDiameter(diameter: number): void;\n\n  getModelStorageObject(): ScatterInterfaceStorageObject;\n\n  setModelStorageObject(storageObject: ScatterInterfaceStorageObject): void;\n\n  getModel(): number[][];\n}\n\n\nexport class ScatterModelInterface implements ScatterModel {\n  private distance: number;\n  private diameter: number;\n\n  constructor() {\n    this.distance = ScatterModelInterface.getDefaultStorageObject().distance;\n    this.diameter = ScatterModelInterface.getDefaultStorageObject().diameter;\n  }\n\n  public static getDefaultStorageObject(): ScatterInterfaceStorageObject {\n    return {\n      distance: 0,\n      diameter: 10,\n    }\n  }\n\n  getDiameter(): number {\n    return this.diameter\n  }\n\n  getDistance(): number {\n    return this.distance;\n  }\n\n  /**\n   * A circle with x of this.distance, y of 0, and diameter of this.diameter\n   */\n  getModel(): number[][] {\n    let modelData: number[][] = [];\n    const x = this.getDistance();\n    const y = 0;\n    const diameter = this.getDiameter();\n    const steps = 500;\n\n    let step = 2 * Math.PI / steps;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ScatterModel.html":{"url":"interfaces/ScatterModel.html","title":"interface - ScatterModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ScatterModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/scatter/scatter.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getDiameter\n                                    \n                                \n                                \n                                    \n                                        getDistance\n                                    \n                                \n                                \n                                    \n                                        getModel\n                                    \n                                \n                                \n                                    \n                                        getModelStorageObject\n                                    \n                                \n                                \n                                    \n                                        setDiameter\n                                    \n                                \n                                \n                                    \n                                        setDistance\n                                    \n                                \n                                \n                                    \n                                        setModelStorageObject\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDiameter\n                        \n                    \n                \n            \n            \n                \ngetDiameter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDistance\n                        \n                    \n                \n            \n            \n                \ngetDistance()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getModel\n                        \n                    \n                \n            \n            \n                \ngetModel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     [][]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getModelStorageObject\n                        \n                    \n                \n            \n            \n                \ngetModelStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ScatterInterfaceStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDiameter\n                        \n                    \n                \n            \n            \n                \nsetDiameter(diameter: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    diameter\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDistance\n                        \n                    \n                \n            \n            \n                \nsetDistance(distance: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    distance\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setModelStorageObject\n                        \n                    \n                \n            \n            \n                \nsetModelStorageObject(storageObject: ScatterInterfaceStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storageObject\n                                    \n                                                ScatterInterfaceStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\n\nexport interface ScatterDataDict {\n  longitude: number | null;\n  latitude: number | null;\n  distance: number | null;\n}\n\nexport class ScatterData implements MyData {\n  private dataDict: ScatterDataDict[];\n  private static readonly FLOAT_PRECISION = 3;\n\n  constructor() {\n    this.dataDict = ScatterData.getDefaultDataDict();\n  }\n\n  public static getDefaultDataDict(): ScatterDataDict[] {\n    const result: ScatterDataDict[] = [];\n    for (let i = 0; i  0) {\n      for (let i = 0; i  {\n        return scatterDataDict.longitude !== null\n          && scatterDataDict.latitude !== null\n          && scatterDataDict.distance !== null;\n      }\n    ).map(\n      (entry: ScatterDataDict) => {\n        return [\n          parseFloat((Math.cos(entry.latitude! / 180 * Math.PI) * entry.distance! * Math.cos(entry.longitude! / 180 * Math.PI)).toFixed(ScatterData.FLOAT_PRECISION)),\n          parseFloat((Math.cos(entry.latitude! / 180 * Math.PI) * entry.distance! * Math.sin(entry.longitude! / 180 * Math.PI)).toFixed(ScatterData.FLOAT_PRECISION)),\n        ];\n      }\n    );\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: ScatterDataDict[]): void {\n    this.dataDict = data;\n  }\n\n}\n\n\nexport interface ScatterChartInfoStorageObject {\n  chartTitle: string;\n  dataLabel: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n}\n\nexport class ScatterChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private dataLabel: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n\n  constructor() {\n    this.chartTitle = ScatterChartInfo.getDefaultStorageObject().chartTitle;\n    this.dataLabel = ScatterChartInfo.getDefaultStorageObject().dataLabel;\n    this.xAxisLabel = ScatterChartInfo.getDefaultStorageObject().xAxisLabel;\n    this.yAxisLabel = ScatterChartInfo.getDefaultStorageObject().yAxisLabel;\n  }\n\n\n  public static getDefaultStorageObject(): ScatterChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      dataLabel: \"Data\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n    }\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabel;\n  }\n\n  getStorageObject(): ScatterChartInfoStorageObject {\n    return {\n      chartTitle: this.chartTitle,\n      dataLabel: this.dataLabel,\n      xAxisLabel: this.xAxisLabel,\n      yAxisLabel: this.yAxisLabel,\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    this.dataLabel = data;\n  }\n\n  setStorageObject(storageObject: ScatterChartInfoStorageObject): void {\n    this.chartTitle = storageObject.chartTitle;\n    this.dataLabel = storageObject.dataLabel;\n    this.xAxisLabel = storageObject.xAxisLabel;\n    this.yAxisLabel = storageObject.yAxisLabel;\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.xAxisLabel = xAxis;\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.yAxisLabel = yAxis;\n  }\n\n}\n\n\nexport interface ScatterInterfaceStorageObject {\n  distance: number;\n  diameter: number;\n}\n\n\nexport interface ScatterModel {\n  getDistance(): number;\n\n  getDiameter(): number;\n\n  setDistance(distance: number): void;\n\n  setDiameter(diameter: number): void;\n\n  getModelStorageObject(): ScatterInterfaceStorageObject;\n\n  setModelStorageObject(storageObject: ScatterInterfaceStorageObject): void;\n\n  getModel(): number[][];\n}\n\n\nexport class ScatterModelInterface implements ScatterModel {\n  private distance: number;\n  private diameter: number;\n\n  constructor() {\n    this.distance = ScatterModelInterface.getDefaultStorageObject().distance;\n    this.diameter = ScatterModelInterface.getDefaultStorageObject().diameter;\n  }\n\n  public static getDefaultStorageObject(): ScatterInterfaceStorageObject {\n    return {\n      distance: 0,\n      diameter: 10,\n    }\n  }\n\n  getDiameter(): number {\n    return this.diameter\n  }\n\n  getDistance(): number {\n    return this.distance;\n  }\n\n  /**\n   * A circle with x of this.distance, y of 0, and diameter of this.diameter\n   */\n  getModel(): number[][] {\n    let modelData: number[][] = [];\n    const x = this.getDistance();\n    const y = 0;\n    const diameter = this.getDiameter();\n    const steps = 500;\n\n    let step = 2 * Math.PI / steps;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ScatterModelInterface.html":{"url":"classes/ScatterModelInterface.html","title":"class - ScatterModelInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ScatterModelInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/scatter/scatter.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ScatterModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                diameter\n                            \n                            \n                                    Private\n                                distance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                formatNumber\n                            \n                            \n                                    Static\n                                getDefaultStorageObject\n                            \n                            \n                                getDiameter\n                            \n                            \n                                getDistance\n                            \n                            \n                                getModel\n                            \n                            \n                                getModelStorageObject\n                            \n                            \n                                setDiameter\n                            \n                            \n                                setDistance\n                            \n                            \n                                setModelStorageObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/scatter/scatter.service.util.ts:183\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        diameter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.util.ts:183\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        distance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.util.ts:182\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        formatNumber\n                        \n                    \n                \n            \n            \n                \n                    \n                    formatNumber(input: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:247\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getDefaultStorageObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ScatterInterfaceStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDiameter\n                        \n                    \n                \n            \n            \n                \ngetDiameter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDistance\n                        \n                    \n                \n            \n            \n                \ngetDistance()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:201\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getModel\n                        \n                    \n                \n            \n            \n                \ngetModel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:208\n                \n            \n\n\n            \n                \n                    A circle with x of this.distance, y of 0, and diameter of this.diameter\n\n\n                    \n                        Returns :     [][]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getModelStorageObject\n                        \n                    \n                \n            \n            \n                \ngetModelStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:227\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ScatterInterfaceStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDiameter\n                        \n                    \n                \n            \n            \n                \nsetDiameter(diameter: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:234\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    diameter\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDistance\n                        \n                    \n                \n            \n            \n                \nsetDistance(distance: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:238\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    distance\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setModelStorageObject\n                        \n                    \n                \n            \n            \n                \nsetModelStorageObject(storageObject: ScatterInterfaceStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:242\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storageObject\n                                    \n                                                ScatterInterfaceStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\n\nexport interface ScatterDataDict {\n  longitude: number | null;\n  latitude: number | null;\n  distance: number | null;\n}\n\nexport class ScatterData implements MyData {\n  private dataDict: ScatterDataDict[];\n  private static readonly FLOAT_PRECISION = 3;\n\n  constructor() {\n    this.dataDict = ScatterData.getDefaultDataDict();\n  }\n\n  public static getDefaultDataDict(): ScatterDataDict[] {\n    const result: ScatterDataDict[] = [];\n    for (let i = 0; i  0) {\n      for (let i = 0; i  {\n        return scatterDataDict.longitude !== null\n          && scatterDataDict.latitude !== null\n          && scatterDataDict.distance !== null;\n      }\n    ).map(\n      (entry: ScatterDataDict) => {\n        return [\n          parseFloat((Math.cos(entry.latitude! / 180 * Math.PI) * entry.distance! * Math.cos(entry.longitude! / 180 * Math.PI)).toFixed(ScatterData.FLOAT_PRECISION)),\n          parseFloat((Math.cos(entry.latitude! / 180 * Math.PI) * entry.distance! * Math.sin(entry.longitude! / 180 * Math.PI)).toFixed(ScatterData.FLOAT_PRECISION)),\n        ];\n      }\n    );\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: ScatterDataDict[]): void {\n    this.dataDict = data;\n  }\n\n}\n\n\nexport interface ScatterChartInfoStorageObject {\n  chartTitle: string;\n  dataLabel: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n}\n\nexport class ScatterChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private dataLabel: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n\n  constructor() {\n    this.chartTitle = ScatterChartInfo.getDefaultStorageObject().chartTitle;\n    this.dataLabel = ScatterChartInfo.getDefaultStorageObject().dataLabel;\n    this.xAxisLabel = ScatterChartInfo.getDefaultStorageObject().xAxisLabel;\n    this.yAxisLabel = ScatterChartInfo.getDefaultStorageObject().yAxisLabel;\n  }\n\n\n  public static getDefaultStorageObject(): ScatterChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      dataLabel: \"Data\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n    }\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabel;\n  }\n\n  getStorageObject(): ScatterChartInfoStorageObject {\n    return {\n      chartTitle: this.chartTitle,\n      dataLabel: this.dataLabel,\n      xAxisLabel: this.xAxisLabel,\n      yAxisLabel: this.yAxisLabel,\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    this.dataLabel = data;\n  }\n\n  setStorageObject(storageObject: ScatterChartInfoStorageObject): void {\n    this.chartTitle = storageObject.chartTitle;\n    this.dataLabel = storageObject.dataLabel;\n    this.xAxisLabel = storageObject.xAxisLabel;\n    this.yAxisLabel = storageObject.yAxisLabel;\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.xAxisLabel = xAxis;\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.yAxisLabel = yAxis;\n  }\n\n}\n\n\nexport interface ScatterInterfaceStorageObject {\n  distance: number;\n  diameter: number;\n}\n\n\nexport interface ScatterModel {\n  getDistance(): number;\n\n  getDiameter(): number;\n\n  setDistance(distance: number): void;\n\n  setDiameter(diameter: number): void;\n\n  getModelStorageObject(): ScatterInterfaceStorageObject;\n\n  setModelStorageObject(storageObject: ScatterInterfaceStorageObject): void;\n\n  getModel(): number[][];\n}\n\n\nexport class ScatterModelInterface implements ScatterModel {\n  private distance: number;\n  private diameter: number;\n\n  constructor() {\n    this.distance = ScatterModelInterface.getDefaultStorageObject().distance;\n    this.diameter = ScatterModelInterface.getDefaultStorageObject().diameter;\n  }\n\n  public static getDefaultStorageObject(): ScatterInterfaceStorageObject {\n    return {\n      distance: 0,\n      diameter: 10,\n    }\n  }\n\n  getDiameter(): number {\n    return this.diameter\n  }\n\n  getDistance(): number {\n    return this.distance;\n  }\n\n  /**\n   * A circle with x of this.distance, y of 0, and diameter of this.diameter\n   */\n  getModel(): number[][] {\n    let modelData: number[][] = [];\n    const x = this.getDistance();\n    const y = 0;\n    const diameter = this.getDiameter();\n    const steps = 500;\n\n    let step = 2 * Math.PI / steps;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ScatterModule.html":{"url":"modules/ScatterModule.html","title":"module - ScatterModule","body":"\n                   \n\n\n\n\n    Modules\n    ScatterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ScatterModule\n\n\n\ncluster_ScatterModule_declarations\n\n\n\ncluster_ScatterModule_providers\n\n\n\ncluster_ScatterModule_imports\n\n\n\n\nScatterChartFormComponent\n\nScatterChartFormComponent\n\n\n\nScatterModule\n\nScatterModule\n\nScatterModule -->\n\nScatterChartFormComponent->ScatterModule\n\n\n\n\n\nScatterComponent\n\nScatterComponent\n\nScatterModule -->\n\nScatterComponent->ScatterModule\n\n\n\n\n\nScatterFormComponent\n\nScatterFormComponent\n\nScatterModule -->\n\nScatterFormComponent->ScatterModule\n\n\n\n\n\nScatterHighchartComponent\n\nScatterHighchartComponent\n\nScatterModule -->\n\nScatterHighchartComponent->ScatterModule\n\n\n\n\n\nScatterTableComponent\n\nScatterTableComponent\n\nScatterModule -->\n\nScatterTableComponent->ScatterModule\n\n\n\n\n\nInterfaceUtilModule\n\nInterfaceUtilModule\n\nScatterModule -->\n\nInterfaceUtilModule->ScatterModule\n\n\n\n\n\nSimpleDataButtonModule\n\nSimpleDataButtonModule\n\nScatterModule -->\n\nSimpleDataButtonModule->ScatterModule\n\n\n\n\n\nSimpleGraphButtonModule\n\nSimpleGraphButtonModule\n\nScatterModule -->\n\nSimpleGraphButtonModule->ScatterModule\n\n\n\n\n\nScatterService\n\nScatterService\n\nScatterModule -->\n\nScatterService->ScatterModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tools/scatter/scatter.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ScatterChartFormComponent\n                        \n                        \n                            ScatterComponent\n                        \n                        \n                            ScatterFormComponent\n                        \n                        \n                            ScatterHighchartComponent\n                        \n                        \n                            ScatterTableComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ScatterService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InterfaceUtilModule\n                        \n                        \n                            SimpleDataButtonModule\n                        \n                        \n                            SimpleGraphButtonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ScatterComponent} from './scatter/scatter.component';\nimport {SimpleDataButtonModule} from \"../shared/simple-data-button/simple-data-button.component\";\nimport {SimpleGraphButtonModule} from \"../shared/simple-graph-button/simple-graph-button.component\";\nimport {ScatterService} from \"./scatter.service\";\nimport {ScatterTableComponent} from './scatter-table/scatter-table.component';\nimport {HotTableModule} from \"@handsontable/angular\";\nimport {ScatterHighchartComponent} from './scatter-highchart/scatter-highchart.component';\nimport {HighchartsChartModule} from \"highcharts-angular\";\nimport {ScatterChartFormComponent} from './scatter-chart-form/scatter-chart-form.component';\nimport {MatLegacyFormFieldModule} from \"@angular/material/legacy-form-field\";\nimport {MatLegacyInputModule} from \"@angular/material/legacy-input\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {ScatterFormComponent} from './scatter-form/scatter-form.component';\nimport {InterfaceUtilModule} from \"../shared/interface/util\";\n\n\n@NgModule({\n  declarations: [\n    ScatterComponent,\n    ScatterTableComponent,\n    ScatterHighchartComponent,\n    ScatterChartFormComponent,\n    ScatterFormComponent\n  ],\n  imports: [\n    CommonModule,\n    SimpleDataButtonModule,\n    SimpleGraphButtonModule,\n    HotTableModule,\n    HighchartsChartModule,\n    MatLegacyFormFieldModule,\n    MatLegacyInputModule,\n    ReactiveFormsModule,\n    InterfaceUtilModule\n  ],\n  providers: [ScatterService,],\n})\nexport class ScatterModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScatterService.html":{"url":"injectables/ScatterService.html","title":"injectable - ScatterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ScatterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/scatter/scatter.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                chartInfo$\n                            \n                            \n                                    Private\n                                chartInfoSubject\n                            \n                            \n                                    Public\n                                data$\n                            \n                            \n                                    Private\n                                dataSubject\n                            \n                            \n                                    Private\n                                highChart\n                            \n                            \n                                    Public\n                                interface$\n                            \n                            \n                                    Private\n                                interfaceSubject\n                            \n                            \n                                    Private\n                                scatterChartInfo\n                            \n                            \n                                    Private\n                                scatterData\n                            \n                            \n                                    Private\n                                scatterInterface\n                            \n                            \n                                    Private\n                                scatterStorage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRow\n                            \n                            \n                                getChartTitle\n                            \n                            \n                                getData\n                            \n                            \n                                getDataArray\n                            \n                            \n                                getDataLabel\n                            \n                            \n                                getDiameter\n                            \n                            \n                                getDistance\n                            \n                            \n                                getHighChart\n                            \n                            \n                                getModel\n                            \n                            \n                                getModelStorageObject\n                            \n                            \n                                getStorageObject\n                            \n                            \n                                getXAxisLabel\n                            \n                            \n                                getYAxisLabel\n                            \n                            \n                                removeRow\n                            \n                            \n                                resetChartInfo\n                            \n                            \n                                resetData\n                            \n                            \n                                resetModel\n                            \n                            \n                                setChartTitle\n                            \n                            \n                                setData\n                            \n                            \n                                setDataLabel\n                            \n                            \n                                setDiameter\n                            \n                            \n                                setDistance\n                            \n                            \n                                setHighChart\n                            \n                            \n                                setModelStorageObject\n                            \n                            \n                                setStorageObject\n                            \n                            \n                                setXAxisLabel\n                            \n                            \n                                setYAxisLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/scatter/scatter.service.ts:34\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRow\n                        \n                    \n                \n            \n            \n                \naddRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:147\n                \n            \n\n\n            \n                \n                    MyData Methods\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChartTitle\n                        \n                    \n                \n            \n            \n                \ngetChartTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:87\n                \n            \n\n\n            \n                \n                    ChartInfo Methods\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ScatterDataDict[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataArray\n                        \n                    \n                \n            \n            \n                \ngetDataArray()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     [][]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataLabel\n                        \n                    \n                \n            \n            \n                \ngetDataLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDiameter\n                        \n                    \n                \n            \n            \n                \ngetDiameter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:44\n                \n            \n\n\n            \n                \n                    ScatterModel Methods\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDistance\n                        \n                    \n                \n            \n            \n                \ngetDistance()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHighChart\n                        \n                    \n                \n            \n            \n                \ngetHighChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Highcharts.Chart\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getModel\n                        \n                    \n                \n            \n            \n                \ngetModel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     [][]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getModelStorageObject\n                        \n                    \n                \n            \n            \n                \ngetModelStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ScatterInterfaceStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStorageObject\n                        \n                    \n                \n            \n            \n                \ngetStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getXAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetXAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getYAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetYAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRow\n                        \n                    \n                \n            \n            \n                \nremoveRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetChartInfo\n                        \n                    \n                \n            \n            \n                \nresetChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetData\n                        \n                    \n                \n            \n            \n                \nresetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetModel\n                        \n                    \n                \n            \n            \n                \nresetModel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setChartTitle\n                        \n                    \n                \n            \n            \n                \nsetChartTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setData\n                        \n                    \n                \n            \n            \n                \nsetData(data: ScatterDataDict[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ScatterDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDataLabel\n                        \n                    \n                \n            \n            \n                \nsetDataLabel(data: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDiameter\n                        \n                    \n                \n            \n            \n                \nsetDiameter(diameter: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    diameter\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDistance\n                        \n                    \n                \n            \n            \n                \nsetDistance(distance: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    distance\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setHighChart\n                        \n                    \n                \n            \n            \n                \nsetHighChart(highChart: Highcharts.Chart)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    highChart\n                                    \n                                            Highcharts.Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setModelStorageObject\n                        \n                    \n                \n            \n            \n                \nsetModelStorageObject(storageObject: ScatterInterfaceStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storageObject\n                                    \n                                                ScatterInterfaceStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStorageObject\n                        \n                    \n                \n            \n            \n                \nsetStorageObject(storageObject: ScatterChartInfoStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storageObject\n                                    \n                                                ScatterChartInfoStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setXAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetXAxisLabel(xAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    xAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setYAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetYAxisLabel(yAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    yAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chartInfo$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.chartInfoSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartInfoSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(this.scatterChartInfo)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.dataSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(this.scatterData)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        highChart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Highcharts.Chart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        interface$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.interfaceSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        interfaceSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(UpdateSource.INIT)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        scatterChartInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScatterChartInfo\n\n                    \n                \n                \n                    \n                        Default value : new ScatterChartInfo()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        scatterData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScatterData\n\n                    \n                \n                \n                    \n                        Default value : new ScatterData()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        scatterInterface\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScatterModelInterface\n\n                    \n                \n                \n                    \n                        Default value : new ScatterModelInterface()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        scatterStorage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScatterStorage\n\n                    \n                \n                \n                    \n                        Default value : new ScatterStorage()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {\n  ScatterChartInfo,\n  ScatterChartInfoStorageObject,\n  ScatterData,\n  ScatterDataDict,\n  ScatterInterfaceStorageObject,\n  ScatterModel,\n  ScatterModelInterface,\n  ScatterStorage\n} from \"./scatter.service.util\";\nimport {MyData} from \"../shared/data/data.interface\";\nimport {BehaviorSubject} from \"rxjs\";\nimport * as Highcharts from \"highcharts\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {UpdateSource} from \"../moon/moon.service.util\";\n\n@Injectable()\nexport class ScatterService implements MyData, ChartInfo, ScatterModel {\n\n  private scatterData: ScatterData = new ScatterData();\n  private scatterChartInfo: ScatterChartInfo = new ScatterChartInfo();\n  private scatterInterface: ScatterModelInterface = new ScatterModelInterface();\n\n  private scatterStorage: ScatterStorage = new ScatterStorage();\n\n  private highChart!: Highcharts.Chart;\n\n  private dataSubject: BehaviorSubject = new BehaviorSubject(this.scatterData);\n  public data$ = this.dataSubject.asObservable();\n  private chartInfoSubject: BehaviorSubject = new BehaviorSubject(this.scatterChartInfo);\n  public chartInfo$ = this.chartInfoSubject.asObservable();\n  private interfaceSubject: BehaviorSubject = new BehaviorSubject(UpdateSource.INIT);\n  public interface$ = this.interfaceSubject.asObservable();\n\n  constructor() {\n    this.scatterData.setData(this.scatterStorage.getData());\n    this.scatterChartInfo.setStorageObject(this.scatterStorage.getChartInfo());\n    this.scatterInterface.setModelStorageObject(this.scatterStorage.getInterface());\n  }\n\n  /** ScatterModel Methods**/\n\n  getDiameter(): number {\n    return this.scatterInterface.getDiameter();\n  }\n\n  getDistance(): number {\n    return this.scatterInterface.getDistance();\n  }\n\n  getModel(): number[][] {\n    return this.scatterInterface.getModel();\n  }\n\n  getModelStorageObject(): ScatterInterfaceStorageObject {\n    return this.scatterInterface.getModelStorageObject();\n  }\n\n  setDiameter(diameter: number): void {\n    this.scatterInterface.setDiameter(diameter);\n    this.scatterStorage.saveInterface(this.scatterInterface.getModelStorageObject());\n    this.interfaceSubject.next(UpdateSource.INTERFACE);\n  }\n\n  setDistance(distance: number): void {\n    this.scatterInterface.setDistance(distance);\n    this.scatterStorage.saveInterface(this.scatterInterface.getModelStorageObject());\n    this.interfaceSubject.next(UpdateSource.INTERFACE);\n  }\n\n  setModelStorageObject(storageObject: ScatterInterfaceStorageObject): void {\n    this.scatterInterface.setModelStorageObject(storageObject);\n    this.interfaceSubject.next(UpdateSource.INTERFACE);\n  }\n\n  resetModel(): void {\n    this.scatterInterface.setModelStorageObject(ScatterModelInterface.getDefaultStorageObject());\n    this.scatterStorage.saveInterface(this.scatterInterface.getModelStorageObject());\n    this.interfaceSubject.next(UpdateSource.RESET);\n  }\n\n\n  /** ChartInfo Methods**/\n\n\n  getChartTitle(): string {\n    return this.scatterChartInfo.getChartTitle();\n  }\n\n  getXAxisLabel(): string {\n    return this.scatterChartInfo.getXAxisLabel();\n  }\n\n  getYAxisLabel(): string {\n    return this.scatterChartInfo.getYAxisLabel();\n  }\n\n  getDataLabel(): string {\n    return this.scatterChartInfo.getDataLabel();\n  }\n\n  getStorageObject() {\n    return this.scatterChartInfo.getStorageObject();\n  }\n\n  setChartTitle(title: string): void {\n    this.scatterChartInfo.setChartTitle(title);\n    this.scatterStorage.saveChartInfo(this.scatterChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.scatterChartInfo);\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.scatterChartInfo.setXAxisLabel(xAxis);\n    this.scatterStorage.saveChartInfo(this.scatterChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.scatterChartInfo);\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.scatterChartInfo.setYAxisLabel(yAxis);\n    this.scatterStorage.saveChartInfo(this.scatterChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.scatterChartInfo);\n  }\n\n  setDataLabel(data: string): void {\n    this.scatterChartInfo.setDataLabel(data);\n    this.scatterStorage.saveChartInfo(this.scatterChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.scatterChartInfo);\n    this.dataSubject.next(this.scatterData);\n  }\n\n  setStorageObject(storageObject: ScatterChartInfoStorageObject): void {\n    this.scatterChartInfo.setStorageObject(storageObject);\n    this.scatterStorage.saveChartInfo(this.scatterChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.scatterChartInfo);\n  }\n\n  resetChartInfo(): void {\n    this.scatterChartInfo.setStorageObject(ScatterChartInfo.getDefaultStorageObject());\n    this.scatterStorage.saveChartInfo(this.scatterChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.scatterChartInfo);\n  }\n\n\n  /** MyData Methods**/\n\n  addRow(index: number, amount: number): void {\n    this.scatterData.addRow(index, amount);\n    this.scatterStorage.saveData(this.scatterData.getData());\n    this.dataSubject.next(this.scatterData);\n  }\n\n  getData(): ScatterDataDict[] {\n    return this.scatterData.getData();\n  }\n\n  getDataArray(): (number | null)[][] {\n    return this.scatterData.getDataArray();\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.scatterData.removeRow(index, amount);\n    this.scatterStorage.saveData(this.scatterData.getData());\n    this.dataSubject.next(this.scatterData);\n  }\n\n  setData(data: ScatterDataDict[]): void {\n    this.scatterData.setData(data);\n    this.scatterStorage.saveData(this.scatterData.getData());\n    this.dataSubject.next(this.scatterData);\n  }\n\n  resetData(): void {\n    this.scatterStorage.resetData();\n    this.scatterData.setData(this.scatterStorage.getData());\n    this.dataSubject.next(this.scatterData);\n  }\n\n  setHighChart(highChart: Highcharts.Chart): void {\n    this.highChart = highChart;\n  }\n\n  getHighChart(): Highcharts.Chart {\n    return this.highChart;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ScatterStorage.html":{"url":"classes/ScatterStorage.html","title":"class - ScatterStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ScatterStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/scatter/scatter.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyStorage\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                chartInfoKey\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                dataKey\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                interfaceKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getChartInfo\n                            \n                            \n                                getData\n                            \n                            \n                                getInterface\n                            \n                            \n                                resetChartInfo\n                            \n                            \n                                resetData\n                            \n                            \n                                resetInterface\n                            \n                            \n                                saveChartInfo\n                            \n                            \n                                saveData\n                            \n                            \n                                saveInterface\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        chartInfoKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"scatterChartInfo\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.util.ts:256\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        dataKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"scatterData\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.util.ts:255\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        interfaceKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"scatterInterface\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter.service.util.ts:257\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getChartInfo\n                        \n                    \n                \n            \n            \n                \ngetChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:259\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ScatterChartInfoStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:267\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ScatterDataDict[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInterface\n                        \n                    \n                \n            \n            \n                \ngetInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:275\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ScatterInterfaceStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetChartInfo\n                        \n                    \n                \n            \n            \n                \nresetChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:283\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetData\n                        \n                    \n                \n            \n            \n                \nresetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:287\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetInterface\n                        \n                    \n                \n            \n            \n                \nresetInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:291\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveChartInfo\n                        \n                    \n                \n            \n            \n                \nsaveChartInfo(chartInfo: ScatterChartInfoStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:295\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartInfo\n                                    \n                                                ScatterChartInfoStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveData\n                        \n                    \n                \n            \n            \n                \nsaveData(data: ScatterDataDict[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:299\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ScatterDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveInterface\n                        \n                    \n                \n            \n            \n                \nsaveInterface(interfaceInfo: ScatterInterfaceStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter.service.util.ts:303\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    interfaceInfo\n                                    \n                                                ScatterInterfaceStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\n\nexport interface ScatterDataDict {\n  longitude: number | null;\n  latitude: number | null;\n  distance: number | null;\n}\n\nexport class ScatterData implements MyData {\n  private dataDict: ScatterDataDict[];\n  private static readonly FLOAT_PRECISION = 3;\n\n  constructor() {\n    this.dataDict = ScatterData.getDefaultDataDict();\n  }\n\n  public static getDefaultDataDict(): ScatterDataDict[] {\n    const result: ScatterDataDict[] = [];\n    for (let i = 0; i  0) {\n      for (let i = 0; i  {\n        return scatterDataDict.longitude !== null\n          && scatterDataDict.latitude !== null\n          && scatterDataDict.distance !== null;\n      }\n    ).map(\n      (entry: ScatterDataDict) => {\n        return [\n          parseFloat((Math.cos(entry.latitude! / 180 * Math.PI) * entry.distance! * Math.cos(entry.longitude! / 180 * Math.PI)).toFixed(ScatterData.FLOAT_PRECISION)),\n          parseFloat((Math.cos(entry.latitude! / 180 * Math.PI) * entry.distance! * Math.sin(entry.longitude! / 180 * Math.PI)).toFixed(ScatterData.FLOAT_PRECISION)),\n        ];\n      }\n    );\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: ScatterDataDict[]): void {\n    this.dataDict = data;\n  }\n\n}\n\n\nexport interface ScatterChartInfoStorageObject {\n  chartTitle: string;\n  dataLabel: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n}\n\nexport class ScatterChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private dataLabel: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n\n  constructor() {\n    this.chartTitle = ScatterChartInfo.getDefaultStorageObject().chartTitle;\n    this.dataLabel = ScatterChartInfo.getDefaultStorageObject().dataLabel;\n    this.xAxisLabel = ScatterChartInfo.getDefaultStorageObject().xAxisLabel;\n    this.yAxisLabel = ScatterChartInfo.getDefaultStorageObject().yAxisLabel;\n  }\n\n\n  public static getDefaultStorageObject(): ScatterChartInfoStorageObject {\n    return {\n      chartTitle: \"Title\",\n      dataLabel: \"Data\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n    }\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabel;\n  }\n\n  getStorageObject(): ScatterChartInfoStorageObject {\n    return {\n      chartTitle: this.chartTitle,\n      dataLabel: this.dataLabel,\n      xAxisLabel: this.xAxisLabel,\n      yAxisLabel: this.yAxisLabel,\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    this.dataLabel = data;\n  }\n\n  setStorageObject(storageObject: ScatterChartInfoStorageObject): void {\n    this.chartTitle = storageObject.chartTitle;\n    this.dataLabel = storageObject.dataLabel;\n    this.xAxisLabel = storageObject.xAxisLabel;\n    this.yAxisLabel = storageObject.yAxisLabel;\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.xAxisLabel = xAxis;\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.yAxisLabel = yAxis;\n  }\n\n}\n\n\nexport interface ScatterInterfaceStorageObject {\n  distance: number;\n  diameter: number;\n}\n\n\nexport interface ScatterModel {\n  getDistance(): number;\n\n  getDiameter(): number;\n\n  setDistance(distance: number): void;\n\n  setDiameter(diameter: number): void;\n\n  getModelStorageObject(): ScatterInterfaceStorageObject;\n\n  setModelStorageObject(storageObject: ScatterInterfaceStorageObject): void;\n\n  getModel(): number[][];\n}\n\n\nexport class ScatterModelInterface implements ScatterModel {\n  private distance: number;\n  private diameter: number;\n\n  constructor() {\n    this.distance = ScatterModelInterface.getDefaultStorageObject().distance;\n    this.diameter = ScatterModelInterface.getDefaultStorageObject().diameter;\n  }\n\n  public static getDefaultStorageObject(): ScatterInterfaceStorageObject {\n    return {\n      distance: 0,\n      diameter: 10,\n    }\n  }\n\n  getDiameter(): number {\n    return this.diameter\n  }\n\n  getDistance(): number {\n    return this.distance;\n  }\n\n  /**\n   * A circle with x of this.distance, y of 0, and diameter of this.diameter\n   */\n  getModel(): number[][] {\n    let modelData: number[][] = [];\n    const x = this.getDistance();\n    const y = 0;\n    const diameter = this.getDiameter();\n    const steps = 500;\n\n    let step = 2 * Math.PI / steps;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ScatterTable.html":{"url":"classes/ScatterTable.html","title":"class - ScatterTable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ScatterTable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/scatter/scatter-table/scatter-table.component.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyTable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hotRegisterer\n                            \n                            \n                                    Private\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                            \n                                getTable\n                            \n                            \n                                renderTable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/scatter/scatter-table/scatter-table.component.ts:70\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hotRegisterer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HotTableRegisterer()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-table/scatter-table.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-table/scatter-table.component.ts:69\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-table/scatter-table.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTable\n                        \n                    \n                \n            \n            \n                \ngetTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-table/scatter-table.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Handsontable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderTable\n                        \n                    \n                \n            \n            \n                \nrenderTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-table/scatter-table.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {AfterViewInit, Component, OnDestroy} from '@angular/core';\nimport {ScatterService} from \"../scatter.service\";\nimport {Subject, takeUntil} from \"rxjs\";\nimport {MyTable} from \"../../shared/tables/table-interface\";\nimport {HotTableRegisterer} from \"@handsontable/angular\";\nimport Handsontable from \"handsontable\";\nimport {ScatterDataDict} from \"../scatter.service.util\";\nimport {MoonDataDict} from \"../../moon/moon.service.util\";\nimport {MyData} from \"../../shared/data/data.interface\";\n\n@Component({\n  selector: 'app-scatter-table',\n  templateUrl: './scatter-table.component.html',\n  styleUrls: ['./scatter-table.component.scss']\n})\nexport class ScatterTableComponent implements AfterViewInit, OnDestroy{\n  static FLOAT_PRECISION: number = 2;\n  id: string = \"scatter-table\";\n  table: MyTable = new ScatterTable(this.id);\n  colNames: string[] = [\"Longitude\", \"Latitude\", \"Distance\"];\n  dataSet: ScatterDataDict[];\n  private destroy$: Subject = new Subject();\n  constructor(private service: ScatterService) {\n    this.dataSet = this.service.getData();\n  }\n\n  ngAfterViewInit(): void {\n    this.service.data$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe((data: MyData) => {\n      this.dataSet = this.limitPrecision(this.service.getData(), ScatterTableComponent.FLOAT_PRECISION);\n      this.table.renderTable();\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  public onChange = (changes: any, source: any) => {\n    if (changes) {\n      this.service.setData(this.table.getData());\n    }\n  }\n\n  public onRemove = (index: number, amount: number) => {\n    this.service.removeRow(index, amount);\n  }\n\n  public onInsert = (index: number, amount: number) => {\n    this.service.addRow(index, amount);\n  }\n\n  private limitPrecision(data: ScatterDataDict[], precision: number): ScatterDataDict[] {\n    return data.map(\n      (row: ScatterDataDict) => {\n        return {\n          longitude: row.longitude ? parseFloat(row.longitude.toFixed(precision)) : row.longitude,\n          latitude: row.latitude ? parseFloat(row.latitude.toFixed(precision)) : row.latitude,\n          distance: row.distance ? parseFloat(row.distance.toFixed(precision)) : row.distance,\n        }\n      }\n    );\n  }\n}\n\nclass ScatterTable implements MyTable {\n  private readonly id: string;\n  private hotRegisterer = new HotTableRegisterer();\n\n  constructor(id: string) {\n    this.id = id;\n  }\n\n  getTable(): Handsontable {\n    return this.hotRegisterer.getInstance(this.id);\n  }\n\n  renderTable(): void {\n    this.getTable().render();\n  }\n\n  getData(): any[] {\n    return this.getTable().getSourceData();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScatterTableComponent.html":{"url":"components/ScatterTableComponent.html","title":"component - ScatterTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ScatterTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/scatter/scatter-table/scatter-table.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-scatter-table\n            \n\n\n\n            \n                styleUrls\n                ./scatter-table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./scatter-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                colNames\n                            \n                            \n                                dataSet\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Static\n                                FLOAT_PRECISION\n                            \n                            \n                                id\n                            \n                            \n                                    Public\n                                onChange\n                            \n                            \n                                    Public\n                                onInsert\n                            \n                            \n                                    Public\n                                onRemove\n                            \n                            \n                                table\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                limitPrecision\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: ScatterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/scatter/scatter-table/scatter-table.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ScatterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        limitPrecision\n                        \n                    \n                \n            \n            \n                \n                    \n                    limitPrecision(data: ScatterDataDict[], precision: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-table/scatter-table.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ScatterDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    precision\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ScatterDataDict[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-table/scatter-table.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/scatter/scatter-table/scatter-table.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        colNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\"Longitude\", \"Latitude\", \"Distance\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-table/scatter-table.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScatterDataDict[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-table/scatter-table.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-table/scatter-table.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        FLOAT_PRECISION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-table/scatter-table.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"scatter-table\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-table/scatter-table.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-table/scatter-table.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onInsert\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-table/scatter-table.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onRemove\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-table/scatter-table.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        table\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MyTable\n\n                    \n                \n                \n                    \n                        Default value : new ScatterTable(this.id)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/scatter/scatter-table/scatter-table.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnDestroy} from '@angular/core';\nimport {ScatterService} from \"../scatter.service\";\nimport {Subject, takeUntil} from \"rxjs\";\nimport {MyTable} from \"../../shared/tables/table-interface\";\nimport {HotTableRegisterer} from \"@handsontable/angular\";\nimport Handsontable from \"handsontable\";\nimport {ScatterDataDict} from \"../scatter.service.util\";\nimport {MoonDataDict} from \"../../moon/moon.service.util\";\nimport {MyData} from \"../../shared/data/data.interface\";\n\n@Component({\n  selector: 'app-scatter-table',\n  templateUrl: './scatter-table.component.html',\n  styleUrls: ['./scatter-table.component.scss']\n})\nexport class ScatterTableComponent implements AfterViewInit, OnDestroy{\n  static FLOAT_PRECISION: number = 2;\n  id: string = \"scatter-table\";\n  table: MyTable = new ScatterTable(this.id);\n  colNames: string[] = [\"Longitude\", \"Latitude\", \"Distance\"];\n  dataSet: ScatterDataDict[];\n  private destroy$: Subject = new Subject();\n  constructor(private service: ScatterService) {\n    this.dataSet = this.service.getData();\n  }\n\n  ngAfterViewInit(): void {\n    this.service.data$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe((data: MyData) => {\n      this.dataSet = this.limitPrecision(this.service.getData(), ScatterTableComponent.FLOAT_PRECISION);\n      this.table.renderTable();\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  public onChange = (changes: any, source: any) => {\n    if (changes) {\n      this.service.setData(this.table.getData());\n    }\n  }\n\n  public onRemove = (index: number, amount: number) => {\n    this.service.removeRow(index, amount);\n  }\n\n  public onInsert = (index: number, amount: number) => {\n    this.service.addRow(index, amount);\n  }\n\n  private limitPrecision(data: ScatterDataDict[], precision: number): ScatterDataDict[] {\n    return data.map(\n      (row: ScatterDataDict) => {\n        return {\n          longitude: row.longitude ? parseFloat(row.longitude.toFixed(precision)) : row.longitude,\n          latitude: row.latitude ? parseFloat(row.latitude.toFixed(precision)) : row.latitude,\n          distance: row.distance ? parseFloat(row.distance.toFixed(precision)) : row.distance,\n        }\n      }\n    );\n  }\n}\n\nclass ScatterTable implements MyTable {\n  private readonly id: string;\n  private hotRegisterer = new HotTableRegisterer();\n\n  constructor(id: string) {\n    this.id = id;\n  }\n\n  getTable(): Handsontable {\n    return this.hotRegisterer.getInstance(this.id);\n  }\n\n  renderTable(): void {\n    this.getTable().render();\n  }\n\n  getData(): any[] {\n    return this.getTable().getSourceData();\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./scatter-table.component.scss\n                \n                .container {\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ScatterTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/settings/settings.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n\n\n            \n                styleUrls\n                ./settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/settings/settings.component.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/settings/settings.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, NgModule, OnInit} from '@angular/core';\nimport {MatSidenavModule} from \"@angular/material/sidenav\";\nimport {MatLegacyButtonModule as MatButtonModule} from \"@angular/material/legacy-button\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatLegacyListModule as MatListModule} from \"@angular/material/legacy-list\";\nimport {RouterLink, RouterLinkActive, RouterOutlet} from \"@angular/router\";\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\n@NgModule({\n  imports: [\n    MatSidenavModule,\n    MatButtonModule,\n    MatIconModule,\n    MatListModule,\n    RouterOutlet,\n    RouterLink,\n    RouterLinkActive,\n  ],\n  declarations: [\n    SettingsComponent,\n  ],\n})\nexport class SettingsModule {\n\n}\n\n    \n\n    \n        \n  \n    \n      Appearance\n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./settings.component.scss\n                \n                \nmat-drawer-container {\n  height: 100%;\n}\n\n.setting-container {\n  padding: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Appearance              '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsModule.html":{"url":"modules/SettingsModule.html","title":"module - SettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SettingsModule_imports\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nRouterLink\n\nRouterLink\n\nSettingsModule -->\n\nRouterLink->SettingsModule\n\n\n\n\n\nRouterLinkActive\n\nRouterLinkActive\n\nSettingsModule -->\n\nRouterLinkActive->SettingsModule\n\n\n\n\n\nRouterOutlet\n\nRouterOutlet\n\nSettingsModule -->\n\nRouterOutlet->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/settings/settings.component.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SettingsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RouterLink\n                        \n                        \n                            RouterLinkActive\n                        \n                        \n                            RouterOutlet\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {Component, NgModule, OnInit} from '@angular/core';\nimport {MatSidenavModule} from \"@angular/material/sidenav\";\nimport {MatLegacyButtonModule as MatButtonModule} from \"@angular/material/legacy-button\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatLegacyListModule as MatListModule} from \"@angular/material/legacy-list\";\nimport {RouterLink, RouterLinkActive, RouterOutlet} from \"@angular/router\";\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\n@NgModule({\n  imports: [\n    MatSidenavModule,\n    MatButtonModule,\n    MatIconModule,\n    MatListModule,\n    RouterOutlet,\n    RouterLink,\n    RouterLinkActive,\n  ],\n  declarations: [\n    SettingsComponent,\n  ],\n})\nexport class SettingsModule {\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SimpleDataButtonComponent.html":{"url":"components/SimpleDataButtonComponent.html","title":"component - SimpleDataButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SimpleDataButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/shared/simple-data-button/simple-data-button.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-simple-data-button\n            \n\n\n\n            \n                styleUrls\n                ./simple-data-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./simple-data-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dataReset\n                            \n                            \n                                modelReset\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                tableAddRow\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isDataRandom\n                            \n                            \n                                modelResetVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                tableUserActionObs$\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/shared/simple-data-button/simple-data-button.component.ts:14\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isDataRandom\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/tools/shared/simple-data-button/simple-data-button.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modelResetVisible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/tools/shared/simple-data-button/simple-data-button.component.ts:12\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        tableUserActionObs$\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tools/shared/simple-data-button/simple-data-button.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dataReset\n                        \n                    \n                \n            \n            \n                \ndataReset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/simple-data-button/simple-data-button.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modelReset\n                        \n                    \n                \n            \n            \n                \nmodelReset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/simple-data-button/simple-data-button.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/simple-data-button/simple-data-button.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tableAddRow\n                        \n                    \n                \n            \n            \n                \ntableAddRow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/simple-data-button/simple-data-button.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, NgModule, OnInit, Output} from '@angular/core';\nimport {TableAction} from \"../types/actions\";\nimport {MatLegacyButtonModule as MatButtonModule} from \"@angular/material/legacy-button\";\nimport {NgIf} from \"@angular/common\";\n\n@Component({\n  selector: 'app-simple-data-button',\n  templateUrl: './simple-data-button.component.html',\n  styleUrls: ['./simple-data-button.component.scss']\n})\nexport class SimpleDataButtonComponent implements OnInit {\n  @Input() modelResetVisible: boolean = false;\n  @Input() isDataRandom: boolean = false;\n  @Output() tableUserActionObs$: EventEmitter;\n\n  constructor() {\n    this.tableUserActionObs$ = new EventEmitter();\n  }\n\n  ngOnInit(): void {\n  }\n\n  tableAddRow() {\n    this.tableUserActionObs$.emit([{action: \"addRow\"}]);\n  }\n\n  dataReset() {\n    this.tableUserActionObs$.emit([{action: \"resetData\"}]);\n  }\n\n  modelReset() {\n    this.tableUserActionObs$.emit([{action: \"resetModel\"}]);\n  }\n}\n\n@NgModule({\n  imports: [MatButtonModule, NgIf],\n  declarations: [SimpleDataButtonComponent],\n  exports: [\n    SimpleDataButtonComponent\n  ]\n})\nexport class SimpleDataButtonModule {\n}\n\n    \n\n    \n        \n  Add Row\n  Reset Data\n  Random Data\n  Reset Model\n\n\n    \n\n    \n                \n                    ./simple-data-button.component.scss\n                \n                button {\n  margin-right: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Add Row  Reset Data  Random Data  Reset Model'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SimpleDataButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SimpleDataButtonModule.html":{"url":"modules/SimpleDataButtonModule.html","title":"module - SimpleDataButtonModule","body":"\n                   \n\n\n\n\n    Modules\n    SimpleDataButtonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SimpleDataButtonModule\n\n\n\ncluster_SimpleDataButtonModule_declarations\n\n\n\ncluster_SimpleDataButtonModule_exports\n\n\n\ncluster_SimpleDataButtonModule_imports\n\n\n\n\nSimpleDataButtonComponent\n\nSimpleDataButtonComponent\n\n\n\nSimpleDataButtonModule\n\nSimpleDataButtonModule\n\nSimpleDataButtonModule -->\n\nSimpleDataButtonComponent->SimpleDataButtonModule\n\n\n\n\n\nSimpleDataButtonComponent \n\nSimpleDataButtonComponent \n\nSimpleDataButtonComponent  -->\n\nSimpleDataButtonModule->SimpleDataButtonComponent \n\n\n\n\n\nNgIf\n\nNgIf\n\nSimpleDataButtonModule -->\n\nNgIf->SimpleDataButtonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tools/shared/simple-data-button/simple-data-button.component.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SimpleDataButtonComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NgIf\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SimpleDataButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {Component, EventEmitter, Input, NgModule, OnInit, Output} from '@angular/core';\nimport {TableAction} from \"../types/actions\";\nimport {MatLegacyButtonModule as MatButtonModule} from \"@angular/material/legacy-button\";\nimport {NgIf} from \"@angular/common\";\n\n@Component({\n  selector: 'app-simple-data-button',\n  templateUrl: './simple-data-button.component.html',\n  styleUrls: ['./simple-data-button.component.scss']\n})\nexport class SimpleDataButtonComponent implements OnInit {\n  @Input() modelResetVisible: boolean = false;\n  @Input() isDataRandom: boolean = false;\n  @Output() tableUserActionObs$: EventEmitter;\n\n  constructor() {\n    this.tableUserActionObs$ = new EventEmitter();\n  }\n\n  ngOnInit(): void {\n  }\n\n  tableAddRow() {\n    this.tableUserActionObs$.emit([{action: \"addRow\"}]);\n  }\n\n  dataReset() {\n    this.tableUserActionObs$.emit([{action: \"resetData\"}]);\n  }\n\n  modelReset() {\n    this.tableUserActionObs$.emit([{action: \"resetModel\"}]);\n  }\n}\n\n@NgModule({\n  imports: [MatButtonModule, NgIf],\n  declarations: [SimpleDataButtonComponent],\n  exports: [\n    SimpleDataButtonComponent\n  ]\n})\nexport class SimpleDataButtonModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SimpleGraphButtonComponent.html":{"url":"components/SimpleGraphButtonComponent.html","title":"component - SimpleGraphButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SimpleGraphButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/shared/simple-graph-button/simple-graph-button.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-simple-graph-button\n            \n\n\n\n            \n                styleUrls\n                ./simple-graph-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./simple-graph-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                saveGraphButton\n                            \n                            \n                                    \n                                saveGraphSpinner\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                resetGraphInfo\n                            \n                            \n                                saveGraph\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                chartUserActionObs$\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popupService: HonorCodePopupService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/shared/simple-graph-button/simple-graph-button.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popupService\n                                                  \n                                                        \n                                                                        HonorCodePopupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        chartUserActionObs$\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tools/shared/simple-graph-button/simple-graph-button.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/simple-graph-button/simple-graph-button.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetGraphInfo\n                        \n                    \n                \n            \n            \n                \nresetGraphInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/simple-graph-button/simple-graph-button.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveGraph\n                        \n                    \n                \n            \n            \n                \nsaveGraph()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/simple-graph-button/simple-graph-button.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        saveGraphButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatButton\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('saveGraphButton')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/tools/shared/simple-graph-button/simple-graph-button.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        saveGraphSpinner\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatProgressSpinner\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('saveGraphSpinner')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/tools/shared/simple-graph-button/simple-graph-button.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, EventEmitter, NgModule, Output, ViewChild} from '@angular/core';\nimport {ChartAction} from \"../types/actions\";\nimport {MatLegacyButtonModule as MatButtonModule} from \"@angular/material/legacy-button\";\nimport {MatProgressSpinner, MatProgressSpinnerModule} from \"@angular/material/progress-spinner\";\nimport {MatButton} from \"@angular/material/button\";\nimport {HonorCodePopupService} from \"../honor-code-popup/honor-code-popup.service\";\n\n@Component({\n  selector: 'app-simple-graph-button',\n  templateUrl: './simple-graph-button.component.html',\n  styleUrls: ['./simple-graph-button.component.scss']\n})\nexport class SimpleGraphButtonComponent implements AfterViewInit {\n  @ViewChild(\"saveGraphButton\") saveGraphButton!: MatButton;\n  @ViewChild(\"saveGraphSpinner\") saveGraphSpinner!: MatProgressSpinner;\n  @Output()\n  private chartUserActionObs$: EventEmitter;\n\n  constructor(private popupService: HonorCodePopupService) {\n    this.chartUserActionObs$ = new EventEmitter();\n\n  }\n\n  ngAfterViewInit(): void {\n    this.popupService.registerSaveGraphButton(this.saveGraphButton);\n    this.popupService.registerSaveGraphSpinner(this.saveGraphSpinner);\n  }\n\n\n  saveGraph() {\n    this.chartUserActionObs$.emit([{action: \"saveGraph\"}]);\n  }\n\n  resetGraphInfo() {\n    this.chartUserActionObs$.emit([{action: \"resetChartInfo\"}])\n  }\n\n}\n\n@NgModule({\n  imports: [MatButtonModule, MatProgressSpinnerModule],\n  exports: [\n    SimpleGraphButtonComponent\n  ],\n  declarations: [SimpleGraphButtonComponent]\n})\nexport class SimpleGraphButtonModule {\n}\n\n    \n\n    \n        \n  Save Graph\n  \n\nReset Graph Labels\n\n    \n\n    \n                \n                    ./simple-graph-button.component.scss\n                \n                button {\n  margin-right: 10px;\n}\n\nmat-spinner {\n  z-index: 10;\n  display: block;\n  position: absolute;\n  top: 10px;\n  left: 35%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Save Graph  Reset Graph Labels'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SimpleGraphButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SimpleGraphButtonModule.html":{"url":"modules/SimpleGraphButtonModule.html","title":"module - SimpleGraphButtonModule","body":"\n                   \n\n\n\n\n    Modules\n    SimpleGraphButtonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SimpleGraphButtonModule\n\n\n\ncluster_SimpleGraphButtonModule_exports\n\n\n\ncluster_SimpleGraphButtonModule_declarations\n\n\n\n\nSimpleGraphButtonComponent\n\nSimpleGraphButtonComponent\n\n\n\nSimpleGraphButtonModule\n\nSimpleGraphButtonModule\n\nSimpleGraphButtonModule -->\n\nSimpleGraphButtonComponent->SimpleGraphButtonModule\n\n\n\n\n\nSimpleGraphButtonComponent \n\nSimpleGraphButtonComponent \n\nSimpleGraphButtonComponent  -->\n\nSimpleGraphButtonModule->SimpleGraphButtonComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tools/shared/simple-graph-button/simple-graph-button.component.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SimpleGraphButtonComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SimpleGraphButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {AfterViewInit, Component, EventEmitter, NgModule, Output, ViewChild} from '@angular/core';\nimport {ChartAction} from \"../types/actions\";\nimport {MatLegacyButtonModule as MatButtonModule} from \"@angular/material/legacy-button\";\nimport {MatProgressSpinner, MatProgressSpinnerModule} from \"@angular/material/progress-spinner\";\nimport {MatButton} from \"@angular/material/button\";\nimport {HonorCodePopupService} from \"../honor-code-popup/honor-code-popup.service\";\n\n@Component({\n  selector: 'app-simple-graph-button',\n  templateUrl: './simple-graph-button.component.html',\n  styleUrls: ['./simple-graph-button.component.scss']\n})\nexport class SimpleGraphButtonComponent implements AfterViewInit {\n  @ViewChild(\"saveGraphButton\") saveGraphButton!: MatButton;\n  @ViewChild(\"saveGraphSpinner\") saveGraphSpinner!: MatProgressSpinner;\n  @Output()\n  private chartUserActionObs$: EventEmitter;\n\n  constructor(private popupService: HonorCodePopupService) {\n    this.chartUserActionObs$ = new EventEmitter();\n\n  }\n\n  ngAfterViewInit(): void {\n    this.popupService.registerSaveGraphButton(this.saveGraphButton);\n    this.popupService.registerSaveGraphSpinner(this.saveGraphSpinner);\n  }\n\n\n  saveGraph() {\n    this.chartUserActionObs$.emit([{action: \"saveGraph\"}]);\n  }\n\n  resetGraphInfo() {\n    this.chartUserActionObs$.emit([{action: \"resetChartInfo\"}])\n  }\n\n}\n\n@NgModule({\n  imports: [MatButtonModule, MatProgressSpinnerModule],\n  exports: [\n    SimpleGraphButtonComponent\n  ],\n  declarations: [SimpleGraphButtonComponent]\n})\nexport class SimpleGraphButtonModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SliderUtil.html":{"url":"classes/SliderUtil.html","title":"class - SliderUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SliderUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/shared/interface/input-slider/input-slider.component.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getSliderMax\n                            \n                            \n                                    Static\n                                getSliderMin\n                            \n                            \n                                    Static\n                                getSliderStep\n                            \n                            \n                                    Static\n                                inputToSlider\n                            \n                            \n                                    Private\n                                    Static\n                                myRound\n                            \n                            \n                                    Static\n                                sliderToInput\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getSliderMax\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSliderMax(max: string | number, isLog: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    max\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isLog\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getSliderMin\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSliderMin(min: string | number, isLog: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    min\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isLog\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getSliderStep\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSliderStep(min: string | number, max: string | number, step: number | string, isLog: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    min\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    max\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    step\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isLog\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        inputToSlider\n                        \n                    \n                \n            \n            \n                \n                    \n                    inputToSlider(input: string | number, isLog: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isLog\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        myRound\n                        \n                    \n                \n            \n            \n                \n                    \n                    myRound(value: number, precision: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    precision\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        sliderToInput\n                        \n                    \n                \n            \n            \n                \n                    \n                    sliderToInput($event: Event, isLog: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/shared/interface/input-slider/input-slider.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                            Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isLog\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {AfterViewInit, Component, EventEmitter, Input, OnDestroy, Output, ViewChild} from '@angular/core';\nimport {FormControl, Validators} from \"@angular/forms\";\nimport {debounceTime, Subject, takeUntil, throttleTime} from \"rxjs\";\nimport {MatInput} from \"@angular/material/input\";\n\n@Component({\n  selector: 'my-input-slider',\n  templateUrl: './input-slider.component.html',\n  styleUrls: ['./input-slider.component.scss'],\n})\nexport class InputSliderComponent implements OnDestroy, AfterViewInit {\n\n  @Input() minValue!: number;\n  @Input() maxValue!: number;\n  @Input() defaultValue!: number;\n  @Input() step!: number;\n  @Input() stepValue: number = 0.01;\n  @Input() isLog: boolean = false;\n  @Input() numOverride: boolean = false;\n  @Input() name!: string;\n  @Input() label!: string;\n  @Input() value$!: Subject;\n  @Output() value: EventEmitter = new EventEmitter();\n\n\n  @ViewChild(\"input\") inputChild!: MatInput;\n  protected sliderSubject: Subject = new Subject();\n  protected readonly SliderUtil = SliderUtil;\n  protected formControl!: FormControl;\n  private slider$ = this.sliderSubject.asObservable();\n  private destroy$ = new Subject();\n\n  constructor() {\n    this.formControl = new FormControl(\n      this.defaultValue,\n      [Validators.min(this.minValue), Validators.max(this.maxValue)],\n    );\n  }\n\n  ngAfterViewInit(): void {\n    this.formControl = new FormControl(\n      this.defaultValue,\n      [Validators.min(this.minValue), Validators.max(this.maxValue), Validators.required],\n    );\n    this.formControl.statusChanges.pipe(\n      takeUntil(this.destroy$),\n      debounceTime(2000)\n    ).subscribe(\n      (status) => {\n        if (status === \"INVALID\") {\n          if (this.formControl.hasError('min') && !this.numOverride) {\n            this.formControl.setValue(this.minValue);\n          } else if (this.formControl.hasError('max') && !this.numOverride) {\n            this.formControl.setValue(this.maxValue);\n          }\n        }\n      }\n    )\n    this.formControl.valueChanges.pipe(\n      takeUntil(this.destroy$),\n      throttleTime(25, undefined, {leading: false, trailing: true}),\n    ).subscribe(\n      (value) => {\n        this.valueChange(value);\n      });\n    this.slider$.pipe(\n      takeUntil(this.destroy$),\n      throttleTime(25, undefined, {leading: false, trailing: true}),\n    ).subscribe(\n      (value) => {\n        this.formControl.setValue(value);\n        this.valueChange(this.formControl.value);\n      });\n    this.value$?.pipe(\n      takeUntil(this.destroy$),\n    ).subscribe(\n      (value) => {\n        this.formControl.setValue(value);\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  valueChange(value: any) {\n    this.value.emit({key: this.name, value: value});\n  }\n}\n\nexport interface InputSliderValue {\n  key: string;\n  value: any;\n}\n\nclass SliderUtil {\n  public static inputToSlider(input: string | number, isLog: boolean) {\n    const value = typeof input === 'number' ? input : parseFloat(input);\n    if (isLog) {\n      return Math.log(value);\n    } else {\n      return value;\n    }\n  }\n\n  public static sliderToInput($event: Event, isLog: boolean) {\n    const slider = parseFloat(($event.target as HTMLInputElement).value);\n    if (isLog) {\n      return String(SliderUtil.myRound(Math.exp(slider), 2));\n    } else {\n      return String(SliderUtil.myRound(slider, 2));\n    }\n  }\n\n  public static getSliderMin(min: string | number, isLog: boolean) {\n    const minNum = typeof min === 'number' ? min : parseFloat(min);\n    return SliderUtil.inputToSlider(minNum, isLog);\n  }\n\n  public static getSliderMax(max: string | number, isLog: boolean) {\n    const maxNum = typeof max === 'number' ? max : parseFloat(max);\n    return SliderUtil.inputToSlider(maxNum, isLog);\n  }\n\n  public static getSliderStep(min: string | number, max: string | number, step: number | string, isLog: boolean): number {\n    const minNum = typeof min === 'number' ? min : parseFloat(min);\n    const maxNum = typeof max === 'number' ? max : parseFloat(max);\n    const stepNum = typeof step === 'number' ? step : parseFloat(step);\n    if (!isLog) {\n      return stepNum;\n    } else {\n      return ((Math.log(maxNum) - Math.log(minNum)) / ((maxNum - minNum) / stepNum))\n    }\n  }\n\n  private static myRound(value: number, precision: number) {\n    const multiplier = Math.pow(10, precision);\n    return Math.round(value * multiplier) / multiplier;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolsNavbarComponent.html":{"url":"components/ToolsNavbarComponent.html","title":"component - ToolsNavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToolsNavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/tools-navbar/tools-navbar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Sidenav with custom escape and backdrop click behavior\nContains menubar and router outlet to plotting tools\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tools-navbar\n            \n\n\n\n            \n                styleUrls\n                tools-navbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                tools-navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                toolsnav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/tools-navbar/tools-navbar.component.ts:41\n                \n            \n\n\n            \n                \n                    open the navigation bar toolsnav\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open\n                        \n                    \n                \n            \n            \n                \nopen()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/tools-navbar/tools-navbar.component.ts:34\n                \n            \n\n\n            \n                \n                    open the navigation bar toolsnav\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        toolsnav\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSidenav\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('toolsnav')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/tools-navbar/tools-navbar.component.ts:29\n                        \n                    \n\n            \n                \n                    Navigation bar for selecting tools\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, NgModule, ViewChild} from '@angular/core';\nimport {MatSidenav, MatSidenavModule} from '@angular/material/sidenav';\nimport {MenubarModule} from \"../menubar/menubar.component\";\nimport {AppRoutingModule} from \"../../app-routing.module\";\nimport {MatLegacyButtonModule as MatButtonModule} from \"@angular/material/legacy-button\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {CurveModule} from \"../../tools/curve/curve.module\";\nimport {MatLegacyListModule as MatListModule} from \"@angular/material/legacy-list\";\nimport {MoonModule} from \"../../tools/moon/moon.module\";\nimport {VenusModule} from \"../../tools/venus/venus.module\";\nimport {ScatterModule} from \"../../tools/scatter/scatter.module\";\nimport {DualModule} from \"../../tools/dual/dual.module\";\n\n/**\n * Sidenav with custom escape and backdrop click behavior\n *\n * Contains menubar and router outlet to plotting tools\n *\n * */\n@Component({\n  selector: 'app-tools-navbar',\n  templateUrl: 'tools-navbar.component.html',\n  styleUrls: ['tools-navbar.component.scss'],\n})\nexport class ToolsNavbarComponent {\n  /**\n   * Navigation bar for selecting tools\n   */\n  @ViewChild('toolsnav') toolsnav!: MatSidenav;\n\n  /**\n   * open the navigation bar {@link toolsnav}\n   */\n  open() {\n    this.toolsnav.open();\n  }\n\n  /**\n   * open the navigation bar {@link toolsnav}\n   */\n  close() {\n    this.toolsnav.close();\n  }\n\n}\n\n/**\n * Encapsulate {@link ToolsNavbarComponent}\n */\n@NgModule({\n  imports: [\n    MenubarModule,\n    AppRoutingModule,\n    MatSidenavModule,\n    MatButtonModule,\n    MatIconModule,\n    MatListModule,\n    CurveModule,\n    MoonModule,\n    VenusModule,\n    ScatterModule,\n    DualModule,\n  ],\n  declarations: [\n    ToolsNavbarComponent,\n  ],\n  exports: [ToolsNavbarComponent]\n})\nexport class ToolsNavbarModule {\n}\n\n    \n\n    \n        \n  \n    Select a Tool\n    \n      Curve\n      Moon\n      Venus\n      Variable\n      Scatter\n      Spectrum\n      Dual\n      Gravity\n      Radio\n      Cluster Pro Plus\n      Pulsar\n      Transient\n    \n  \n\n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    tools-navbar.component.scss\n                \n                .tool-sidenav-container {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n}\n\nmat-nav-list {\n  width: 200px;\n}\n\n.tool-container {\n  padding: 20px 100px 20px 100px;\n  height: 100%;\n  width: 100%;\n}\n\n.mat-list-item-content {\n  text-align: center;\n}\n\n\n.prompt {\n  font-size: large;\n  font-style: italic;\n  text-align: center;\n  margin-top: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Select a Tool          Curve      Moon      Venus      Variable      Scatter      Spectrum      Dual      Gravity      Radio      Cluster Pro Plus      Pulsar      Transient                  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolsNavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ToolsNavbarModule.html":{"url":"modules/ToolsNavbarModule.html","title":"module - ToolsNavbarModule","body":"\n                   \n\n\n\n\n    Modules\n    ToolsNavbarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ToolsNavbarModule\n\n\n\ncluster_ToolsNavbarModule_exports\n\n\n\ncluster_ToolsNavbarModule_imports\n\n\n\ncluster_ToolsNavbarModule_declarations\n\n\n\n\nToolsNavbarComponent\n\nToolsNavbarComponent\n\n\n\nToolsNavbarModule\n\nToolsNavbarModule\n\nToolsNavbarModule -->\n\nToolsNavbarComponent->ToolsNavbarModule\n\n\n\n\n\nToolsNavbarComponent \n\nToolsNavbarComponent \n\nToolsNavbarComponent  -->\n\nToolsNavbarModule->ToolsNavbarComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nToolsNavbarModule -->\n\nAppRoutingModule->ToolsNavbarModule\n\n\n\n\n\nCurveModule\n\nCurveModule\n\nToolsNavbarModule -->\n\nCurveModule->ToolsNavbarModule\n\n\n\n\n\nDualModule\n\nDualModule\n\nToolsNavbarModule -->\n\nDualModule->ToolsNavbarModule\n\n\n\n\n\nMenubarModule\n\nMenubarModule\n\nToolsNavbarModule -->\n\nMenubarModule->ToolsNavbarModule\n\n\n\n\n\nMoonModule\n\nMoonModule\n\nToolsNavbarModule -->\n\nMoonModule->ToolsNavbarModule\n\n\n\n\n\nScatterModule\n\nScatterModule\n\nToolsNavbarModule -->\n\nScatterModule->ToolsNavbarModule\n\n\n\n\n\nVenusModule\n\nVenusModule\n\nToolsNavbarModule -->\n\nVenusModule->ToolsNavbarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/tools-navbar/tools-navbar.component.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Encapsulate ToolsNavbarComponent\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ToolsNavbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CurveModule\n                        \n                        \n                            DualModule\n                        \n                        \n                            MenubarModule\n                        \n                        \n                            MoonModule\n                        \n                        \n                            ScatterModule\n                        \n                        \n                            VenusModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ToolsNavbarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {Component, NgModule, ViewChild} from '@angular/core';\nimport {MatSidenav, MatSidenavModule} from '@angular/material/sidenav';\nimport {MenubarModule} from \"../menubar/menubar.component\";\nimport {AppRoutingModule} from \"../../app-routing.module\";\nimport {MatLegacyButtonModule as MatButtonModule} from \"@angular/material/legacy-button\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {CurveModule} from \"../../tools/curve/curve.module\";\nimport {MatLegacyListModule as MatListModule} from \"@angular/material/legacy-list\";\nimport {MoonModule} from \"../../tools/moon/moon.module\";\nimport {VenusModule} from \"../../tools/venus/venus.module\";\nimport {ScatterModule} from \"../../tools/scatter/scatter.module\";\nimport {DualModule} from \"../../tools/dual/dual.module\";\n\n/**\n * Sidenav with custom escape and backdrop click behavior\n *\n * Contains menubar and router outlet to plotting tools\n *\n * */\n@Component({\n  selector: 'app-tools-navbar',\n  templateUrl: 'tools-navbar.component.html',\n  styleUrls: ['tools-navbar.component.scss'],\n})\nexport class ToolsNavbarComponent {\n  /**\n   * Navigation bar for selecting tools\n   */\n  @ViewChild('toolsnav') toolsnav!: MatSidenav;\n\n  /**\n   * open the navigation bar {@link toolsnav}\n   */\n  open() {\n    this.toolsnav.open();\n  }\n\n  /**\n   * open the navigation bar {@link toolsnav}\n   */\n  close() {\n    this.toolsnav.close();\n  }\n\n}\n\n/**\n * Encapsulate {@link ToolsNavbarComponent}\n */\n@NgModule({\n  imports: [\n    MenubarModule,\n    AppRoutingModule,\n    MatSidenavModule,\n    MatButtonModule,\n    MatIconModule,\n    MatListModule,\n    CurveModule,\n    MoonModule,\n    VenusModule,\n    ScatterModule,\n    DualModule,\n  ],\n  declarations: [\n    ToolsNavbarComponent,\n  ],\n  exports: [ToolsNavbarComponent]\n})\nexport class ToolsNavbarModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VenusChartFormComponent.html":{"url":"components/VenusChartFormComponent.html","title":"component - VenusChartFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VenusChartFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/venus/venus-chart-form/venus-chart-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-venus-chart-form\n            \n\n\n\n            \n                styleUrls\n                ./venus-chart-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./venus-chart-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                formGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: VenusService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/venus/venus-chart-form/venus-chart-form.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        VenusService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus-chart-form/venus-chart-form.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus-chart-form/venus-chart-form.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus-chart-form/venus-chart-form.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnDestroy} from '@angular/core';\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {debounceTime, Subject, takeUntil} from \"rxjs\";\nimport {VenusService} from \"../../venus/venus.service\";\n\n@Component({\n  selector: 'app-venus-chart-form',\n  templateUrl: './venus-chart-form.component.html',\n  styleUrls: ['./venus-chart-form.component.scss']\n})\nexport class VenusChartFormComponent implements OnDestroy {\n  formGroup!: FormGroup;\n  private destroy$: Subject = new Subject();\n\n  constructor(private service: VenusService) {\n    this.service.chartInfo$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(info => {\n      this.formGroup = new FormGroup({\n        chartTitle: new FormControl(this.service.getChartTitle()),\n        dataLabel: new FormControl(this.service.getDataLabel()),\n        xAxisLabel: new FormControl(this.service.getXAxisLabel()),\n        yAxisLabel: new FormControl(this.service.getYAxisLabel()),\n      })\n      this.formGroup.controls['chartTitle'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(title => {\n        this.service.setChartTitle(title);\n      });\n      this.formGroup.controls['dataLabel'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(labels => {\n        this.service.setDataLabel(labels);\n      });\n      this.formGroup.controls['xAxisLabel'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(label => {\n        this.service.setXAxisLabel(label);\n      });\n      this.formGroup.controls['yAxisLabel'].valueChanges.pipe(\n        debounceTime(200),\n      ).subscribe(label => {\n        this.service.setYAxisLabel(label);\n      });\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        Title\n        \n      \n    \n    \n      \n        Data\n        \n      \n    \n  \n  \n    \n      \n        X Axis\n        \n      \n    \n    \n      \n        Y Axis\n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./venus-chart-form.component.scss\n                \n                mat-form-field {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Title                                    Data                                        X Axis                                    Y Axis                    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VenusChartFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VenusChartInfo.html":{"url":"classes/VenusChartInfo.html","title":"class - VenusChartInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VenusChartInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/venus/venus.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ChartInfo\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chartTitle\n                            \n                            \n                                    Private\n                                dataLabel\n                            \n                            \n                                    Private\n                                xAxisLabel\n                            \n                            \n                                    Private\n                                yAxisLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getChartTitle\n                            \n                            \n                                getDataLabel\n                            \n                            \n                                    Static\n                                getDefaultChartInfo\n                            \n                            \n                                getStorageObject\n                            \n                            \n                                getXAxisLabel\n                            \n                            \n                                getYAxisLabel\n                            \n                            \n                                setChartTitle\n                            \n                            \n                                setDataLabel\n                            \n                            \n                                setStorageObject\n                            \n                            \n                                setXAxisLabel\n                            \n                            \n                                setYAxisLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/venus/venus.service.util.ts:81\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus.service.util.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus.service.util.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        xAxisLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus.service.util.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        yAxisLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus.service.util.ts:81\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getChartTitle\n                        \n                    \n                \n            \n            \n                \ngetChartTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataLabel\n                        \n                    \n                \n            \n            \n                \ngetDataLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getDefaultChartInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { chartTitle: string; dataLabel: string; xAxisLabel: string; yAxisLabel: string; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStorageObject\n                        \n                    \n                \n            \n            \n                \ngetStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         VenusChartInfoStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getXAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetXAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getYAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetYAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setChartTitle\n                        \n                    \n                \n            \n            \n                \nsetChartTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDataLabel\n                        \n                    \n                \n            \n            \n                \nsetDataLabel(data: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStorageObject\n                        \n                    \n                \n            \n            \n                \nsetStorageObject(storageObject: VenusChartInfoStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storageObject\n                                    \n                                                VenusChartInfoStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setXAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetXAxisLabel(xAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    xAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setYAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetYAxisLabel(yAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    yAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {rad} from \"../shared/data/utils\";\n\nexport interface VenusDataDict {\n  diameter: number | null;\n  phase: number | null;\n}\n\n\nexport class VenusData implements MyData {\n  private dataDict: VenusDataDict[];\n\n  constructor() {\n    this.dataDict = VenusData.getDefaultData();\n  }\n\n  addRow(index: number, amount: number): void {\n    if (index > 0) {\n      for (let i = 0; i  {\n        return entry.diameter !== null && entry.phase !== null;\n      }\n    ).map(\n      (entry: VenusDataDict) => {\n        return [entry.diameter, entry.phase];\n      });\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: VenusDataDict[]): void {\n    this.dataDict = data;\n  }\n\n  public static getDefaultData(): VenusDataDict[] {\n    return [\n      {diameter: 15, phase: 0.7},\n      {diameter: 30, phase: 0.53},\n      {diameter: 45, phase: 0.27},\n      {diameter: 60, phase: 0},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n    ];\n  }\n}\n\n\nexport interface VenusChartInfoStorageObject {\n  chartTitle: string;\n  dataLabel: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n}\n\n\nexport class VenusChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private dataLabel: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n\n\n  constructor() {\n    this.chartTitle = VenusChartInfo.getDefaultChartInfo().chartTitle;\n    this.dataLabel = VenusChartInfo.getDefaultChartInfo().dataLabel;\n    this.xAxisLabel = VenusChartInfo.getDefaultChartInfo().xAxisLabel;\n    this.yAxisLabel = VenusChartInfo.getDefaultChartInfo().yAxisLabel;\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabel;\n  }\n\n  getStorageObject(): VenusChartInfoStorageObject {\n    return {\n      chartTitle: this.chartTitle,\n      dataLabel: this.dataLabel,\n      xAxisLabel: this.xAxisLabel,\n      yAxisLabel: this.yAxisLabel,\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    this.dataLabel = data;\n  }\n\n  setStorageObject(storageObject: VenusChartInfoStorageObject): void {\n    this.chartTitle = storageObject.chartTitle;\n    this.dataLabel = storageObject.dataLabel;\n    this.xAxisLabel = storageObject.xAxisLabel;\n    this.yAxisLabel = storageObject.yAxisLabel;\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.xAxisLabel = xAxis;\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.yAxisLabel = yAxis;\n  }\n\n  public static getDefaultChartInfo() {\n    return {\n      chartTitle: \"Title\",\n      dataLabel: \"Data\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n    };\n  }\n}\n\n\nexport class VenusStorage implements MyStorage {\n  private readonly dataKey: string = \"venusData\";\n  private readonly chartInfoKey: string = \"venusChartInfo\";\n  getChartInfo(): VenusChartInfoStorageObject {\n    if (localStorage.getItem(this.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(this.chartInfoKey) as string);\n    } else {\n      this.saveChartInfo(VenusChartInfo.getDefaultChartInfo());\n      return VenusChartInfo.getDefaultChartInfo();\n    }\n\n  }\n\n  getData(): VenusDataDict[] {\n    if (localStorage.getItem(this.dataKey)) {\n      return JSON.parse(localStorage.getItem(this.dataKey) as string);\n    } else {\n      this.saveData(VenusData.getDefaultData());\n      return VenusData.getDefaultData();\n    }\n  }\n\n  getInterface(): any {\n  }\n\n  resetChartInfo(): void {\n    this.saveChartInfo(VenusChartInfo.getDefaultChartInfo());\n  }\n\n  resetData(): void {\n    this.saveData(VenusData.getDefaultData());\n  }\n\n  resetInterface(): void {\n  }\n\n  saveChartInfo(chartInfo: VenusChartInfoStorageObject): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(chartInfo));\n  }\n\n  saveData(data: VenusDataDict[]): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: any): void {\n  }\n\n}\n\n\nexport class VenusModels {\n  // Angular diameter of Venus as its closest in arc-seconds.\n  private static maxA = 60;\n  // Max angular separation between Venus and Sun in radians.\n  private static beta = rad(45);\n  // Diameter of Venus in km\n  private static DV = 1.210e4;\n  // Distance from Sun to Earth in km\n  private static dE = 1.496e8;\n  // Distance from Sun to Venus in km\n  private static dV = 1.082e8;\n\n  /**\n   *  This function generates the data points for the Geocentric model.\n   *  @param start:   The start point of data points.\n   *  @param end:     The end point of data points.\n   *  @param x:       The parameter x that represents the ratio of distance of Sun to Venus versus the\n   *                  distance of Sun to Earth.\n   *  @param steps:   The number of data points to be generated. Default is 500.\n   *  @returns {Array}\n   */\n  public static geocentric(start: number, end: number, x: number, steps: number = 500): number[][] {\n    const data: number[][] = [];\n    const step = (end - start) / steps;\n\n    let a = start;\n    for (let i = 0; i  0 ? (1 + cosPhi) / 2 : 0,\n        // How is below different from above????\n        // y: Math.max((1 + cosPhi) / 2, 0) // this doesn't work. I'm so confused\n      ]);\n      a += step;\n    }\n    return data;\n  }\n\n  /**\n   *  This function generates the data points for the Heliocentric model.\n   *  @param start:   The start point of data points.\n   *  @param end:     The end point of data points.\n   *  @param steps:   The number of data points to be generated. Default is 500.\n   *  @returns {Array}\n   */\n  public static heliocentric(start: number, end: number, steps: number = 500): number[][] {\n    const data: number[][] = [];\n    const step = (end - start) / steps;\n\n    let a = start;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VenusChartInfoStorageObject.html":{"url":"interfaces/VenusChartInfoStorageObject.html","title":"interface - VenusChartInfoStorageObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VenusChartInfoStorageObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/venus/venus.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            chartTitle\n                                        \n                                \n                                \n                                        \n                                            dataLabel\n                                        \n                                \n                                \n                                        \n                                            xAxisLabel\n                                        \n                                \n                                \n                                        \n                                            yAxisLabel\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chartTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chartTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dataLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xAxisLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        xAxisLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yAxisLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        yAxisLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {rad} from \"../shared/data/utils\";\n\nexport interface VenusDataDict {\n  diameter: number | null;\n  phase: number | null;\n}\n\n\nexport class VenusData implements MyData {\n  private dataDict: VenusDataDict[];\n\n  constructor() {\n    this.dataDict = VenusData.getDefaultData();\n  }\n\n  addRow(index: number, amount: number): void {\n    if (index > 0) {\n      for (let i = 0; i  {\n        return entry.diameter !== null && entry.phase !== null;\n      }\n    ).map(\n      (entry: VenusDataDict) => {\n        return [entry.diameter, entry.phase];\n      });\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: VenusDataDict[]): void {\n    this.dataDict = data;\n  }\n\n  public static getDefaultData(): VenusDataDict[] {\n    return [\n      {diameter: 15, phase: 0.7},\n      {diameter: 30, phase: 0.53},\n      {diameter: 45, phase: 0.27},\n      {diameter: 60, phase: 0},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n    ];\n  }\n}\n\n\nexport interface VenusChartInfoStorageObject {\n  chartTitle: string;\n  dataLabel: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n}\n\n\nexport class VenusChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private dataLabel: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n\n\n  constructor() {\n    this.chartTitle = VenusChartInfo.getDefaultChartInfo().chartTitle;\n    this.dataLabel = VenusChartInfo.getDefaultChartInfo().dataLabel;\n    this.xAxisLabel = VenusChartInfo.getDefaultChartInfo().xAxisLabel;\n    this.yAxisLabel = VenusChartInfo.getDefaultChartInfo().yAxisLabel;\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabel;\n  }\n\n  getStorageObject(): VenusChartInfoStorageObject {\n    return {\n      chartTitle: this.chartTitle,\n      dataLabel: this.dataLabel,\n      xAxisLabel: this.xAxisLabel,\n      yAxisLabel: this.yAxisLabel,\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    this.dataLabel = data;\n  }\n\n  setStorageObject(storageObject: VenusChartInfoStorageObject): void {\n    this.chartTitle = storageObject.chartTitle;\n    this.dataLabel = storageObject.dataLabel;\n    this.xAxisLabel = storageObject.xAxisLabel;\n    this.yAxisLabel = storageObject.yAxisLabel;\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.xAxisLabel = xAxis;\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.yAxisLabel = yAxis;\n  }\n\n  public static getDefaultChartInfo() {\n    return {\n      chartTitle: \"Title\",\n      dataLabel: \"Data\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n    };\n  }\n}\n\n\nexport class VenusStorage implements MyStorage {\n  private readonly dataKey: string = \"venusData\";\n  private readonly chartInfoKey: string = \"venusChartInfo\";\n  getChartInfo(): VenusChartInfoStorageObject {\n    if (localStorage.getItem(this.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(this.chartInfoKey) as string);\n    } else {\n      this.saveChartInfo(VenusChartInfo.getDefaultChartInfo());\n      return VenusChartInfo.getDefaultChartInfo();\n    }\n\n  }\n\n  getData(): VenusDataDict[] {\n    if (localStorage.getItem(this.dataKey)) {\n      return JSON.parse(localStorage.getItem(this.dataKey) as string);\n    } else {\n      this.saveData(VenusData.getDefaultData());\n      return VenusData.getDefaultData();\n    }\n  }\n\n  getInterface(): any {\n  }\n\n  resetChartInfo(): void {\n    this.saveChartInfo(VenusChartInfo.getDefaultChartInfo());\n  }\n\n  resetData(): void {\n    this.saveData(VenusData.getDefaultData());\n  }\n\n  resetInterface(): void {\n  }\n\n  saveChartInfo(chartInfo: VenusChartInfoStorageObject): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(chartInfo));\n  }\n\n  saveData(data: VenusDataDict[]): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: any): void {\n  }\n\n}\n\n\nexport class VenusModels {\n  // Angular diameter of Venus as its closest in arc-seconds.\n  private static maxA = 60;\n  // Max angular separation between Venus and Sun in radians.\n  private static beta = rad(45);\n  // Diameter of Venus in km\n  private static DV = 1.210e4;\n  // Distance from Sun to Earth in km\n  private static dE = 1.496e8;\n  // Distance from Sun to Venus in km\n  private static dV = 1.082e8;\n\n  /**\n   *  This function generates the data points for the Geocentric model.\n   *  @param start:   The start point of data points.\n   *  @param end:     The end point of data points.\n   *  @param x:       The parameter x that represents the ratio of distance of Sun to Venus versus the\n   *                  distance of Sun to Earth.\n   *  @param steps:   The number of data points to be generated. Default is 500.\n   *  @returns {Array}\n   */\n  public static geocentric(start: number, end: number, x: number, steps: number = 500): number[][] {\n    const data: number[][] = [];\n    const step = (end - start) / steps;\n\n    let a = start;\n    for (let i = 0; i  0 ? (1 + cosPhi) / 2 : 0,\n        // How is below different from above????\n        // y: Math.max((1 + cosPhi) / 2, 0) // this doesn't work. I'm so confused\n      ]);\n      a += step;\n    }\n    return data;\n  }\n\n  /**\n   *  This function generates the data points for the Heliocentric model.\n   *  @param start:   The start point of data points.\n   *  @param end:     The end point of data points.\n   *  @param steps:   The number of data points to be generated. Default is 500.\n   *  @returns {Array}\n   */\n  public static heliocentric(start: number, end: number, steps: number = 500): number[][] {\n    const data: number[][] = [];\n    const step = (end - start) / steps;\n\n    let a = start;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VenusComponent.html":{"url":"components/VenusComponent.html","title":"component - VenusComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VenusComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/venus/venus/venus.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-venus\n            \n\n\n\n            \n                styleUrls\n                ./venus.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./venus.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                actionHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: VenusService, honorCodeService: HonorCodePopupService, chartService: HonorCodeChartService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/venus/venus/venus.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        VenusService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        honorCodeService\n                                                  \n                                                        \n                                                                        HonorCodePopupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chartService\n                                                  \n                                                        \n                                                                        HonorCodeChartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        actionHandler\n                        \n                    \n                \n            \n            \n                \nactionHandler(actions: ChartAction[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus/venus.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    actions\n                                    \n                                                ChartAction[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {ChartAction} from \"../../shared/types/actions\";\nimport {VenusService} from \"../venus.service\";\nimport {HonorCodePopupService} from \"../../shared/honor-code-popup/honor-code-popup.service\";\nimport {HonorCodeChartService} from \"../../shared/honor-code-popup/honor-code-chart.service\";\n\n@Component({\n  selector: 'app-venus',\n  templateUrl: './venus.component.html',\n  styleUrls: ['./venus.component.scss']\n})\nexport class VenusComponent {\n\n  constructor(private service: VenusService,\n              private honorCodeService: HonorCodePopupService,\n              private chartService: HonorCodeChartService) {\n  }\n\n  actionHandler(actions: ChartAction[]) {\n    actions.forEach((action) => {\n      if (action.action === \"addRow\") {\n        this.service.addRow(-1, 1);\n      } else if (action.action === \"saveGraph\") {\n        this.honorCodeService.honored().subscribe((name: string) => {\n          this.chartService.saveImageHighChartOffline(this.service.getHighChart(), \"venus\", name);\n        })\n      } else if (action.action === \"resetData\") {\n        this.service.resetData();\n      } else if (action.action === \"resetChartInfo\") {\n        this.service.resetChartInfo();\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n            \n    \n    \n      \n      \n    \n  \n  \n    \n            \n    \n    \n            \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./venus.component.scss\n                \n                .container-row {\n  height: 80%;\n  padding: 20px 100px 20px 100px;\n  width: 100%;\n}\n\n.col-4, .col-8 {\n  display: flex;\n  flex-flow: column;\n}\n\n.data-form-row, data-button-row, chart-form-row, chart-button-row {\n  height: fit-content;\n  flex: 0 1 auto;\n}\n\n.data-table-row, .chart-row {\n  flex: 1 1 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VenusComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VenusData.html":{"url":"classes/VenusData.html","title":"class - VenusData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VenusData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/venus/venus.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyData\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dataDict\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRow\n                            \n                            \n                                getData\n                            \n                            \n                                getDataArray\n                            \n                            \n                                    Static\n                                getDefaultData\n                            \n                            \n                                removeRow\n                            \n                            \n                                setData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/venus/venus.service.util.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataDict\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VenusDataDict[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus.service.util.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRow\n                        \n                    \n                \n            \n            \n                \naddRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         VenusDataDict[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataArray\n                        \n                    \n                \n            \n            \n                \ngetDataArray()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     [][]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getDefaultData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         VenusDataDict[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRow\n                        \n                    \n                \n            \n            \n                \nremoveRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setData\n                        \n                    \n                \n            \n            \n                \nsetData(data: VenusDataDict[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                VenusDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {rad} from \"../shared/data/utils\";\n\nexport interface VenusDataDict {\n  diameter: number | null;\n  phase: number | null;\n}\n\n\nexport class VenusData implements MyData {\n  private dataDict: VenusDataDict[];\n\n  constructor() {\n    this.dataDict = VenusData.getDefaultData();\n  }\n\n  addRow(index: number, amount: number): void {\n    if (index > 0) {\n      for (let i = 0; i  {\n        return entry.diameter !== null && entry.phase !== null;\n      }\n    ).map(\n      (entry: VenusDataDict) => {\n        return [entry.diameter, entry.phase];\n      });\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: VenusDataDict[]): void {\n    this.dataDict = data;\n  }\n\n  public static getDefaultData(): VenusDataDict[] {\n    return [\n      {diameter: 15, phase: 0.7},\n      {diameter: 30, phase: 0.53},\n      {diameter: 45, phase: 0.27},\n      {diameter: 60, phase: 0},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n    ];\n  }\n}\n\n\nexport interface VenusChartInfoStorageObject {\n  chartTitle: string;\n  dataLabel: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n}\n\n\nexport class VenusChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private dataLabel: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n\n\n  constructor() {\n    this.chartTitle = VenusChartInfo.getDefaultChartInfo().chartTitle;\n    this.dataLabel = VenusChartInfo.getDefaultChartInfo().dataLabel;\n    this.xAxisLabel = VenusChartInfo.getDefaultChartInfo().xAxisLabel;\n    this.yAxisLabel = VenusChartInfo.getDefaultChartInfo().yAxisLabel;\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabel;\n  }\n\n  getStorageObject(): VenusChartInfoStorageObject {\n    return {\n      chartTitle: this.chartTitle,\n      dataLabel: this.dataLabel,\n      xAxisLabel: this.xAxisLabel,\n      yAxisLabel: this.yAxisLabel,\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    this.dataLabel = data;\n  }\n\n  setStorageObject(storageObject: VenusChartInfoStorageObject): void {\n    this.chartTitle = storageObject.chartTitle;\n    this.dataLabel = storageObject.dataLabel;\n    this.xAxisLabel = storageObject.xAxisLabel;\n    this.yAxisLabel = storageObject.yAxisLabel;\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.xAxisLabel = xAxis;\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.yAxisLabel = yAxis;\n  }\n\n  public static getDefaultChartInfo() {\n    return {\n      chartTitle: \"Title\",\n      dataLabel: \"Data\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n    };\n  }\n}\n\n\nexport class VenusStorage implements MyStorage {\n  private readonly dataKey: string = \"venusData\";\n  private readonly chartInfoKey: string = \"venusChartInfo\";\n  getChartInfo(): VenusChartInfoStorageObject {\n    if (localStorage.getItem(this.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(this.chartInfoKey) as string);\n    } else {\n      this.saveChartInfo(VenusChartInfo.getDefaultChartInfo());\n      return VenusChartInfo.getDefaultChartInfo();\n    }\n\n  }\n\n  getData(): VenusDataDict[] {\n    if (localStorage.getItem(this.dataKey)) {\n      return JSON.parse(localStorage.getItem(this.dataKey) as string);\n    } else {\n      this.saveData(VenusData.getDefaultData());\n      return VenusData.getDefaultData();\n    }\n  }\n\n  getInterface(): any {\n  }\n\n  resetChartInfo(): void {\n    this.saveChartInfo(VenusChartInfo.getDefaultChartInfo());\n  }\n\n  resetData(): void {\n    this.saveData(VenusData.getDefaultData());\n  }\n\n  resetInterface(): void {\n  }\n\n  saveChartInfo(chartInfo: VenusChartInfoStorageObject): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(chartInfo));\n  }\n\n  saveData(data: VenusDataDict[]): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: any): void {\n  }\n\n}\n\n\nexport class VenusModels {\n  // Angular diameter of Venus as its closest in arc-seconds.\n  private static maxA = 60;\n  // Max angular separation between Venus and Sun in radians.\n  private static beta = rad(45);\n  // Diameter of Venus in km\n  private static DV = 1.210e4;\n  // Distance from Sun to Earth in km\n  private static dE = 1.496e8;\n  // Distance from Sun to Venus in km\n  private static dV = 1.082e8;\n\n  /**\n   *  This function generates the data points for the Geocentric model.\n   *  @param start:   The start point of data points.\n   *  @param end:     The end point of data points.\n   *  @param x:       The parameter x that represents the ratio of distance of Sun to Venus versus the\n   *                  distance of Sun to Earth.\n   *  @param steps:   The number of data points to be generated. Default is 500.\n   *  @returns {Array}\n   */\n  public static geocentric(start: number, end: number, x: number, steps: number = 500): number[][] {\n    const data: number[][] = [];\n    const step = (end - start) / steps;\n\n    let a = start;\n    for (let i = 0; i  0 ? (1 + cosPhi) / 2 : 0,\n        // How is below different from above????\n        // y: Math.max((1 + cosPhi) / 2, 0) // this doesn't work. I'm so confused\n      ]);\n      a += step;\n    }\n    return data;\n  }\n\n  /**\n   *  This function generates the data points for the Heliocentric model.\n   *  @param start:   The start point of data points.\n   *  @param end:     The end point of data points.\n   *  @param steps:   The number of data points to be generated. Default is 500.\n   *  @returns {Array}\n   */\n  public static heliocentric(start: number, end: number, steps: number = 500): number[][] {\n    const data: number[][] = [];\n    const step = (end - start) / steps;\n\n    let a = start;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VenusDataDict.html":{"url":"interfaces/VenusDataDict.html","title":"interface - VenusDataDict","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VenusDataDict\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/venus/venus.service.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            diameter\n                                        \n                                \n                                \n                                        \n                                            phase\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        diameter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        diameter:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phase\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phase:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {rad} from \"../shared/data/utils\";\n\nexport interface VenusDataDict {\n  diameter: number | null;\n  phase: number | null;\n}\n\n\nexport class VenusData implements MyData {\n  private dataDict: VenusDataDict[];\n\n  constructor() {\n    this.dataDict = VenusData.getDefaultData();\n  }\n\n  addRow(index: number, amount: number): void {\n    if (index > 0) {\n      for (let i = 0; i  {\n        return entry.diameter !== null && entry.phase !== null;\n      }\n    ).map(\n      (entry: VenusDataDict) => {\n        return [entry.diameter, entry.phase];\n      });\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: VenusDataDict[]): void {\n    this.dataDict = data;\n  }\n\n  public static getDefaultData(): VenusDataDict[] {\n    return [\n      {diameter: 15, phase: 0.7},\n      {diameter: 30, phase: 0.53},\n      {diameter: 45, phase: 0.27},\n      {diameter: 60, phase: 0},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n    ];\n  }\n}\n\n\nexport interface VenusChartInfoStorageObject {\n  chartTitle: string;\n  dataLabel: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n}\n\n\nexport class VenusChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private dataLabel: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n\n\n  constructor() {\n    this.chartTitle = VenusChartInfo.getDefaultChartInfo().chartTitle;\n    this.dataLabel = VenusChartInfo.getDefaultChartInfo().dataLabel;\n    this.xAxisLabel = VenusChartInfo.getDefaultChartInfo().xAxisLabel;\n    this.yAxisLabel = VenusChartInfo.getDefaultChartInfo().yAxisLabel;\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabel;\n  }\n\n  getStorageObject(): VenusChartInfoStorageObject {\n    return {\n      chartTitle: this.chartTitle,\n      dataLabel: this.dataLabel,\n      xAxisLabel: this.xAxisLabel,\n      yAxisLabel: this.yAxisLabel,\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    this.dataLabel = data;\n  }\n\n  setStorageObject(storageObject: VenusChartInfoStorageObject): void {\n    this.chartTitle = storageObject.chartTitle;\n    this.dataLabel = storageObject.dataLabel;\n    this.xAxisLabel = storageObject.xAxisLabel;\n    this.yAxisLabel = storageObject.yAxisLabel;\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.xAxisLabel = xAxis;\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.yAxisLabel = yAxis;\n  }\n\n  public static getDefaultChartInfo() {\n    return {\n      chartTitle: \"Title\",\n      dataLabel: \"Data\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n    };\n  }\n}\n\n\nexport class VenusStorage implements MyStorage {\n  private readonly dataKey: string = \"venusData\";\n  private readonly chartInfoKey: string = \"venusChartInfo\";\n  getChartInfo(): VenusChartInfoStorageObject {\n    if (localStorage.getItem(this.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(this.chartInfoKey) as string);\n    } else {\n      this.saveChartInfo(VenusChartInfo.getDefaultChartInfo());\n      return VenusChartInfo.getDefaultChartInfo();\n    }\n\n  }\n\n  getData(): VenusDataDict[] {\n    if (localStorage.getItem(this.dataKey)) {\n      return JSON.parse(localStorage.getItem(this.dataKey) as string);\n    } else {\n      this.saveData(VenusData.getDefaultData());\n      return VenusData.getDefaultData();\n    }\n  }\n\n  getInterface(): any {\n  }\n\n  resetChartInfo(): void {\n    this.saveChartInfo(VenusChartInfo.getDefaultChartInfo());\n  }\n\n  resetData(): void {\n    this.saveData(VenusData.getDefaultData());\n  }\n\n  resetInterface(): void {\n  }\n\n  saveChartInfo(chartInfo: VenusChartInfoStorageObject): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(chartInfo));\n  }\n\n  saveData(data: VenusDataDict[]): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: any): void {\n  }\n\n}\n\n\nexport class VenusModels {\n  // Angular diameter of Venus as its closest in arc-seconds.\n  private static maxA = 60;\n  // Max angular separation between Venus and Sun in radians.\n  private static beta = rad(45);\n  // Diameter of Venus in km\n  private static DV = 1.210e4;\n  // Distance from Sun to Earth in km\n  private static dE = 1.496e8;\n  // Distance from Sun to Venus in km\n  private static dV = 1.082e8;\n\n  /**\n   *  This function generates the data points for the Geocentric model.\n   *  @param start:   The start point of data points.\n   *  @param end:     The end point of data points.\n   *  @param x:       The parameter x that represents the ratio of distance of Sun to Venus versus the\n   *                  distance of Sun to Earth.\n   *  @param steps:   The number of data points to be generated. Default is 500.\n   *  @returns {Array}\n   */\n  public static geocentric(start: number, end: number, x: number, steps: number = 500): number[][] {\n    const data: number[][] = [];\n    const step = (end - start) / steps;\n\n    let a = start;\n    for (let i = 0; i  0 ? (1 + cosPhi) / 2 : 0,\n        // How is below different from above????\n        // y: Math.max((1 + cosPhi) / 2, 0) // this doesn't work. I'm so confused\n      ]);\n      a += step;\n    }\n    return data;\n  }\n\n  /**\n   *  This function generates the data points for the Heliocentric model.\n   *  @param start:   The start point of data points.\n   *  @param end:     The end point of data points.\n   *  @param steps:   The number of data points to be generated. Default is 500.\n   *  @returns {Array}\n   */\n  public static heliocentric(start: number, end: number, steps: number = 500): number[][] {\n    const data: number[][] = [];\n    const step = (end - start) / steps;\n\n    let a = start;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VenusHighchartComponent.html":{"url":"components/VenusHighchartComponent.html","title":"component - VenusHighchartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VenusHighchartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/venus/venus-highchart/venus-highchart.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-venus-highchart\n            \n\n\n\n            \n                styleUrls\n                ./venus-highchart.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./venus-highchart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chartConstructor\n                            \n                            \n                                chartObject\n                            \n                            \n                                chartOptions\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                Highcharts\n                            \n                            \n                                updateFlag\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                chartInitialized\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                setChartTitle\n                            \n                            \n                                    Private\n                                setChartXAxis\n                            \n                            \n                                    Private\n                                setChartYAxis\n                            \n                            \n                                    Private\n                                setData\n                            \n                            \n                                    Private\n                                updateChart\n                            \n                            \n                                    Private\n                                updateData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: VenusService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/venus/venus-highchart/venus-highchart.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        VenusService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        chartInitialized\n                        \n                    \n                \n            \n            \n                \nchartInitialized($event: Highcharts.Chart)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus-highchart/venus-highchart.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                            Highcharts.Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus-highchart/venus-highchart.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus-highchart/venus-highchart.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setChartTitle\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChartTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus-highchart/venus-highchart.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setChartXAxis\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChartXAxis()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus-highchart/venus-highchart.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setChartYAxis\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChartYAxis()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus-highchart/venus-highchart.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setData\n                        \n                    \n                \n            \n            \n                \n                    \n                    setData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus-highchart/venus-highchart.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateChart\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus-highchart/venus-highchart.component.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateData\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus-highchart/venus-highchart.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chartConstructor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : \"chart\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus-highchart/venus-highchart.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartObject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Highcharts.Chart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus-highchart/venus-highchart.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Highcharts.Options\n\n                    \n                \n                \n                    \n                        Default value : {\n    chart: {\n      animation: false,\n      styledMode: true,\n    },\n    legend: {\n      align: 'center',\n    },\n    tooltip: {\n      enabled: true,\n      shared: false,\n    },\n    exporting: {\n      buttons: {\n        contextButton: {\n          enabled: false,\n        }\n      }\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus-highchart/venus-highchart.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus-highchart/venus-highchart.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Highcharts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Highcharts\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus-highchart/venus-highchart.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFlag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus-highchart/venus-highchart.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnDestroy} from '@angular/core';\nimport * as Highcharts from \"highcharts\";\nimport {Subject, takeUntil} from \"rxjs\";\nimport {VenusService} from \"../venus.service\";\n\n@Component({\n  selector: 'app-venus-highchart',\n  templateUrl: './venus-highchart.component.html',\n  styleUrls: ['./venus-highchart.component.scss']\n})\nexport class VenusHighchartComponent implements AfterViewInit, OnDestroy {\n  Highcharts: typeof Highcharts = Highcharts;\n  updateFlag: boolean = true;\n  chartConstructor: any = \"chart\";\n  chartObject!: Highcharts.Chart;\n  chartOptions: Highcharts.Options = {\n    chart: {\n      animation: false,\n      styledMode: true,\n    },\n    legend: {\n      align: 'center',\n    },\n    tooltip: {\n      enabled: true,\n      shared: false,\n    },\n    exporting: {\n      buttons: {\n        contextButton: {\n          enabled: false,\n        }\n      }\n    }\n  };\n  private destroy$: Subject = new Subject();\n\n  constructor(private service: VenusService) {\n    this.setChartTitle();\n    this.setChartXAxis();\n    this.setChartYAxis();\n  }\n\n  ngAfterViewInit(): void {\n    this.service.setHighChart(this.chartObject);\n    this.setData();\n    this.service.data$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      () => {\n        this.updateData();\n      }\n    );\n    this.service.chartInfo$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      () => {\n        this.setChartTitle();\n        this.setChartXAxis();\n        this.setChartYAxis();\n        this.updateChart();\n      }\n    )\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  chartInitialized($event: Highcharts.Chart) {\n    this.chartObject = $event;\n    // this.service.setHighChart(this.chartObject);\n  }\n\n  private setData() {\n    this.chartObject.addSeries({\n      name: this.service.getDataLabel(),\n      data: this.service.getDataArray(),\n      type: 'scatter',\n    });\n    this.chartObject.addSeries({\n      name: \"Geocentric\",\n      data: this.service.getGeocentricModelDataUpper(),\n      type: 'area',\n    });\n    this.chartObject.addSeries({\n      name: \"Geocentric\",\n      data: this.service.getGeocentricModelDataLower(),\n      type: 'area',\n      showInLegend: false,\n    });\n    this.chartObject.addSeries({\n      name: \"Heliocentric\",\n      data: this.service.getHeliocentricModelData(),\n      type: 'line',\n    });\n  }\n\n  private updateData() {\n    this.chartObject.series[0].update({\n      name: this.service.getDataLabel(),\n      data: this.service.getDataArray(),\n      type: 'scatter',\n    });\n  }\n\n  private setChartTitle(): void {\n    this.chartOptions.title = {text: this.service.getChartTitle()};\n  }\n\n  private setChartXAxis(): void {\n    this.chartOptions.xAxis = {\n      title: {text: this.service.getXAxisLabel()}\n    };\n  }\n\n  private setChartYAxis(): void {\n    this.chartOptions.yAxis = {\n      title: {text: this.service.getYAxisLabel()}\n    };\n  }\n\n  private updateChart() {\n    this.updateFlag = true;\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./venus-highchart.component.scss\n                \n                @import url(\"https://code.highcharts.com/css/highcharts.css\");\n\n.chart-container {\n  width: 100%;\n  height: 100%;\n  padding: 10px;\n}\n\n:host ::ng-deep .highcharts-color-2 {\n  stroke: var(--highcharts-color-1);\n  fill: var(--highcharts-background-color);\n}\n\n:host ::ng-deep .highcharts-area {\n  fill-opacity: 1;\n}\n\n:host ::ng-deep .highcharts-series-inactive {\n  opacity: 1 !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VenusHighchartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VenusModels.html":{"url":"classes/VenusModels.html","title":"class - VenusModels","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VenusModels\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/venus/venus.service.util.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                beta\n                            \n                            \n                                    Private\n                                    Static\n                                dE\n                            \n                            \n                                    Private\n                                    Static\n                                dV\n                            \n                            \n                                    Private\n                                    Static\n                                DV\n                            \n                            \n                                    Private\n                                    Static\n                                maxA\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                geocentric\n                            \n                            \n                                    Static\n                                heliocentric\n                            \n                            \n                                    Private\n                                    Static\n                                sqr\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        beta\n                        \n                    \n                \n            \n                \n                    \n                        Default value : rad(45)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus.service.util.ts:204\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        dE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1.496e8\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus.service.util.ts:208\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        dV\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1.082e8\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus.service.util.ts:210\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        DV\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1.210e4\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus.service.util.ts:206\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        maxA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 60\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus.service.util.ts:202\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        geocentric\n                        \n                    \n                \n            \n            \n                \n                    \n                    geocentric(start: number, end: number, x: number, steps: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:221\n                \n            \n\n\n            \n                \n                     This function generates the data points for the Geocentric model.\n @param start:   The start point of data points.\n @param end:     The end point of data points.\n @param x:       The parameter x that represents the ratio of distance of Sun to Venus versus the\n                 distance of Sun to Earth.\n @param steps:   The number of data points to be generated. Default is 500.\n @returns {Array}\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    start\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        :   The start point of data points.\n\n                                    \n                                \n                                \n                                    end\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        :     The end point of data points.\n\n                                    \n                                \n                                \n                                    x\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        :       The parameter x that represents the ratio of distance of Sun to Venus versus the\n        distance of Sun to Earth.\n\n                                    \n                                \n                                \n                                    steps\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        500\n                                    \n\n                                    \n                                        :   The number of data points to be generated. Default is 500.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [][]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        heliocentric\n                        \n                    \n                \n            \n            \n                \n                    \n                    heliocentric(start: number, end: number, steps: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:251\n                \n            \n\n\n            \n                \n                     This function generates the data points for the Heliocentric model.\n @param start:   The start point of data points.\n @param end:     The end point of data points.\n @param steps:   The number of data points to be generated. Default is 500.\n @returns {Array}\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    start\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        :   The start point of data points.\n\n                                    \n                                \n                                \n                                    end\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        :     The end point of data points.\n\n                                    \n                                \n                                \n                                    steps\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        500\n                                    \n\n                                    \n                                        :   The number of data points to be generated. Default is 500.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [][]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        sqr\n                        \n                    \n                \n            \n            \n                \n                    \n                    sqr(x: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:271\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {rad} from \"../shared/data/utils\";\n\nexport interface VenusDataDict {\n  diameter: number | null;\n  phase: number | null;\n}\n\n\nexport class VenusData implements MyData {\n  private dataDict: VenusDataDict[];\n\n  constructor() {\n    this.dataDict = VenusData.getDefaultData();\n  }\n\n  addRow(index: number, amount: number): void {\n    if (index > 0) {\n      for (let i = 0; i  {\n        return entry.diameter !== null && entry.phase !== null;\n      }\n    ).map(\n      (entry: VenusDataDict) => {\n        return [entry.diameter, entry.phase];\n      });\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: VenusDataDict[]): void {\n    this.dataDict = data;\n  }\n\n  public static getDefaultData(): VenusDataDict[] {\n    return [\n      {diameter: 15, phase: 0.7},\n      {diameter: 30, phase: 0.53},\n      {diameter: 45, phase: 0.27},\n      {diameter: 60, phase: 0},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n    ];\n  }\n}\n\n\nexport interface VenusChartInfoStorageObject {\n  chartTitle: string;\n  dataLabel: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n}\n\n\nexport class VenusChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private dataLabel: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n\n\n  constructor() {\n    this.chartTitle = VenusChartInfo.getDefaultChartInfo().chartTitle;\n    this.dataLabel = VenusChartInfo.getDefaultChartInfo().dataLabel;\n    this.xAxisLabel = VenusChartInfo.getDefaultChartInfo().xAxisLabel;\n    this.yAxisLabel = VenusChartInfo.getDefaultChartInfo().yAxisLabel;\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabel;\n  }\n\n  getStorageObject(): VenusChartInfoStorageObject {\n    return {\n      chartTitle: this.chartTitle,\n      dataLabel: this.dataLabel,\n      xAxisLabel: this.xAxisLabel,\n      yAxisLabel: this.yAxisLabel,\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    this.dataLabel = data;\n  }\n\n  setStorageObject(storageObject: VenusChartInfoStorageObject): void {\n    this.chartTitle = storageObject.chartTitle;\n    this.dataLabel = storageObject.dataLabel;\n    this.xAxisLabel = storageObject.xAxisLabel;\n    this.yAxisLabel = storageObject.yAxisLabel;\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.xAxisLabel = xAxis;\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.yAxisLabel = yAxis;\n  }\n\n  public static getDefaultChartInfo() {\n    return {\n      chartTitle: \"Title\",\n      dataLabel: \"Data\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n    };\n  }\n}\n\n\nexport class VenusStorage implements MyStorage {\n  private readonly dataKey: string = \"venusData\";\n  private readonly chartInfoKey: string = \"venusChartInfo\";\n  getChartInfo(): VenusChartInfoStorageObject {\n    if (localStorage.getItem(this.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(this.chartInfoKey) as string);\n    } else {\n      this.saveChartInfo(VenusChartInfo.getDefaultChartInfo());\n      return VenusChartInfo.getDefaultChartInfo();\n    }\n\n  }\n\n  getData(): VenusDataDict[] {\n    if (localStorage.getItem(this.dataKey)) {\n      return JSON.parse(localStorage.getItem(this.dataKey) as string);\n    } else {\n      this.saveData(VenusData.getDefaultData());\n      return VenusData.getDefaultData();\n    }\n  }\n\n  getInterface(): any {\n  }\n\n  resetChartInfo(): void {\n    this.saveChartInfo(VenusChartInfo.getDefaultChartInfo());\n  }\n\n  resetData(): void {\n    this.saveData(VenusData.getDefaultData());\n  }\n\n  resetInterface(): void {\n  }\n\n  saveChartInfo(chartInfo: VenusChartInfoStorageObject): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(chartInfo));\n  }\n\n  saveData(data: VenusDataDict[]): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: any): void {\n  }\n\n}\n\n\nexport class VenusModels {\n  // Angular diameter of Venus as its closest in arc-seconds.\n  private static maxA = 60;\n  // Max angular separation between Venus and Sun in radians.\n  private static beta = rad(45);\n  // Diameter of Venus in km\n  private static DV = 1.210e4;\n  // Distance from Sun to Earth in km\n  private static dE = 1.496e8;\n  // Distance from Sun to Venus in km\n  private static dV = 1.082e8;\n\n  /**\n   *  This function generates the data points for the Geocentric model.\n   *  @param start:   The start point of data points.\n   *  @param end:     The end point of data points.\n   *  @param x:       The parameter x that represents the ratio of distance of Sun to Venus versus the\n   *                  distance of Sun to Earth.\n   *  @param steps:   The number of data points to be generated. Default is 500.\n   *  @returns {Array}\n   */\n  public static geocentric(start: number, end: number, x: number, steps: number = 500): number[][] {\n    const data: number[][] = [];\n    const step = (end - start) / steps;\n\n    let a = start;\n    for (let i = 0; i  0 ? (1 + cosPhi) / 2 : 0,\n        // How is below different from above????\n        // y: Math.max((1 + cosPhi) / 2, 0) // this doesn't work. I'm so confused\n      ]);\n      a += step;\n    }\n    return data;\n  }\n\n  /**\n   *  This function generates the data points for the Heliocentric model.\n   *  @param start:   The start point of data points.\n   *  @param end:     The end point of data points.\n   *  @param steps:   The number of data points to be generated. Default is 500.\n   *  @returns {Array}\n   */\n  public static heliocentric(start: number, end: number, steps: number = 500): number[][] {\n    const data: number[][] = [];\n    const step = (end - start) / steps;\n\n    let a = start;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VenusModule.html":{"url":"modules/VenusModule.html","title":"module - VenusModule","body":"\n                   \n\n\n\n\n    Modules\n    VenusModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VenusModule\n\n\n\ncluster_VenusModule_declarations\n\n\n\ncluster_VenusModule_providers\n\n\n\ncluster_VenusModule_imports\n\n\n\n\nVenusChartFormComponent\n\nVenusChartFormComponent\n\n\n\nVenusModule\n\nVenusModule\n\nVenusModule -->\n\nVenusChartFormComponent->VenusModule\n\n\n\n\n\nVenusComponent\n\nVenusComponent\n\nVenusModule -->\n\nVenusComponent->VenusModule\n\n\n\n\n\nVenusHighchartComponent\n\nVenusHighchartComponent\n\nVenusModule -->\n\nVenusHighchartComponent->VenusModule\n\n\n\n\n\nVenusTableComponent\n\nVenusTableComponent\n\nVenusModule -->\n\nVenusTableComponent->VenusModule\n\n\n\n\n\nSimpleDataButtonModule\n\nSimpleDataButtonModule\n\nVenusModule -->\n\nSimpleDataButtonModule->VenusModule\n\n\n\n\n\nSimpleGraphButtonModule\n\nSimpleGraphButtonModule\n\nVenusModule -->\n\nSimpleGraphButtonModule->VenusModule\n\n\n\n\n\nVenusService\n\nVenusService\n\nVenusModule -->\n\nVenusService->VenusModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tools/venus/venus.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            VenusChartFormComponent\n                        \n                        \n                            VenusComponent\n                        \n                        \n                            VenusHighchartComponent\n                        \n                        \n                            VenusTableComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            VenusService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SimpleDataButtonModule\n                        \n                        \n                            SimpleGraphButtonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {VenusComponent} from './venus/venus.component';\nimport {SimpleDataButtonModule} from \"../shared/simple-data-button/simple-data-button.component\";\nimport {SimpleGraphButtonModule} from \"../shared/simple-graph-button/simple-graph-button.component\";\nimport {VenusService} from \"./venus.service\";\nimport {VenusTableComponent} from './venus-table/venus-table.component';\nimport {HotTableModule} from \"@handsontable/angular\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {VenusHighchartComponent} from './venus-highchart/venus-highchart.component';\nimport {HighchartsChartModule} from \"highcharts-angular\";\nimport {VenusChartFormComponent} from './venus-chart-form/venus-chart-form.component';\nimport {MatLegacyFormFieldModule} from \"@angular/material/legacy-form-field\";\nimport {MatLegacyInputModule} from \"@angular/material/legacy-input\";\n\n\n@NgModule({\n  declarations: [\n    VenusComponent,\n    VenusTableComponent,\n    VenusHighchartComponent,\n    VenusChartFormComponent\n  ],\n  imports: [\n    SimpleDataButtonModule,\n    SimpleGraphButtonModule,\n    HotTableModule,\n    FormsModule,\n    HighchartsChartModule,\n    MatLegacyFormFieldModule,\n    MatLegacyInputModule,\n    ReactiveFormsModule,\n  ],\n  providers: [VenusService],\n})\nexport class VenusModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VenusService.html":{"url":"injectables/VenusService.html","title":"injectable - VenusService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VenusService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/venus/venus.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                chartInfo$\n                            \n                            \n                                    Private\n                                chartInfoSubject\n                            \n                            \n                                    Public\n                                data$\n                            \n                            \n                                    Private\n                                dataSubject\n                            \n                            \n                                    Private\n                                highChart\n                            \n                            \n                                    Private\n                                venusChartInfo\n                            \n                            \n                                    Private\n                                venusData\n                            \n                            \n                                    Private\n                                venusStorage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRow\n                            \n                            \n                                getChartTitle\n                            \n                            \n                                getData\n                            \n                            \n                                getDataArray\n                            \n                            \n                                getDataLabel\n                            \n                            \n                                    Public\n                                getGeocentricModelDataLower\n                            \n                            \n                                    Public\n                                getGeocentricModelDataUpper\n                            \n                            \n                                    Public\n                                getHeliocentricModelData\n                            \n                            \n                                getHighChart\n                            \n                            \n                                getStorageObject\n                            \n                            \n                                getXAxisLabel\n                            \n                            \n                                getYAxisLabel\n                            \n                            \n                                    Private\n                                limitPrecision\n                            \n                            \n                                removeRow\n                            \n                            \n                                resetChartInfo\n                            \n                            \n                                resetData\n                            \n                            \n                                setChartTitle\n                            \n                            \n                                setData\n                            \n                            \n                                setDataLabel\n                            \n                            \n                                setHighChart\n                            \n                            \n                                setStorageObject\n                            \n                            \n                                setXAxisLabel\n                            \n                            \n                                setYAxisLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/venus/venus.service.ts:31\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRow\n                        \n                    \n                \n            \n            \n                \naddRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:115\n                \n            \n\n\n            \n                \n                    MyData Methods\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChartTitle\n                        \n                    \n                \n            \n            \n                \ngetChartTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:55\n                \n            \n\n\n            \n                \n                    ChartInfo Methods\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         VenusDataDict[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataArray\n                        \n                    \n                \n            \n            \n                \ngetDataArray()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     [][]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataLabel\n                        \n                    \n                \n            \n            \n                \ngetDataLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getGeocentricModelDataLower\n                        \n                    \n                \n            \n            \n                \n                    \n                    getGeocentricModelDataLower()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     [][]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getGeocentricModelDataUpper\n                        \n                    \n                \n            \n            \n                \n                    \n                    getGeocentricModelDataUpper()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:40\n                \n            \n\n\n            \n                \n                    Venus Models\n\n\n                    \n                        Returns :     [][]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getHeliocentricModelData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHeliocentricModelData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     [][]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHighChart\n                        \n                    \n                \n            \n            \n                \ngetHighChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Highcharts.Chart\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStorageObject\n                        \n                    \n                \n            \n            \n                \ngetStorageObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         VenusChartInfoStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getXAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetXAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getYAxisLabel\n                        \n                    \n                \n            \n            \n                \ngetYAxisLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        limitPrecision\n                        \n                    \n                \n            \n            \n                \n                    \n                    limitPrecision(dataArray: number[][], precision: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dataArray\n                                    \n                                            number[][]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    precision\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [][]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRow\n                        \n                    \n                \n            \n            \n                \nremoveRow(index: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetChartInfo\n                        \n                    \n                \n            \n            \n                \nresetChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetData\n                        \n                    \n                \n            \n            \n                \nresetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setChartTitle\n                        \n                    \n                \n            \n            \n                \nsetChartTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setData\n                        \n                    \n                \n            \n            \n                \nsetData(data: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDataLabel\n                        \n                    \n                \n            \n            \n                \nsetDataLabel(data: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setHighChart\n                        \n                    \n                \n            \n            \n                \nsetHighChart(highChart: Highcharts.Chart)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    highChart\n                                    \n                                            Highcharts.Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStorageObject\n                        \n                    \n                \n            \n            \n                \nsetStorageObject(storageObject: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storageObject\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setXAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetXAxisLabel(xAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    xAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setYAxisLabel\n                        \n                    \n                \n            \n            \n                \nsetYAxisLabel(yAxis: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    yAxis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chartInfo$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.chartInfoSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartInfoSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(this.venusChartInfo)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.dataSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(this.venusData.getData())\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        highChart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Highcharts.Chart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        venusChartInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChartInfo\n\n                    \n                \n                \n                    \n                        Default value : new VenusChartInfo()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        venusData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MyData\n\n                    \n                \n                \n                    \n                        Default value : new VenusData()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        venusStorage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MyStorage\n\n                    \n                \n                \n                    \n                        Default value : new VenusStorage()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {MyData} from \"../shared/data/data.interface\";\nimport {\n  VenusChartInfo,\n  VenusChartInfoStorageObject,\n  VenusData,\n  VenusDataDict,\n  VenusModels,\n  VenusStorage\n} from \"./venus.service.util\";\nimport {BehaviorSubject, Observable} from \"rxjs\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\nimport * as Highcharts from \"highcharts\";\n\n@Injectable()\nexport class VenusService implements MyData, ChartInfo {\n\n  private venusStorage: MyStorage = new VenusStorage();\n  private venusData: MyData = new VenusData();\n  private venusChartInfo: ChartInfo = new VenusChartInfo();\n\n\n  private dataSubject: BehaviorSubject\n    = new BehaviorSubject(this.venusData.getData());\n  public data$: Observable = this.dataSubject.asObservable();\n  private chartInfoSubject: BehaviorSubject\n    = new BehaviorSubject(this.venusChartInfo);\n  public chartInfo$: Observable = this.chartInfoSubject.asObservable();\n\n  private highChart!: Highcharts.Chart;\n\n  constructor() {\n    this.venusData.setData(this.venusStorage.getData());\n    this.venusChartInfo.setStorageObject(this.venusStorage.getChartInfo());\n  }\n\n  /** Venus Models**/\n\n  public getGeocentricModelDataUpper(): number[][] {\n    return this.limitPrecision(VenusModels.geocentric(10.15, 60, 0.445), 3);\n  }\n\n  public getGeocentricModelDataLower(): number[][] {\n    return this.limitPrecision(VenusModels.geocentric(10.15, 60, 0.8), 3);\n  }\n\n  public getHeliocentricModelData(): number[][] {\n    return this.limitPrecision(VenusModels.heliocentric(10.15, 60), 3);\n  }\n\n\n  /** ChartInfo Methods **/\n\n  getChartTitle(): string {\n    return this.venusChartInfo.getChartTitle();\n  }\n\n  getXAxisLabel(): string {\n    return this.venusChartInfo.getXAxisLabel();\n  }\n\n  getYAxisLabel(): string {\n    return this.venusChartInfo.getYAxisLabel();\n  }\n\n  getDataLabel(): string {\n    return this.venusChartInfo.getDataLabel();\n  }\n\n  getStorageObject(): VenusChartInfoStorageObject {\n    return this.venusChartInfo.getStorageObject();\n  }\n\n  setChartTitle(title: string): void {\n    this.venusChartInfo.setChartTitle(title);\n    this.venusStorage.saveChartInfo(this.venusChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.venusChartInfo);\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.venusChartInfo.setXAxisLabel(xAxis);\n    this.venusStorage.saveChartInfo(this.venusChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.venusChartInfo);\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.venusChartInfo.setYAxisLabel(yAxis);\n    this.venusStorage.saveChartInfo(this.venusChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.venusChartInfo);\n  }\n\n  setDataLabel(data: string): void {\n    this.venusChartInfo.setDataLabel(data);\n    this.venusStorage.saveChartInfo(this.venusChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.venusChartInfo);\n    this.dataSubject.next(this.getData());\n  }\n\n  setStorageObject(storageObject: any): void {\n    this.venusChartInfo.setStorageObject(storageObject);\n    this.venusStorage.saveChartInfo(this.venusChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.venusChartInfo);\n  }\n\n  resetChartInfo(): void {\n    this.venusChartInfo.setStorageObject(VenusChartInfo.getDefaultChartInfo());\n    this.venusStorage.saveChartInfo(this.venusChartInfo.getStorageObject());\n    this.chartInfoSubject.next(this.venusChartInfo);\n    this.dataSubject.next(this.getData());\n  }\n\n  /** MyData Methods **/\n\n  addRow(index: number, amount: number): void {\n    this.venusData.addRow(index, amount);\n    this.venusStorage.saveData(this.venusData.getData());\n    this.dataSubject.next(this.venusData.getData());\n  }\n\n  getData(): VenusDataDict[] {\n    return this.venusData.getData();\n  }\n\n  getDataArray(): (number | null)[][] {\n    return this.venusData.getDataArray();\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.venusData.removeRow(index, amount);\n    this.venusStorage.saveData(this.venusData.getData());\n    this.dataSubject.next(this.venusData.getData());\n  }\n\n  setData(data: any[]): void {\n    this.venusData.setData(data);\n    this.venusStorage.saveData(data);\n    this.dataSubject.next(this.venusData.getData());\n  }\n\n  resetData(): void {\n    this.setData(VenusData.getDefaultData());\n  }\n\n  setHighChart(highChart: Highcharts.Chart): void {\n    this.highChart = highChart;\n  }\n\n  getHighChart(): Highcharts.Chart {\n    return this.highChart;\n  }\n\n\n  private limitPrecision(dataArray: number[][], precision: number): number[][] {\n    return dataArray.map(\n      (row: number[]) => {\n        return row.map((value: number) => {\n          return value ? parseFloat(value.toFixed(precision)) : value;\n        });\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VenusStorage.html":{"url":"classes/VenusStorage.html","title":"class - VenusStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VenusStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/venus/venus.service.util.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyStorage\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                chartInfoKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                dataKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getChartInfo\n                            \n                            \n                                getData\n                            \n                            \n                                getInterface\n                            \n                            \n                                resetChartInfo\n                            \n                            \n                                resetData\n                            \n                            \n                                resetInterface\n                            \n                            \n                                saveChartInfo\n                            \n                            \n                                saveData\n                            \n                            \n                                saveInterface\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        chartInfoKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"venusChartInfo\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus.service.util.ts:152\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dataKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"venusData\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus.service.util.ts:151\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getChartInfo\n                        \n                    \n                \n            \n            \n                \ngetChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         VenusChartInfoStorageObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         VenusDataDict[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInterface\n                        \n                    \n                \n            \n            \n                \ngetInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetChartInfo\n                        \n                    \n                \n            \n            \n                \nresetChartInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetData\n                        \n                    \n                \n            \n            \n                \nresetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetInterface\n                        \n                    \n                \n            \n            \n                \nresetInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveChartInfo\n                        \n                    \n                \n            \n            \n                \nsaveChartInfo(chartInfo: VenusChartInfoStorageObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:186\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartInfo\n                                    \n                                                VenusChartInfoStorageObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveData\n                        \n                    \n                \n            \n            \n                \nsaveData(data: VenusDataDict[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                VenusDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveInterface\n                        \n                    \n                \n            \n            \n                \nsaveInterface(interfaceInfo: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus.service.util.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    interfaceInfo\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MyData} from \"../shared/data/data.interface\";\nimport {MyStorage} from \"../shared/storage/storage.interface\";\nimport {ChartInfo} from \"../shared/charts/chart.interface\";\nimport {rad} from \"../shared/data/utils\";\n\nexport interface VenusDataDict {\n  diameter: number | null;\n  phase: number | null;\n}\n\n\nexport class VenusData implements MyData {\n  private dataDict: VenusDataDict[];\n\n  constructor() {\n    this.dataDict = VenusData.getDefaultData();\n  }\n\n  addRow(index: number, amount: number): void {\n    if (index > 0) {\n      for (let i = 0; i  {\n        return entry.diameter !== null && entry.phase !== null;\n      }\n    ).map(\n      (entry: VenusDataDict) => {\n        return [entry.diameter, entry.phase];\n      });\n  }\n\n  removeRow(index: number, amount: number): void {\n    this.dataDict = this.dataDict.slice(0, index).concat(this.dataDict.slice(index + amount));\n  }\n\n  setData(data: VenusDataDict[]): void {\n    this.dataDict = data;\n  }\n\n  public static getDefaultData(): VenusDataDict[] {\n    return [\n      {diameter: 15, phase: 0.7},\n      {diameter: 30, phase: 0.53},\n      {diameter: 45, phase: 0.27},\n      {diameter: 60, phase: 0},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n      {diameter: null, phase: null},\n    ];\n  }\n}\n\n\nexport interface VenusChartInfoStorageObject {\n  chartTitle: string;\n  dataLabel: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n}\n\n\nexport class VenusChartInfo implements ChartInfo {\n  private chartTitle: string;\n  private dataLabel: string;\n  private xAxisLabel: string;\n  private yAxisLabel: string;\n\n\n  constructor() {\n    this.chartTitle = VenusChartInfo.getDefaultChartInfo().chartTitle;\n    this.dataLabel = VenusChartInfo.getDefaultChartInfo().dataLabel;\n    this.xAxisLabel = VenusChartInfo.getDefaultChartInfo().xAxisLabel;\n    this.yAxisLabel = VenusChartInfo.getDefaultChartInfo().yAxisLabel;\n  }\n\n  getChartTitle(): string {\n    return this.chartTitle;\n  }\n\n  getDataLabel(): string {\n    return this.dataLabel;\n  }\n\n  getStorageObject(): VenusChartInfoStorageObject {\n    return {\n      chartTitle: this.chartTitle,\n      dataLabel: this.dataLabel,\n      xAxisLabel: this.xAxisLabel,\n      yAxisLabel: this.yAxisLabel,\n    }\n  }\n\n  getXAxisLabel(): string {\n    return this.xAxisLabel;\n  }\n\n  getYAxisLabel(): string {\n    return this.yAxisLabel;\n  }\n\n  setChartTitle(title: string): void {\n    this.chartTitle = title;\n  }\n\n  setDataLabel(data: string): void {\n    this.dataLabel = data;\n  }\n\n  setStorageObject(storageObject: VenusChartInfoStorageObject): void {\n    this.chartTitle = storageObject.chartTitle;\n    this.dataLabel = storageObject.dataLabel;\n    this.xAxisLabel = storageObject.xAxisLabel;\n    this.yAxisLabel = storageObject.yAxisLabel;\n  }\n\n  setXAxisLabel(xAxis: string): void {\n    this.xAxisLabel = xAxis;\n  }\n\n  setYAxisLabel(yAxis: string): void {\n    this.yAxisLabel = yAxis;\n  }\n\n  public static getDefaultChartInfo() {\n    return {\n      chartTitle: \"Title\",\n      dataLabel: \"Data\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n    };\n  }\n}\n\n\nexport class VenusStorage implements MyStorage {\n  private readonly dataKey: string = \"venusData\";\n  private readonly chartInfoKey: string = \"venusChartInfo\";\n  getChartInfo(): VenusChartInfoStorageObject {\n    if (localStorage.getItem(this.chartInfoKey)) {\n      return JSON.parse(localStorage.getItem(this.chartInfoKey) as string);\n    } else {\n      this.saveChartInfo(VenusChartInfo.getDefaultChartInfo());\n      return VenusChartInfo.getDefaultChartInfo();\n    }\n\n  }\n\n  getData(): VenusDataDict[] {\n    if (localStorage.getItem(this.dataKey)) {\n      return JSON.parse(localStorage.getItem(this.dataKey) as string);\n    } else {\n      this.saveData(VenusData.getDefaultData());\n      return VenusData.getDefaultData();\n    }\n  }\n\n  getInterface(): any {\n  }\n\n  resetChartInfo(): void {\n    this.saveChartInfo(VenusChartInfo.getDefaultChartInfo());\n  }\n\n  resetData(): void {\n    this.saveData(VenusData.getDefaultData());\n  }\n\n  resetInterface(): void {\n  }\n\n  saveChartInfo(chartInfo: VenusChartInfoStorageObject): void {\n    localStorage.setItem(this.chartInfoKey, JSON.stringify(chartInfo));\n  }\n\n  saveData(data: VenusDataDict[]): void {\n    localStorage.setItem(this.dataKey, JSON.stringify(data));\n  }\n\n  saveInterface(interfaceInfo: any): void {\n  }\n\n}\n\n\nexport class VenusModels {\n  // Angular diameter of Venus as its closest in arc-seconds.\n  private static maxA = 60;\n  // Max angular separation between Venus and Sun in radians.\n  private static beta = rad(45);\n  // Diameter of Venus in km\n  private static DV = 1.210e4;\n  // Distance from Sun to Earth in km\n  private static dE = 1.496e8;\n  // Distance from Sun to Venus in km\n  private static dV = 1.082e8;\n\n  /**\n   *  This function generates the data points for the Geocentric model.\n   *  @param start:   The start point of data points.\n   *  @param end:     The end point of data points.\n   *  @param x:       The parameter x that represents the ratio of distance of Sun to Venus versus the\n   *                  distance of Sun to Earth.\n   *  @param steps:   The number of data points to be generated. Default is 500.\n   *  @returns {Array}\n   */\n  public static geocentric(start: number, end: number, x: number, steps: number = 500): number[][] {\n    const data: number[][] = [];\n    const step = (end - start) / steps;\n\n    let a = start;\n    for (let i = 0; i  0 ? (1 + cosPhi) / 2 : 0,\n        // How is below different from above????\n        // y: Math.max((1 + cosPhi) / 2, 0) // this doesn't work. I'm so confused\n      ]);\n      a += step;\n    }\n    return data;\n  }\n\n  /**\n   *  This function generates the data points for the Heliocentric model.\n   *  @param start:   The start point of data points.\n   *  @param end:     The end point of data points.\n   *  @param steps:   The number of data points to be generated. Default is 500.\n   *  @returns {Array}\n   */\n  public static heliocentric(start: number, end: number, steps: number = 500): number[][] {\n    const data: number[][] = [];\n    const step = (end - start) / steps;\n\n    let a = start;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VenusTable.html":{"url":"classes/VenusTable.html","title":"class - VenusTable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VenusTable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tools/venus/venus-table/venus-table.component.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MyTable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hotRegisterer\n                            \n                            \n                                    Private\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                            \n                                getTable\n                            \n                            \n                                renderTable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/venus/venus-table/venus-table.component.ts:71\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hotRegisterer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HotTableRegisterer()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus-table/venus-table.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus-table/venus-table.component.ts:70\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus-table/venus-table.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTable\n                        \n                    \n                \n            \n            \n                \ngetTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus-table/venus-table.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Handsontable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderTable\n                        \n                    \n                \n            \n            \n                \nrenderTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus-table/venus-table.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {AfterViewInit, Component, OnDestroy} from '@angular/core';\nimport {VenusService} from \"../venus.service\";\nimport {Subject, takeUntil} from \"rxjs\";\nimport {VenusDataDict} from \"../venus.service.util\";\nimport {MyTable} from \"../../shared/tables/table-interface\";\nimport {HotTableRegisterer} from \"@handsontable/angular\";\nimport Handsontable from \"handsontable\";\n\n@Component({\n  selector: 'app-venus-table',\n  templateUrl: './venus-table.component.html',\n  styleUrls: ['./venus-table.component.scss']\n})\nexport class VenusTableComponent implements AfterViewInit, OnDestroy {\n  private destroy$: Subject = new Subject();\n  id: string = \"moon-table\";\n  table: VenusTable = new VenusTable(this.id);\n  colNames: string[] = [\"Angular Diameter\", \"Phase of Venus\"];\n  dataSet: VenusDataDict[];\n\n\n  constructor(private service: VenusService) {\n    this.dataSet = this.service.getData();\n  }\n\n  ngAfterViewInit(): void {\n    this.service.data$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      () => {\n        this.dataSet = this.limitPrecision(this.service.getData(), 3);\n        this.table.renderTable();\n      }\n    )\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  public onChange = (changes: any, source: any) => {\n    if (changes) {\n      this.service.setData(this.table.getData());\n    }\n  }\n\n  public onRemove = (index: number, amount: number) => {\n    this.service.removeRow(index, amount);\n    // this.service.setData(this.table.getData());\n  }\n\n  public onInsert = (index: number, amount: number) => {\n    this.service.addRow(index, amount);\n  }\n\n  private limitPrecision(data: VenusDataDict[], precision: number): VenusDataDict[] {\n    return data.map(\n      (row: VenusDataDict) => {\n        return {\n          diameter: row.diameter ? parseFloat(row.diameter.toFixed(precision)) : row.diameter,\n          phase: row.phase ? parseFloat(row.phase.toFixed(precision)) : row.phase\n        }\n      }\n    );\n  }\n}\n\nclass VenusTable implements MyTable {\n  private readonly id: string;\n  private hotRegisterer = new HotTableRegisterer();\n\n  constructor(id: string) {\n    this.id = id;\n  }\n\n  getTable(): Handsontable {\n    return this.hotRegisterer.getInstance(this.id);\n  }\n\n  renderTable(): void {\n    this.getTable().render();\n  }\n\n  getData(): any[] {\n    return this.getTable().getSourceData();\n  }\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VenusTableComponent.html":{"url":"components/VenusTableComponent.html","title":"component - VenusTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VenusTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tools/venus/venus-table/venus-table.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-venus-table\n            \n\n\n\n            \n                styleUrls\n                ./venus-table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./venus-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                colNames\n                            \n                            \n                                dataSet\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                id\n                            \n                            \n                                    Public\n                                onChange\n                            \n                            \n                                    Public\n                                onInsert\n                            \n                            \n                                    Public\n                                onRemove\n                            \n                            \n                                table\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                limitPrecision\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: VenusService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tools/venus/venus-table/venus-table.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        VenusService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        limitPrecision\n                        \n                    \n                \n            \n            \n                \n                    \n                    limitPrecision(data: VenusDataDict[], precision: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus-table/venus-table.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                VenusDataDict[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    precision\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         VenusDataDict[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus-table/venus-table.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tools/venus/venus-table/venus-table.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        colNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\"Angular Diameter\", \"Phase of Venus\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus-table/venus-table.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VenusDataDict[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus-table/venus-table.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus-table/venus-table.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"moon-table\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus-table/venus-table.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus-table/venus-table.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onInsert\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus-table/venus-table.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onRemove\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus-table/venus-table.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        table\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VenusTable\n\n                    \n                \n                \n                    \n                        Default value : new VenusTable(this.id)\n                    \n                \n                    \n                        \n                                Defined in src/app/tools/venus/venus-table/venus-table.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnDestroy} from '@angular/core';\nimport {VenusService} from \"../venus.service\";\nimport {Subject, takeUntil} from \"rxjs\";\nimport {VenusDataDict} from \"../venus.service.util\";\nimport {MyTable} from \"../../shared/tables/table-interface\";\nimport {HotTableRegisterer} from \"@handsontable/angular\";\nimport Handsontable from \"handsontable\";\n\n@Component({\n  selector: 'app-venus-table',\n  templateUrl: './venus-table.component.html',\n  styleUrls: ['./venus-table.component.scss']\n})\nexport class VenusTableComponent implements AfterViewInit, OnDestroy {\n  private destroy$: Subject = new Subject();\n  id: string = \"moon-table\";\n  table: VenusTable = new VenusTable(this.id);\n  colNames: string[] = [\"Angular Diameter\", \"Phase of Venus\"];\n  dataSet: VenusDataDict[];\n\n\n  constructor(private service: VenusService) {\n    this.dataSet = this.service.getData();\n  }\n\n  ngAfterViewInit(): void {\n    this.service.data$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      () => {\n        this.dataSet = this.limitPrecision(this.service.getData(), 3);\n        this.table.renderTable();\n      }\n    )\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  public onChange = (changes: any, source: any) => {\n    if (changes) {\n      this.service.setData(this.table.getData());\n    }\n  }\n\n  public onRemove = (index: number, amount: number) => {\n    this.service.removeRow(index, amount);\n    // this.service.setData(this.table.getData());\n  }\n\n  public onInsert = (index: number, amount: number) => {\n    this.service.addRow(index, amount);\n  }\n\n  private limitPrecision(data: VenusDataDict[], precision: number): VenusDataDict[] {\n    return data.map(\n      (row: VenusDataDict) => {\n        return {\n          diameter: row.diameter ? parseFloat(row.diameter.toFixed(precision)) : row.diameter,\n          phase: row.phase ? parseFloat(row.phase.toFixed(precision)) : row.phase\n        }\n      }\n    );\n  }\n}\n\nclass VenusTable implements MyTable {\n  private readonly id: string;\n  private hotRegisterer = new HotTableRegisterer();\n\n  constructor(id: string) {\n    this.id = id;\n  }\n\n  getTable(): Handsontable {\n    return this.hotRegisterer.getInstance(this.id);\n  }\n\n  renderTable(): void {\n    this.getTable().render();\n  }\n\n  getData(): any[] {\n    return this.getTable().getSourceData();\n  }\n\n}\n\n\n    \n\n    \n        \n  \n  \n\n\n\n    \n\n    \n                \n                    ./venus-table.component.scss\n                \n                .container {\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppearanceComponent', 'selector': 'app-appearance'},{'name': 'CurveChartComponent', 'selector': 'app-curve-chart'},{'name': 'CurveChartFormComponent', 'selector': 'app-curve-chart-form'},{'name': 'CurveComponent', 'selector': 'app-curve'},{'name': 'CurveHighChartComponent', 'selector': 'app-curve-highchart'},{'name': 'CurveTableComponent', 'selector': 'app-curve-table'},{'name': 'DualChartFormComponent', 'selector': 'app-dual-chart-form'},{'name': 'DualComponent', 'selector': 'app-dual'},{'name': 'DualHighchartComponent', 'selector': 'app-dual-highchart'},{'name': 'DualTableComponent', 'selector': 'app-dual-table'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HonorCodePopupComponent', 'selector': 'app-honor-code-popup'},{'name': 'InputSliderComponent', 'selector': 'my-input-slider'},{'name': 'LineFormComponent', 'selector': 'app-line-form'},{'name': 'MenubarComponent', 'selector': 'app-menubar'},{'name': 'MoonChartFormComponent', 'selector': 'app-moon-chart-form'},{'name': 'MoonComponent', 'selector': 'app-moon'},{'name': 'MoonFormComponent', 'selector': 'app-moon-form'},{'name': 'MoonHighchartComponent', 'selector': 'app-moon-highchart'},{'name': 'MoonTableComponent', 'selector': 'app-moon-table'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ScatterChartFormComponent', 'selector': 'app-scatter-chart-form'},{'name': 'ScatterComponent', 'selector': 'app-scatter'},{'name': 'ScatterFormComponent', 'selector': 'app-scatter-form'},{'name': 'ScatterHighchartComponent', 'selector': 'app-scatter-highchart'},{'name': 'ScatterTableComponent', 'selector': 'app-scatter-table'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SimpleDataButtonComponent', 'selector': 'app-simple-data-button'},{'name': 'SimpleGraphButtonComponent', 'selector': 'app-simple-graph-button'},{'name': 'ToolsNavbarComponent', 'selector': 'app-tools-navbar'},{'name': 'VenusChartFormComponent', 'selector': 'app-venus-chart-form'},{'name': 'VenusComponent', 'selector': 'app-venus'},{'name': 'VenusHighchartComponent', 'selector': 'app-venus-highchart'},{'name': 'VenusTableComponent', 'selector': 'app-venus-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VenusTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app-routing.module.ts\n            \n            function\n            getToolSiteName\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/shared/about/about.component.ts\n            \n            component\n            AboutComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/menubar/menubar.component.ts\n            \n            component\n            MenubarComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/settings/appearance/appearance.component.ts\n            \n            component\n            AppearanceComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/shared/settings/appearance/service/appearance-storage.service.ts\n            \n            injectable\n            AppearanceStorageService\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/shared/settings/appearance/service/appearance.service.ts\n            \n            injectable\n            AppearanceService\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/shared/settings/appearance/service/appearance.utils.ts\n            \n            class\n            ChartColor\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/settings/appearance/service/appearance.utils.ts\n            \n            class\n            ColorThemeSettings\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/settings/appearance/service/appearance.utils.ts\n            \n            class\n            DefaultAppearanceSettings\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/settings/appearance/service/appearance.utils.ts\n            \n            interface\n            MyColorTheme\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/settings/appearance/service/appearance.utils.ts\n            \n            interface\n            MyFontFamily\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/settings/appearance/service/appearance.utils.ts\n            \n            interface\n            MyFontSize\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/settings/appearance/service/appearance.utils.ts\n            \n            interface\n            MyFontStyle\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/tools-navbar/tools-navbar.component.ts\n            \n            component\n            ToolsNavbarComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve-chart-form/curve-chart-form.component.ts\n            \n            component\n            CurveChartFormComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve-chart/curve-chart.component.ts\n            \n            component\n            CurveChartComponent\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve-chart/curve-chart.component.ts\n            \n            class\n            CurveChart\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve-highchart/curve-high-chart.component.ts\n            \n            component\n            CurveHighChartComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve-table/curve-table.component.ts\n            \n            component\n            CurveTableComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve-table/curve-table.component.ts\n            \n            class\n            CurveTable\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve.component.ts\n            \n            component\n            CurveComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve.service.ts\n            \n            injectable\n            CurveService\n            \n                6 %\n                (3/44)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve.service.util.ts\n            \n            class\n            CurveChartInfo\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve.service.util.ts\n            \n            class\n            CurveData\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve.service.util.ts\n            \n            class\n            CurveImpl\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve.service.util.ts\n            \n            class\n            CurveStorage\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve.service.util.ts\n            \n            interface\n            CurveChartInfoStorageObject\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve.service.util.ts\n            \n            interface\n            CurveDataDict\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve.service.util.ts\n            \n            interface\n            CurveInterface\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/tools/curve/curve.service.util.ts\n            \n            interface\n            CurveInterfaceStorageObject\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/tools/curve/line-form/line-form.component.ts\n            \n            component\n            LineFormComponent\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                src/app/tools/dual/dual-chart-form/dual-chart-form.component.ts\n            \n            component\n            DualChartFormComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/tools/dual/dual-highchart/dual-highchart.component.ts\n            \n            component\n            DualHighchartComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/tools/dual/dual-table/dual-table.component.ts\n            \n            component\n            DualTableComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/tools/dual/dual-table/dual-table.component.ts\n            \n            class\n            DualTable\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/tools/dual/dual.service.ts\n            \n            injectable\n            DualService\n            \n                6 %\n                (2/30)\n            \n        \n        \n            \n                \n                src/app/tools/dual/dual.service.util.ts\n            \n            class\n            DualChartInfo\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/tools/dual/dual.service.util.ts\n            \n            class\n            DualData\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/tools/dual/dual.service.util.ts\n            \n            class\n            DualStorage\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/tools/dual/dual.service.util.ts\n            \n            interface\n            DualChartInfoStorageObject\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/tools/dual/dual.service.util.ts\n            \n            interface\n            DualDataDict\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/tools/dual/dual/dual.component.ts\n            \n            component\n            DualComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/tools/moon/moon-chart-form/moon-chart-form.component.ts\n            \n            component\n            MoonChartFormComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/tools/moon/moon-form/moon-form.component.ts\n            \n            component\n            MoonFormComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/tools/moon/moon-highchart/moon-highchart.component.ts\n            \n            component\n            MoonHighchartComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/tools/moon/moon-table/moon-table.component.ts\n            \n            component\n            MoonTableComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/tools/moon/moon-table/moon-table.component.ts\n            \n            class\n            MoonTable\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/tools/moon/moon.service.ts\n            \n            injectable\n            MoonService\n            \n                9 %\n                (4/44)\n            \n        \n        \n            \n                \n                src/app/tools/moon/moon.service.util.ts\n            \n            class\n            MoonChartInfo\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/tools/moon/moon.service.util.ts\n            \n            class\n            MoonData\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/tools/moon/moon.service.util.ts\n            \n            class\n            MoonInterfaceImpl\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/tools/moon/moon.service.util.ts\n            \n            class\n            MoonStorage\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/tools/moon/moon.service.util.ts\n            \n            interface\n            MoonChartInfoStorageObject\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/tools/moon/moon.service.util.ts\n            \n            interface\n            MoonDataDict\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/tools/moon/moon.service.util.ts\n            \n            interface\n            MoonInterface\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/tools/moon/moon.service.util.ts\n            \n            interface\n            MoonInterfaceStorageObject\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/tools/moon/moon.service.util.ts\n            \n            interface\n            MoonModel\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/tools/moon/moon/moon.component.ts\n            \n            component\n            MoonComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/tools/scatter/scatter-chart-form/scatter-chart-form.component.ts\n            \n            component\n            ScatterChartFormComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/tools/scatter/scatter-form/scatter-form.component.ts\n            \n            component\n            ScatterFormComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/tools/scatter/scatter-highchart/scatter-highchart.component.ts\n            \n            component\n            ScatterHighchartComponent\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/tools/scatter/scatter-table/scatter-table.component.ts\n            \n            component\n            ScatterTableComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/tools/scatter/scatter-table/scatter-table.component.ts\n            \n            class\n            ScatterTable\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/tools/scatter/scatter.service.ts\n            \n            injectable\n            ScatterService\n            \n                7 %\n                (3/40)\n            \n        \n        \n            \n                \n                src/app/tools/scatter/scatter.service.util.ts\n            \n            class\n            ScatterChartInfo\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/tools/scatter/scatter.service.util.ts\n            \n            class\n            ScatterData\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/tools/scatter/scatter.service.util.ts\n            \n            class\n            ScatterModelInterface\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/app/tools/scatter/scatter.service.util.ts\n            \n            class\n            ScatterStorage\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/tools/scatter/scatter.service.util.ts\n            \n            interface\n            ScatterChartInfoStorageObject\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/tools/scatter/scatter.service.util.ts\n            \n            interface\n            ScatterDataDict\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/tools/scatter/scatter.service.util.ts\n            \n            interface\n            ScatterInterfaceStorageObject\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/tools/scatter/scatter.service.util.ts\n            \n            interface\n            ScatterModel\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/tools/scatter/scatter/scatter.component.ts\n            \n            component\n            ScatterComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/tools/shared/charts/chart.interface.ts\n            \n            interface\n            ChartInfo\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/tools/shared/charts/chart.interface.ts\n            \n            interface\n            MyChart\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/tools/shared/charts/utils.ts\n            \n            function\n            addEXIFToImage\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tools/shared/charts/utils.ts\n            \n            function\n            dataURLtoBlob\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tools/shared/charts/utils.ts\n            \n            function\n            dateAppendZero\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tools/shared/charts/utils.ts\n            \n            function\n            formatTime\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/tools/shared/charts/utils.ts\n            \n            function\n            getDateString\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tools/shared/charts/utils.ts\n            \n            function\n            updateLine\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tools/shared/data/data.interface.ts\n            \n            interface\n            MyData\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/tools/shared/data/utils.ts\n            \n            function\n            rad\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tools/shared/honor-code-popup/honor-code-chart.service.ts\n            \n            injectable\n            HonorCodeChartService\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/tools/shared/honor-code-popup/honor-code-popup.component.ts\n            \n            component\n            HonorCodePopupComponent\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/tools/shared/honor-code-popup/honor-code-popup.service.ts\n            \n            injectable\n            HonorCodePopupService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/tools/shared/interface/input-slider/input-slider.component.ts\n            \n            component\n            InputSliderComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/tools/shared/interface/input-slider/input-slider.component.ts\n            \n            class\n            SliderUtil\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/tools/shared/interface/input-slider/input-slider.component.ts\n            \n            interface\n            InputSliderValue\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/tools/shared/simple-data-button/simple-data-button.component.ts\n            \n            component\n            SimpleDataButtonComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/tools/shared/simple-graph-button/simple-graph-button.component.ts\n            \n            component\n            SimpleGraphButtonComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/tools/shared/storage/storage.interface.ts\n            \n            interface\n            MyStorage\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/tools/shared/tables/table-interface.ts\n            \n            interface\n            MyTable\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/tools/venus/venus-chart-form/venus-chart-form.component.ts\n            \n            component\n            VenusChartFormComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/tools/venus/venus-highchart/venus-highchart.component.ts\n            \n            component\n            VenusHighchartComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/tools/venus/venus-table/venus-table.component.ts\n            \n            component\n            VenusTableComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/tools/venus/venus-table/venus-table.component.ts\n            \n            class\n            VenusTable\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/tools/venus/venus.service.ts\n            \n            injectable\n            VenusService\n            \n                9 %\n                (3/33)\n            \n        \n        \n            \n                \n                src/app/tools/venus/venus.service.util.ts\n            \n            class\n            VenusChartInfo\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/tools/venus/venus.service.util.ts\n            \n            class\n            VenusData\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/tools/venus/venus.service.util.ts\n            \n            class\n            VenusModels\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                src/app/tools/venus/venus.service.util.ts\n            \n            class\n            VenusStorage\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/tools/venus/venus.service.util.ts\n            \n            interface\n            VenusChartInfoStorageObject\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/tools/venus/venus.service.util.ts\n            \n            interface\n            VenusDataDict\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/tools/venus/venus/venus.component.ts\n            \n            component\n            VenusComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^15.2.9\n        \n            @angular/cdk : ^15.2.9\n        \n            @angular/common : ^15.2.9\n        \n            @angular/compiler : ^15.2.9\n        \n            @angular/core : ^15.2.9\n        \n            @angular/forms : ^15.2.9\n        \n            @angular/localize : ^15.2.9\n        \n            @angular/material : ^15.2.9\n        \n            @angular/platform-browser : ^15.2.9\n        \n            @angular/platform-browser-dynamic : ^15.2.9\n        \n            @angular/router : ^15.2.9\n        \n            @compodoc/compodoc : ^1.1.19\n        \n            @handsontable/angular : ^12.4.0\n        \n            @ng-bootstrap/ng-bootstrap : ^14.1.0\n        \n            @popperjs/core : ^2.10.2\n        \n            @types/file-saver : ^2.0.5\n        \n            bootstrap : ^5.3.0-alpha1\n        \n            bootstrap-icons : ^1.10.3\n        \n            chart.js : ^4.2.1\n        \n            file-saver : ^2.0.5\n        \n            handsontable : ^12.4.0\n        \n            highcharts : ^11.1.0\n        \n            highcharts-angular : ^3.1.2\n        \n            highcharts-exporting : ^0.1.7\n        \n            highcharts-offline-exporting : ^0.1.7\n        \n            ng2-charts : ^4.1.1\n        \n            ngx-webstorage-service : ^5.0.0\n        \n            node-sass : ^8.0.0\n        \n            piexif-ts : ^2.0.16\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ChartColorMode   (src/.../appearance.utils.ts)\n                        \n                        \n                            ColorThemes   (src/.../appearance.utils.ts)\n                        \n                        \n                            CurveCounts   (src/.../curve.service.util.ts)\n                        \n                        \n                            CurveParam   (src/.../curve.service.util.ts)\n                        \n                        \n                            FontFamily   (src/.../appearance.utils.ts)\n                        \n                        \n                            FontSizes   (src/.../appearance.utils.ts)\n                        \n                        \n                            FontStyles   (src/.../appearance.utils.ts)\n                        \n                        \n                            MoonModelParameters   (src/.../moon-form.component.ts)\n                        \n                        \n                            ScatterModelParameters   (src/.../scatter-form.component.ts)\n                        \n                        \n                            UpdateSource   (src/.../moon.service.util.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/settings/appearance/service/appearance.utils.ts\n    \n        \n            \n                \n                    \n                        \n                        ChartColorMode\n                    \n                \n                        \n                            \n                                 LIGHT\n                            \n                        \n                        \n                            \n                                Value : LIGHT\n                            \n                        \n                        \n                            \n                                 DARK\n                            \n                        \n                        \n                            \n                                Value : DARK\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ColorThemes\n                    \n                \n                        \n                            \n                                 LIGHT\n                            \n                        \n                        \n                            \n                                Value : LIGHT_THEME\n                            \n                        \n                        \n                            \n                                 DARK\n                            \n                        \n                        \n                            \n                                Value : DARK_THEME\n                            \n                        \n                        \n                            \n                                 HIGH_CONTRAST_DARK\n                            \n                        \n                        \n                            \n                                Value : HC_DARK_THEME\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        FontFamily\n                    \n                \n                        \n                            \n                                 ROBOTO\n                            \n                        \n                        \n                            \n                                Value : Roboto\n                            \n                        \n                        \n                            \n                                 COMIC_NEUE\n                            \n                        \n                        \n                            \n                                Value : Comic-Neue\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        FontSizes\n                    \n                \n                        \n                            \n                                 SMALL\n                            \n                        \n                        \n                            \n                                Value : small\n                            \n                        \n                        \n                            \n                                 DEFAULT\n                            \n                        \n                        \n                            \n                                Value : default\n                            \n                        \n                        \n                            \n                                 LARGE\n                            \n                        \n                        \n                            \n                                Value : large\n                            \n                        \n                        \n                            \n                                 LARGER\n                            \n                        \n                        \n                            \n                                Value : larger\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        FontStyles\n                    \n                \n                        \n                            \n                                 DEFAULT\n                            \n                        \n                        \n                            \n                                Value : normal\n                            \n                        \n                        \n                            \n                                 BOLD\n                            \n                        \n                        \n                            \n                                Value : bold\n                            \n                        \n                        \n                            \n                                 EXTRA_BOLD\n                            \n                        \n                        \n                            \n                                Value : bolder\n                            \n                        \n            \n        \n\n    src/app/tools/curve/curve.service.util.ts\n    \n        \n            \n                \n                    \n                        \n                        CurveCounts\n                    \n                \n                        \n                            \n                                 ONE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 TWO\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 THREE\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 FOUR\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        CurveParam\n                    \n                \n                        \n                            \n                                 X\n                            \n                        \n                        \n                            \n                                Value : x\n                            \n                        \n                        \n                            \n                                 Y1\n                            \n                        \n                        \n                            \n                                Value : y1\n                            \n                        \n                        \n                            \n                                 Y2\n                            \n                        \n                        \n                            \n                                Value : y2\n                            \n                        \n                        \n                            \n                                 Y3\n                            \n                        \n                        \n                            \n                                Value : y3\n                            \n                        \n                        \n                            \n                                 Y4\n                            \n                        \n                        \n                            \n                                Value : y4\n                            \n                        \n            \n        \n\n    src/app/tools/moon/moon-form/moon-form.component.ts\n    \n        \n            \n                \n                    \n                        \n                        MoonModelParameters\n                    \n                \n                        \n                            \n                                 AMPLITUDE\n                            \n                        \n                        \n                            \n                                Value : amplitude\n                            \n                        \n                        \n                            \n                                 PERIOD\n                            \n                        \n                        \n                            \n                                Value : period\n                            \n                        \n                        \n                            \n                                 PHASE\n                            \n                        \n                        \n                            \n                                Value : phase\n                            \n                        \n                        \n                            \n                                 TILT\n                            \n                        \n                        \n                            \n                                Value : tilt\n                            \n                        \n            \n        \n\n    src/app/tools/scatter/scatter-form/scatter-form.component.ts\n    \n        \n            \n                \n                    \n                        \n                        ScatterModelParameters\n                    \n                \n                        \n                            \n                                 DISTANCE\n                            \n                        \n                        \n                            \n                                Value : distance\n                            \n                        \n                        \n                            \n                                 DIAMETER\n                            \n                        \n                        \n                            \n                                Value : diameter\n                            \n                        \n            \n        \n\n    src/app/tools/moon/moon.service.util.ts\n    \n        \n            \n                \n                    \n                        \n                        UpdateSource\n                    \n                \n                        \n                            \n                                 INIT\n                            \n                        \n                        \n                            \n                                Value : init\n                            \n                        \n                        \n                            \n                                 RESET\n                            \n                        \n                        \n                            \n                                Value : reset\n                            \n                        \n                        \n                            \n                                 INTERFACE\n                            \n                        \n                        \n                            \n                                Value : interface\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addEXIFToImage   (src/.../utils.ts)\n                        \n                        \n                            dataURLtoBlob   (src/.../utils.ts)\n                        \n                        \n                            dateAppendZero   (src/.../utils.ts)\n                        \n                        \n                            formatTime   (src/.../utils.ts)\n                        \n                        \n                            getDateString   (src/.../utils.ts)\n                        \n                        \n                            getToolSiteName   (src/.../app-routing.module.ts)\n                        \n                        \n                            rad   (src/.../utils.ts)\n                        \n                        \n                            updateLine   (src/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/tools/shared/charts/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        addEXIFToImage\n                        \n                    \n                \n            \n            \n                \naddEXIFToImage(jpegData: string, signature: string, time: string)\n                \n            \n\n\n\n\n            \n                \n                    Add EXIF information to image\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    jpegData\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        data of a jpeg file\n\n                                    \n                                \n                                \n                                    signature\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        signature of the user\n\n                                    \n                                \n                                \n                                    time\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        time of download initiation\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataURLtoBlob\n                        \n                    \n                \n            \n            \n                \ndataURLtoBlob(dataurl: string)\n                \n            \n\n\n\n\n            \n                \n                    Turn dataurl into a blob object\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dataurl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Blob\n\n                    \n                    \n                        Blob object\nCredits: https://stackoverflow.com/a/30407959/1154380\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateAppendZero\n                        \n                    \n                \n            \n            \n                \ndateAppendZero(num: number)\n                \n            \n\n\n\n\n            \n                \n                    Pre-fix a number with '0' if it is less then 10. Otherwise just convert it to string.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    num\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : A number between 1 and 99.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        two-character string containing the number and a leading 0 if necessary.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatTime\n                        \n                    \n                \n            \n            \n                \nformatTime(time: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A string in returned by getDateString()\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDateString\n                        \n                    \n                \n            \n            \n                \ngetDateString()\n                \n            \n\n\n\n\n            \n                \n                    Get the current date in the format of \"YYYY:MM:DD HH:MM:SS\"\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateLine\n                        \n                    \n                \n            \n            \n                \nupdateLine(tableData, myChart: Chart, dataSetIndex: number, xKey: string, yKey: string)\n                \n            \n\n\n\n\n            \n                \n                    This function takes the data in a dictionary object and updates a Chart object with the data. The\ndataset number for the Chart object and the keys for the x and y values are given in order to\ncorrectly update when there are multiple datasets in the Chart object or in the dictionary.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    tableData\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        :   The dictionary object that provides data\n\n                                    \n                                \n                                \n                                    myChart\n                                    \n                                            Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        :     The Chart object\n\n                                    \n                                \n                                \n                                    dataSetIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                    \n                                        :The index of the dataset to be updated in the Chart object.\n\n                                    \n                                \n                                \n                                    xKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'x'\n                                    \n\n                                    \n                                        :        The key for x values in the dictionary.\n\n                                    \n                                \n                                \n                                    yKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'y'\n                                    \n\n                                    \n                                        :        The key for y values in the dictionary.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/app-routing.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getToolSiteName\n                        \n                    \n                \n            \n            \n                \ngetToolSiteName(tool: string)\n                \n            \n\n\n\n\n            \n                \n                    Generate name of the site based on the graphing tool in use.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the graphing tool in use\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/tools/shared/data/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        rad\n                        \n                    \n                \n            \n            \n                \nrad(degree: number)\n                \n            \n\n\n\n\n            \n                \n                    This function takes an angle in degrees and returns it in radians.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    degree\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        :  An angle in degrees\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSkynet Plotting neo\nSkynet Plotting neo is a re-imagination of the original Skynet Plotting Tools, which was designed to make data anlysis easy for the students taking the intro level astronony lab course Our Place in Space and it's follow-up course Multi Wavelength Universe.\nThis project is based on the Angular 15 framework. Some of the key libaries are Handsontable, Chart.js, Angular Material, and Bootstrap.\nThe ultimate goal for this projector is to re-implement the functinoality of the existing graphing tools, but under a modern framework with good design pattern to make it maintainble in the long term, even not by its original authors.\nDocumentations have been set up as a Github Page through Github Actions. Check it out here.\n\nTo build for development, run\nnpm run startTo build for production, run\nnpm run buildTo generate documentations, run\nnpm run generate-docsTo view documentations in development environment, run\nnpm run serve-docsTo extract the source language file, run\nng extract-i18n --output-path src/locale\nContact author: Reed Fu\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                GNU GENERAL PUBLIC LICENSE\n                   Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n                        Preamble  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n                   TERMS AND CONDITIONS\nDefinitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n  The Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nUse with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\nRevised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\nCopyright (C)   \n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see .Also add information on how to contact you by electronic and paper mail.\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n  Copyright (C)   \nThis program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type `show c' for details.The hypothetical commands show w' and show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\nhttps://www.gnu.org/licenses/.\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\nhttps://www.gnu.org/licenses/why-not-lgpl.html.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CurveModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DualModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HonorCodePopupModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InterfaceUtilModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MenubarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MoonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ScatterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SimpleDataButtonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SimpleGraphButtonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ToolsNavbarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VenusModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CurveModule\n\n\n\ncluster_CurveModule_declarations\n\n\n\ncluster_CurveModule_imports\n\n\n\ncluster_CurveModule_exports\n\n\n\ncluster_CurveModule_providers\n\n\n\ncluster_DualModule\n\n\n\ncluster_DualModule_declarations\n\n\n\ncluster_DualModule_providers\n\n\n\ncluster_HonorCodePopupModule\n\n\n\ncluster_HonorCodePopupModule_declarations\n\n\n\ncluster_InterfaceUtilModule\n\n\n\ncluster_InterfaceUtilModule_declarations\n\n\n\ncluster_InterfaceUtilModule_exports\n\n\n\ncluster_MenubarModule\n\n\n\ncluster_MenubarModule_declarations\n\n\n\ncluster_MenubarModule_exports\n\n\n\ncluster_MoonModule\n\n\n\ncluster_MoonModule_declarations\n\n\n\ncluster_MoonModule_imports\n\n\n\ncluster_MoonModule_providers\n\n\n\ncluster_ScatterModule\n\n\n\ncluster_ScatterModule_declarations\n\n\n\ncluster_ScatterModule_providers\n\n\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SettingsModule_imports\n\n\n\ncluster_SimpleDataButtonModule\n\n\n\ncluster_SimpleDataButtonModule_declarations\n\n\n\ncluster_SimpleDataButtonModule_exports\n\n\n\ncluster_SimpleGraphButtonModule\n\n\n\ncluster_SimpleGraphButtonModule_declarations\n\n\n\ncluster_SimpleGraphButtonModule_exports\n\n\n\ncluster_ToolsNavbarModule\n\n\n\ncluster_ToolsNavbarModule_declarations\n\n\n\ncluster_ToolsNavbarModule_imports\n\n\n\ncluster_ToolsNavbarModule_exports\n\n\n\ncluster_VenusModule\n\n\n\ncluster_VenusModule_declarations\n\n\n\ncluster_VenusModule_providers\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppearanceComponent\n\nAppearanceComponent\n\nAppModule -->\n\nAppearanceComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nToolsNavbarModule\n\nToolsNavbarModule\n\nToolsNavbarModule -->\n\nAppRoutingModule->ToolsNavbarModule\n\n\n\n\n\nMenubarModule\n\nMenubarModule\n\nMenubarModule -->\n\nAppRoutingModule->MenubarModule\n\n\n\n\n\nHonorCodePopupModule\n\nHonorCodePopupModule\n\nAppModule -->\n\nHonorCodePopupModule->AppModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nAppModule -->\n\nSettingsModule->AppModule\n\n\n\nAppModule -->\n\nToolsNavbarModule->AppModule\n\n\n\n\n\nToolsNavbarComponent \n\nToolsNavbarComponent \n\nToolsNavbarComponent  -->\n\nToolsNavbarModule->ToolsNavbarComponent \n\n\n\n\n\nAppearanceService\n\nAppearanceService\n\nAppModule -->\n\nAppearanceService->AppModule\n\n\n\n\n\nAppearanceStorageService\n\nAppearanceStorageService\n\nAppModule -->\n\nAppearanceStorageService->AppModule\n\n\n\n\n\nCurveChartComponent\n\nCurveChartComponent\n\n\n\nCurveModule\n\nCurveModule\n\nCurveModule -->\n\nCurveChartComponent->CurveModule\n\n\n\n\n\nCurveChartFormComponent\n\nCurveChartFormComponent\n\nCurveModule -->\n\nCurveChartFormComponent->CurveModule\n\n\n\n\n\nCurveComponent\n\nCurveComponent\n\nCurveModule -->\n\nCurveComponent->CurveModule\n\n\n\n\n\nCurveHighChartComponent\n\nCurveHighChartComponent\n\nCurveModule -->\n\nCurveHighChartComponent->CurveModule\n\n\n\n\n\nCurveTableComponent\n\nCurveTableComponent\n\nCurveModule -->\n\nCurveTableComponent->CurveModule\n\n\n\n\n\nLineFormComponent\n\nLineFormComponent\n\nCurveModule -->\n\nLineFormComponent->CurveModule\n\n\n\nToolsNavbarModule -->\n\nCurveModule->ToolsNavbarModule\n\n\n\n\n\nCurveComponent \n\nCurveComponent \n\nCurveComponent  -->\n\nCurveModule->CurveComponent \n\n\n\n\n\nSimpleDataButtonModule\n\nSimpleDataButtonModule\n\nCurveModule -->\n\nSimpleDataButtonModule->CurveModule\n\n\n\n\n\nDualModule\n\nDualModule\n\nDualModule -->\n\nSimpleDataButtonModule->DualModule\n\n\n\n\n\nMoonModule\n\nMoonModule\n\nMoonModule -->\n\nSimpleDataButtonModule->MoonModule\n\n\n\n\n\nScatterModule\n\nScatterModule\n\nScatterModule -->\n\nSimpleDataButtonModule->ScatterModule\n\n\n\n\n\nSimpleDataButtonComponent \n\nSimpleDataButtonComponent \n\nSimpleDataButtonComponent  -->\n\nSimpleDataButtonModule->SimpleDataButtonComponent \n\n\n\n\n\nVenusModule\n\nVenusModule\n\nVenusModule -->\n\nSimpleDataButtonModule->VenusModule\n\n\n\n\n\nSimpleGraphButtonModule\n\nSimpleGraphButtonModule\n\nCurveModule -->\n\nSimpleGraphButtonModule->CurveModule\n\n\n\nDualModule -->\n\nSimpleGraphButtonModule->DualModule\n\n\n\nMoonModule -->\n\nSimpleGraphButtonModule->MoonModule\n\n\n\nScatterModule -->\n\nSimpleGraphButtonModule->ScatterModule\n\n\n\n\n\nSimpleGraphButtonComponent \n\nSimpleGraphButtonComponent \n\nSimpleGraphButtonComponent  -->\n\nSimpleGraphButtonModule->SimpleGraphButtonComponent \n\n\n\nVenusModule -->\n\nSimpleGraphButtonModule->VenusModule\n\n\n\n\n\nCurveService\n\nCurveService\n\nCurveModule -->\n\nCurveService->CurveModule\n\n\n\n\n\nHonorCodePopupService\n\nHonorCodePopupService\n\nCurveModule -->\n\nHonorCodePopupService->CurveModule\n\n\n\nMoonModule -->\n\nHonorCodePopupService->MoonModule\n\n\n\n\n\nDualChartFormComponent\n\nDualChartFormComponent\n\nDualModule -->\n\nDualChartFormComponent->DualModule\n\n\n\n\n\nDualComponent\n\nDualComponent\n\nDualModule -->\n\nDualComponent->DualModule\n\n\n\n\n\nDualHighchartComponent\n\nDualHighchartComponent\n\nDualModule -->\n\nDualHighchartComponent->DualModule\n\n\n\n\n\nDualTableComponent\n\nDualTableComponent\n\nDualModule -->\n\nDualTableComponent->DualModule\n\n\n\nToolsNavbarModule -->\n\nDualModule->ToolsNavbarModule\n\n\n\n\n\nDualService\n\nDualService\n\nDualModule -->\n\nDualService->DualModule\n\n\n\n\n\nHonorCodePopupComponent\n\nHonorCodePopupComponent\n\nHonorCodePopupModule -->\n\nHonorCodePopupComponent->HonorCodePopupModule\n\n\n\n\n\nInputSliderComponent\n\nInputSliderComponent\n\n\n\nInterfaceUtilModule\n\nInterfaceUtilModule\n\nInterfaceUtilModule -->\n\nInputSliderComponent->InterfaceUtilModule\n\n\n\n\n\nInputSliderComponent \n\nInputSliderComponent \n\nInputSliderComponent  -->\n\nInterfaceUtilModule->InputSliderComponent \n\n\n\nMoonModule -->\n\nInterfaceUtilModule->MoonModule\n\n\n\nScatterModule -->\n\nInterfaceUtilModule->ScatterModule\n\n\n\n\n\nMenubarComponent\n\nMenubarComponent\n\nMenubarModule -->\n\nMenubarComponent->MenubarModule\n\n\n\nToolsNavbarModule -->\n\nMenubarModule->ToolsNavbarModule\n\n\n\n\n\nMenubarComponent \n\nMenubarComponent \n\nMenubarComponent  -->\n\nMenubarModule->MenubarComponent \n\n\n\n\n\nMoonChartFormComponent\n\nMoonChartFormComponent\n\nMoonModule -->\n\nMoonChartFormComponent->MoonModule\n\n\n\n\n\nMoonComponent\n\nMoonComponent\n\nMoonModule -->\n\nMoonComponent->MoonModule\n\n\n\n\n\nMoonFormComponent\n\nMoonFormComponent\n\nMoonModule -->\n\nMoonFormComponent->MoonModule\n\n\n\n\n\nMoonHighchartComponent\n\nMoonHighchartComponent\n\nMoonModule -->\n\nMoonHighchartComponent->MoonModule\n\n\n\n\n\nMoonTableComponent\n\nMoonTableComponent\n\nMoonModule -->\n\nMoonTableComponent->MoonModule\n\n\n\nToolsNavbarModule -->\n\nMoonModule->ToolsNavbarModule\n\n\n\n\n\nNgIf\n\nNgIf\n\nSimpleDataButtonModule -->\n\nNgIf->SimpleDataButtonModule\n\n\n\nMoonModule -->\n\nNgIf->MoonModule\n\n\n\n\n\nMoonService\n\nMoonService\n\nMoonModule -->\n\nMoonService->MoonModule\n\n\n\n\n\nScatterChartFormComponent\n\nScatterChartFormComponent\n\nScatterModule -->\n\nScatterChartFormComponent->ScatterModule\n\n\n\n\n\nScatterComponent\n\nScatterComponent\n\nScatterModule -->\n\nScatterComponent->ScatterModule\n\n\n\n\n\nScatterFormComponent\n\nScatterFormComponent\n\nScatterModule -->\n\nScatterFormComponent->ScatterModule\n\n\n\n\n\nScatterHighchartComponent\n\nScatterHighchartComponent\n\nScatterModule -->\n\nScatterHighchartComponent->ScatterModule\n\n\n\n\n\nScatterTableComponent\n\nScatterTableComponent\n\nScatterModule -->\n\nScatterTableComponent->ScatterModule\n\n\n\nToolsNavbarModule -->\n\nScatterModule->ToolsNavbarModule\n\n\n\n\n\nScatterService\n\nScatterService\n\nScatterModule -->\n\nScatterService->ScatterModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nRouterLink\n\nRouterLink\n\nSettingsModule -->\n\nRouterLink->SettingsModule\n\n\n\n\n\nRouterLinkActive\n\nRouterLinkActive\n\nSettingsModule -->\n\nRouterLinkActive->SettingsModule\n\n\n\n\n\nRouterOutlet\n\nRouterOutlet\n\nSettingsModule -->\n\nRouterOutlet->SettingsModule\n\n\n\n\n\nSimpleDataButtonComponent\n\nSimpleDataButtonComponent\n\nSimpleDataButtonModule -->\n\nSimpleDataButtonComponent->SimpleDataButtonModule\n\n\n\n\n\nSimpleGraphButtonComponent\n\nSimpleGraphButtonComponent\n\nSimpleGraphButtonModule -->\n\nSimpleGraphButtonComponent->SimpleGraphButtonModule\n\n\n\n\n\nToolsNavbarComponent\n\nToolsNavbarComponent\n\nToolsNavbarModule -->\n\nToolsNavbarComponent->ToolsNavbarModule\n\n\n\nToolsNavbarModule -->\n\nVenusModule->ToolsNavbarModule\n\n\n\n\n\nVenusChartFormComponent\n\nVenusChartFormComponent\n\nVenusModule -->\n\nVenusChartFormComponent->VenusModule\n\n\n\n\n\nVenusComponent\n\nVenusComponent\n\nVenusModule -->\n\nVenusComponent->VenusModule\n\n\n\n\n\nVenusHighchartComponent\n\nVenusHighchartComponent\n\nVenusModule -->\n\nVenusHighchartComponent->VenusModule\n\n\n\n\n\nVenusTableComponent\n\nVenusTableComponent\n\nVenusModule -->\n\nVenusTableComponent->VenusModule\n\n\n\n\n\nVenusService\n\nVenusService\n\nVenusModule -->\n\nVenusService->VenusModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        14 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    36 Components\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    29 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    27 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        12 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ChartAction   (src/.../actions.ts)\n                        \n                        \n                            MyAction   (src/.../actions.ts)\n                        \n                        \n                            TableAction   (src/.../actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/tools/shared/types/actions.ts\n    \n    \n        \n            \n                \n                    \n                    ChartAction\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MyAction\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TableAction\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
