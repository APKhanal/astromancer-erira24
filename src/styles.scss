/* You can add global styles to this file, and also import other style files */
@use '@angular/material' as mat;
@import '~@angular/material/theming';
@import "~bootstrap/dist/css/bootstrap.css";
@import '~handsontable/dist/handsontable.full.css';
@import 'palette.scss';

html, body {
  height: 100%;
}

body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}

mat-app-background {
  height: 100%
}


//Define a light theme.
$light-primary: mat.define-palette($md-paynesgray, 500, 300, 100);
$light-accent: mat.define-palette($md-paynesgray, A400, A200, A100);
$light-warn: mat.define-palette($md-fireenginered, 500);

$light-theme: mat.define-light-theme($light-primary, $light-accent, $light-warn);

.LIGHT_THEME {
  @include mat.all-component-themes($light-theme);

  .mat-list-item.active, .mat-list-item.active:focus, .mat-list-item.active:hover {
    font-weight: bold;
    //noinspection CssInvalidFunction
    color: mat-color($light-primary, 900) !important;
    //noinspection CssInvalidFunction
    background-color: mat-color($light-primary, 100) !important;
  }
}


//Define a dark theme.
$dark-primary: mat.define-palette($md-mint, 500, 400, 200);
$dark-accent: mat.define-palette($md-mint, A200, A100);
$dark-warn: mat.define-palette($md-fireenginered, A700);
$dark-theme: mat.define-dark-theme($dark-primary, $dark-accent, $dark-warn);

.DARK_THEME {
  @include mat.all-component-themes($dark-theme);
  //@include

  .mat-list-item.active, .mat-list-item.active:focus, .mat-list-item.active:hover {
    font-weight: bold;
    //noinspection CssInvalidFunction
    color: mat-color($dark-primary, A100) !important;
    //noinspection CssInvalidFunction
    background-color: mat-color($dark-primary, darker) !important;

  }

}


//Define a high contrast theme.
// Define a dark high contrast theme.
$dark-hc-primary: mat.define-palette(mat.$yellow-palette, 500, 400, 600);
$dark-hc-text: mat.get-color-from-palette(mat.$yellow-palette, 500);
$dark-hc-disabled-text: mat.get-color-from-palette(mat.$yellow-palette, 700);
$dark-hc-icons: mat.get-color-from-palette(mat.$yellow-palette, 400);
$dark-hc-accent: mat.define-palette(mat.$yellow-palette, 600);
$dark-hc-theme: mat.define-dark-theme($dark-hc-primary, $dark-hc-accent, $dark-warn);
$dark-hc-foreground: map-get($dark-hc-theme, foreground);
$dark-hc-foreground: map_merge(
    $dark-hc-foreground,
    (
      text: $dark-hc-text,
      "secondary-text": $dark-hc-text,
      icon: $dark-hc-icons,
    )
);

$dark-hc-background: map-get($dark-hc-theme, background);
// @debug $foreground;
$dark-hc-background: map_merge($dark-hc-background, ());

$dark-hc-theme: map_merge(
    $dark-hc-theme,
    (
      foreground: $dark-hc-foreground,
      background: $dark-hc-background,
    )
);

.HC_DARK_THEME {
  @include mat.all-component-themes($dark-hc-theme);

  .mat-list-item.active, .mat-list-item.active:focus, .mat-list-item.active:hover {
    font-weight: bold;
    //noinspection CssInvalidFunction
    color: #424242;
    //noinspection CssInvalidFunction
    background-color: mat-color($dark-hc-primary, darker) !important;
  }
}


.fontSize-small {
  label, .h1, .h2, .h3, .h4, .h5, .h6, h1, h2, h3, h4, h5, h6, th, td, p, span, input, button, a, th, td, .mat-cell, span, htNumeric {
    font-size: 0.8em;
  }
}

.fontSize-default {
  label, .h1, .h2, .h3, .h4, .h5, .h6, h1, h2, h3, h4, h5, h6, th, td, p, span, input, button, a, th, td, .mat-cell, span, htNumeric {
    font-size: 1em;
  }
}

.fontSize-large {
  label, .h1, .h2, .h3, .h4, .h5, .h6, h1, h2, h3, h4, h5, h6, th, td, p, span, input, button, a, th, td, .mat-cell, span, {
    font-size: 1.25em;
  }
}

.fontSize-larger {
  label, .h1, .h2, .h3, .h4, .h5, .h6, h1, h2, h3, h4, h5, h6, th, td, p, span, input, button, a, th, td, .mat-cell, span, htNumeric {
    font-size: 1.5em;
  }

  mat-select {
    margin-top: 15px;
  }
}

.fontStyle-normal {
  label, .h1, .h2, .h3, .h4, .h5, .h6, h1, h2, h3, h4, h5, h6, th, td, p, span, input, button, a, th, td, .mat-cell, span, htNumeric {
    font-weight: normal;
  }
}

.fontStyle-bold {
  label, .h1, .h2, .h3, .h4, .h5, .h6, h1, h2, h3, h4, h5, h6, th, td, p, span, input, button, a, th, td, .mat-cell, span, htNumeric {
    font-weight: bold;
  }
}

.fontStyle-bolder {
  label, .h1, .h2, .h3, .h4, .h5, .h6, h1, h2, h3, h4, h5, h6, th, td, p, span, input, button, a, th, td, .mat-cell, span, {
    font-weight: bolder;
  }
}


@font-face {
  font-family: "Roboto";
  src: url(assets/Roboto/Roboto-Regular.ttf) format("truetype");
}

@font-face {
  font-family: "Comic Neue";
  src: url(assets/Comic_Neue/ComicNeue-Regular.ttf) format("truetype");
}

$roboto-typography: mat.define-typography-config(
  $font-family: "Roboto, sans",);

.fontFamily-Roboto {
  @include mat.all-component-typographies($roboto-typography);
}

$comic-typography: mat.define-typography-config(
  $font-family: "Comic Neue",);

.fontFamily-Comic-Neue {
  @include mat.all-component-typographies($comic-typography);
}

